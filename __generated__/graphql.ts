 
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** A date and time, represented as an ISO-8601 string */
  DateTime: { input: any; output: any; }
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: { input: any; output: any; }
};

export type ActivitiesConnection = {
  __typename?: 'ActivitiesConnection';
  edges: Array<ActivityEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Activity = {
  __typename?: 'Activity';
  Comments: Array<CommentInfo>;
  Discussions: Array<DiscussionInfo>;
  Events: Array<EventInfo>;
  description: Scalars['String']['output'];
  id: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type ActivityAggregateSelection = {
  __typename?: 'ActivityAggregateSelection';
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  id: StringAggregateSelection;
  type: StringAggregateSelection;
};

export type ActivityCreateInput = {
  description: Scalars['String']['input'];
  id: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type ActivityCreatedEvent = {
  __typename?: 'ActivityCreatedEvent';
  createdActivity: ActivityEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ActivityDeletedEvent = {
  __typename?: 'ActivityDeletedEvent';
  deletedActivity: ActivityEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ActivityEdge = {
  __typename?: 'ActivityEdge';
  cursor: Scalars['String']['output'];
  node: Activity;
};

export type ActivityEventPayload = {
  __typename?: 'ActivityEventPayload';
  description: Scalars['String']['output'];
  id: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type ActivityOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ActivitySort objects to sort Activities by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ActivitySort>>;
};

/** Fields to sort Activities by. The order in which sorts are applied is not guaranteed when specifying many fields in one ActivitySort object. */
export type ActivitySort = {
  description?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  type?: InputMaybe<SortDirection>;
};

export type ActivitySubscriptionWhere = {
  AND?: InputMaybe<Array<ActivitySubscriptionWhere>>;
  NOT?: InputMaybe<ActivitySubscriptionWhere>;
  OR?: InputMaybe<Array<ActivitySubscriptionWhere>>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  id_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  id_MATCHES?: InputMaybe<Scalars['String']['input']>;
  id_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  type_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  type_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  type_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  type_MATCHES?: InputMaybe<Scalars['String']['input']>;
  type_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ActivityUpdateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type ActivityUpdatedEvent = {
  __typename?: 'ActivityUpdatedEvent';
  event: EventType;
  previousState: ActivityEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedActivity: ActivityEventPayload;
};

export type ActivityWhere = {
  AND?: InputMaybe<Array<ActivityWhere>>;
  NOT?: InputMaybe<ActivityWhere>;
  OR?: InputMaybe<Array<ActivityWhere>>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  id_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  id_MATCHES?: InputMaybe<Scalars['String']['input']>;
  id_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  type_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  type_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  type_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  type_MATCHES?: InputMaybe<Scalars['String']['input']>;
  type_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type Album = {
  __typename?: 'Album';
  Discussions: Array<Discussion>;
  DiscussionsAggregate?: Maybe<AlbumDiscussionDiscussionsAggregationSelection>;
  DiscussionsConnection: AlbumDiscussionsConnection;
  Images: Array<Image>;
  ImagesAggregate?: Maybe<AlbumImageImagesAggregationSelection>;
  ImagesConnection: AlbumImagesConnection;
  Owner?: Maybe<User>;
  OwnerAggregate?: Maybe<AlbumUserOwnerAggregationSelection>;
  OwnerConnection: AlbumOwnerConnection;
  id: Scalars['ID']['output'];
  imageOrder?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};


export type AlbumDiscussionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type AlbumDiscussionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type AlbumDiscussionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<AlbumDiscussionsConnectionSort>>;
  where?: InputMaybe<AlbumDiscussionsConnectionWhere>;
};


export type AlbumImagesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ImageOptions>;
  where?: InputMaybe<ImageWhere>;
};


export type AlbumImagesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ImageWhere>;
};


export type AlbumImagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<AlbumImagesConnectionSort>>;
  where?: InputMaybe<AlbumImagesConnectionWhere>;
};


export type AlbumOwnerArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type AlbumOwnerAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type AlbumOwnerConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<AlbumOwnerConnectionSort>>;
  where?: InputMaybe<AlbumOwnerConnectionWhere>;
};

export type AlbumAggregateSelection = {
  __typename?: 'AlbumAggregateSelection';
  count: Scalars['Int']['output'];
  id: IdAggregateSelection;
};

export type AlbumConnectInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsConnectFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesConnectFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerConnectFieldInput>;
};

export type AlbumConnectOrCreateInput = {
  Owner?: InputMaybe<AlbumOwnerConnectOrCreateFieldInput>;
};

export type AlbumConnectWhere = {
  node: AlbumWhere;
};

export type AlbumConnectedRelationships = {
  __typename?: 'AlbumConnectedRelationships';
  Discussions?: Maybe<AlbumDiscussionsConnectedRelationship>;
  Images?: Maybe<AlbumImagesConnectedRelationship>;
  Owner?: Maybe<AlbumOwnerConnectedRelationship>;
};

export type AlbumCreateInput = {
  Discussions?: InputMaybe<AlbumDiscussionsFieldInput>;
  Images?: InputMaybe<AlbumImagesFieldInput>;
  Owner?: InputMaybe<AlbumOwnerFieldInput>;
  imageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type AlbumCreatedEvent = {
  __typename?: 'AlbumCreatedEvent';
  createdAlbum: AlbumEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type AlbumDeleteInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsDeleteFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesDeleteFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerDeleteFieldInput>;
};

export type AlbumDeletedEvent = {
  __typename?: 'AlbumDeletedEvent';
  deletedAlbum: AlbumEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type AlbumDisconnectInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsDisconnectFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesDisconnectFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerDisconnectFieldInput>;
};

export type AlbumDiscussionDiscussionsAggregationSelection = {
  __typename?: 'AlbumDiscussionDiscussionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<AlbumDiscussionDiscussionsNodeAggregateSelection>;
};

export type AlbumDiscussionDiscussionsNodeAggregateSelection = {
  __typename?: 'AlbumDiscussionDiscussionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type AlbumDiscussionsAggregateInput = {
  AND?: InputMaybe<Array<AlbumDiscussionsAggregateInput>>;
  NOT?: InputMaybe<AlbumDiscussionsAggregateInput>;
  OR?: InputMaybe<Array<AlbumDiscussionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<AlbumDiscussionsNodeAggregationWhereInput>;
};

export type AlbumDiscussionsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type AlbumDiscussionsConnectedRelationship = {
  __typename?: 'AlbumDiscussionsConnectedRelationship';
  node: DiscussionEventPayload;
};

export type AlbumDiscussionsConnection = {
  __typename?: 'AlbumDiscussionsConnection';
  edges: Array<AlbumDiscussionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type AlbumDiscussionsConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type AlbumDiscussionsConnectionWhere = {
  AND?: InputMaybe<Array<AlbumDiscussionsConnectionWhere>>;
  NOT?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  OR?: InputMaybe<Array<AlbumDiscussionsConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type AlbumDiscussionsCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type AlbumDiscussionsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<AlbumDiscussionsConnectionWhere>;
};

export type AlbumDiscussionsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<AlbumDiscussionsConnectionWhere>;
};

export type AlbumDiscussionsFieldInput = {
  connect?: InputMaybe<Array<AlbumDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<AlbumDiscussionsCreateFieldInput>>;
};

export type AlbumDiscussionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<AlbumDiscussionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<AlbumDiscussionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<AlbumDiscussionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AlbumDiscussionsRelationship = {
  __typename?: 'AlbumDiscussionsRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type AlbumDiscussionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<DiscussionSubscriptionWhere>;
};

export type AlbumDiscussionsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type AlbumDiscussionsUpdateFieldInput = {
  connect?: InputMaybe<Array<AlbumDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<AlbumDiscussionsCreateFieldInput>>;
  delete?: InputMaybe<Array<AlbumDiscussionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<AlbumDiscussionsDisconnectFieldInput>>;
  update?: InputMaybe<AlbumDiscussionsUpdateConnectionInput>;
  where?: InputMaybe<AlbumDiscussionsConnectionWhere>;
};

export type AlbumEdge = {
  __typename?: 'AlbumEdge';
  cursor: Scalars['String']['output'];
  node: Album;
};

export type AlbumEventPayload = {
  __typename?: 'AlbumEventPayload';
  id: Scalars['ID']['output'];
  imageOrder?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type AlbumImageImagesAggregationSelection = {
  __typename?: 'AlbumImageImagesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<AlbumImageImagesNodeAggregateSelection>;
};

export type AlbumImageImagesNodeAggregateSelection = {
  __typename?: 'AlbumImageImagesNodeAggregateSelection';
  alt: StringAggregateSelection;
  caption: StringAggregateSelection;
  copyright: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  longDescription: StringAggregateSelection;
  scanCheckedAt: DateTimeAggregateSelection;
  url: StringAggregateSelection;
};

export type AlbumImagesAggregateInput = {
  AND?: InputMaybe<Array<AlbumImagesAggregateInput>>;
  NOT?: InputMaybe<AlbumImagesAggregateInput>;
  OR?: InputMaybe<Array<AlbumImagesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<AlbumImagesNodeAggregationWhereInput>;
};

export type AlbumImagesConnectFieldInput = {
  connect?: InputMaybe<Array<ImageConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ImageConnectWhere>;
};

export type AlbumImagesConnectedRelationship = {
  __typename?: 'AlbumImagesConnectedRelationship';
  node: ImageEventPayload;
};

export type AlbumImagesConnection = {
  __typename?: 'AlbumImagesConnection';
  edges: Array<AlbumImagesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type AlbumImagesConnectionSort = {
  node?: InputMaybe<ImageSort>;
};

export type AlbumImagesConnectionWhere = {
  AND?: InputMaybe<Array<AlbumImagesConnectionWhere>>;
  NOT?: InputMaybe<AlbumImagesConnectionWhere>;
  OR?: InputMaybe<Array<AlbumImagesConnectionWhere>>;
  node?: InputMaybe<ImageWhere>;
};

export type AlbumImagesCreateFieldInput = {
  node: ImageCreateInput;
};

export type AlbumImagesDeleteFieldInput = {
  delete?: InputMaybe<ImageDeleteInput>;
  where?: InputMaybe<AlbumImagesConnectionWhere>;
};

export type AlbumImagesDisconnectFieldInput = {
  disconnect?: InputMaybe<ImageDisconnectInput>;
  where?: InputMaybe<AlbumImagesConnectionWhere>;
};

export type AlbumImagesFieldInput = {
  connect?: InputMaybe<Array<AlbumImagesConnectFieldInput>>;
  create?: InputMaybe<Array<AlbumImagesCreateFieldInput>>;
};

export type AlbumImagesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<AlbumImagesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<AlbumImagesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<AlbumImagesNodeAggregationWhereInput>>;
  alt_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  alt_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  caption_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  caption_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  copyright_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  longDescription_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  longDescription_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  longDescription_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  longDescription_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  longDescription_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  longDescription_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  longDescription_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  longDescription_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  longDescription_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  longDescription_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  scanCheckedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type AlbumImagesRelationship = {
  __typename?: 'AlbumImagesRelationship';
  cursor: Scalars['String']['output'];
  node: Image;
};

export type AlbumImagesRelationshipSubscriptionWhere = {
  node?: InputMaybe<ImageSubscriptionWhere>;
};

export type AlbumImagesUpdateConnectionInput = {
  node?: InputMaybe<ImageUpdateInput>;
};

export type AlbumImagesUpdateFieldInput = {
  connect?: InputMaybe<Array<AlbumImagesConnectFieldInput>>;
  create?: InputMaybe<Array<AlbumImagesCreateFieldInput>>;
  delete?: InputMaybe<Array<AlbumImagesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<AlbumImagesDisconnectFieldInput>>;
  update?: InputMaybe<AlbumImagesUpdateConnectionInput>;
  where?: InputMaybe<AlbumImagesConnectionWhere>;
};

export type AlbumOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more AlbumSort objects to sort Albums by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<AlbumSort>>;
};

export type AlbumOwnerAggregateInput = {
  AND?: InputMaybe<Array<AlbumOwnerAggregateInput>>;
  NOT?: InputMaybe<AlbumOwnerAggregateInput>;
  OR?: InputMaybe<Array<AlbumOwnerAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<AlbumOwnerNodeAggregationWhereInput>;
};

export type AlbumOwnerConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type AlbumOwnerConnectOrCreateFieldInput = {
  onCreate: AlbumOwnerConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type AlbumOwnerConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type AlbumOwnerConnectedRelationship = {
  __typename?: 'AlbumOwnerConnectedRelationship';
  node: UserEventPayload;
};

export type AlbumOwnerConnection = {
  __typename?: 'AlbumOwnerConnection';
  edges: Array<AlbumOwnerRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type AlbumOwnerConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type AlbumOwnerConnectionWhere = {
  AND?: InputMaybe<Array<AlbumOwnerConnectionWhere>>;
  NOT?: InputMaybe<AlbumOwnerConnectionWhere>;
  OR?: InputMaybe<Array<AlbumOwnerConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type AlbumOwnerCreateFieldInput = {
  node: UserCreateInput;
};

export type AlbumOwnerDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<AlbumOwnerConnectionWhere>;
};

export type AlbumOwnerDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<AlbumOwnerConnectionWhere>;
};

export type AlbumOwnerFieldInput = {
  connect?: InputMaybe<AlbumOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<AlbumOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<AlbumOwnerCreateFieldInput>;
};

export type AlbumOwnerNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<AlbumOwnerNodeAggregationWhereInput>>;
  NOT?: InputMaybe<AlbumOwnerNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<AlbumOwnerNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type AlbumOwnerRelationship = {
  __typename?: 'AlbumOwnerRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type AlbumOwnerRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type AlbumOwnerUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type AlbumOwnerUpdateFieldInput = {
  connect?: InputMaybe<AlbumOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<AlbumOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<AlbumOwnerCreateFieldInput>;
  delete?: InputMaybe<AlbumOwnerDeleteFieldInput>;
  disconnect?: InputMaybe<AlbumOwnerDisconnectFieldInput>;
  update?: InputMaybe<AlbumOwnerUpdateConnectionInput>;
  where?: InputMaybe<AlbumOwnerConnectionWhere>;
};

export type AlbumRelationInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsCreateFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesCreateFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerCreateFieldInput>;
};

export type AlbumRelationshipCreatedEvent = {
  __typename?: 'AlbumRelationshipCreatedEvent';
  album: AlbumEventPayload;
  createdRelationship: AlbumConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type AlbumRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<AlbumRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<AlbumRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<AlbumRelationshipCreatedSubscriptionWhere>>;
  album?: InputMaybe<AlbumSubscriptionWhere>;
  createdRelationship?: InputMaybe<AlbumRelationshipsSubscriptionWhere>;
};

export type AlbumRelationshipDeletedEvent = {
  __typename?: 'AlbumRelationshipDeletedEvent';
  album: AlbumEventPayload;
  deletedRelationship: AlbumConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type AlbumRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<AlbumRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<AlbumRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<AlbumRelationshipDeletedSubscriptionWhere>>;
  album?: InputMaybe<AlbumSubscriptionWhere>;
  deletedRelationship?: InputMaybe<AlbumRelationshipsSubscriptionWhere>;
};

export type AlbumRelationshipsSubscriptionWhere = {
  Discussions?: InputMaybe<AlbumDiscussionsRelationshipSubscriptionWhere>;
  Images?: InputMaybe<AlbumImagesRelationshipSubscriptionWhere>;
  Owner?: InputMaybe<AlbumOwnerRelationshipSubscriptionWhere>;
};

/** Fields to sort Albums by. The order in which sorts are applied is not guaranteed when specifying many fields in one AlbumSort object. */
export type AlbumSort = {
  id?: InputMaybe<SortDirection>;
};

export type AlbumSubscriptionWhere = {
  AND?: InputMaybe<Array<AlbumSubscriptionWhere>>;
  NOT?: InputMaybe<AlbumSubscriptionWhere>;
  OR?: InputMaybe<Array<AlbumSubscriptionWhere>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  imageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  imageOrder_INCLUDES?: InputMaybe<Scalars['String']['input']>;
};

export type AlbumUpdateInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsUpdateFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesUpdateFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerUpdateFieldInput>;
  imageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  imageOrder_POP?: InputMaybe<Scalars['Int']['input']>;
  imageOrder_PUSH?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type AlbumUpdatedEvent = {
  __typename?: 'AlbumUpdatedEvent';
  event: EventType;
  previousState: AlbumEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedAlbum: AlbumEventPayload;
};

export type AlbumUserOwnerAggregationSelection = {
  __typename?: 'AlbumUserOwnerAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<AlbumUserOwnerNodeAggregateSelection>;
};

export type AlbumUserOwnerNodeAggregateSelection = {
  __typename?: 'AlbumUserOwnerNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type AlbumWhere = {
  AND?: InputMaybe<Array<AlbumWhere>>;
  DiscussionsAggregate?: InputMaybe<AlbumDiscussionsAggregateInput>;
  /** Return Albums where all of the related AlbumDiscussionsConnections match this filter */
  DiscussionsConnection_ALL?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  /** Return Albums where none of the related AlbumDiscussionsConnections match this filter */
  DiscussionsConnection_NONE?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  /** Return Albums where one of the related AlbumDiscussionsConnections match this filter */
  DiscussionsConnection_SINGLE?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  /** Return Albums where some of the related AlbumDiscussionsConnections match this filter */
  DiscussionsConnection_SOME?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  /** Return Albums where all of the related Discussions match this filter */
  Discussions_ALL?: InputMaybe<DiscussionWhere>;
  /** Return Albums where none of the related Discussions match this filter */
  Discussions_NONE?: InputMaybe<DiscussionWhere>;
  /** Return Albums where one of the related Discussions match this filter */
  Discussions_SINGLE?: InputMaybe<DiscussionWhere>;
  /** Return Albums where some of the related Discussions match this filter */
  Discussions_SOME?: InputMaybe<DiscussionWhere>;
  ImagesAggregate?: InputMaybe<AlbumImagesAggregateInput>;
  /** Return Albums where all of the related AlbumImagesConnections match this filter */
  ImagesConnection_ALL?: InputMaybe<AlbumImagesConnectionWhere>;
  /** Return Albums where none of the related AlbumImagesConnections match this filter */
  ImagesConnection_NONE?: InputMaybe<AlbumImagesConnectionWhere>;
  /** Return Albums where one of the related AlbumImagesConnections match this filter */
  ImagesConnection_SINGLE?: InputMaybe<AlbumImagesConnectionWhere>;
  /** Return Albums where some of the related AlbumImagesConnections match this filter */
  ImagesConnection_SOME?: InputMaybe<AlbumImagesConnectionWhere>;
  /** Return Albums where all of the related Images match this filter */
  Images_ALL?: InputMaybe<ImageWhere>;
  /** Return Albums where none of the related Images match this filter */
  Images_NONE?: InputMaybe<ImageWhere>;
  /** Return Albums where one of the related Images match this filter */
  Images_SINGLE?: InputMaybe<ImageWhere>;
  /** Return Albums where some of the related Images match this filter */
  Images_SOME?: InputMaybe<ImageWhere>;
  NOT?: InputMaybe<AlbumWhere>;
  OR?: InputMaybe<Array<AlbumWhere>>;
  Owner?: InputMaybe<UserWhere>;
  OwnerAggregate?: InputMaybe<AlbumOwnerAggregateInput>;
  OwnerConnection?: InputMaybe<AlbumOwnerConnectionWhere>;
  OwnerConnection_NOT?: InputMaybe<AlbumOwnerConnectionWhere>;
  Owner_NOT?: InputMaybe<UserWhere>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  imageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  imageOrder_INCLUDES?: InputMaybe<Scalars['String']['input']>;
};

export type AlbumsConnection = {
  __typename?: 'AlbumsConnection';
  edges: Array<AlbumEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Channel = {
  __typename?: 'Channel';
  Admins: Array<User>;
  AdminsAggregate?: Maybe<ChannelUserAdminsAggregationSelection>;
  AdminsConnection: ChannelAdminsConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<ChannelCommentCommentsAggregationSelection>;
  CommentsConnection: ChannelCommentsConnection;
  DefaultChannelRole?: Maybe<ChannelRole>;
  DefaultChannelRoleAggregate?: Maybe<ChannelChannelRoleDefaultChannelRoleAggregationSelection>;
  DefaultChannelRoleConnection: ChannelDefaultChannelRoleConnection;
  DefaultModRole?: Maybe<ModChannelRole>;
  DefaultModRoleAggregate?: Maybe<ChannelModChannelRoleDefaultModRoleAggregationSelection>;
  DefaultModRoleConnection: ChannelDefaultModRoleConnection;
  DiscussionChannels: Array<DiscussionChannel>;
  DiscussionChannelsAggregate?: Maybe<ChannelDiscussionChannelDiscussionChannelsAggregationSelection>;
  DiscussionChannelsConnection: ChannelDiscussionChannelsConnection;
  ElevatedModRole?: Maybe<ModChannelRole>;
  ElevatedModRoleAggregate?: Maybe<ChannelModChannelRoleElevatedModRoleAggregationSelection>;
  ElevatedModRoleConnection: ChannelElevatedModRoleConnection;
  EnabledPlugins: Array<PluginVersion>;
  EnabledPluginsAggregate?: Maybe<ChannelPluginVersionEnabledPluginsAggregationSelection>;
  EnabledPluginsConnection: ChannelEnabledPluginsConnection;
  EventChannels: Array<EventChannel>;
  EventChannelsAggregate?: Maybe<ChannelEventChannelEventChannelsAggregationSelection>;
  EventChannelsConnection: ChannelEventChannelsConnection;
  FilterGroups: Array<FilterGroup>;
  FilterGroupsAggregate?: Maybe<ChannelFilterGroupFilterGroupsAggregationSelection>;
  FilterGroupsConnection: ChannelFilterGroupsConnection;
  Issues: Array<Issue>;
  IssuesAggregate?: Maybe<ChannelIssueIssuesAggregationSelection>;
  IssuesConnection: ChannelIssuesConnection;
  Moderators: Array<ModerationProfile>;
  ModeratorsAggregate?: Maybe<ChannelModerationProfileModeratorsAggregationSelection>;
  ModeratorsConnection: ChannelModeratorsConnection;
  PendingModInvites: Array<User>;
  PendingModInvitesAggregate?: Maybe<ChannelUserPendingModInvitesAggregationSelection>;
  PendingModInvitesConnection: ChannelPendingModInvitesConnection;
  PendingOwnerInvites: Array<User>;
  PendingOwnerInvitesAggregate?: Maybe<ChannelUserPendingOwnerInvitesAggregationSelection>;
  PendingOwnerInvitesConnection: ChannelPendingOwnerInvitesConnection;
  RelatedChannels: Array<Channel>;
  RelatedChannelsAggregate?: Maybe<ChannelChannelRelatedChannelsAggregationSelection>;
  RelatedChannelsConnection: ChannelRelatedChannelsConnection;
  SuspendedModRole?: Maybe<ModChannelRole>;
  SuspendedModRoleAggregate?: Maybe<ChannelModChannelRoleSuspendedModRoleAggregationSelection>;
  SuspendedModRoleConnection: ChannelSuspendedModRoleConnection;
  SuspendedMods: Array<Suspension>;
  SuspendedModsAggregate?: Maybe<ChannelSuspensionSuspendedModsAggregationSelection>;
  SuspendedModsConnection: ChannelSuspendedModsConnection;
  SuspendedRole?: Maybe<ChannelRole>;
  SuspendedRoleAggregate?: Maybe<ChannelChannelRoleSuspendedRoleAggregationSelection>;
  SuspendedRoleConnection: ChannelSuspendedRoleConnection;
  SuspendedUsers: Array<Suspension>;
  SuspendedUsersAggregate?: Maybe<ChannelSuspensionSuspendedUsersAggregationSelection>;
  SuspendedUsersConnection: ChannelSuspendedUsersConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<ChannelTagTagsAggregationSelection>;
  TagsConnection: ChannelTagsConnection;
  WikiHomePage?: Maybe<WikiPage>;
  WikiHomePageAggregate?: Maybe<ChannelWikiPageWikiHomePageAggregationSelection>;
  WikiHomePageConnection: ChannelWikiHomePageConnection;
  allowPaidDownloads?: Maybe<Scalars['Boolean']['output']>;
  allowPaywalledPosts?: Maybe<Scalars['Boolean']['output']>;
  allowedFileTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  channelBannerURL?: Maybe<Scalars['String']['output']>;
  channelIconURL?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  downloadsEnabled?: Maybe<Scalars['Boolean']['output']>;
  emojiEnabled?: Maybe<Scalars['Boolean']['output']>;
  eventsEnabled?: Maybe<Scalars['Boolean']['output']>;
  feedbackEnabled?: Maybe<Scalars['Boolean']['output']>;
  imageUploadsEnabled?: Maybe<Scalars['Boolean']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  markAsAnsweredEnabled?: Maybe<Scalars['Boolean']['output']>;
  markdownImagesEnabled?: Maybe<Scalars['Boolean']['output']>;
  payoutPercent?: Maybe<Scalars['Int']['output']>;
  requireVerifiedEmailToPost?: Maybe<Scalars['Boolean']['output']>;
  requireVerifiedPhoneForUploads?: Maybe<Scalars['Boolean']['output']>;
  rules?: Maybe<Scalars['JSON']['output']>;
  uniqueName: Scalars['String']['output'];
  wikiEnabled?: Maybe<Scalars['Boolean']['output']>;
};


export type ChannelAdminsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelAdminsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelAdminsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelAdminsConnectionSort>>;
  where?: InputMaybe<ChannelAdminsConnectionWhere>;
};


export type ChannelCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type ChannelCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type ChannelCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelCommentsConnectionSort>>;
  where?: InputMaybe<ChannelCommentsConnectionWhere>;
};


export type ChannelDefaultChannelRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelRoleOptions>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type ChannelDefaultChannelRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type ChannelDefaultChannelRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelDefaultChannelRoleConnectionSort>>;
  where?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
};


export type ChannelDefaultModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelDefaultModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelDefaultModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelDefaultModRoleConnectionSort>>;
  where?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
};


export type ChannelDiscussionChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type ChannelDiscussionChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type ChannelDiscussionChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelDiscussionChannelsConnectionSort>>;
  where?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
};


export type ChannelElevatedModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelElevatedModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelElevatedModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelElevatedModRoleConnectionSort>>;
  where?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
};


export type ChannelEnabledPluginsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<PluginVersionOptions>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type ChannelEnabledPluginsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type ChannelEnabledPluginsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelEnabledPluginsConnectionSort>>;
  where?: InputMaybe<ChannelEnabledPluginsConnectionWhere>;
};


export type ChannelEventChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventChannelOptions>;
  where?: InputMaybe<EventChannelWhere>;
};


export type ChannelEventChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventChannelWhere>;
};


export type ChannelEventChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelEventChannelsConnectionSort>>;
  where?: InputMaybe<ChannelEventChannelsConnectionWhere>;
};


export type ChannelFilterGroupsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<FilterGroupOptions>;
  where?: InputMaybe<FilterGroupWhere>;
};


export type ChannelFilterGroupsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<FilterGroupWhere>;
};


export type ChannelFilterGroupsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelFilterGroupsConnectionSort>>;
  where?: InputMaybe<ChannelFilterGroupsConnectionWhere>;
};


export type ChannelIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type ChannelIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type ChannelIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelIssuesConnectionSort>>;
  where?: InputMaybe<ChannelIssuesConnectionWhere>;
};


export type ChannelModeratorsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type ChannelModeratorsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type ChannelModeratorsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelModeratorsConnectionSort>>;
  where?: InputMaybe<ChannelModeratorsConnectionWhere>;
};


export type ChannelPendingModInvitesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelPendingModInvitesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelPendingModInvitesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelPendingModInvitesConnectionSort>>;
  where?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
};


export type ChannelPendingOwnerInvitesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelPendingOwnerInvitesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelPendingOwnerInvitesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectionSort>>;
  where?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
};


export type ChannelRelatedChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type ChannelRelatedChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type ChannelRelatedChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelRelatedChannelsConnectionSort>>;
  where?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
};


export type ChannelSuspendedModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelSuspendedModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelSuspendedModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelSuspendedModRoleConnectionSort>>;
  where?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
};


export type ChannelSuspendedModsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ChannelSuspendedModsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ChannelSuspendedModsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelSuspendedModsConnectionSort>>;
  where?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
};


export type ChannelSuspendedRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelRoleOptions>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type ChannelSuspendedRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type ChannelSuspendedRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelSuspendedRoleConnectionSort>>;
  where?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
};


export type ChannelSuspendedUsersArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ChannelSuspendedUsersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ChannelSuspendedUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelSuspendedUsersConnectionSort>>;
  where?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
};


export type ChannelTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type ChannelTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type ChannelTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelTagsConnectionSort>>;
  where?: InputMaybe<ChannelTagsConnectionWhere>;
};


export type ChannelWikiHomePageArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<WikiPageOptions>;
  where?: InputMaybe<WikiPageWhere>;
};


export type ChannelWikiHomePageAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<WikiPageWhere>;
};


export type ChannelWikiHomePageConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelWikiHomePageConnectionSort>>;
  where?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
};

export type ChannelAdminsAggregateInput = {
  AND?: InputMaybe<Array<ChannelAdminsAggregateInput>>;
  NOT?: InputMaybe<ChannelAdminsAggregateInput>;
  OR?: InputMaybe<Array<ChannelAdminsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelAdminsNodeAggregationWhereInput>;
};

export type ChannelAdminsConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ChannelAdminsConnectOrCreateFieldInput = {
  onCreate: ChannelAdminsConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ChannelAdminsConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ChannelAdminsConnectedRelationship = {
  __typename?: 'ChannelAdminsConnectedRelationship';
  node: UserEventPayload;
};

export type ChannelAdminsConnection = {
  __typename?: 'ChannelAdminsConnection';
  edges: Array<ChannelAdminsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelAdminsConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ChannelAdminsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelAdminsConnectionWhere>>;
  NOT?: InputMaybe<ChannelAdminsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelAdminsConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ChannelAdminsCreateFieldInput = {
  node: UserCreateInput;
};

export type ChannelAdminsDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ChannelAdminsConnectionWhere>;
};

export type ChannelAdminsDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ChannelAdminsConnectionWhere>;
};

export type ChannelAdminsFieldInput = {
  connect?: InputMaybe<Array<ChannelAdminsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelAdminsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelAdminsCreateFieldInput>>;
};

export type ChannelAdminsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelAdminsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelAdminsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelAdminsNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelAdminsRelationship = {
  __typename?: 'ChannelAdminsRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ChannelAdminsRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type ChannelAdminsUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ChannelAdminsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelAdminsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelAdminsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelAdminsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelAdminsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelAdminsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelAdminsUpdateConnectionInput>;
  where?: InputMaybe<ChannelAdminsConnectionWhere>;
};

export type ChannelAggregateSelection = {
  __typename?: 'ChannelAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type ChannelChannelRelatedChannelsAggregationSelection = {
  __typename?: 'ChannelChannelRelatedChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelChannelRelatedChannelsNodeAggregateSelection>;
};

export type ChannelChannelRelatedChannelsNodeAggregateSelection = {
  __typename?: 'ChannelChannelRelatedChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type ChannelChannelRoleDefaultChannelRoleAggregationSelection = {
  __typename?: 'ChannelChannelRoleDefaultChannelRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelChannelRoleDefaultChannelRoleNodeAggregateSelection>;
};

export type ChannelChannelRoleDefaultChannelRoleNodeAggregateSelection = {
  __typename?: 'ChannelChannelRoleDefaultChannelRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelChannelRoleSuspendedRoleAggregationSelection = {
  __typename?: 'ChannelChannelRoleSuspendedRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelChannelRoleSuspendedRoleNodeAggregateSelection>;
};

export type ChannelChannelRoleSuspendedRoleNodeAggregateSelection = {
  __typename?: 'ChannelChannelRoleSuspendedRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelCommentCommentsAggregationSelection = {
  __typename?: 'ChannelCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelCommentCommentsNodeAggregateSelection>;
};

export type ChannelCommentCommentsNodeAggregateSelection = {
  __typename?: 'ChannelCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type ChannelCommentsAggregateInput = {
  AND?: InputMaybe<Array<ChannelCommentsAggregateInput>>;
  NOT?: InputMaybe<ChannelCommentsAggregateInput>;
  OR?: InputMaybe<Array<ChannelCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelCommentsNodeAggregationWhereInput>;
};

export type ChannelCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type ChannelCommentsConnectedRelationship = {
  __typename?: 'ChannelCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type ChannelCommentsConnection = {
  __typename?: 'ChannelCommentsConnection';
  edges: Array<ChannelCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type ChannelCommentsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelCommentsConnectionWhere>>;
  NOT?: InputMaybe<ChannelCommentsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type ChannelCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type ChannelCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<ChannelCommentsConnectionWhere>;
};

export type ChannelCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<ChannelCommentsConnectionWhere>;
};

export type ChannelCommentsFieldInput = {
  connect?: InputMaybe<Array<ChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelCommentsCreateFieldInput>>;
};

export type ChannelCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type ChannelCommentsRelationship = {
  __typename?: 'ChannelCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type ChannelCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type ChannelCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type ChannelCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelCommentsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelCommentsUpdateConnectionInput>;
  where?: InputMaybe<ChannelCommentsConnectionWhere>;
};

export type ChannelConnectInput = {
  Admins?: InputMaybe<Array<ChannelAdminsConnectFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsConnectFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleConnectFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleConnectFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsConnectFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleConnectFieldInput>;
  EnabledPlugins?: InputMaybe<Array<ChannelEnabledPluginsConnectFieldInput>>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsConnectFieldInput>>;
  FilterGroups?: InputMaybe<Array<ChannelFilterGroupsConnectFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesConnectFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsConnectFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesConnectFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsConnectFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleConnectFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsConnectFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleConnectFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersConnectFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsConnectFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageConnectFieldInput>;
};

export type ChannelConnectOrCreateInput = {
  Admins?: InputMaybe<Array<ChannelAdminsConnectOrCreateFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleConnectOrCreateFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleConnectOrCreateFieldInput>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleConnectOrCreateFieldInput>;
  Moderators?: InputMaybe<Array<ChannelModeratorsConnectOrCreateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesConnectOrCreateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectOrCreateFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsConnectOrCreateFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleConnectOrCreateFieldInput>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleConnectOrCreateFieldInput>;
  Tags?: InputMaybe<Array<ChannelTagsConnectOrCreateFieldInput>>;
};

export type ChannelConnectOrCreateWhere = {
  node: ChannelUniqueWhere;
};

export type ChannelConnectWhere = {
  node: ChannelWhere;
};

export type ChannelConnectedRelationships = {
  __typename?: 'ChannelConnectedRelationships';
  Admins?: Maybe<ChannelAdminsConnectedRelationship>;
  Comments?: Maybe<ChannelCommentsConnectedRelationship>;
  DefaultChannelRole?: Maybe<ChannelDefaultChannelRoleConnectedRelationship>;
  DefaultModRole?: Maybe<ChannelDefaultModRoleConnectedRelationship>;
  DiscussionChannels?: Maybe<ChannelDiscussionChannelsConnectedRelationship>;
  ElevatedModRole?: Maybe<ChannelElevatedModRoleConnectedRelationship>;
  EnabledPlugins?: Maybe<ChannelEnabledPluginsConnectedRelationship>;
  EventChannels?: Maybe<ChannelEventChannelsConnectedRelationship>;
  FilterGroups?: Maybe<ChannelFilterGroupsConnectedRelationship>;
  Issues?: Maybe<ChannelIssuesConnectedRelationship>;
  Moderators?: Maybe<ChannelModeratorsConnectedRelationship>;
  PendingModInvites?: Maybe<ChannelPendingModInvitesConnectedRelationship>;
  PendingOwnerInvites?: Maybe<ChannelPendingOwnerInvitesConnectedRelationship>;
  RelatedChannels?: Maybe<ChannelRelatedChannelsConnectedRelationship>;
  SuspendedModRole?: Maybe<ChannelSuspendedModRoleConnectedRelationship>;
  SuspendedMods?: Maybe<ChannelSuspendedModsConnectedRelationship>;
  SuspendedRole?: Maybe<ChannelSuspendedRoleConnectedRelationship>;
  SuspendedUsers?: Maybe<ChannelSuspendedUsersConnectedRelationship>;
  Tags?: Maybe<ChannelTagsConnectedRelationship>;
  WikiHomePage?: Maybe<ChannelWikiHomePageConnectedRelationship>;
};

export type ChannelCreateInput = {
  Admins?: InputMaybe<ChannelAdminsFieldInput>;
  Comments?: InputMaybe<ChannelCommentsFieldInput>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleFieldInput>;
  DiscussionChannels?: InputMaybe<ChannelDiscussionChannelsFieldInput>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleFieldInput>;
  EnabledPlugins?: InputMaybe<ChannelEnabledPluginsFieldInput>;
  EventChannels?: InputMaybe<ChannelEventChannelsFieldInput>;
  FilterGroups?: InputMaybe<ChannelFilterGroupsFieldInput>;
  Issues?: InputMaybe<ChannelIssuesFieldInput>;
  Moderators?: InputMaybe<ChannelModeratorsFieldInput>;
  PendingModInvites?: InputMaybe<ChannelPendingModInvitesFieldInput>;
  PendingOwnerInvites?: InputMaybe<ChannelPendingOwnerInvitesFieldInput>;
  RelatedChannels?: InputMaybe<ChannelRelatedChannelsFieldInput>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleFieldInput>;
  SuspendedMods?: InputMaybe<ChannelSuspendedModsFieldInput>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleFieldInput>;
  SuspendedUsers?: InputMaybe<ChannelSuspendedUsersFieldInput>;
  Tags?: InputMaybe<ChannelTagsFieldInput>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageFieldInput>;
  allowPaidDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  allowPaywalledPosts?: InputMaybe<Scalars['Boolean']['input']>;
  allowedFileTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelBannerURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  downloadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  emojiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  eventsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  feedbackEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  imageUploadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  markAsAnsweredEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  markdownImagesEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  payoutPercent?: InputMaybe<Scalars['Int']['input']>;
  requireVerifiedEmailToPost?: InputMaybe<Scalars['Boolean']['input']>;
  requireVerifiedPhoneForUploads?: InputMaybe<Scalars['Boolean']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  uniqueName: Scalars['String']['input'];
  wikiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelCreatedEvent = {
  __typename?: 'ChannelCreatedEvent';
  createdChannel: ChannelEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ChannelDefaultChannelRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelDefaultChannelRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelDefaultChannelRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelDefaultChannelRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelDefaultChannelRoleNodeAggregationWhereInput>;
};

export type ChannelDefaultChannelRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelRoleConnectWhere>;
};

export type ChannelDefaultChannelRoleConnectOrCreateFieldInput = {
  onCreate: ChannelDefaultChannelRoleConnectOrCreateFieldInputOnCreate;
  where: ChannelRoleConnectOrCreateWhere;
};

export type ChannelDefaultChannelRoleConnectOrCreateFieldInputOnCreate = {
  node: ChannelRoleOnCreateInput;
};

export type ChannelDefaultChannelRoleConnectedRelationship = {
  __typename?: 'ChannelDefaultChannelRoleConnectedRelationship';
  node: ChannelRoleEventPayload;
};

export type ChannelDefaultChannelRoleConnection = {
  __typename?: 'ChannelDefaultChannelRoleConnection';
  edges: Array<ChannelDefaultChannelRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelDefaultChannelRoleConnectionSort = {
  node?: InputMaybe<ChannelRoleSort>;
};

export type ChannelDefaultChannelRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelDefaultChannelRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelDefaultChannelRoleConnectionWhere>>;
  node?: InputMaybe<ChannelRoleWhere>;
};

export type ChannelDefaultChannelRoleCreateFieldInput = {
  node: ChannelRoleCreateInput;
};

export type ChannelDefaultChannelRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
};

export type ChannelDefaultChannelRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
};

export type ChannelDefaultChannelRoleFieldInput = {
  connect?: InputMaybe<ChannelDefaultChannelRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelDefaultChannelRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelDefaultChannelRoleCreateFieldInput>;
};

export type ChannelDefaultChannelRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelDefaultChannelRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelDefaultChannelRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelDefaultChannelRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelDefaultChannelRoleRelationship = {
  __typename?: 'ChannelDefaultChannelRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ChannelRole;
};

export type ChannelDefaultChannelRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelRoleSubscriptionWhere>;
};

export type ChannelDefaultChannelRoleUpdateConnectionInput = {
  node?: InputMaybe<ChannelRoleUpdateInput>;
};

export type ChannelDefaultChannelRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelDefaultChannelRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelDefaultChannelRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelDefaultChannelRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelDefaultChannelRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelDefaultChannelRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelDefaultChannelRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
};

export type ChannelDefaultModRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelDefaultModRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelDefaultModRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelDefaultModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelDefaultModRoleNodeAggregationWhereInput>;
};

export type ChannelDefaultModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModChannelRoleConnectWhere>;
};

export type ChannelDefaultModRoleConnectOrCreateFieldInput = {
  onCreate: ChannelDefaultModRoleConnectOrCreateFieldInputOnCreate;
  where: ModChannelRoleConnectOrCreateWhere;
};

export type ChannelDefaultModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModChannelRoleOnCreateInput;
};

export type ChannelDefaultModRoleConnectedRelationship = {
  __typename?: 'ChannelDefaultModRoleConnectedRelationship';
  node: ModChannelRoleEventPayload;
};

export type ChannelDefaultModRoleConnection = {
  __typename?: 'ChannelDefaultModRoleConnection';
  edges: Array<ChannelDefaultModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelDefaultModRoleConnectionSort = {
  node?: InputMaybe<ModChannelRoleSort>;
};

export type ChannelDefaultModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelDefaultModRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelDefaultModRoleConnectionWhere>>;
  node?: InputMaybe<ModChannelRoleWhere>;
};

export type ChannelDefaultModRoleCreateFieldInput = {
  node: ModChannelRoleCreateInput;
};

export type ChannelDefaultModRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
};

export type ChannelDefaultModRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
};

export type ChannelDefaultModRoleFieldInput = {
  connect?: InputMaybe<ChannelDefaultModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelDefaultModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelDefaultModRoleCreateFieldInput>;
};

export type ChannelDefaultModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelDefaultModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelDefaultModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelDefaultModRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelDefaultModRoleRelationship = {
  __typename?: 'ChannelDefaultModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ChannelDefaultModRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModChannelRoleSubscriptionWhere>;
};

export type ChannelDefaultModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModChannelRoleUpdateInput>;
};

export type ChannelDefaultModRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelDefaultModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelDefaultModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelDefaultModRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelDefaultModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelDefaultModRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelDefaultModRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
};

export type ChannelDeleteInput = {
  Admins?: InputMaybe<Array<ChannelAdminsDeleteFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsDeleteFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleDeleteFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleDeleteFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsDeleteFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleDeleteFieldInput>;
  EnabledPlugins?: InputMaybe<Array<ChannelEnabledPluginsDeleteFieldInput>>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsDeleteFieldInput>>;
  FilterGroups?: InputMaybe<Array<ChannelFilterGroupsDeleteFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesDeleteFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsDeleteFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesDeleteFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesDeleteFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsDeleteFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleDeleteFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsDeleteFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleDeleteFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersDeleteFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsDeleteFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageDeleteFieldInput>;
};

export type ChannelDeletedEvent = {
  __typename?: 'ChannelDeletedEvent';
  deletedChannel: ChannelEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ChannelDisconnectInput = {
  Admins?: InputMaybe<Array<ChannelAdminsDisconnectFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsDisconnectFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleDisconnectFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleDisconnectFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsDisconnectFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleDisconnectFieldInput>;
  EnabledPlugins?: InputMaybe<Array<ChannelEnabledPluginsDisconnectFieldInput>>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsDisconnectFieldInput>>;
  FilterGroups?: InputMaybe<Array<ChannelFilterGroupsDisconnectFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesDisconnectFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsDisconnectFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesDisconnectFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesDisconnectFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsDisconnectFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleDisconnectFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsDisconnectFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleDisconnectFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersDisconnectFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsDisconnectFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageDisconnectFieldInput>;
};

export type ChannelDiscussionChannelDiscussionChannelsAggregationSelection = {
  __typename?: 'ChannelDiscussionChannelDiscussionChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelDiscussionChannelDiscussionChannelsNodeAggregateSelection>;
};

export type ChannelDiscussionChannelDiscussionChannelsNodeAggregateSelection = {
  __typename?: 'ChannelDiscussionChannelDiscussionChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type ChannelDiscussionChannelsAggregateInput = {
  AND?: InputMaybe<Array<ChannelDiscussionChannelsAggregateInput>>;
  NOT?: InputMaybe<ChannelDiscussionChannelsAggregateInput>;
  OR?: InputMaybe<Array<ChannelDiscussionChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelDiscussionChannelsNodeAggregationWhereInput>;
};

export type ChannelDiscussionChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionChannelConnectWhere>;
};

export type ChannelDiscussionChannelsConnectedRelationship = {
  __typename?: 'ChannelDiscussionChannelsConnectedRelationship';
  node: DiscussionChannelEventPayload;
};

export type ChannelDiscussionChannelsConnection = {
  __typename?: 'ChannelDiscussionChannelsConnection';
  edges: Array<ChannelDiscussionChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelDiscussionChannelsConnectionSort = {
  node?: InputMaybe<DiscussionChannelSort>;
};

export type ChannelDiscussionChannelsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelDiscussionChannelsConnectionWhere>>;
  NOT?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelDiscussionChannelsConnectionWhere>>;
  node?: InputMaybe<DiscussionChannelWhere>;
};

export type ChannelDiscussionChannelsCreateFieldInput = {
  node: DiscussionChannelCreateInput;
};

export type ChannelDiscussionChannelsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
};

export type ChannelDiscussionChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionChannelDisconnectInput>;
  where?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
};

export type ChannelDiscussionChannelsFieldInput = {
  connect?: InputMaybe<Array<ChannelDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelDiscussionChannelsCreateFieldInput>>;
};

export type ChannelDiscussionChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelDiscussionChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelDiscussionChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelDiscussionChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type ChannelDiscussionChannelsRelationship = {
  __typename?: 'ChannelDiscussionChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type ChannelDiscussionChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<DiscussionChannelSubscriptionWhere>;
};

export type ChannelDiscussionChannelsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionChannelUpdateInput>;
};

export type ChannelDiscussionChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelDiscussionChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelDiscussionChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelDiscussionChannelsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelDiscussionChannelsUpdateConnectionInput>;
  where?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
};

export type ChannelEdge = {
  __typename?: 'ChannelEdge';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type ChannelElevatedModRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelElevatedModRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelElevatedModRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelElevatedModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelElevatedModRoleNodeAggregationWhereInput>;
};

export type ChannelElevatedModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModChannelRoleConnectWhere>;
};

export type ChannelElevatedModRoleConnectOrCreateFieldInput = {
  onCreate: ChannelElevatedModRoleConnectOrCreateFieldInputOnCreate;
  where: ModChannelRoleConnectOrCreateWhere;
};

export type ChannelElevatedModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModChannelRoleOnCreateInput;
};

export type ChannelElevatedModRoleConnectedRelationship = {
  __typename?: 'ChannelElevatedModRoleConnectedRelationship';
  node: ModChannelRoleEventPayload;
};

export type ChannelElevatedModRoleConnection = {
  __typename?: 'ChannelElevatedModRoleConnection';
  edges: Array<ChannelElevatedModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelElevatedModRoleConnectionSort = {
  node?: InputMaybe<ModChannelRoleSort>;
};

export type ChannelElevatedModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelElevatedModRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelElevatedModRoleConnectionWhere>>;
  node?: InputMaybe<ModChannelRoleWhere>;
};

export type ChannelElevatedModRoleCreateFieldInput = {
  node: ModChannelRoleCreateInput;
};

export type ChannelElevatedModRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
};

export type ChannelElevatedModRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
};

export type ChannelElevatedModRoleFieldInput = {
  connect?: InputMaybe<ChannelElevatedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelElevatedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelElevatedModRoleCreateFieldInput>;
};

export type ChannelElevatedModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelElevatedModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelElevatedModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelElevatedModRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelElevatedModRoleRelationship = {
  __typename?: 'ChannelElevatedModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ChannelElevatedModRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModChannelRoleSubscriptionWhere>;
};

export type ChannelElevatedModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModChannelRoleUpdateInput>;
};

export type ChannelElevatedModRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelElevatedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelElevatedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelElevatedModRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelElevatedModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelElevatedModRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelElevatedModRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
};

export type ChannelEnabledPluginsAggregateInput = {
  AND?: InputMaybe<Array<ChannelEnabledPluginsAggregateInput>>;
  NOT?: InputMaybe<ChannelEnabledPluginsAggregateInput>;
  OR?: InputMaybe<Array<ChannelEnabledPluginsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelEnabledPluginsNodeAggregationWhereInput>;
};

export type ChannelEnabledPluginsConnectFieldInput = {
  connect?: InputMaybe<Array<PluginVersionConnectInput>>;
  edge: ChannelPluginPropertiesCreateInput;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<PluginVersionConnectWhere>;
};

export type ChannelEnabledPluginsConnectedRelationship = {
  __typename?: 'ChannelEnabledPluginsConnectedRelationship';
  enabled: Scalars['Boolean']['output'];
  node: PluginVersionEventPayload;
  settingsJson?: Maybe<Scalars['JSON']['output']>;
};

export type ChannelEnabledPluginsConnection = {
  __typename?: 'ChannelEnabledPluginsConnection';
  edges: Array<ChannelEnabledPluginsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelEnabledPluginsConnectionSort = {
  edge?: InputMaybe<ChannelPluginPropertiesSort>;
  node?: InputMaybe<PluginVersionSort>;
};

export type ChannelEnabledPluginsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelEnabledPluginsConnectionWhere>>;
  NOT?: InputMaybe<ChannelEnabledPluginsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelEnabledPluginsConnectionWhere>>;
  edge?: InputMaybe<ChannelPluginPropertiesWhere>;
  node?: InputMaybe<PluginVersionWhere>;
};

export type ChannelEnabledPluginsCreateFieldInput = {
  edge: ChannelPluginPropertiesCreateInput;
  node: PluginVersionCreateInput;
};

export type ChannelEnabledPluginsDeleteFieldInput = {
  delete?: InputMaybe<PluginVersionDeleteInput>;
  where?: InputMaybe<ChannelEnabledPluginsConnectionWhere>;
};

export type ChannelEnabledPluginsDisconnectFieldInput = {
  disconnect?: InputMaybe<PluginVersionDisconnectInput>;
  where?: InputMaybe<ChannelEnabledPluginsConnectionWhere>;
};

export type ChannelEnabledPluginsFieldInput = {
  connect?: InputMaybe<Array<ChannelEnabledPluginsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelEnabledPluginsCreateFieldInput>>;
};

export type ChannelEnabledPluginsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelEnabledPluginsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelEnabledPluginsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelEnabledPluginsNodeAggregationWhereInput>>;
  entryPath_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  entryPath_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  version_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  version_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelEnabledPluginsRelationship = {
  __typename?: 'ChannelEnabledPluginsRelationship';
  cursor: Scalars['String']['output'];
  node: PluginVersion;
  properties: ChannelPluginProperties;
};

export type ChannelEnabledPluginsRelationshipSubscriptionWhere = {
  edge?: InputMaybe<ChannelPluginPropertiesSubscriptionWhere>;
  node?: InputMaybe<PluginVersionSubscriptionWhere>;
};

export type ChannelEnabledPluginsUpdateConnectionInput = {
  edge?: InputMaybe<ChannelPluginPropertiesUpdateInput>;
  node?: InputMaybe<PluginVersionUpdateInput>;
};

export type ChannelEnabledPluginsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelEnabledPluginsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelEnabledPluginsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelEnabledPluginsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelEnabledPluginsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelEnabledPluginsUpdateConnectionInput>;
  where?: InputMaybe<ChannelEnabledPluginsConnectionWhere>;
};

export type ChannelEventChannelEventChannelsAggregationSelection = {
  __typename?: 'ChannelEventChannelEventChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelEventChannelEventChannelsNodeAggregateSelection>;
};

export type ChannelEventChannelEventChannelsNodeAggregateSelection = {
  __typename?: 'ChannelEventChannelEventChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  eventId: IdAggregateSelection;
  id: IdAggregateSelection;
};

export type ChannelEventChannelsAggregateInput = {
  AND?: InputMaybe<Array<ChannelEventChannelsAggregateInput>>;
  NOT?: InputMaybe<ChannelEventChannelsAggregateInput>;
  OR?: InputMaybe<Array<ChannelEventChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelEventChannelsNodeAggregationWhereInput>;
};

export type ChannelEventChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<EventChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventChannelConnectWhere>;
};

export type ChannelEventChannelsConnectedRelationship = {
  __typename?: 'ChannelEventChannelsConnectedRelationship';
  node: EventChannelEventPayload;
};

export type ChannelEventChannelsConnection = {
  __typename?: 'ChannelEventChannelsConnection';
  edges: Array<ChannelEventChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelEventChannelsConnectionSort = {
  node?: InputMaybe<EventChannelSort>;
};

export type ChannelEventChannelsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelEventChannelsConnectionWhere>>;
  NOT?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelEventChannelsConnectionWhere>>;
  node?: InputMaybe<EventChannelWhere>;
};

export type ChannelEventChannelsCreateFieldInput = {
  node: EventChannelCreateInput;
};

export type ChannelEventChannelsDeleteFieldInput = {
  delete?: InputMaybe<EventChannelDeleteInput>;
  where?: InputMaybe<ChannelEventChannelsConnectionWhere>;
};

export type ChannelEventChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventChannelDisconnectInput>;
  where?: InputMaybe<ChannelEventChannelsConnectionWhere>;
};

export type ChannelEventChannelsFieldInput = {
  connect?: InputMaybe<Array<ChannelEventChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelEventChannelsCreateFieldInput>>;
};

export type ChannelEventChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelEventChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelEventChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelEventChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ChannelEventChannelsRelationship = {
  __typename?: 'ChannelEventChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: EventChannel;
};

export type ChannelEventChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<EventChannelSubscriptionWhere>;
};

export type ChannelEventChannelsUpdateConnectionInput = {
  node?: InputMaybe<EventChannelUpdateInput>;
};

export type ChannelEventChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelEventChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelEventChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelEventChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelEventChannelsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelEventChannelsUpdateConnectionInput>;
  where?: InputMaybe<ChannelEventChannelsConnectionWhere>;
};

export type ChannelEventPayload = {
  __typename?: 'ChannelEventPayload';
  allowPaidDownloads?: Maybe<Scalars['Boolean']['output']>;
  allowPaywalledPosts?: Maybe<Scalars['Boolean']['output']>;
  allowedFileTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  channelBannerURL?: Maybe<Scalars['String']['output']>;
  channelIconURL?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  downloadsEnabled?: Maybe<Scalars['Boolean']['output']>;
  emojiEnabled?: Maybe<Scalars['Boolean']['output']>;
  eventsEnabled?: Maybe<Scalars['Boolean']['output']>;
  feedbackEnabled?: Maybe<Scalars['Boolean']['output']>;
  imageUploadsEnabled?: Maybe<Scalars['Boolean']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  markAsAnsweredEnabled?: Maybe<Scalars['Boolean']['output']>;
  markdownImagesEnabled?: Maybe<Scalars['Boolean']['output']>;
  payoutPercent?: Maybe<Scalars['Int']['output']>;
  requireVerifiedEmailToPost?: Maybe<Scalars['Boolean']['output']>;
  requireVerifiedPhoneForUploads?: Maybe<Scalars['Boolean']['output']>;
  rules?: Maybe<Scalars['JSON']['output']>;
  uniqueName: Scalars['String']['output'];
  wikiEnabled?: Maybe<Scalars['Boolean']['output']>;
};

export type ChannelFilterGroupFilterGroupsAggregationSelection = {
  __typename?: 'ChannelFilterGroupFilterGroupsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelFilterGroupFilterGroupsNodeAggregateSelection>;
};

export type ChannelFilterGroupFilterGroupsNodeAggregateSelection = {
  __typename?: 'ChannelFilterGroupFilterGroupsNodeAggregateSelection';
  displayName: StringAggregateSelection;
  id: IdAggregateSelection;
  key: StringAggregateSelection;
  order: IntAggregateSelection;
};

export type ChannelFilterGroupsAggregateInput = {
  AND?: InputMaybe<Array<ChannelFilterGroupsAggregateInput>>;
  NOT?: InputMaybe<ChannelFilterGroupsAggregateInput>;
  OR?: InputMaybe<Array<ChannelFilterGroupsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelFilterGroupsNodeAggregationWhereInput>;
};

export type ChannelFilterGroupsConnectFieldInput = {
  connect?: InputMaybe<Array<FilterGroupConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<FilterGroupConnectWhere>;
};

export type ChannelFilterGroupsConnectedRelationship = {
  __typename?: 'ChannelFilterGroupsConnectedRelationship';
  node: FilterGroupEventPayload;
};

export type ChannelFilterGroupsConnection = {
  __typename?: 'ChannelFilterGroupsConnection';
  edges: Array<ChannelFilterGroupsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelFilterGroupsConnectionSort = {
  node?: InputMaybe<FilterGroupSort>;
};

export type ChannelFilterGroupsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelFilterGroupsConnectionWhere>>;
  NOT?: InputMaybe<ChannelFilterGroupsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelFilterGroupsConnectionWhere>>;
  node?: InputMaybe<FilterGroupWhere>;
};

export type ChannelFilterGroupsCreateFieldInput = {
  node: FilterGroupCreateInput;
};

export type ChannelFilterGroupsDeleteFieldInput = {
  delete?: InputMaybe<FilterGroupDeleteInput>;
  where?: InputMaybe<ChannelFilterGroupsConnectionWhere>;
};

export type ChannelFilterGroupsDisconnectFieldInput = {
  disconnect?: InputMaybe<FilterGroupDisconnectInput>;
  where?: InputMaybe<ChannelFilterGroupsConnectionWhere>;
};

export type ChannelFilterGroupsFieldInput = {
  connect?: InputMaybe<Array<ChannelFilterGroupsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelFilterGroupsCreateFieldInput>>;
};

export type ChannelFilterGroupsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelFilterGroupsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelFilterGroupsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelFilterGroupsNodeAggregationWhereInput>>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  order_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelFilterGroupsRelationship = {
  __typename?: 'ChannelFilterGroupsRelationship';
  cursor: Scalars['String']['output'];
  node: FilterGroup;
};

export type ChannelFilterGroupsRelationshipSubscriptionWhere = {
  node?: InputMaybe<FilterGroupSubscriptionWhere>;
};

export type ChannelFilterGroupsUpdateConnectionInput = {
  node?: InputMaybe<FilterGroupUpdateInput>;
};

export type ChannelFilterGroupsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelFilterGroupsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelFilterGroupsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelFilterGroupsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelFilterGroupsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelFilterGroupsUpdateConnectionInput>;
  where?: InputMaybe<ChannelFilterGroupsConnectionWhere>;
};

export type ChannelInfo = {
  __typename?: 'ChannelInfo';
  channelIconURL?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  uniqueName?: Maybe<Scalars['String']['output']>;
};

export type ChannelInfoAggregateSelection = {
  __typename?: 'ChannelInfoAggregateSelection';
  channelIconURL: StringAggregateSelection;
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type ChannelInfoCreateInput = {
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  uniqueName?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelInfoCreatedEvent = {
  __typename?: 'ChannelInfoCreatedEvent';
  createdChannelInfo: ChannelInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ChannelInfoDeletedEvent = {
  __typename?: 'ChannelInfoDeletedEvent';
  deletedChannelInfo: ChannelInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ChannelInfoEdge = {
  __typename?: 'ChannelInfoEdge';
  cursor: Scalars['String']['output'];
  node: ChannelInfo;
};

export type ChannelInfoEventPayload = {
  __typename?: 'ChannelInfoEventPayload';
  channelIconURL?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  uniqueName?: Maybe<Scalars['String']['output']>;
};

export type ChannelInfoOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ChannelInfoSort objects to sort ChannelInfos by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ChannelInfoSort>>;
};

/** Fields to sort ChannelInfos by. The order in which sorts are applied is not guaranteed when specifying many fields in one ChannelInfoSort object. */
export type ChannelInfoSort = {
  channelIconURL?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  displayName?: InputMaybe<SortDirection>;
  uniqueName?: InputMaybe<SortDirection>;
};

export type ChannelInfoSubscriptionWhere = {
  AND?: InputMaybe<Array<ChannelInfoSubscriptionWhere>>;
  NOT?: InputMaybe<ChannelInfoSubscriptionWhere>;
  OR?: InputMaybe<Array<ChannelInfoSubscriptionWhere>>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelIconURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  uniqueName?: InputMaybe<Scalars['String']['input']>;
  uniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  uniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  uniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  uniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelInfoUpdateInput = {
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  uniqueName?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelInfoUpdatedEvent = {
  __typename?: 'ChannelInfoUpdatedEvent';
  event: EventType;
  previousState: ChannelInfoEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedChannelInfo: ChannelInfoEventPayload;
};

export type ChannelInfoWhere = {
  AND?: InputMaybe<Array<ChannelInfoWhere>>;
  NOT?: InputMaybe<ChannelInfoWhere>;
  OR?: InputMaybe<Array<ChannelInfoWhere>>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelIconURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  uniqueName?: InputMaybe<Scalars['String']['input']>;
  uniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  uniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  uniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  uniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelInfosConnection = {
  __typename?: 'ChannelInfosConnection';
  edges: Array<ChannelInfoEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelIssueIssuesAggregationSelection = {
  __typename?: 'ChannelIssueIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelIssueIssuesNodeAggregateSelection>;
};

export type ChannelIssueIssuesNodeAggregateSelection = {
  __typename?: 'ChannelIssueIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type ChannelIssuesAggregateInput = {
  AND?: InputMaybe<Array<ChannelIssuesAggregateInput>>;
  NOT?: InputMaybe<ChannelIssuesAggregateInput>;
  OR?: InputMaybe<Array<ChannelIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelIssuesNodeAggregationWhereInput>;
};

export type ChannelIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type ChannelIssuesConnectedRelationship = {
  __typename?: 'ChannelIssuesConnectedRelationship';
  node: IssueEventPayload;
};

export type ChannelIssuesConnection = {
  __typename?: 'ChannelIssuesConnection';
  edges: Array<ChannelIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type ChannelIssuesConnectionWhere = {
  AND?: InputMaybe<Array<ChannelIssuesConnectionWhere>>;
  NOT?: InputMaybe<ChannelIssuesConnectionWhere>;
  OR?: InputMaybe<Array<ChannelIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type ChannelIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type ChannelIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<ChannelIssuesConnectionWhere>;
};

export type ChannelIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<ChannelIssuesConnectionWhere>;
};

export type ChannelIssuesFieldInput = {
  connect?: InputMaybe<Array<ChannelIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelIssuesCreateFieldInput>>;
};

export type ChannelIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ChannelIssuesRelationship = {
  __typename?: 'ChannelIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type ChannelIssuesRelationshipSubscriptionWhere = {
  node?: InputMaybe<IssueSubscriptionWhere>;
};

export type ChannelIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type ChannelIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelIssuesDisconnectFieldInput>>;
  update?: InputMaybe<ChannelIssuesUpdateConnectionInput>;
  where?: InputMaybe<ChannelIssuesConnectionWhere>;
};

export type ChannelModChannelRoleDefaultModRoleAggregationSelection = {
  __typename?: 'ChannelModChannelRoleDefaultModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelModChannelRoleDefaultModRoleNodeAggregateSelection>;
};

export type ChannelModChannelRoleDefaultModRoleNodeAggregateSelection = {
  __typename?: 'ChannelModChannelRoleDefaultModRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelModChannelRoleElevatedModRoleAggregationSelection = {
  __typename?: 'ChannelModChannelRoleElevatedModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelModChannelRoleElevatedModRoleNodeAggregateSelection>;
};

export type ChannelModChannelRoleElevatedModRoleNodeAggregateSelection = {
  __typename?: 'ChannelModChannelRoleElevatedModRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelModChannelRoleSuspendedModRoleAggregationSelection = {
  __typename?: 'ChannelModChannelRoleSuspendedModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelModChannelRoleSuspendedModRoleNodeAggregateSelection>;
};

export type ChannelModChannelRoleSuspendedModRoleNodeAggregateSelection = {
  __typename?: 'ChannelModChannelRoleSuspendedModRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelModerationProfileModeratorsAggregationSelection = {
  __typename?: 'ChannelModerationProfileModeratorsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelModerationProfileModeratorsNodeAggregateSelection>;
};

export type ChannelModerationProfileModeratorsNodeAggregateSelection = {
  __typename?: 'ChannelModerationProfileModeratorsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type ChannelModeratorsAggregateInput = {
  AND?: InputMaybe<Array<ChannelModeratorsAggregateInput>>;
  NOT?: InputMaybe<ChannelModeratorsAggregateInput>;
  OR?: InputMaybe<Array<ChannelModeratorsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelModeratorsNodeAggregationWhereInput>;
};

export type ChannelModeratorsConnectFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type ChannelModeratorsConnectOrCreateFieldInput = {
  onCreate: ChannelModeratorsConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type ChannelModeratorsConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type ChannelModeratorsConnectedRelationship = {
  __typename?: 'ChannelModeratorsConnectedRelationship';
  node: ModerationProfileEventPayload;
};

export type ChannelModeratorsConnection = {
  __typename?: 'ChannelModeratorsConnection';
  edges: Array<ChannelModeratorsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelModeratorsConnectionSort = {
  node?: InputMaybe<ModerationProfileSort>;
};

export type ChannelModeratorsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelModeratorsConnectionWhere>>;
  NOT?: InputMaybe<ChannelModeratorsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelModeratorsConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type ChannelModeratorsCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type ChannelModeratorsDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<ChannelModeratorsConnectionWhere>;
};

export type ChannelModeratorsDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<ChannelModeratorsConnectionWhere>;
};

export type ChannelModeratorsFieldInput = {
  connect?: InputMaybe<Array<ChannelModeratorsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelModeratorsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelModeratorsCreateFieldInput>>;
};

export type ChannelModeratorsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelModeratorsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelModeratorsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelModeratorsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelModeratorsRelationship = {
  __typename?: 'ChannelModeratorsRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type ChannelModeratorsRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModerationProfileSubscriptionWhere>;
};

export type ChannelModeratorsUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type ChannelModeratorsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelModeratorsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelModeratorsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelModeratorsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelModeratorsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelModeratorsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelModeratorsUpdateConnectionInput>;
  where?: InputMaybe<ChannelModeratorsConnectionWhere>;
};

export type ChannelOnCreateInput = {
  allowPaidDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  allowPaywalledPosts?: InputMaybe<Scalars['Boolean']['input']>;
  allowedFileTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelBannerURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  downloadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  emojiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  eventsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  feedbackEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  imageUploadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  markAsAnsweredEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  markdownImagesEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  payoutPercent?: InputMaybe<Scalars['Int']['input']>;
  requireVerifiedEmailToPost?: InputMaybe<Scalars['Boolean']['input']>;
  requireVerifiedPhoneForUploads?: InputMaybe<Scalars['Boolean']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  uniqueName: Scalars['String']['input'];
  wikiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ChannelSort objects to sort Channels by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ChannelSort>>;
};

export type ChannelPendingModInvitesAggregateInput = {
  AND?: InputMaybe<Array<ChannelPendingModInvitesAggregateInput>>;
  NOT?: InputMaybe<ChannelPendingModInvitesAggregateInput>;
  OR?: InputMaybe<Array<ChannelPendingModInvitesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelPendingModInvitesNodeAggregationWhereInput>;
};

export type ChannelPendingModInvitesConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ChannelPendingModInvitesConnectOrCreateFieldInput = {
  onCreate: ChannelPendingModInvitesConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ChannelPendingModInvitesConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ChannelPendingModInvitesConnectedRelationship = {
  __typename?: 'ChannelPendingModInvitesConnectedRelationship';
  node: UserEventPayload;
};

export type ChannelPendingModInvitesConnection = {
  __typename?: 'ChannelPendingModInvitesConnection';
  edges: Array<ChannelPendingModInvitesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelPendingModInvitesConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ChannelPendingModInvitesConnectionWhere = {
  AND?: InputMaybe<Array<ChannelPendingModInvitesConnectionWhere>>;
  NOT?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  OR?: InputMaybe<Array<ChannelPendingModInvitesConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ChannelPendingModInvitesCreateFieldInput = {
  node: UserCreateInput;
};

export type ChannelPendingModInvitesDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
};

export type ChannelPendingModInvitesDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
};

export type ChannelPendingModInvitesFieldInput = {
  connect?: InputMaybe<Array<ChannelPendingModInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelPendingModInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelPendingModInvitesCreateFieldInput>>;
};

export type ChannelPendingModInvitesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelPendingModInvitesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelPendingModInvitesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelPendingModInvitesNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelPendingModInvitesRelationship = {
  __typename?: 'ChannelPendingModInvitesRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ChannelPendingModInvitesRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type ChannelPendingModInvitesUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ChannelPendingModInvitesUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelPendingModInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelPendingModInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelPendingModInvitesCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelPendingModInvitesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelPendingModInvitesDisconnectFieldInput>>;
  update?: InputMaybe<ChannelPendingModInvitesUpdateConnectionInput>;
  where?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
};

export type ChannelPendingOwnerInvitesAggregateInput = {
  AND?: InputMaybe<Array<ChannelPendingOwnerInvitesAggregateInput>>;
  NOT?: InputMaybe<ChannelPendingOwnerInvitesAggregateInput>;
  OR?: InputMaybe<Array<ChannelPendingOwnerInvitesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelPendingOwnerInvitesNodeAggregationWhereInput>;
};

export type ChannelPendingOwnerInvitesConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ChannelPendingOwnerInvitesConnectOrCreateFieldInput = {
  onCreate: ChannelPendingOwnerInvitesConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ChannelPendingOwnerInvitesConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ChannelPendingOwnerInvitesConnectedRelationship = {
  __typename?: 'ChannelPendingOwnerInvitesConnectedRelationship';
  node: UserEventPayload;
};

export type ChannelPendingOwnerInvitesConnection = {
  __typename?: 'ChannelPendingOwnerInvitesConnection';
  edges: Array<ChannelPendingOwnerInvitesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelPendingOwnerInvitesConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ChannelPendingOwnerInvitesConnectionWhere = {
  AND?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectionWhere>>;
  NOT?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  OR?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ChannelPendingOwnerInvitesCreateFieldInput = {
  node: UserCreateInput;
};

export type ChannelPendingOwnerInvitesDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
};

export type ChannelPendingOwnerInvitesDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
};

export type ChannelPendingOwnerInvitesFieldInput = {
  connect?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelPendingOwnerInvitesCreateFieldInput>>;
};

export type ChannelPendingOwnerInvitesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelPendingOwnerInvitesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelPendingOwnerInvitesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelPendingOwnerInvitesNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelPendingOwnerInvitesRelationship = {
  __typename?: 'ChannelPendingOwnerInvitesRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ChannelPendingOwnerInvitesRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type ChannelPendingOwnerInvitesUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ChannelPendingOwnerInvitesUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelPendingOwnerInvitesCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelPendingOwnerInvitesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelPendingOwnerInvitesDisconnectFieldInput>>;
  update?: InputMaybe<ChannelPendingOwnerInvitesUpdateConnectionInput>;
  where?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
};

/**
 * The edge properties for the following fields:
 * * Channel.EnabledPlugins
 */
export type ChannelPluginProperties = {
  __typename?: 'ChannelPluginProperties';
  enabled: Scalars['Boolean']['output'];
  settingsJson?: Maybe<Scalars['JSON']['output']>;
};

export type ChannelPluginPropertiesCreateInput = {
  enabled: Scalars['Boolean']['input'];
  settingsJson?: InputMaybe<Scalars['JSON']['input']>;
};

export type ChannelPluginPropertiesSort = {
  enabled?: InputMaybe<SortDirection>;
  settingsJson?: InputMaybe<SortDirection>;
};

export type ChannelPluginPropertiesSubscriptionWhere = {
  AND?: InputMaybe<Array<ChannelPluginPropertiesSubscriptionWhere>>;
  NOT?: InputMaybe<ChannelPluginPropertiesSubscriptionWhere>;
  OR?: InputMaybe<Array<ChannelPluginPropertiesSubscriptionWhere>>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  settingsJson?: InputMaybe<Scalars['JSON']['input']>;
  settingsJson_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
};

export type ChannelPluginPropertiesUpdateInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  settingsJson?: InputMaybe<Scalars['JSON']['input']>;
};

export type ChannelPluginPropertiesWhere = {
  AND?: InputMaybe<Array<ChannelPluginPropertiesWhere>>;
  NOT?: InputMaybe<ChannelPluginPropertiesWhere>;
  OR?: InputMaybe<Array<ChannelPluginPropertiesWhere>>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  settingsJson?: InputMaybe<Scalars['JSON']['input']>;
  settingsJson_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
};

export type ChannelPluginVersionEnabledPluginsAggregationSelection = {
  __typename?: 'ChannelPluginVersionEnabledPluginsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelPluginVersionEnabledPluginsNodeAggregateSelection>;
};

export type ChannelPluginVersionEnabledPluginsNodeAggregateSelection = {
  __typename?: 'ChannelPluginVersionEnabledPluginsNodeAggregateSelection';
  entryPath: StringAggregateSelection;
  id: IdAggregateSelection;
  repoUrl: StringAggregateSelection;
  version: StringAggregateSelection;
};

export type ChannelRelatedChannelsAggregateInput = {
  AND?: InputMaybe<Array<ChannelRelatedChannelsAggregateInput>>;
  NOT?: InputMaybe<ChannelRelatedChannelsAggregateInput>;
  OR?: InputMaybe<Array<ChannelRelatedChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelRelatedChannelsNodeAggregationWhereInput>;
};

export type ChannelRelatedChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type ChannelRelatedChannelsConnectOrCreateFieldInput = {
  onCreate: ChannelRelatedChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type ChannelRelatedChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type ChannelRelatedChannelsConnectedRelationship = {
  __typename?: 'ChannelRelatedChannelsConnectedRelationship';
  node: ChannelEventPayload;
};

export type ChannelRelatedChannelsConnection = {
  __typename?: 'ChannelRelatedChannelsConnection';
  edges: Array<ChannelRelatedChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelRelatedChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type ChannelRelatedChannelsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelRelatedChannelsConnectionWhere>>;
  NOT?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelRelatedChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type ChannelRelatedChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type ChannelRelatedChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
};

export type ChannelRelatedChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
};

export type ChannelRelatedChannelsFieldInput = {
  connect?: InputMaybe<Array<ChannelRelatedChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelRelatedChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelRelatedChannelsCreateFieldInput>>;
};

export type ChannelRelatedChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelRelatedChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelRelatedChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelRelatedChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelRelatedChannelsRelationship = {
  __typename?: 'ChannelRelatedChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type ChannelRelatedChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type ChannelRelatedChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type ChannelRelatedChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelRelatedChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelRelatedChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelRelatedChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelRelatedChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelRelatedChannelsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelRelatedChannelsUpdateConnectionInput>;
  where?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
};

export type ChannelRelationInput = {
  Admins?: InputMaybe<Array<ChannelAdminsCreateFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsCreateFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleCreateFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleCreateFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsCreateFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleCreateFieldInput>;
  EnabledPlugins?: InputMaybe<Array<ChannelEnabledPluginsCreateFieldInput>>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsCreateFieldInput>>;
  FilterGroups?: InputMaybe<Array<ChannelFilterGroupsCreateFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesCreateFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsCreateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesCreateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesCreateFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsCreateFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleCreateFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsCreateFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleCreateFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersCreateFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsCreateFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageCreateFieldInput>;
};

export type ChannelRelationshipCreatedEvent = {
  __typename?: 'ChannelRelationshipCreatedEvent';
  channel: ChannelEventPayload;
  createdRelationship: ChannelConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ChannelRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<ChannelRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<ChannelRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<ChannelRelationshipCreatedSubscriptionWhere>>;
  channel?: InputMaybe<ChannelSubscriptionWhere>;
  createdRelationship?: InputMaybe<ChannelRelationshipsSubscriptionWhere>;
};

export type ChannelRelationshipDeletedEvent = {
  __typename?: 'ChannelRelationshipDeletedEvent';
  channel: ChannelEventPayload;
  deletedRelationship: ChannelConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ChannelRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<ChannelRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<ChannelRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<ChannelRelationshipDeletedSubscriptionWhere>>;
  channel?: InputMaybe<ChannelSubscriptionWhere>;
  deletedRelationship?: InputMaybe<ChannelRelationshipsSubscriptionWhere>;
};

export type ChannelRelationshipsSubscriptionWhere = {
  Admins?: InputMaybe<ChannelAdminsRelationshipSubscriptionWhere>;
  Comments?: InputMaybe<ChannelCommentsRelationshipSubscriptionWhere>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleRelationshipSubscriptionWhere>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleRelationshipSubscriptionWhere>;
  DiscussionChannels?: InputMaybe<ChannelDiscussionChannelsRelationshipSubscriptionWhere>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleRelationshipSubscriptionWhere>;
  EnabledPlugins?: InputMaybe<ChannelEnabledPluginsRelationshipSubscriptionWhere>;
  EventChannels?: InputMaybe<ChannelEventChannelsRelationshipSubscriptionWhere>;
  FilterGroups?: InputMaybe<ChannelFilterGroupsRelationshipSubscriptionWhere>;
  Issues?: InputMaybe<ChannelIssuesRelationshipSubscriptionWhere>;
  Moderators?: InputMaybe<ChannelModeratorsRelationshipSubscriptionWhere>;
  PendingModInvites?: InputMaybe<ChannelPendingModInvitesRelationshipSubscriptionWhere>;
  PendingOwnerInvites?: InputMaybe<ChannelPendingOwnerInvitesRelationshipSubscriptionWhere>;
  RelatedChannels?: InputMaybe<ChannelRelatedChannelsRelationshipSubscriptionWhere>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleRelationshipSubscriptionWhere>;
  SuspendedMods?: InputMaybe<ChannelSuspendedModsRelationshipSubscriptionWhere>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleRelationshipSubscriptionWhere>;
  SuspendedUsers?: InputMaybe<ChannelSuspendedUsersRelationshipSubscriptionWhere>;
  Tags?: InputMaybe<ChannelTagsRelationshipSubscriptionWhere>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageRelationshipSubscriptionWhere>;
};

export type ChannelRole = {
  __typename?: 'ChannelRole';
  canCreateComment?: Maybe<Scalars['Boolean']['output']>;
  canCreateDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canCreateEvent?: Maybe<Scalars['Boolean']['output']>;
  canUpdateChannel?: Maybe<Scalars['Boolean']['output']>;
  canUploadFile?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteComment?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteDiscussion?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  showModTag?: Maybe<Scalars['Boolean']['output']>;
};

export type ChannelRoleAggregateSelection = {
  __typename?: 'ChannelRoleAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelRoleConnectOrCreateWhere = {
  node: ChannelRoleUniqueWhere;
};

export type ChannelRoleConnectWhere = {
  node: ChannelRoleWhere;
};

export type ChannelRoleCreateInput = {
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canUpdateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showModTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelRoleCreatedEvent = {
  __typename?: 'ChannelRoleCreatedEvent';
  createdChannelRole: ChannelRoleEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ChannelRoleDeletedEvent = {
  __typename?: 'ChannelRoleDeletedEvent';
  deletedChannelRole: ChannelRoleEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ChannelRoleEdge = {
  __typename?: 'ChannelRoleEdge';
  cursor: Scalars['String']['output'];
  node: ChannelRole;
};

export type ChannelRoleEventPayload = {
  __typename?: 'ChannelRoleEventPayload';
  canCreateComment?: Maybe<Scalars['Boolean']['output']>;
  canCreateDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canCreateEvent?: Maybe<Scalars['Boolean']['output']>;
  canUpdateChannel?: Maybe<Scalars['Boolean']['output']>;
  canUploadFile?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteComment?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteDiscussion?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  showModTag?: Maybe<Scalars['Boolean']['output']>;
};

export type ChannelRoleOnCreateInput = {
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canUpdateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showModTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelRoleOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ChannelRoleSort objects to sort ChannelRoles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ChannelRoleSort>>;
};

/** Fields to sort ChannelRoles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ChannelRoleSort object. */
export type ChannelRoleSort = {
  canCreateComment?: InputMaybe<SortDirection>;
  canCreateDiscussion?: InputMaybe<SortDirection>;
  canCreateEvent?: InputMaybe<SortDirection>;
  canUpdateChannel?: InputMaybe<SortDirection>;
  canUploadFile?: InputMaybe<SortDirection>;
  canUpvoteComment?: InputMaybe<SortDirection>;
  canUpvoteDiscussion?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  showModTag?: InputMaybe<SortDirection>;
};

export type ChannelRoleSubscriptionWhere = {
  AND?: InputMaybe<Array<ChannelRoleSubscriptionWhere>>;
  NOT?: InputMaybe<ChannelRoleSubscriptionWhere>;
  OR?: InputMaybe<Array<ChannelRoleSubscriptionWhere>>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canUpdateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  showModTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelRoleUniqueWhere = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelRoleUpdateInput = {
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canUpdateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showModTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelRoleUpdatedEvent = {
  __typename?: 'ChannelRoleUpdatedEvent';
  event: EventType;
  previousState: ChannelRoleEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedChannelRole: ChannelRoleEventPayload;
};

export type ChannelRoleWhere = {
  AND?: InputMaybe<Array<ChannelRoleWhere>>;
  NOT?: InputMaybe<ChannelRoleWhere>;
  OR?: InputMaybe<Array<ChannelRoleWhere>>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canUpdateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  showModTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelRolesConnection = {
  __typename?: 'ChannelRolesConnection';
  edges: Array<ChannelRoleEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** Fields to sort Channels by. The order in which sorts are applied is not guaranteed when specifying many fields in one ChannelSort object. */
export type ChannelSort = {
  allowPaidDownloads?: InputMaybe<SortDirection>;
  allowPaywalledPosts?: InputMaybe<SortDirection>;
  channelBannerURL?: InputMaybe<SortDirection>;
  channelIconURL?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  displayName?: InputMaybe<SortDirection>;
  downloadsEnabled?: InputMaybe<SortDirection>;
  emojiEnabled?: InputMaybe<SortDirection>;
  eventsEnabled?: InputMaybe<SortDirection>;
  feedbackEnabled?: InputMaybe<SortDirection>;
  imageUploadsEnabled?: InputMaybe<SortDirection>;
  locked?: InputMaybe<SortDirection>;
  markAsAnsweredEnabled?: InputMaybe<SortDirection>;
  markdownImagesEnabled?: InputMaybe<SortDirection>;
  payoutPercent?: InputMaybe<SortDirection>;
  requireVerifiedEmailToPost?: InputMaybe<SortDirection>;
  requireVerifiedPhoneForUploads?: InputMaybe<SortDirection>;
  rules?: InputMaybe<SortDirection>;
  uniqueName?: InputMaybe<SortDirection>;
  wikiEnabled?: InputMaybe<SortDirection>;
};

export type ChannelSubscriptionWhere = {
  AND?: InputMaybe<Array<ChannelSubscriptionWhere>>;
  NOT?: InputMaybe<ChannelSubscriptionWhere>;
  OR?: InputMaybe<Array<ChannelSubscriptionWhere>>;
  allowPaidDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  allowPaywalledPosts?: InputMaybe<Scalars['Boolean']['input']>;
  allowedFileTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  allowedFileTypes_INCLUDES?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelBannerURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelIconURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  downloadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  emojiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  eventsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  feedbackEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  imageUploadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  markAsAnsweredEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  markdownImagesEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  payoutPercent?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  payoutPercent_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_LTE?: InputMaybe<Scalars['Int']['input']>;
  requireVerifiedEmailToPost?: InputMaybe<Scalars['Boolean']['input']>;
  requireVerifiedPhoneForUploads?: InputMaybe<Scalars['Boolean']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  rules_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  uniqueName?: InputMaybe<Scalars['String']['input']>;
  uniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  uniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  uniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  uniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  uniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  wikiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelSuspendedModRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelSuspendedModRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelSuspendedModRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelSuspendedModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelSuspendedModRoleNodeAggregationWhereInput>;
};

export type ChannelSuspendedModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModChannelRoleConnectWhere>;
};

export type ChannelSuspendedModRoleConnectOrCreateFieldInput = {
  onCreate: ChannelSuspendedModRoleConnectOrCreateFieldInputOnCreate;
  where: ModChannelRoleConnectOrCreateWhere;
};

export type ChannelSuspendedModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModChannelRoleOnCreateInput;
};

export type ChannelSuspendedModRoleConnectedRelationship = {
  __typename?: 'ChannelSuspendedModRoleConnectedRelationship';
  node: ModChannelRoleEventPayload;
};

export type ChannelSuspendedModRoleConnection = {
  __typename?: 'ChannelSuspendedModRoleConnection';
  edges: Array<ChannelSuspendedModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelSuspendedModRoleConnectionSort = {
  node?: InputMaybe<ModChannelRoleSort>;
};

export type ChannelSuspendedModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelSuspendedModRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelSuspendedModRoleConnectionWhere>>;
  node?: InputMaybe<ModChannelRoleWhere>;
};

export type ChannelSuspendedModRoleCreateFieldInput = {
  node: ModChannelRoleCreateInput;
};

export type ChannelSuspendedModRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
};

export type ChannelSuspendedModRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
};

export type ChannelSuspendedModRoleFieldInput = {
  connect?: InputMaybe<ChannelSuspendedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelSuspendedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelSuspendedModRoleCreateFieldInput>;
};

export type ChannelSuspendedModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelSuspendedModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelSuspendedModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelSuspendedModRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelSuspendedModRoleRelationship = {
  __typename?: 'ChannelSuspendedModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ChannelSuspendedModRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModChannelRoleSubscriptionWhere>;
};

export type ChannelSuspendedModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModChannelRoleUpdateInput>;
};

export type ChannelSuspendedModRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelSuspendedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelSuspendedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelSuspendedModRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelSuspendedModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelSuspendedModRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelSuspendedModRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
};

export type ChannelSuspendedModsAggregateInput = {
  AND?: InputMaybe<Array<ChannelSuspendedModsAggregateInput>>;
  NOT?: InputMaybe<ChannelSuspendedModsAggregateInput>;
  OR?: InputMaybe<Array<ChannelSuspendedModsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelSuspendedModsNodeAggregationWhereInput>;
};

export type ChannelSuspendedModsConnectFieldInput = {
  connect?: InputMaybe<Array<SuspensionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<SuspensionConnectWhere>;
};

export type ChannelSuspendedModsConnectedRelationship = {
  __typename?: 'ChannelSuspendedModsConnectedRelationship';
  node: SuspensionEventPayload;
};

export type ChannelSuspendedModsConnection = {
  __typename?: 'ChannelSuspendedModsConnection';
  edges: Array<ChannelSuspendedModsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelSuspendedModsConnectionSort = {
  node?: InputMaybe<SuspensionSort>;
};

export type ChannelSuspendedModsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelSuspendedModsConnectionWhere>>;
  NOT?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelSuspendedModsConnectionWhere>>;
  node?: InputMaybe<SuspensionWhere>;
};

export type ChannelSuspendedModsCreateFieldInput = {
  node: SuspensionCreateInput;
};

export type ChannelSuspendedModsDeleteFieldInput = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
};

export type ChannelSuspendedModsDisconnectFieldInput = {
  disconnect?: InputMaybe<SuspensionDisconnectInput>;
  where?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
};

export type ChannelSuspendedModsFieldInput = {
  connect?: InputMaybe<Array<ChannelSuspendedModsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelSuspendedModsCreateFieldInput>>;
};

export type ChannelSuspendedModsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelSuspendedModsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelSuspendedModsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelSuspendedModsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  suspendedUntil_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelSuspendedModsRelationship = {
  __typename?: 'ChannelSuspendedModsRelationship';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type ChannelSuspendedModsRelationshipSubscriptionWhere = {
  node?: InputMaybe<SuspensionSubscriptionWhere>;
};

export type ChannelSuspendedModsUpdateConnectionInput = {
  node?: InputMaybe<SuspensionUpdateInput>;
};

export type ChannelSuspendedModsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelSuspendedModsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelSuspendedModsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelSuspendedModsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelSuspendedModsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelSuspendedModsUpdateConnectionInput>;
  where?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
};

export type ChannelSuspendedRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelSuspendedRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelSuspendedRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelSuspendedRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelSuspendedRoleNodeAggregationWhereInput>;
};

export type ChannelSuspendedRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelRoleConnectWhere>;
};

export type ChannelSuspendedRoleConnectOrCreateFieldInput = {
  onCreate: ChannelSuspendedRoleConnectOrCreateFieldInputOnCreate;
  where: ChannelRoleConnectOrCreateWhere;
};

export type ChannelSuspendedRoleConnectOrCreateFieldInputOnCreate = {
  node: ChannelRoleOnCreateInput;
};

export type ChannelSuspendedRoleConnectedRelationship = {
  __typename?: 'ChannelSuspendedRoleConnectedRelationship';
  node: ChannelRoleEventPayload;
};

export type ChannelSuspendedRoleConnection = {
  __typename?: 'ChannelSuspendedRoleConnection';
  edges: Array<ChannelSuspendedRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelSuspendedRoleConnectionSort = {
  node?: InputMaybe<ChannelRoleSort>;
};

export type ChannelSuspendedRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelSuspendedRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelSuspendedRoleConnectionWhere>>;
  node?: InputMaybe<ChannelRoleWhere>;
};

export type ChannelSuspendedRoleCreateFieldInput = {
  node: ChannelRoleCreateInput;
};

export type ChannelSuspendedRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
};

export type ChannelSuspendedRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
};

export type ChannelSuspendedRoleFieldInput = {
  connect?: InputMaybe<ChannelSuspendedRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelSuspendedRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelSuspendedRoleCreateFieldInput>;
};

export type ChannelSuspendedRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelSuspendedRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelSuspendedRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelSuspendedRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelSuspendedRoleRelationship = {
  __typename?: 'ChannelSuspendedRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ChannelRole;
};

export type ChannelSuspendedRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelRoleSubscriptionWhere>;
};

export type ChannelSuspendedRoleUpdateConnectionInput = {
  node?: InputMaybe<ChannelRoleUpdateInput>;
};

export type ChannelSuspendedRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelSuspendedRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelSuspendedRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelSuspendedRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelSuspendedRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelSuspendedRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelSuspendedRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
};

export type ChannelSuspendedUsersAggregateInput = {
  AND?: InputMaybe<Array<ChannelSuspendedUsersAggregateInput>>;
  NOT?: InputMaybe<ChannelSuspendedUsersAggregateInput>;
  OR?: InputMaybe<Array<ChannelSuspendedUsersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelSuspendedUsersNodeAggregationWhereInput>;
};

export type ChannelSuspendedUsersConnectFieldInput = {
  connect?: InputMaybe<Array<SuspensionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<SuspensionConnectWhere>;
};

export type ChannelSuspendedUsersConnectedRelationship = {
  __typename?: 'ChannelSuspendedUsersConnectedRelationship';
  node: SuspensionEventPayload;
};

export type ChannelSuspendedUsersConnection = {
  __typename?: 'ChannelSuspendedUsersConnection';
  edges: Array<ChannelSuspendedUsersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelSuspendedUsersConnectionSort = {
  node?: InputMaybe<SuspensionSort>;
};

export type ChannelSuspendedUsersConnectionWhere = {
  AND?: InputMaybe<Array<ChannelSuspendedUsersConnectionWhere>>;
  NOT?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  OR?: InputMaybe<Array<ChannelSuspendedUsersConnectionWhere>>;
  node?: InputMaybe<SuspensionWhere>;
};

export type ChannelSuspendedUsersCreateFieldInput = {
  node: SuspensionCreateInput;
};

export type ChannelSuspendedUsersDeleteFieldInput = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
};

export type ChannelSuspendedUsersDisconnectFieldInput = {
  disconnect?: InputMaybe<SuspensionDisconnectInput>;
  where?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
};

export type ChannelSuspendedUsersFieldInput = {
  connect?: InputMaybe<Array<ChannelSuspendedUsersConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelSuspendedUsersCreateFieldInput>>;
};

export type ChannelSuspendedUsersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelSuspendedUsersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelSuspendedUsersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelSuspendedUsersNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  suspendedUntil_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelSuspendedUsersRelationship = {
  __typename?: 'ChannelSuspendedUsersRelationship';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type ChannelSuspendedUsersRelationshipSubscriptionWhere = {
  node?: InputMaybe<SuspensionSubscriptionWhere>;
};

export type ChannelSuspendedUsersUpdateConnectionInput = {
  node?: InputMaybe<SuspensionUpdateInput>;
};

export type ChannelSuspendedUsersUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelSuspendedUsersConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelSuspendedUsersCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelSuspendedUsersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelSuspendedUsersDisconnectFieldInput>>;
  update?: InputMaybe<ChannelSuspendedUsersUpdateConnectionInput>;
  where?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
};

export type ChannelSuspensionSuspendedModsAggregationSelection = {
  __typename?: 'ChannelSuspensionSuspendedModsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelSuspensionSuspendedModsNodeAggregateSelection>;
};

export type ChannelSuspensionSuspendedModsNodeAggregateSelection = {
  __typename?: 'ChannelSuspensionSuspendedModsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelSuspensionSuspendedUsersAggregationSelection = {
  __typename?: 'ChannelSuspensionSuspendedUsersAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelSuspensionSuspendedUsersNodeAggregateSelection>;
};

export type ChannelSuspensionSuspendedUsersNodeAggregateSelection = {
  __typename?: 'ChannelSuspensionSuspendedUsersNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelTagTagsAggregationSelection = {
  __typename?: 'ChannelTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelTagTagsNodeAggregateSelection>;
};

export type ChannelTagTagsNodeAggregateSelection = {
  __typename?: 'ChannelTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type ChannelTagsAggregateInput = {
  AND?: InputMaybe<Array<ChannelTagsAggregateInput>>;
  NOT?: InputMaybe<ChannelTagsAggregateInput>;
  OR?: InputMaybe<Array<ChannelTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelTagsNodeAggregationWhereInput>;
};

export type ChannelTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type ChannelTagsConnectOrCreateFieldInput = {
  onCreate: ChannelTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type ChannelTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type ChannelTagsConnectedRelationship = {
  __typename?: 'ChannelTagsConnectedRelationship';
  node: TagEventPayload;
};

export type ChannelTagsConnection = {
  __typename?: 'ChannelTagsConnection';
  edges: Array<ChannelTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type ChannelTagsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelTagsConnectionWhere>>;
  NOT?: InputMaybe<ChannelTagsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type ChannelTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type ChannelTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<ChannelTagsConnectionWhere>;
};

export type ChannelTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<ChannelTagsConnectionWhere>;
};

export type ChannelTagsFieldInput = {
  connect?: InputMaybe<Array<ChannelTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelTagsCreateFieldInput>>;
};

export type ChannelTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelTagsRelationship = {
  __typename?: 'ChannelTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type ChannelTagsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TagSubscriptionWhere>;
};

export type ChannelTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type ChannelTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelTagsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelTagsUpdateConnectionInput>;
  where?: InputMaybe<ChannelTagsConnectionWhere>;
};

export type ChannelUniqueWhere = {
  uniqueName?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelUpdateInput = {
  Admins?: InputMaybe<Array<ChannelAdminsUpdateFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsUpdateFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleUpdateFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleUpdateFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsUpdateFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleUpdateFieldInput>;
  EnabledPlugins?: InputMaybe<Array<ChannelEnabledPluginsUpdateFieldInput>>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsUpdateFieldInput>>;
  FilterGroups?: InputMaybe<Array<ChannelFilterGroupsUpdateFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesUpdateFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsUpdateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesUpdateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesUpdateFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsUpdateFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleUpdateFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsUpdateFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleUpdateFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersUpdateFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsUpdateFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageUpdateFieldInput>;
  allowPaidDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  allowPaywalledPosts?: InputMaybe<Scalars['Boolean']['input']>;
  allowedFileTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  allowedFileTypes_POP?: InputMaybe<Scalars['Int']['input']>;
  allowedFileTypes_PUSH?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelBannerURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  downloadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  emojiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  eventsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  feedbackEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  imageUploadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  markAsAnsweredEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  markdownImagesEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  payoutPercent?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  requireVerifiedEmailToPost?: InputMaybe<Scalars['Boolean']['input']>;
  requireVerifiedPhoneForUploads?: InputMaybe<Scalars['Boolean']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  uniqueName?: InputMaybe<Scalars['String']['input']>;
  wikiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelUpdatedEvent = {
  __typename?: 'ChannelUpdatedEvent';
  event: EventType;
  previousState: ChannelEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedChannel: ChannelEventPayload;
};

export type ChannelUserAdminsAggregationSelection = {
  __typename?: 'ChannelUserAdminsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelUserAdminsNodeAggregateSelection>;
};

export type ChannelUserAdminsNodeAggregateSelection = {
  __typename?: 'ChannelUserAdminsNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelUserPendingModInvitesAggregationSelection = {
  __typename?: 'ChannelUserPendingModInvitesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelUserPendingModInvitesNodeAggregateSelection>;
};

export type ChannelUserPendingModInvitesNodeAggregateSelection = {
  __typename?: 'ChannelUserPendingModInvitesNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelUserPendingOwnerInvitesAggregationSelection = {
  __typename?: 'ChannelUserPendingOwnerInvitesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelUserPendingOwnerInvitesNodeAggregateSelection>;
};

export type ChannelUserPendingOwnerInvitesNodeAggregateSelection = {
  __typename?: 'ChannelUserPendingOwnerInvitesNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelWhere = {
  AND?: InputMaybe<Array<ChannelWhere>>;
  AdminsAggregate?: InputMaybe<ChannelAdminsAggregateInput>;
  /** Return Channels where all of the related ChannelAdminsConnections match this filter */
  AdminsConnection_ALL?: InputMaybe<ChannelAdminsConnectionWhere>;
  /** Return Channels where none of the related ChannelAdminsConnections match this filter */
  AdminsConnection_NONE?: InputMaybe<ChannelAdminsConnectionWhere>;
  /** Return Channels where one of the related ChannelAdminsConnections match this filter */
  AdminsConnection_SINGLE?: InputMaybe<ChannelAdminsConnectionWhere>;
  /** Return Channels where some of the related ChannelAdminsConnections match this filter */
  AdminsConnection_SOME?: InputMaybe<ChannelAdminsConnectionWhere>;
  /** Return Channels where all of the related Users match this filter */
  Admins_ALL?: InputMaybe<UserWhere>;
  /** Return Channels where none of the related Users match this filter */
  Admins_NONE?: InputMaybe<UserWhere>;
  /** Return Channels where one of the related Users match this filter */
  Admins_SINGLE?: InputMaybe<UserWhere>;
  /** Return Channels where some of the related Users match this filter */
  Admins_SOME?: InputMaybe<UserWhere>;
  CommentsAggregate?: InputMaybe<ChannelCommentsAggregateInput>;
  /** Return Channels where all of the related ChannelCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<ChannelCommentsConnectionWhere>;
  /** Return Channels where none of the related ChannelCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<ChannelCommentsConnectionWhere>;
  /** Return Channels where one of the related ChannelCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<ChannelCommentsConnectionWhere>;
  /** Return Channels where some of the related ChannelCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<ChannelCommentsConnectionWhere>;
  /** Return Channels where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return Channels where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return Channels where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Channels where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  DefaultChannelRole?: InputMaybe<ChannelRoleWhere>;
  DefaultChannelRoleAggregate?: InputMaybe<ChannelDefaultChannelRoleAggregateInput>;
  DefaultChannelRoleConnection?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
  DefaultChannelRoleConnection_NOT?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
  DefaultChannelRole_NOT?: InputMaybe<ChannelRoleWhere>;
  DefaultModRole?: InputMaybe<ModChannelRoleWhere>;
  DefaultModRoleAggregate?: InputMaybe<ChannelDefaultModRoleAggregateInput>;
  DefaultModRoleConnection?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
  DefaultModRoleConnection_NOT?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
  DefaultModRole_NOT?: InputMaybe<ModChannelRoleWhere>;
  DiscussionChannelsAggregate?: InputMaybe<ChannelDiscussionChannelsAggregateInput>;
  /** Return Channels where all of the related ChannelDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_ALL?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  /** Return Channels where none of the related ChannelDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_NONE?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  /** Return Channels where one of the related ChannelDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_SINGLE?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  /** Return Channels where some of the related ChannelDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_SOME?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  /** Return Channels where all of the related DiscussionChannels match this filter */
  DiscussionChannels_ALL?: InputMaybe<DiscussionChannelWhere>;
  /** Return Channels where none of the related DiscussionChannels match this filter */
  DiscussionChannels_NONE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Channels where one of the related DiscussionChannels match this filter */
  DiscussionChannels_SINGLE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Channels where some of the related DiscussionChannels match this filter */
  DiscussionChannels_SOME?: InputMaybe<DiscussionChannelWhere>;
  ElevatedModRole?: InputMaybe<ModChannelRoleWhere>;
  ElevatedModRoleAggregate?: InputMaybe<ChannelElevatedModRoleAggregateInput>;
  ElevatedModRoleConnection?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
  ElevatedModRoleConnection_NOT?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
  ElevatedModRole_NOT?: InputMaybe<ModChannelRoleWhere>;
  EnabledPluginsAggregate?: InputMaybe<ChannelEnabledPluginsAggregateInput>;
  /** Return Channels where all of the related ChannelEnabledPluginsConnections match this filter */
  EnabledPluginsConnection_ALL?: InputMaybe<ChannelEnabledPluginsConnectionWhere>;
  /** Return Channels where none of the related ChannelEnabledPluginsConnections match this filter */
  EnabledPluginsConnection_NONE?: InputMaybe<ChannelEnabledPluginsConnectionWhere>;
  /** Return Channels where one of the related ChannelEnabledPluginsConnections match this filter */
  EnabledPluginsConnection_SINGLE?: InputMaybe<ChannelEnabledPluginsConnectionWhere>;
  /** Return Channels where some of the related ChannelEnabledPluginsConnections match this filter */
  EnabledPluginsConnection_SOME?: InputMaybe<ChannelEnabledPluginsConnectionWhere>;
  /** Return Channels where all of the related PluginVersions match this filter */
  EnabledPlugins_ALL?: InputMaybe<PluginVersionWhere>;
  /** Return Channels where none of the related PluginVersions match this filter */
  EnabledPlugins_NONE?: InputMaybe<PluginVersionWhere>;
  /** Return Channels where one of the related PluginVersions match this filter */
  EnabledPlugins_SINGLE?: InputMaybe<PluginVersionWhere>;
  /** Return Channels where some of the related PluginVersions match this filter */
  EnabledPlugins_SOME?: InputMaybe<PluginVersionWhere>;
  EventChannelsAggregate?: InputMaybe<ChannelEventChannelsAggregateInput>;
  /** Return Channels where all of the related ChannelEventChannelsConnections match this filter */
  EventChannelsConnection_ALL?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  /** Return Channels where none of the related ChannelEventChannelsConnections match this filter */
  EventChannelsConnection_NONE?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  /** Return Channels where one of the related ChannelEventChannelsConnections match this filter */
  EventChannelsConnection_SINGLE?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  /** Return Channels where some of the related ChannelEventChannelsConnections match this filter */
  EventChannelsConnection_SOME?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  /** Return Channels where all of the related EventChannels match this filter */
  EventChannels_ALL?: InputMaybe<EventChannelWhere>;
  /** Return Channels where none of the related EventChannels match this filter */
  EventChannels_NONE?: InputMaybe<EventChannelWhere>;
  /** Return Channels where one of the related EventChannels match this filter */
  EventChannels_SINGLE?: InputMaybe<EventChannelWhere>;
  /** Return Channels where some of the related EventChannels match this filter */
  EventChannels_SOME?: InputMaybe<EventChannelWhere>;
  FilterGroupsAggregate?: InputMaybe<ChannelFilterGroupsAggregateInput>;
  /** Return Channels where all of the related ChannelFilterGroupsConnections match this filter */
  FilterGroupsConnection_ALL?: InputMaybe<ChannelFilterGroupsConnectionWhere>;
  /** Return Channels where none of the related ChannelFilterGroupsConnections match this filter */
  FilterGroupsConnection_NONE?: InputMaybe<ChannelFilterGroupsConnectionWhere>;
  /** Return Channels where one of the related ChannelFilterGroupsConnections match this filter */
  FilterGroupsConnection_SINGLE?: InputMaybe<ChannelFilterGroupsConnectionWhere>;
  /** Return Channels where some of the related ChannelFilterGroupsConnections match this filter */
  FilterGroupsConnection_SOME?: InputMaybe<ChannelFilterGroupsConnectionWhere>;
  /** Return Channels where all of the related FilterGroups match this filter */
  FilterGroups_ALL?: InputMaybe<FilterGroupWhere>;
  /** Return Channels where none of the related FilterGroups match this filter */
  FilterGroups_NONE?: InputMaybe<FilterGroupWhere>;
  /** Return Channels where one of the related FilterGroups match this filter */
  FilterGroups_SINGLE?: InputMaybe<FilterGroupWhere>;
  /** Return Channels where some of the related FilterGroups match this filter */
  FilterGroups_SOME?: InputMaybe<FilterGroupWhere>;
  IssuesAggregate?: InputMaybe<ChannelIssuesAggregateInput>;
  /** Return Channels where all of the related ChannelIssuesConnections match this filter */
  IssuesConnection_ALL?: InputMaybe<ChannelIssuesConnectionWhere>;
  /** Return Channels where none of the related ChannelIssuesConnections match this filter */
  IssuesConnection_NONE?: InputMaybe<ChannelIssuesConnectionWhere>;
  /** Return Channels where one of the related ChannelIssuesConnections match this filter */
  IssuesConnection_SINGLE?: InputMaybe<ChannelIssuesConnectionWhere>;
  /** Return Channels where some of the related ChannelIssuesConnections match this filter */
  IssuesConnection_SOME?: InputMaybe<ChannelIssuesConnectionWhere>;
  /** Return Channels where all of the related Issues match this filter */
  Issues_ALL?: InputMaybe<IssueWhere>;
  /** Return Channels where none of the related Issues match this filter */
  Issues_NONE?: InputMaybe<IssueWhere>;
  /** Return Channels where one of the related Issues match this filter */
  Issues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return Channels where some of the related Issues match this filter */
  Issues_SOME?: InputMaybe<IssueWhere>;
  ModeratorsAggregate?: InputMaybe<ChannelModeratorsAggregateInput>;
  /** Return Channels where all of the related ChannelModeratorsConnections match this filter */
  ModeratorsConnection_ALL?: InputMaybe<ChannelModeratorsConnectionWhere>;
  /** Return Channels where none of the related ChannelModeratorsConnections match this filter */
  ModeratorsConnection_NONE?: InputMaybe<ChannelModeratorsConnectionWhere>;
  /** Return Channels where one of the related ChannelModeratorsConnections match this filter */
  ModeratorsConnection_SINGLE?: InputMaybe<ChannelModeratorsConnectionWhere>;
  /** Return Channels where some of the related ChannelModeratorsConnections match this filter */
  ModeratorsConnection_SOME?: InputMaybe<ChannelModeratorsConnectionWhere>;
  /** Return Channels where all of the related ModerationProfiles match this filter */
  Moderators_ALL?: InputMaybe<ModerationProfileWhere>;
  /** Return Channels where none of the related ModerationProfiles match this filter */
  Moderators_NONE?: InputMaybe<ModerationProfileWhere>;
  /** Return Channels where one of the related ModerationProfiles match this filter */
  Moderators_SINGLE?: InputMaybe<ModerationProfileWhere>;
  /** Return Channels where some of the related ModerationProfiles match this filter */
  Moderators_SOME?: InputMaybe<ModerationProfileWhere>;
  NOT?: InputMaybe<ChannelWhere>;
  OR?: InputMaybe<Array<ChannelWhere>>;
  PendingModInvitesAggregate?: InputMaybe<ChannelPendingModInvitesAggregateInput>;
  /** Return Channels where all of the related ChannelPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_ALL?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  /** Return Channels where none of the related ChannelPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_NONE?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  /** Return Channels where one of the related ChannelPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_SINGLE?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  /** Return Channels where some of the related ChannelPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_SOME?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  /** Return Channels where all of the related Users match this filter */
  PendingModInvites_ALL?: InputMaybe<UserWhere>;
  /** Return Channels where none of the related Users match this filter */
  PendingModInvites_NONE?: InputMaybe<UserWhere>;
  /** Return Channels where one of the related Users match this filter */
  PendingModInvites_SINGLE?: InputMaybe<UserWhere>;
  /** Return Channels where some of the related Users match this filter */
  PendingModInvites_SOME?: InputMaybe<UserWhere>;
  PendingOwnerInvitesAggregate?: InputMaybe<ChannelPendingOwnerInvitesAggregateInput>;
  /** Return Channels where all of the related ChannelPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_ALL?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  /** Return Channels where none of the related ChannelPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_NONE?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  /** Return Channels where one of the related ChannelPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_SINGLE?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  /** Return Channels where some of the related ChannelPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_SOME?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  /** Return Channels where all of the related Users match this filter */
  PendingOwnerInvites_ALL?: InputMaybe<UserWhere>;
  /** Return Channels where none of the related Users match this filter */
  PendingOwnerInvites_NONE?: InputMaybe<UserWhere>;
  /** Return Channels where one of the related Users match this filter */
  PendingOwnerInvites_SINGLE?: InputMaybe<UserWhere>;
  /** Return Channels where some of the related Users match this filter */
  PendingOwnerInvites_SOME?: InputMaybe<UserWhere>;
  RelatedChannelsAggregate?: InputMaybe<ChannelRelatedChannelsAggregateInput>;
  /** Return Channels where all of the related ChannelRelatedChannelsConnections match this filter */
  RelatedChannelsConnection_ALL?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  /** Return Channels where none of the related ChannelRelatedChannelsConnections match this filter */
  RelatedChannelsConnection_NONE?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  /** Return Channels where one of the related ChannelRelatedChannelsConnections match this filter */
  RelatedChannelsConnection_SINGLE?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  /** Return Channels where some of the related ChannelRelatedChannelsConnections match this filter */
  RelatedChannelsConnection_SOME?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  /** Return Channels where all of the related Channels match this filter */
  RelatedChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Channels where none of the related Channels match this filter */
  RelatedChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Channels where one of the related Channels match this filter */
  RelatedChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Channels where some of the related Channels match this filter */
  RelatedChannels_SOME?: InputMaybe<ChannelWhere>;
  SuspendedModRole?: InputMaybe<ModChannelRoleWhere>;
  SuspendedModRoleAggregate?: InputMaybe<ChannelSuspendedModRoleAggregateInput>;
  SuspendedModRoleConnection?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
  SuspendedModRoleConnection_NOT?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
  SuspendedModRole_NOT?: InputMaybe<ModChannelRoleWhere>;
  SuspendedModsAggregate?: InputMaybe<ChannelSuspendedModsAggregateInput>;
  /** Return Channels where all of the related ChannelSuspendedModsConnections match this filter */
  SuspendedModsConnection_ALL?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  /** Return Channels where none of the related ChannelSuspendedModsConnections match this filter */
  SuspendedModsConnection_NONE?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  /** Return Channels where one of the related ChannelSuspendedModsConnections match this filter */
  SuspendedModsConnection_SINGLE?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  /** Return Channels where some of the related ChannelSuspendedModsConnections match this filter */
  SuspendedModsConnection_SOME?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  /** Return Channels where all of the related Suspensions match this filter */
  SuspendedMods_ALL?: InputMaybe<SuspensionWhere>;
  /** Return Channels where none of the related Suspensions match this filter */
  SuspendedMods_NONE?: InputMaybe<SuspensionWhere>;
  /** Return Channels where one of the related Suspensions match this filter */
  SuspendedMods_SINGLE?: InputMaybe<SuspensionWhere>;
  /** Return Channels where some of the related Suspensions match this filter */
  SuspendedMods_SOME?: InputMaybe<SuspensionWhere>;
  SuspendedRole?: InputMaybe<ChannelRoleWhere>;
  SuspendedRoleAggregate?: InputMaybe<ChannelSuspendedRoleAggregateInput>;
  SuspendedRoleConnection?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
  SuspendedRoleConnection_NOT?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
  SuspendedRole_NOT?: InputMaybe<ChannelRoleWhere>;
  SuspendedUsersAggregate?: InputMaybe<ChannelSuspendedUsersAggregateInput>;
  /** Return Channels where all of the related ChannelSuspendedUsersConnections match this filter */
  SuspendedUsersConnection_ALL?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  /** Return Channels where none of the related ChannelSuspendedUsersConnections match this filter */
  SuspendedUsersConnection_NONE?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  /** Return Channels where one of the related ChannelSuspendedUsersConnections match this filter */
  SuspendedUsersConnection_SINGLE?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  /** Return Channels where some of the related ChannelSuspendedUsersConnections match this filter */
  SuspendedUsersConnection_SOME?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  /** Return Channels where all of the related Suspensions match this filter */
  SuspendedUsers_ALL?: InputMaybe<SuspensionWhere>;
  /** Return Channels where none of the related Suspensions match this filter */
  SuspendedUsers_NONE?: InputMaybe<SuspensionWhere>;
  /** Return Channels where one of the related Suspensions match this filter */
  SuspendedUsers_SINGLE?: InputMaybe<SuspensionWhere>;
  /** Return Channels where some of the related Suspensions match this filter */
  SuspendedUsers_SOME?: InputMaybe<SuspensionWhere>;
  TagsAggregate?: InputMaybe<ChannelTagsAggregateInput>;
  /** Return Channels where all of the related ChannelTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<ChannelTagsConnectionWhere>;
  /** Return Channels where none of the related ChannelTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<ChannelTagsConnectionWhere>;
  /** Return Channels where one of the related ChannelTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<ChannelTagsConnectionWhere>;
  /** Return Channels where some of the related ChannelTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<ChannelTagsConnectionWhere>;
  /** Return Channels where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Channels where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Channels where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Channels where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  WikiHomePage?: InputMaybe<WikiPageWhere>;
  WikiHomePageAggregate?: InputMaybe<ChannelWikiHomePageAggregateInput>;
  WikiHomePageConnection?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
  WikiHomePageConnection_NOT?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
  WikiHomePage_NOT?: InputMaybe<WikiPageWhere>;
  allowPaidDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  allowPaywalledPosts?: InputMaybe<Scalars['Boolean']['input']>;
  allowedFileTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  allowedFileTypes_INCLUDES?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelBannerURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelIconURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  downloadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  emojiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  eventsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  feedbackEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  imageUploadsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  markAsAnsweredEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  markdownImagesEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  payoutPercent?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  payoutPercent_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_LTE?: InputMaybe<Scalars['Int']['input']>;
  requireVerifiedEmailToPost?: InputMaybe<Scalars['Boolean']['input']>;
  requireVerifiedPhoneForUploads?: InputMaybe<Scalars['Boolean']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  rules_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  uniqueName?: InputMaybe<Scalars['String']['input']>;
  uniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  uniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  uniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  uniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  uniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  wikiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelWikiHomePageAggregateInput = {
  AND?: InputMaybe<Array<ChannelWikiHomePageAggregateInput>>;
  NOT?: InputMaybe<ChannelWikiHomePageAggregateInput>;
  OR?: InputMaybe<Array<ChannelWikiHomePageAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelWikiHomePageNodeAggregationWhereInput>;
};

export type ChannelWikiHomePageConnectFieldInput = {
  connect?: InputMaybe<WikiPageConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<WikiPageConnectWhere>;
};

export type ChannelWikiHomePageConnectedRelationship = {
  __typename?: 'ChannelWikiHomePageConnectedRelationship';
  node: WikiPageEventPayload;
};

export type ChannelWikiHomePageConnection = {
  __typename?: 'ChannelWikiHomePageConnection';
  edges: Array<ChannelWikiHomePageRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelWikiHomePageConnectionSort = {
  node?: InputMaybe<WikiPageSort>;
};

export type ChannelWikiHomePageConnectionWhere = {
  AND?: InputMaybe<Array<ChannelWikiHomePageConnectionWhere>>;
  NOT?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
  OR?: InputMaybe<Array<ChannelWikiHomePageConnectionWhere>>;
  node?: InputMaybe<WikiPageWhere>;
};

export type ChannelWikiHomePageCreateFieldInput = {
  node: WikiPageCreateInput;
};

export type ChannelWikiHomePageDeleteFieldInput = {
  delete?: InputMaybe<WikiPageDeleteInput>;
  where?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
};

export type ChannelWikiHomePageDisconnectFieldInput = {
  disconnect?: InputMaybe<WikiPageDisconnectInput>;
  where?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
};

export type ChannelWikiHomePageFieldInput = {
  connect?: InputMaybe<ChannelWikiHomePageConnectFieldInput>;
  create?: InputMaybe<ChannelWikiHomePageCreateFieldInput>;
};

export type ChannelWikiHomePageNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelWikiHomePageNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelWikiHomePageNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelWikiHomePageNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  slug_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  slug_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ChannelWikiHomePageRelationship = {
  __typename?: 'ChannelWikiHomePageRelationship';
  cursor: Scalars['String']['output'];
  node: WikiPage;
};

export type ChannelWikiHomePageRelationshipSubscriptionWhere = {
  node?: InputMaybe<WikiPageSubscriptionWhere>;
};

export type ChannelWikiHomePageUpdateConnectionInput = {
  node?: InputMaybe<WikiPageUpdateInput>;
};

export type ChannelWikiHomePageUpdateFieldInput = {
  connect?: InputMaybe<ChannelWikiHomePageConnectFieldInput>;
  create?: InputMaybe<ChannelWikiHomePageCreateFieldInput>;
  delete?: InputMaybe<ChannelWikiHomePageDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelWikiHomePageDisconnectFieldInput>;
  update?: InputMaybe<ChannelWikiHomePageUpdateConnectionInput>;
  where?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
};

export type ChannelWikiPageWikiHomePageAggregationSelection = {
  __typename?: 'ChannelWikiPageWikiHomePageAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelWikiPageWikiHomePageNodeAggregateSelection>;
};

export type ChannelWikiPageWikiHomePageNodeAggregateSelection = {
  __typename?: 'ChannelWikiPageWikiHomePageNodeAggregateSelection';
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  slug: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type ChannelsConnection = {
  __typename?: 'ChannelsConnection';
  edges: Array<ChannelEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Collectable = Channel | Comment | Discussion | DownloadableFile | Event | Image;

export type CollectableEventPayload = ChannelEventPayload | CommentEventPayload | DiscussionEventPayload | DownloadableFileEventPayload | EventEventPayload | ImageEventPayload;

export type CollectableWhere = {
  Channel?: InputMaybe<ChannelWhere>;
  Comment?: InputMaybe<CommentWhere>;
  Discussion?: InputMaybe<DiscussionWhere>;
  DownloadableFile?: InputMaybe<DownloadableFileWhere>;
  Event?: InputMaybe<EventWhere>;
  Image?: InputMaybe<ImageWhere>;
};

export type Collection = {
  __typename?: 'Collection';
  Items: Array<Collectable>;
  ItemsConnection: CollectionItemsConnection;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  owner: User;
  ownerAggregate?: Maybe<CollectionUserOwnerAggregationSelection>;
  ownerConnection: CollectionOwnerConnection;
  title: Scalars['String']['output'];
};


export type CollectionItemsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<CollectableWhere>;
};


export type CollectionItemsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CollectionItemsConnectionWhere>;
};


export type CollectionOwnerArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type CollectionOwnerAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type CollectionOwnerConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CollectionOwnerConnectionSort>>;
  where?: InputMaybe<CollectionOwnerConnectionWhere>;
};

export type CollectionAggregateSelection = {
  __typename?: 'CollectionAggregateSelection';
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type CollectionConnectInput = {
  Items?: InputMaybe<CollectionItemsConnectInput>;
  owner?: InputMaybe<CollectionOwnerConnectFieldInput>;
};

export type CollectionConnectOrCreateInput = {
  Items?: InputMaybe<CollectionItemsConnectOrCreateInput>;
  owner?: InputMaybe<CollectionOwnerConnectOrCreateFieldInput>;
};

export type CollectionConnectWhere = {
  node: CollectionWhere;
};

export type CollectionConnectedRelationships = {
  __typename?: 'CollectionConnectedRelationships';
  Items?: Maybe<CollectionItemsConnectedRelationship>;
  owner?: Maybe<CollectionOwnerConnectedRelationship>;
};

export type CollectionCreateInput = {
  Items?: InputMaybe<CollectionItemsCreateInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  owner?: InputMaybe<CollectionOwnerFieldInput>;
  title: Scalars['String']['input'];
};

export type CollectionCreatedEvent = {
  __typename?: 'CollectionCreatedEvent';
  createdCollection: CollectionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CollectionDeleteInput = {
  Items?: InputMaybe<CollectionItemsDeleteInput>;
  owner?: InputMaybe<CollectionOwnerDeleteFieldInput>;
};

export type CollectionDeletedEvent = {
  __typename?: 'CollectionDeletedEvent';
  deletedCollection: CollectionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CollectionDisconnectInput = {
  Items?: InputMaybe<CollectionItemsDisconnectInput>;
  owner?: InputMaybe<CollectionOwnerDisconnectFieldInput>;
};

export type CollectionEdge = {
  __typename?: 'CollectionEdge';
  cursor: Scalars['String']['output'];
  node: Collection;
};

export type CollectionEventPayload = {
  __typename?: 'CollectionEventPayload';
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  title: Scalars['String']['output'];
};

export type CollectionItemsChannelConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  where?: InputMaybe<ChannelConnectWhere>;
};

export type CollectionItemsChannelConnectOrCreateFieldInput = {
  onCreate: CollectionItemsChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type CollectionItemsChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type CollectionItemsChannelConnectionWhere = {
  AND?: InputMaybe<Array<CollectionItemsChannelConnectionWhere>>;
  NOT?: InputMaybe<CollectionItemsChannelConnectionWhere>;
  OR?: InputMaybe<Array<CollectionItemsChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type CollectionItemsChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type CollectionItemsChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<CollectionItemsChannelConnectionWhere>;
};

export type CollectionItemsChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<CollectionItemsChannelConnectionWhere>;
};

export type CollectionItemsChannelFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsChannelConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CollectionItemsChannelConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsChannelCreateFieldInput>>;
};

export type CollectionItemsChannelSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type CollectionItemsChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type CollectionItemsChannelUpdateFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsChannelConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CollectionItemsChannelConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsChannelCreateFieldInput>>;
  delete?: InputMaybe<Array<CollectionItemsChannelDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CollectionItemsChannelDisconnectFieldInput>>;
  update?: InputMaybe<CollectionItemsChannelUpdateConnectionInput>;
  where?: InputMaybe<CollectionItemsChannelConnectionWhere>;
};

export type CollectionItemsCommentConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  where?: InputMaybe<CommentConnectWhere>;
};

export type CollectionItemsCommentConnectionWhere = {
  AND?: InputMaybe<Array<CollectionItemsCommentConnectionWhere>>;
  NOT?: InputMaybe<CollectionItemsCommentConnectionWhere>;
  OR?: InputMaybe<Array<CollectionItemsCommentConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type CollectionItemsCommentCreateFieldInput = {
  node: CommentCreateInput;
};

export type CollectionItemsCommentDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CollectionItemsCommentConnectionWhere>;
};

export type CollectionItemsCommentDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<CollectionItemsCommentConnectionWhere>;
};

export type CollectionItemsCommentFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsCommentConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsCommentCreateFieldInput>>;
};

export type CollectionItemsCommentSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type CollectionItemsCommentUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type CollectionItemsCommentUpdateFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsCommentConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsCommentCreateFieldInput>>;
  delete?: InputMaybe<Array<CollectionItemsCommentDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CollectionItemsCommentDisconnectFieldInput>>;
  update?: InputMaybe<CollectionItemsCommentUpdateConnectionInput>;
  where?: InputMaybe<CollectionItemsCommentConnectionWhere>;
};

export type CollectionItemsConnectInput = {
  Channel?: InputMaybe<Array<CollectionItemsChannelConnectFieldInput>>;
  Comment?: InputMaybe<Array<CollectionItemsCommentConnectFieldInput>>;
  Discussion?: InputMaybe<Array<CollectionItemsDiscussionConnectFieldInput>>;
  DownloadableFile?: InputMaybe<Array<CollectionItemsDownloadableFileConnectFieldInput>>;
  Event?: InputMaybe<Array<CollectionItemsEventConnectFieldInput>>;
  Image?: InputMaybe<Array<CollectionItemsImageConnectFieldInput>>;
};

export type CollectionItemsConnectOrCreateInput = {
  Channel?: InputMaybe<Array<CollectionItemsChannelConnectOrCreateFieldInput>>;
};

export type CollectionItemsConnectedRelationship = {
  __typename?: 'CollectionItemsConnectedRelationship';
  node: CollectableEventPayload;
};

export type CollectionItemsConnection = {
  __typename?: 'CollectionItemsConnection';
  edges: Array<CollectionItemsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CollectionItemsConnectionWhere = {
  Channel?: InputMaybe<CollectionItemsChannelConnectionWhere>;
  Comment?: InputMaybe<CollectionItemsCommentConnectionWhere>;
  Discussion?: InputMaybe<CollectionItemsDiscussionConnectionWhere>;
  DownloadableFile?: InputMaybe<CollectionItemsDownloadableFileConnectionWhere>;
  Event?: InputMaybe<CollectionItemsEventConnectionWhere>;
  Image?: InputMaybe<CollectionItemsImageConnectionWhere>;
};

export type CollectionItemsCreateFieldInput = {
  Channel?: InputMaybe<Array<CollectionItemsChannelCreateFieldInput>>;
  Comment?: InputMaybe<Array<CollectionItemsCommentCreateFieldInput>>;
  Discussion?: InputMaybe<Array<CollectionItemsDiscussionCreateFieldInput>>;
  DownloadableFile?: InputMaybe<Array<CollectionItemsDownloadableFileCreateFieldInput>>;
  Event?: InputMaybe<Array<CollectionItemsEventCreateFieldInput>>;
  Image?: InputMaybe<Array<CollectionItemsImageCreateFieldInput>>;
};

export type CollectionItemsCreateInput = {
  Channel?: InputMaybe<CollectionItemsChannelFieldInput>;
  Comment?: InputMaybe<CollectionItemsCommentFieldInput>;
  Discussion?: InputMaybe<CollectionItemsDiscussionFieldInput>;
  DownloadableFile?: InputMaybe<CollectionItemsDownloadableFileFieldInput>;
  Event?: InputMaybe<CollectionItemsEventFieldInput>;
  Image?: InputMaybe<CollectionItemsImageFieldInput>;
};

export type CollectionItemsDeleteInput = {
  Channel?: InputMaybe<Array<CollectionItemsChannelDeleteFieldInput>>;
  Comment?: InputMaybe<Array<CollectionItemsCommentDeleteFieldInput>>;
  Discussion?: InputMaybe<Array<CollectionItemsDiscussionDeleteFieldInput>>;
  DownloadableFile?: InputMaybe<Array<CollectionItemsDownloadableFileDeleteFieldInput>>;
  Event?: InputMaybe<Array<CollectionItemsEventDeleteFieldInput>>;
  Image?: InputMaybe<Array<CollectionItemsImageDeleteFieldInput>>;
};

export type CollectionItemsDisconnectInput = {
  Channel?: InputMaybe<Array<CollectionItemsChannelDisconnectFieldInput>>;
  Comment?: InputMaybe<Array<CollectionItemsCommentDisconnectFieldInput>>;
  Discussion?: InputMaybe<Array<CollectionItemsDiscussionDisconnectFieldInput>>;
  DownloadableFile?: InputMaybe<Array<CollectionItemsDownloadableFileDisconnectFieldInput>>;
  Event?: InputMaybe<Array<CollectionItemsEventDisconnectFieldInput>>;
  Image?: InputMaybe<Array<CollectionItemsImageDisconnectFieldInput>>;
};

export type CollectionItemsDiscussionConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionConnectInput>>;
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type CollectionItemsDiscussionConnectionWhere = {
  AND?: InputMaybe<Array<CollectionItemsDiscussionConnectionWhere>>;
  NOT?: InputMaybe<CollectionItemsDiscussionConnectionWhere>;
  OR?: InputMaybe<Array<CollectionItemsDiscussionConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type CollectionItemsDiscussionCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type CollectionItemsDiscussionDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<CollectionItemsDiscussionConnectionWhere>;
};

export type CollectionItemsDiscussionDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<CollectionItemsDiscussionConnectionWhere>;
};

export type CollectionItemsDiscussionFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsDiscussionConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsDiscussionCreateFieldInput>>;
};

export type CollectionItemsDiscussionSubscriptionWhere = {
  node?: InputMaybe<DiscussionSubscriptionWhere>;
};

export type CollectionItemsDiscussionUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type CollectionItemsDiscussionUpdateFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsDiscussionConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsDiscussionCreateFieldInput>>;
  delete?: InputMaybe<Array<CollectionItemsDiscussionDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CollectionItemsDiscussionDisconnectFieldInput>>;
  update?: InputMaybe<CollectionItemsDiscussionUpdateConnectionInput>;
  where?: InputMaybe<CollectionItemsDiscussionConnectionWhere>;
};

export type CollectionItemsDownloadableFileConnectFieldInput = {
  connect?: InputMaybe<Array<DownloadableFileConnectInput>>;
  where?: InputMaybe<DownloadableFileConnectWhere>;
};

export type CollectionItemsDownloadableFileConnectionWhere = {
  AND?: InputMaybe<Array<CollectionItemsDownloadableFileConnectionWhere>>;
  NOT?: InputMaybe<CollectionItemsDownloadableFileConnectionWhere>;
  OR?: InputMaybe<Array<CollectionItemsDownloadableFileConnectionWhere>>;
  node?: InputMaybe<DownloadableFileWhere>;
};

export type CollectionItemsDownloadableFileCreateFieldInput = {
  node: DownloadableFileCreateInput;
};

export type CollectionItemsDownloadableFileDeleteFieldInput = {
  delete?: InputMaybe<DownloadableFileDeleteInput>;
  where?: InputMaybe<CollectionItemsDownloadableFileConnectionWhere>;
};

export type CollectionItemsDownloadableFileDisconnectFieldInput = {
  disconnect?: InputMaybe<DownloadableFileDisconnectInput>;
  where?: InputMaybe<CollectionItemsDownloadableFileConnectionWhere>;
};

export type CollectionItemsDownloadableFileFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsDownloadableFileConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsDownloadableFileCreateFieldInput>>;
};

export type CollectionItemsDownloadableFileSubscriptionWhere = {
  node?: InputMaybe<DownloadableFileSubscriptionWhere>;
};

export type CollectionItemsDownloadableFileUpdateConnectionInput = {
  node?: InputMaybe<DownloadableFileUpdateInput>;
};

export type CollectionItemsDownloadableFileUpdateFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsDownloadableFileConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsDownloadableFileCreateFieldInput>>;
  delete?: InputMaybe<Array<CollectionItemsDownloadableFileDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CollectionItemsDownloadableFileDisconnectFieldInput>>;
  update?: InputMaybe<CollectionItemsDownloadableFileUpdateConnectionInput>;
  where?: InputMaybe<CollectionItemsDownloadableFileConnectionWhere>;
};

export type CollectionItemsEventConnectFieldInput = {
  connect?: InputMaybe<Array<EventConnectInput>>;
  where?: InputMaybe<EventConnectWhere>;
};

export type CollectionItemsEventConnectionWhere = {
  AND?: InputMaybe<Array<CollectionItemsEventConnectionWhere>>;
  NOT?: InputMaybe<CollectionItemsEventConnectionWhere>;
  OR?: InputMaybe<Array<CollectionItemsEventConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type CollectionItemsEventCreateFieldInput = {
  node: EventCreateInput;
};

export type CollectionItemsEventDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<CollectionItemsEventConnectionWhere>;
};

export type CollectionItemsEventDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<CollectionItemsEventConnectionWhere>;
};

export type CollectionItemsEventFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsEventConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsEventCreateFieldInput>>;
};

export type CollectionItemsEventSubscriptionWhere = {
  node?: InputMaybe<EventSubscriptionWhere>;
};

export type CollectionItemsEventUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type CollectionItemsEventUpdateFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsEventConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsEventCreateFieldInput>>;
  delete?: InputMaybe<Array<CollectionItemsEventDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CollectionItemsEventDisconnectFieldInput>>;
  update?: InputMaybe<CollectionItemsEventUpdateConnectionInput>;
  where?: InputMaybe<CollectionItemsEventConnectionWhere>;
};

export type CollectionItemsImageConnectFieldInput = {
  connect?: InputMaybe<Array<ImageConnectInput>>;
  where?: InputMaybe<ImageConnectWhere>;
};

export type CollectionItemsImageConnectionWhere = {
  AND?: InputMaybe<Array<CollectionItemsImageConnectionWhere>>;
  NOT?: InputMaybe<CollectionItemsImageConnectionWhere>;
  OR?: InputMaybe<Array<CollectionItemsImageConnectionWhere>>;
  node?: InputMaybe<ImageWhere>;
};

export type CollectionItemsImageCreateFieldInput = {
  node: ImageCreateInput;
};

export type CollectionItemsImageDeleteFieldInput = {
  delete?: InputMaybe<ImageDeleteInput>;
  where?: InputMaybe<CollectionItemsImageConnectionWhere>;
};

export type CollectionItemsImageDisconnectFieldInput = {
  disconnect?: InputMaybe<ImageDisconnectInput>;
  where?: InputMaybe<CollectionItemsImageConnectionWhere>;
};

export type CollectionItemsImageFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsImageConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsImageCreateFieldInput>>;
};

export type CollectionItemsImageSubscriptionWhere = {
  node?: InputMaybe<ImageSubscriptionWhere>;
};

export type CollectionItemsImageUpdateConnectionInput = {
  node?: InputMaybe<ImageUpdateInput>;
};

export type CollectionItemsImageUpdateFieldInput = {
  connect?: InputMaybe<Array<CollectionItemsImageConnectFieldInput>>;
  create?: InputMaybe<Array<CollectionItemsImageCreateFieldInput>>;
  delete?: InputMaybe<Array<CollectionItemsImageDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CollectionItemsImageDisconnectFieldInput>>;
  update?: InputMaybe<CollectionItemsImageUpdateConnectionInput>;
  where?: InputMaybe<CollectionItemsImageConnectionWhere>;
};

export type CollectionItemsRelationship = {
  __typename?: 'CollectionItemsRelationship';
  cursor: Scalars['String']['output'];
  node: Collectable;
};

export type CollectionItemsRelationshipSubscriptionWhere = {
  Channel?: InputMaybe<CollectionItemsChannelSubscriptionWhere>;
  Comment?: InputMaybe<CollectionItemsCommentSubscriptionWhere>;
  Discussion?: InputMaybe<CollectionItemsDiscussionSubscriptionWhere>;
  DownloadableFile?: InputMaybe<CollectionItemsDownloadableFileSubscriptionWhere>;
  Event?: InputMaybe<CollectionItemsEventSubscriptionWhere>;
  Image?: InputMaybe<CollectionItemsImageSubscriptionWhere>;
};

export type CollectionItemsUpdateInput = {
  Channel?: InputMaybe<Array<CollectionItemsChannelUpdateFieldInput>>;
  Comment?: InputMaybe<Array<CollectionItemsCommentUpdateFieldInput>>;
  Discussion?: InputMaybe<Array<CollectionItemsDiscussionUpdateFieldInput>>;
  DownloadableFile?: InputMaybe<Array<CollectionItemsDownloadableFileUpdateFieldInput>>;
  Event?: InputMaybe<Array<CollectionItemsEventUpdateFieldInput>>;
  Image?: InputMaybe<Array<CollectionItemsImageUpdateFieldInput>>;
};

export type CollectionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more CollectionSort objects to sort Collections by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CollectionSort>>;
};

export type CollectionOwnerAggregateInput = {
  AND?: InputMaybe<Array<CollectionOwnerAggregateInput>>;
  NOT?: InputMaybe<CollectionOwnerAggregateInput>;
  OR?: InputMaybe<Array<CollectionOwnerAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CollectionOwnerNodeAggregationWhereInput>;
};

export type CollectionOwnerConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type CollectionOwnerConnectOrCreateFieldInput = {
  onCreate: CollectionOwnerConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type CollectionOwnerConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type CollectionOwnerConnectedRelationship = {
  __typename?: 'CollectionOwnerConnectedRelationship';
  node: UserEventPayload;
};

export type CollectionOwnerConnection = {
  __typename?: 'CollectionOwnerConnection';
  edges: Array<CollectionOwnerRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CollectionOwnerConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type CollectionOwnerConnectionWhere = {
  AND?: InputMaybe<Array<CollectionOwnerConnectionWhere>>;
  NOT?: InputMaybe<CollectionOwnerConnectionWhere>;
  OR?: InputMaybe<Array<CollectionOwnerConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type CollectionOwnerCreateFieldInput = {
  node: UserCreateInput;
};

export type CollectionOwnerDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<CollectionOwnerConnectionWhere>;
};

export type CollectionOwnerDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<CollectionOwnerConnectionWhere>;
};

export type CollectionOwnerFieldInput = {
  connect?: InputMaybe<CollectionOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<CollectionOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<CollectionOwnerCreateFieldInput>;
};

export type CollectionOwnerNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CollectionOwnerNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CollectionOwnerNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CollectionOwnerNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CollectionOwnerRelationship = {
  __typename?: 'CollectionOwnerRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type CollectionOwnerRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type CollectionOwnerUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type CollectionOwnerUpdateFieldInput = {
  connect?: InputMaybe<CollectionOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<CollectionOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<CollectionOwnerCreateFieldInput>;
  delete?: InputMaybe<CollectionOwnerDeleteFieldInput>;
  disconnect?: InputMaybe<CollectionOwnerDisconnectFieldInput>;
  update?: InputMaybe<CollectionOwnerUpdateConnectionInput>;
  where?: InputMaybe<CollectionOwnerConnectionWhere>;
};

export type CollectionRelationInput = {
  Items?: InputMaybe<CollectionItemsCreateFieldInput>;
  owner?: InputMaybe<CollectionOwnerCreateFieldInput>;
};

export type CollectionRelationshipCreatedEvent = {
  __typename?: 'CollectionRelationshipCreatedEvent';
  collection: CollectionEventPayload;
  createdRelationship: CollectionConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type CollectionRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<CollectionRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<CollectionRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<CollectionRelationshipCreatedSubscriptionWhere>>;
  collection?: InputMaybe<CollectionSubscriptionWhere>;
  createdRelationship?: InputMaybe<CollectionRelationshipsSubscriptionWhere>;
};

export type CollectionRelationshipDeletedEvent = {
  __typename?: 'CollectionRelationshipDeletedEvent';
  collection: CollectionEventPayload;
  deletedRelationship: CollectionConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type CollectionRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<CollectionRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<CollectionRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<CollectionRelationshipDeletedSubscriptionWhere>>;
  collection?: InputMaybe<CollectionSubscriptionWhere>;
  deletedRelationship?: InputMaybe<CollectionRelationshipsSubscriptionWhere>;
};

export type CollectionRelationshipsSubscriptionWhere = {
  Items?: InputMaybe<CollectionItemsRelationshipSubscriptionWhere>;
  owner?: InputMaybe<CollectionOwnerRelationshipSubscriptionWhere>;
};

/** Fields to sort Collections by. The order in which sorts are applied is not guaranteed when specifying many fields in one CollectionSort object. */
export type CollectionSort = {
  description?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
};

export type CollectionSubscriptionWhere = {
  AND?: InputMaybe<Array<CollectionSubscriptionWhere>>;
  NOT?: InputMaybe<CollectionSubscriptionWhere>;
  OR?: InputMaybe<Array<CollectionSubscriptionWhere>>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type CollectionUpdateInput = {
  Items?: InputMaybe<CollectionItemsUpdateInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  owner?: InputMaybe<CollectionOwnerUpdateFieldInput>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type CollectionUpdatedEvent = {
  __typename?: 'CollectionUpdatedEvent';
  event: EventType;
  previousState: CollectionEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedCollection: CollectionEventPayload;
};

export type CollectionUserOwnerAggregationSelection = {
  __typename?: 'CollectionUserOwnerAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CollectionUserOwnerNodeAggregateSelection>;
};

export type CollectionUserOwnerNodeAggregateSelection = {
  __typename?: 'CollectionUserOwnerNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type CollectionWhere = {
  AND?: InputMaybe<Array<CollectionWhere>>;
  /** Return Collections where all of the related CollectionItemsConnections match this filter */
  ItemsConnection_ALL?: InputMaybe<CollectionItemsConnectionWhere>;
  /** Return Collections where none of the related CollectionItemsConnections match this filter */
  ItemsConnection_NONE?: InputMaybe<CollectionItemsConnectionWhere>;
  /** Return Collections where one of the related CollectionItemsConnections match this filter */
  ItemsConnection_SINGLE?: InputMaybe<CollectionItemsConnectionWhere>;
  /** Return Collections where some of the related CollectionItemsConnections match this filter */
  ItemsConnection_SOME?: InputMaybe<CollectionItemsConnectionWhere>;
  /** Return Collections where all of the related Collectables match this filter */
  Items_ALL?: InputMaybe<CollectableWhere>;
  /** Return Collections where none of the related Collectables match this filter */
  Items_NONE?: InputMaybe<CollectableWhere>;
  /** Return Collections where one of the related Collectables match this filter */
  Items_SINGLE?: InputMaybe<CollectableWhere>;
  /** Return Collections where some of the related Collectables match this filter */
  Items_SOME?: InputMaybe<CollectableWhere>;
  NOT?: InputMaybe<CollectionWhere>;
  OR?: InputMaybe<Array<CollectionWhere>>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  owner?: InputMaybe<UserWhere>;
  ownerAggregate?: InputMaybe<CollectionOwnerAggregateInput>;
  ownerConnection?: InputMaybe<CollectionOwnerConnectionWhere>;
  ownerConnection_NOT?: InputMaybe<CollectionOwnerConnectionWhere>;
  owner_NOT?: InputMaybe<UserWhere>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type CollectionsConnection = {
  __typename?: 'CollectionsConnection';
  edges: Array<CollectionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Comment = {
  __typename?: 'Comment';
  Channel?: Maybe<Channel>;
  ChannelAggregate?: Maybe<CommentChannelChannelAggregationSelection>;
  ChannelConnection: CommentChannelConnection;
  ChildComments: Array<Comment>;
  ChildCommentsAggregate?: Maybe<CommentCommentChildCommentsAggregationSelection>;
  ChildCommentsConnection: CommentChildCommentsConnection;
  CommentAuthor?: Maybe<CommentAuthor>;
  CommentAuthorConnection: CommentCommentAuthorConnection;
  DiscussionChannel?: Maybe<DiscussionChannel>;
  DiscussionChannelAggregate?: Maybe<CommentDiscussionChannelDiscussionChannelAggregationSelection>;
  DiscussionChannelConnection: CommentDiscussionChannelConnection;
  Event?: Maybe<Event>;
  EventAggregate?: Maybe<CommentEventEventAggregationSelection>;
  EventConnection: CommentEventConnection;
  FeedbackComments: Array<Comment>;
  FeedbackCommentsAggregate?: Maybe<CommentCommentFeedbackCommentsAggregationSelection>;
  FeedbackCommentsConnection: CommentFeedbackCommentsConnection;
  GivesFeedbackOnComment?: Maybe<Comment>;
  GivesFeedbackOnCommentAggregate?: Maybe<CommentCommentGivesFeedbackOnCommentAggregationSelection>;
  GivesFeedbackOnCommentConnection: CommentGivesFeedbackOnCommentConnection;
  GivesFeedbackOnDiscussion?: Maybe<Discussion>;
  GivesFeedbackOnDiscussionAggregate?: Maybe<CommentDiscussionGivesFeedbackOnDiscussionAggregationSelection>;
  GivesFeedbackOnDiscussionConnection: CommentGivesFeedbackOnDiscussionConnection;
  GivesFeedbackOnEvent?: Maybe<Event>;
  GivesFeedbackOnEventAggregate?: Maybe<CommentEventGivesFeedbackOnEventAggregationSelection>;
  GivesFeedbackOnEventConnection: CommentGivesFeedbackOnEventConnection;
  Issue?: Maybe<Issue>;
  IssueAggregate?: Maybe<CommentIssueIssueAggregationSelection>;
  IssueConnection: CommentIssueConnection;
  ModerationAction?: Maybe<ModerationAction>;
  ModerationActionAggregate?: Maybe<CommentModerationActionModerationActionAggregationSelection>;
  ModerationActionConnection: CommentModerationActionConnection;
  ParentComment?: Maybe<Comment>;
  ParentCommentAggregate?: Maybe<CommentCommentParentCommentAggregationSelection>;
  ParentCommentConnection: CommentParentCommentConnection;
  PastVersions: Array<TextVersion>;
  PastVersionsAggregate?: Maybe<CommentTextVersionPastVersionsAggregationSelection>;
  PastVersionsConnection: CommentPastVersionsConnection;
  RelatedIssues: Array<Issue>;
  RelatedIssuesAggregate?: Maybe<CommentIssueRelatedIssuesAggregationSelection>;
  RelatedIssuesConnection: CommentRelatedIssuesConnection;
  SubscribedToNotifications: Array<User>;
  SubscribedToNotificationsAggregate?: Maybe<CommentUserSubscribedToNotificationsAggregationSelection>;
  SubscribedToNotificationsConnection: CommentSubscribedToNotificationsConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<CommentTagTagsAggregationSelection>;
  TagsConnection: CommentTagsConnection;
  UpvotedByUsers: Array<User>;
  UpvotedByUsersAggregate?: Maybe<CommentUserUpvotedByUsersAggregationSelection>;
  UpvotedByUsersConnection: CommentUpvotedByUsersConnection;
  archived?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  emoji?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  isFeedbackComment?: Maybe<Scalars['Boolean']['output']>;
  isRootComment: Scalars['Boolean']['output'];
  text?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  weightedVotesCount?: Maybe<Scalars['Float']['output']>;
};


export type CommentChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type CommentChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type CommentChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentChannelConnectionSort>>;
  where?: InputMaybe<CommentChannelConnectionWhere>;
};


export type CommentChildCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentChildCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentChildCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentChildCommentsConnectionSort>>;
  where?: InputMaybe<CommentChildCommentsConnectionWhere>;
};


export type CommentCommentAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<CommentAuthorWhere>;
};


export type CommentCommentAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CommentCommentAuthorConnectionWhere>;
};


export type CommentDiscussionChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type CommentDiscussionChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type CommentDiscussionChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentDiscussionChannelConnectionSort>>;
  where?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
};


export type CommentEventArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type CommentEventAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type CommentEventConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentEventConnectionSort>>;
  where?: InputMaybe<CommentEventConnectionWhere>;
};


export type CommentFeedbackCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentFeedbackCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentFeedbackCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentFeedbackCommentsConnectionSort>>;
  where?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
};


export type CommentGivesFeedbackOnCommentArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentGivesFeedbackOnCommentAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentGivesFeedbackOnCommentConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentGivesFeedbackOnCommentConnectionSort>>;
  where?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
};


export type CommentGivesFeedbackOnDiscussionArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type CommentGivesFeedbackOnDiscussionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type CommentGivesFeedbackOnDiscussionConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionConnectionSort>>;
  where?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
};


export type CommentGivesFeedbackOnEventArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type CommentGivesFeedbackOnEventAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type CommentGivesFeedbackOnEventConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentGivesFeedbackOnEventConnectionSort>>;
  where?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
};


export type CommentIssueArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type CommentIssueAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type CommentIssueConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentIssueConnectionSort>>;
  where?: InputMaybe<CommentIssueConnectionWhere>;
};


export type CommentModerationActionArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationActionOptions>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type CommentModerationActionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type CommentModerationActionConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentModerationActionConnectionSort>>;
  where?: InputMaybe<CommentModerationActionConnectionWhere>;
};


export type CommentParentCommentArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentParentCommentAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentParentCommentConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentParentCommentConnectionSort>>;
  where?: InputMaybe<CommentParentCommentConnectionWhere>;
};


export type CommentPastVersionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type CommentPastVersionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TextVersionWhere>;
};


export type CommentPastVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentPastVersionsConnectionSort>>;
  where?: InputMaybe<CommentPastVersionsConnectionWhere>;
};


export type CommentRelatedIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type CommentRelatedIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type CommentRelatedIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentRelatedIssuesConnectionSort>>;
  where?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
};


export type CommentSubscribedToNotificationsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type CommentSubscribedToNotificationsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type CommentSubscribedToNotificationsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentSubscribedToNotificationsConnectionSort>>;
  where?: InputMaybe<CommentSubscribedToNotificationsConnectionWhere>;
};


export type CommentTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type CommentTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type CommentTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentTagsConnectionSort>>;
  where?: InputMaybe<CommentTagsConnectionWhere>;
};


export type CommentUpvotedByUsersArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type CommentUpvotedByUsersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type CommentUpvotedByUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentUpvotedByUsersConnectionSort>>;
  where?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
};

export type CommentAggregateSelection = {
  __typename?: 'CommentAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentAuthor = ModerationProfile | User;

export type CommentAuthorEventPayload = ModerationProfileEventPayload | UserEventPayload;

export type CommentAuthorWhere = {
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  User?: InputMaybe<UserWhere>;
};

export type CommentChannelAggregateInput = {
  AND?: InputMaybe<Array<CommentChannelAggregateInput>>;
  NOT?: InputMaybe<CommentChannelAggregateInput>;
  OR?: InputMaybe<Array<CommentChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentChannelNodeAggregationWhereInput>;
};

export type CommentChannelChannelAggregationSelection = {
  __typename?: 'CommentChannelChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentChannelChannelNodeAggregateSelection>;
};

export type CommentChannelChannelNodeAggregateSelection = {
  __typename?: 'CommentChannelChannelNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type CommentChannelConnectFieldInput = {
  connect?: InputMaybe<ChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type CommentChannelConnectOrCreateFieldInput = {
  onCreate: CommentChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type CommentChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type CommentChannelConnectedRelationship = {
  __typename?: 'CommentChannelConnectedRelationship';
  node: ChannelEventPayload;
};

export type CommentChannelConnection = {
  __typename?: 'CommentChannelConnection';
  edges: Array<CommentChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentChannelConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type CommentChannelConnectionWhere = {
  AND?: InputMaybe<Array<CommentChannelConnectionWhere>>;
  NOT?: InputMaybe<CommentChannelConnectionWhere>;
  OR?: InputMaybe<Array<CommentChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type CommentChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type CommentChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<CommentChannelConnectionWhere>;
};

export type CommentChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<CommentChannelConnectionWhere>;
};

export type CommentChannelFieldInput = {
  connect?: InputMaybe<CommentChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentChannelCreateFieldInput>;
};

export type CommentChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentChannelNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentChannelRelationship = {
  __typename?: 'CommentChannelRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type CommentChannelRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type CommentChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type CommentChannelUpdateFieldInput = {
  connect?: InputMaybe<CommentChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentChannelCreateFieldInput>;
  delete?: InputMaybe<CommentChannelDeleteFieldInput>;
  disconnect?: InputMaybe<CommentChannelDisconnectFieldInput>;
  update?: InputMaybe<CommentChannelUpdateConnectionInput>;
  where?: InputMaybe<CommentChannelConnectionWhere>;
};

export type CommentChildCommentsAggregateInput = {
  AND?: InputMaybe<Array<CommentChildCommentsAggregateInput>>;
  NOT?: InputMaybe<CommentChildCommentsAggregateInput>;
  OR?: InputMaybe<Array<CommentChildCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentChildCommentsNodeAggregationWhereInput>;
};

export type CommentChildCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type CommentChildCommentsConnectedRelationship = {
  __typename?: 'CommentChildCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type CommentChildCommentsConnection = {
  __typename?: 'CommentChildCommentsConnection';
  edges: Array<CommentChildCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentChildCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type CommentChildCommentsConnectionWhere = {
  AND?: InputMaybe<Array<CommentChildCommentsConnectionWhere>>;
  NOT?: InputMaybe<CommentChildCommentsConnectionWhere>;
  OR?: InputMaybe<Array<CommentChildCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type CommentChildCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type CommentChildCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentChildCommentsConnectionWhere>;
};

export type CommentChildCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<CommentChildCommentsConnectionWhere>;
};

export type CommentChildCommentsFieldInput = {
  connect?: InputMaybe<Array<CommentChildCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentChildCommentsCreateFieldInput>>;
};

export type CommentChildCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentChildCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentChildCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentChildCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentChildCommentsRelationship = {
  __typename?: 'CommentChildCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentChildCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type CommentChildCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type CommentChildCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentChildCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentChildCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentChildCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentChildCommentsDisconnectFieldInput>>;
  update?: InputMaybe<CommentChildCommentsUpdateConnectionInput>;
  where?: InputMaybe<CommentChildCommentsConnectionWhere>;
};

export type CommentCommentAuthorConnectInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileConnectFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserConnectFieldInput>;
};

export type CommentCommentAuthorConnectOrCreateInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileConnectOrCreateFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserConnectOrCreateFieldInput>;
};

export type CommentCommentAuthorConnectedRelationship = {
  __typename?: 'CommentCommentAuthorConnectedRelationship';
  node: CommentAuthorEventPayload;
};

export type CommentCommentAuthorConnection = {
  __typename?: 'CommentCommentAuthorConnection';
  edges: Array<CommentCommentAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentCommentAuthorConnectionWhere = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
  User?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
};

export type CommentCommentAuthorCreateFieldInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileCreateFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserCreateFieldInput>;
};

export type CommentCommentAuthorCreateInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserFieldInput>;
};

export type CommentCommentAuthorDeleteInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileDeleteFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserDeleteFieldInput>;
};

export type CommentCommentAuthorDisconnectInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileDisconnectFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserDisconnectFieldInput>;
};

export type CommentCommentAuthorModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type CommentCommentAuthorModerationProfileConnectOrCreateFieldInput = {
  onCreate: CommentCommentAuthorModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type CommentCommentAuthorModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type CommentCommentAuthorModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<CommentCommentAuthorModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<CommentCommentAuthorModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type CommentCommentAuthorModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type CommentCommentAuthorModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
};

export type CommentCommentAuthorModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
};

export type CommentCommentAuthorModerationProfileFieldInput = {
  connect?: InputMaybe<CommentCommentAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentCommentAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentCommentAuthorModerationProfileCreateFieldInput>;
};

export type CommentCommentAuthorModerationProfileSubscriptionWhere = {
  node?: InputMaybe<ModerationProfileSubscriptionWhere>;
};

export type CommentCommentAuthorModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type CommentCommentAuthorModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<CommentCommentAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentCommentAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentCommentAuthorModerationProfileCreateFieldInput>;
  delete?: InputMaybe<CommentCommentAuthorModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<CommentCommentAuthorModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<CommentCommentAuthorModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
};

export type CommentCommentAuthorRelationship = {
  __typename?: 'CommentCommentAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: CommentAuthor;
};

export type CommentCommentAuthorRelationshipSubscriptionWhere = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileSubscriptionWhere>;
  User?: InputMaybe<CommentCommentAuthorUserSubscriptionWhere>;
};

export type CommentCommentAuthorUpdateInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileUpdateFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserUpdateFieldInput>;
};

export type CommentCommentAuthorUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type CommentCommentAuthorUserConnectOrCreateFieldInput = {
  onCreate: CommentCommentAuthorUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type CommentCommentAuthorUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type CommentCommentAuthorUserConnectionWhere = {
  AND?: InputMaybe<Array<CommentCommentAuthorUserConnectionWhere>>;
  NOT?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
  OR?: InputMaybe<Array<CommentCommentAuthorUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type CommentCommentAuthorUserCreateFieldInput = {
  node: UserCreateInput;
};

export type CommentCommentAuthorUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
};

export type CommentCommentAuthorUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
};

export type CommentCommentAuthorUserFieldInput = {
  connect?: InputMaybe<CommentCommentAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentCommentAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentCommentAuthorUserCreateFieldInput>;
};

export type CommentCommentAuthorUserSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type CommentCommentAuthorUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type CommentCommentAuthorUserUpdateFieldInput = {
  connect?: InputMaybe<CommentCommentAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentCommentAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentCommentAuthorUserCreateFieldInput>;
  delete?: InputMaybe<CommentCommentAuthorUserDeleteFieldInput>;
  disconnect?: InputMaybe<CommentCommentAuthorUserDisconnectFieldInput>;
  update?: InputMaybe<CommentCommentAuthorUserUpdateConnectionInput>;
  where?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
};

export type CommentCommentChildCommentsAggregationSelection = {
  __typename?: 'CommentCommentChildCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentCommentChildCommentsNodeAggregateSelection>;
};

export type CommentCommentChildCommentsNodeAggregateSelection = {
  __typename?: 'CommentCommentChildCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentCommentFeedbackCommentsAggregationSelection = {
  __typename?: 'CommentCommentFeedbackCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentCommentFeedbackCommentsNodeAggregateSelection>;
};

export type CommentCommentFeedbackCommentsNodeAggregateSelection = {
  __typename?: 'CommentCommentFeedbackCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentCommentGivesFeedbackOnCommentAggregationSelection = {
  __typename?: 'CommentCommentGivesFeedbackOnCommentAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentCommentGivesFeedbackOnCommentNodeAggregateSelection>;
};

export type CommentCommentGivesFeedbackOnCommentNodeAggregateSelection = {
  __typename?: 'CommentCommentGivesFeedbackOnCommentNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentCommentParentCommentAggregationSelection = {
  __typename?: 'CommentCommentParentCommentAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentCommentParentCommentNodeAggregateSelection>;
};

export type CommentCommentParentCommentNodeAggregateSelection = {
  __typename?: 'CommentCommentParentCommentNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentConnectInput = {
  Channel?: InputMaybe<CommentChannelConnectFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsConnectFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorConnectInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelConnectFieldInput>;
  Event?: InputMaybe<CommentEventConnectFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsConnectFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentConnectFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventConnectFieldInput>;
  Issue?: InputMaybe<CommentIssueConnectFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionConnectFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentConnectFieldInput>;
  PastVersions?: InputMaybe<Array<CommentPastVersionsConnectFieldInput>>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesConnectFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<CommentSubscribedToNotificationsConnectFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsConnectFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersConnectFieldInput>>;
};

export type CommentConnectOrCreateInput = {
  Channel?: InputMaybe<CommentChannelConnectOrCreateFieldInput>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorConnectOrCreateInput>;
  SubscribedToNotifications?: InputMaybe<Array<CommentSubscribedToNotificationsConnectOrCreateFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsConnectOrCreateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersConnectOrCreateFieldInput>>;
};

export type CommentConnectWhere = {
  node: CommentWhere;
};

export type CommentConnectedRelationships = {
  __typename?: 'CommentConnectedRelationships';
  Channel?: Maybe<CommentChannelConnectedRelationship>;
  ChildComments?: Maybe<CommentChildCommentsConnectedRelationship>;
  CommentAuthor?: Maybe<CommentCommentAuthorConnectedRelationship>;
  DiscussionChannel?: Maybe<CommentDiscussionChannelConnectedRelationship>;
  Event?: Maybe<CommentEventConnectedRelationship>;
  FeedbackComments?: Maybe<CommentFeedbackCommentsConnectedRelationship>;
  GivesFeedbackOnComment?: Maybe<CommentGivesFeedbackOnCommentConnectedRelationship>;
  GivesFeedbackOnDiscussion?: Maybe<CommentGivesFeedbackOnDiscussionConnectedRelationship>;
  GivesFeedbackOnEvent?: Maybe<CommentGivesFeedbackOnEventConnectedRelationship>;
  Issue?: Maybe<CommentIssueConnectedRelationship>;
  ModerationAction?: Maybe<CommentModerationActionConnectedRelationship>;
  ParentComment?: Maybe<CommentParentCommentConnectedRelationship>;
  PastVersions?: Maybe<CommentPastVersionsConnectedRelationship>;
  RelatedIssues?: Maybe<CommentRelatedIssuesConnectedRelationship>;
  SubscribedToNotifications?: Maybe<CommentSubscribedToNotificationsConnectedRelationship>;
  Tags?: Maybe<CommentTagsConnectedRelationship>;
  UpvotedByUsers?: Maybe<CommentUpvotedByUsersConnectedRelationship>;
};

export type CommentCreateInput = {
  Channel?: InputMaybe<CommentChannelFieldInput>;
  ChildComments?: InputMaybe<CommentChildCommentsFieldInput>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorCreateInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelFieldInput>;
  Event?: InputMaybe<CommentEventFieldInput>;
  FeedbackComments?: InputMaybe<CommentFeedbackCommentsFieldInput>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventFieldInput>;
  Issue?: InputMaybe<CommentIssueFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentFieldInput>;
  PastVersions?: InputMaybe<CommentPastVersionsFieldInput>;
  RelatedIssues?: InputMaybe<CommentRelatedIssuesFieldInput>;
  SubscribedToNotifications?: InputMaybe<CommentSubscribedToNotificationsFieldInput>;
  Tags?: InputMaybe<CommentTagsFieldInput>;
  UpvotedByUsers?: InputMaybe<CommentUpvotedByUsersFieldInput>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  isFeedbackComment?: InputMaybe<Scalars['Boolean']['input']>;
  isRootComment: Scalars['Boolean']['input'];
  text?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentCreatedEvent = {
  __typename?: 'CommentCreatedEvent';
  createdComment: CommentEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CommentDeleteInput = {
  Channel?: InputMaybe<CommentChannelDeleteFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsDeleteFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorDeleteInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelDeleteFieldInput>;
  Event?: InputMaybe<CommentEventDeleteFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsDeleteFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentDeleteFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionDeleteFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventDeleteFieldInput>;
  Issue?: InputMaybe<CommentIssueDeleteFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionDeleteFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentDeleteFieldInput>;
  PastVersions?: InputMaybe<Array<CommentPastVersionsDeleteFieldInput>>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesDeleteFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<CommentSubscribedToNotificationsDeleteFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsDeleteFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersDeleteFieldInput>>;
};

export type CommentDeletedEvent = {
  __typename?: 'CommentDeletedEvent';
  deletedComment: CommentEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CommentDisconnectInput = {
  Channel?: InputMaybe<CommentChannelDisconnectFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsDisconnectFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorDisconnectInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelDisconnectFieldInput>;
  Event?: InputMaybe<CommentEventDisconnectFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsDisconnectFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentDisconnectFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionDisconnectFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventDisconnectFieldInput>;
  Issue?: InputMaybe<CommentIssueDisconnectFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionDisconnectFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentDisconnectFieldInput>;
  PastVersions?: InputMaybe<Array<CommentPastVersionsDisconnectFieldInput>>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesDisconnectFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<CommentSubscribedToNotificationsDisconnectFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsDisconnectFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersDisconnectFieldInput>>;
};

export type CommentDiscussionChannelAggregateInput = {
  AND?: InputMaybe<Array<CommentDiscussionChannelAggregateInput>>;
  NOT?: InputMaybe<CommentDiscussionChannelAggregateInput>;
  OR?: InputMaybe<Array<CommentDiscussionChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentDiscussionChannelNodeAggregationWhereInput>;
};

export type CommentDiscussionChannelConnectFieldInput = {
  connect?: InputMaybe<DiscussionChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionChannelConnectWhere>;
};

export type CommentDiscussionChannelConnectedRelationship = {
  __typename?: 'CommentDiscussionChannelConnectedRelationship';
  node: DiscussionChannelEventPayload;
};

export type CommentDiscussionChannelConnection = {
  __typename?: 'CommentDiscussionChannelConnection';
  edges: Array<CommentDiscussionChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentDiscussionChannelConnectionSort = {
  node?: InputMaybe<DiscussionChannelSort>;
};

export type CommentDiscussionChannelConnectionWhere = {
  AND?: InputMaybe<Array<CommentDiscussionChannelConnectionWhere>>;
  NOT?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
  OR?: InputMaybe<Array<CommentDiscussionChannelConnectionWhere>>;
  node?: InputMaybe<DiscussionChannelWhere>;
};

export type CommentDiscussionChannelCreateFieldInput = {
  node: DiscussionChannelCreateInput;
};

export type CommentDiscussionChannelDeleteFieldInput = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
};

export type CommentDiscussionChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionChannelDisconnectInput>;
  where?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
};

export type CommentDiscussionChannelDiscussionChannelAggregationSelection = {
  __typename?: 'CommentDiscussionChannelDiscussionChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentDiscussionChannelDiscussionChannelNodeAggregateSelection>;
};

export type CommentDiscussionChannelDiscussionChannelNodeAggregateSelection = {
  __typename?: 'CommentDiscussionChannelDiscussionChannelNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentDiscussionChannelFieldInput = {
  connect?: InputMaybe<CommentDiscussionChannelConnectFieldInput>;
  create?: InputMaybe<CommentDiscussionChannelCreateFieldInput>;
};

export type CommentDiscussionChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentDiscussionChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentDiscussionChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentDiscussionChannelNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentDiscussionChannelRelationship = {
  __typename?: 'CommentDiscussionChannelRelationship';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type CommentDiscussionChannelRelationshipSubscriptionWhere = {
  node?: InputMaybe<DiscussionChannelSubscriptionWhere>;
};

export type CommentDiscussionChannelUpdateConnectionInput = {
  node?: InputMaybe<DiscussionChannelUpdateInput>;
};

export type CommentDiscussionChannelUpdateFieldInput = {
  connect?: InputMaybe<CommentDiscussionChannelConnectFieldInput>;
  create?: InputMaybe<CommentDiscussionChannelCreateFieldInput>;
  delete?: InputMaybe<CommentDiscussionChannelDeleteFieldInput>;
  disconnect?: InputMaybe<CommentDiscussionChannelDisconnectFieldInput>;
  update?: InputMaybe<CommentDiscussionChannelUpdateConnectionInput>;
  where?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
};

export type CommentDiscussionGivesFeedbackOnDiscussionAggregationSelection = {
  __typename?: 'CommentDiscussionGivesFeedbackOnDiscussionAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentDiscussionGivesFeedbackOnDiscussionNodeAggregateSelection>;
};

export type CommentDiscussionGivesFeedbackOnDiscussionNodeAggregateSelection = {
  __typename?: 'CommentDiscussionGivesFeedbackOnDiscussionNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type CommentEdge = {
  __typename?: 'CommentEdge';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentEventAggregateInput = {
  AND?: InputMaybe<Array<CommentEventAggregateInput>>;
  NOT?: InputMaybe<CommentEventAggregateInput>;
  OR?: InputMaybe<Array<CommentEventAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentEventNodeAggregationWhereInput>;
};

export type CommentEventConnectFieldInput = {
  connect?: InputMaybe<EventConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type CommentEventConnectedRelationship = {
  __typename?: 'CommentEventConnectedRelationship';
  node: EventEventPayload;
};

export type CommentEventConnection = {
  __typename?: 'CommentEventConnection';
  edges: Array<CommentEventRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentEventConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type CommentEventConnectionWhere = {
  AND?: InputMaybe<Array<CommentEventConnectionWhere>>;
  NOT?: InputMaybe<CommentEventConnectionWhere>;
  OR?: InputMaybe<Array<CommentEventConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type CommentEventCreateFieldInput = {
  node: EventCreateInput;
};

export type CommentEventDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<CommentEventConnectionWhere>;
};

export type CommentEventDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<CommentEventConnectionWhere>;
};

export type CommentEventEventAggregationSelection = {
  __typename?: 'CommentEventEventAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentEventEventNodeAggregateSelection>;
};

export type CommentEventEventNodeAggregateSelection = {
  __typename?: 'CommentEventEventNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type CommentEventFieldInput = {
  connect?: InputMaybe<CommentEventConnectFieldInput>;
  create?: InputMaybe<CommentEventCreateFieldInput>;
};

export type CommentEventGivesFeedbackOnEventAggregationSelection = {
  __typename?: 'CommentEventGivesFeedbackOnEventAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentEventGivesFeedbackOnEventNodeAggregateSelection>;
};

export type CommentEventGivesFeedbackOnEventNodeAggregateSelection = {
  __typename?: 'CommentEventGivesFeedbackOnEventNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type CommentEventNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentEventNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentEventNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentEventNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentEventPayload = {
  __typename?: 'CommentEventPayload';
  archived?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  emoji?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  isFeedbackComment?: Maybe<Scalars['Boolean']['output']>;
  isRootComment: Scalars['Boolean']['output'];
  text?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  weightedVotesCount?: Maybe<Scalars['Float']['output']>;
};

export type CommentEventRelationship = {
  __typename?: 'CommentEventRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type CommentEventRelationshipSubscriptionWhere = {
  node?: InputMaybe<EventSubscriptionWhere>;
};

export type CommentEventUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type CommentEventUpdateFieldInput = {
  connect?: InputMaybe<CommentEventConnectFieldInput>;
  create?: InputMaybe<CommentEventCreateFieldInput>;
  delete?: InputMaybe<CommentEventDeleteFieldInput>;
  disconnect?: InputMaybe<CommentEventDisconnectFieldInput>;
  update?: InputMaybe<CommentEventUpdateConnectionInput>;
  where?: InputMaybe<CommentEventConnectionWhere>;
};

export type CommentFeedbackCommentsAggregateInput = {
  AND?: InputMaybe<Array<CommentFeedbackCommentsAggregateInput>>;
  NOT?: InputMaybe<CommentFeedbackCommentsAggregateInput>;
  OR?: InputMaybe<Array<CommentFeedbackCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentFeedbackCommentsNodeAggregationWhereInput>;
};

export type CommentFeedbackCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type CommentFeedbackCommentsConnectedRelationship = {
  __typename?: 'CommentFeedbackCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type CommentFeedbackCommentsConnection = {
  __typename?: 'CommentFeedbackCommentsConnection';
  edges: Array<CommentFeedbackCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentFeedbackCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type CommentFeedbackCommentsConnectionWhere = {
  AND?: InputMaybe<Array<CommentFeedbackCommentsConnectionWhere>>;
  NOT?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  OR?: InputMaybe<Array<CommentFeedbackCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type CommentFeedbackCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type CommentFeedbackCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
};

export type CommentFeedbackCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
};

export type CommentFeedbackCommentsFieldInput = {
  connect?: InputMaybe<Array<CommentFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentFeedbackCommentsCreateFieldInput>>;
};

export type CommentFeedbackCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentFeedbackCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentFeedbackCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentFeedbackCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentFeedbackCommentsRelationship = {
  __typename?: 'CommentFeedbackCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentFeedbackCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type CommentFeedbackCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type CommentFeedbackCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentFeedbackCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentFeedbackCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentFeedbackCommentsDisconnectFieldInput>>;
  update?: InputMaybe<CommentFeedbackCommentsUpdateConnectionInput>;
  where?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
};

export type CommentGivesFeedbackOnCommentAggregateInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnCommentAggregateInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnCommentAggregateInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnCommentAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentGivesFeedbackOnCommentNodeAggregationWhereInput>;
};

export type CommentGivesFeedbackOnCommentConnectFieldInput = {
  connect?: InputMaybe<CommentConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type CommentGivesFeedbackOnCommentConnectedRelationship = {
  __typename?: 'CommentGivesFeedbackOnCommentConnectedRelationship';
  node: CommentEventPayload;
};

export type CommentGivesFeedbackOnCommentConnection = {
  __typename?: 'CommentGivesFeedbackOnCommentConnection';
  edges: Array<CommentGivesFeedbackOnCommentRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentGivesFeedbackOnCommentConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type CommentGivesFeedbackOnCommentConnectionWhere = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnCommentConnectionWhere>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnCommentConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type CommentGivesFeedbackOnCommentCreateFieldInput = {
  node: CommentCreateInput;
};

export type CommentGivesFeedbackOnCommentDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
};

export type CommentGivesFeedbackOnCommentDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
};

export type CommentGivesFeedbackOnCommentFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnCommentConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnCommentCreateFieldInput>;
};

export type CommentGivesFeedbackOnCommentNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnCommentNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnCommentNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnCommentNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentGivesFeedbackOnCommentRelationship = {
  __typename?: 'CommentGivesFeedbackOnCommentRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentGivesFeedbackOnCommentRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type CommentGivesFeedbackOnCommentUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type CommentGivesFeedbackOnCommentUpdateFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnCommentConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnCommentCreateFieldInput>;
  delete?: InputMaybe<CommentGivesFeedbackOnCommentDeleteFieldInput>;
  disconnect?: InputMaybe<CommentGivesFeedbackOnCommentDisconnectFieldInput>;
  update?: InputMaybe<CommentGivesFeedbackOnCommentUpdateConnectionInput>;
  where?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
};

export type CommentGivesFeedbackOnDiscussionAggregateInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionAggregateInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnDiscussionAggregateInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput>;
};

export type CommentGivesFeedbackOnDiscussionConnectFieldInput = {
  connect?: InputMaybe<DiscussionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type CommentGivesFeedbackOnDiscussionConnectedRelationship = {
  __typename?: 'CommentGivesFeedbackOnDiscussionConnectedRelationship';
  node: DiscussionEventPayload;
};

export type CommentGivesFeedbackOnDiscussionConnection = {
  __typename?: 'CommentGivesFeedbackOnDiscussionConnection';
  edges: Array<CommentGivesFeedbackOnDiscussionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentGivesFeedbackOnDiscussionConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type CommentGivesFeedbackOnDiscussionConnectionWhere = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionConnectionWhere>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type CommentGivesFeedbackOnDiscussionCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type CommentGivesFeedbackOnDiscussionDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
};

export type CommentGivesFeedbackOnDiscussionDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
};

export type CommentGivesFeedbackOnDiscussionFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnDiscussionCreateFieldInput>;
};

export type CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentGivesFeedbackOnDiscussionRelationship = {
  __typename?: 'CommentGivesFeedbackOnDiscussionRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type CommentGivesFeedbackOnDiscussionRelationshipSubscriptionWhere = {
  node?: InputMaybe<DiscussionSubscriptionWhere>;
};

export type CommentGivesFeedbackOnDiscussionUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type CommentGivesFeedbackOnDiscussionUpdateFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnDiscussionCreateFieldInput>;
  delete?: InputMaybe<CommentGivesFeedbackOnDiscussionDeleteFieldInput>;
  disconnect?: InputMaybe<CommentGivesFeedbackOnDiscussionDisconnectFieldInput>;
  update?: InputMaybe<CommentGivesFeedbackOnDiscussionUpdateConnectionInput>;
  where?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
};

export type CommentGivesFeedbackOnEventAggregateInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnEventAggregateInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnEventAggregateInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnEventAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentGivesFeedbackOnEventNodeAggregationWhereInput>;
};

export type CommentGivesFeedbackOnEventConnectFieldInput = {
  connect?: InputMaybe<EventConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type CommentGivesFeedbackOnEventConnectedRelationship = {
  __typename?: 'CommentGivesFeedbackOnEventConnectedRelationship';
  node: EventEventPayload;
};

export type CommentGivesFeedbackOnEventConnection = {
  __typename?: 'CommentGivesFeedbackOnEventConnection';
  edges: Array<CommentGivesFeedbackOnEventRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentGivesFeedbackOnEventConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type CommentGivesFeedbackOnEventConnectionWhere = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnEventConnectionWhere>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnEventConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type CommentGivesFeedbackOnEventCreateFieldInput = {
  node: EventCreateInput;
};

export type CommentGivesFeedbackOnEventDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
};

export type CommentGivesFeedbackOnEventDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
};

export type CommentGivesFeedbackOnEventFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnEventConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnEventCreateFieldInput>;
};

export type CommentGivesFeedbackOnEventNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnEventNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnEventNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnEventNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentGivesFeedbackOnEventRelationship = {
  __typename?: 'CommentGivesFeedbackOnEventRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type CommentGivesFeedbackOnEventRelationshipSubscriptionWhere = {
  node?: InputMaybe<EventSubscriptionWhere>;
};

export type CommentGivesFeedbackOnEventUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type CommentGivesFeedbackOnEventUpdateFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnEventConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnEventCreateFieldInput>;
  delete?: InputMaybe<CommentGivesFeedbackOnEventDeleteFieldInput>;
  disconnect?: InputMaybe<CommentGivesFeedbackOnEventDisconnectFieldInput>;
  update?: InputMaybe<CommentGivesFeedbackOnEventUpdateConnectionInput>;
  where?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
};

export type CommentInfo = {
  __typename?: 'CommentInfo';
  Channel?: Maybe<ChannelInfo>;
  CommentAuthor?: Maybe<User>;
  DiscussionChannel?: Maybe<DiscussionChannelInfo>;
  Event?: Maybe<EventInfo>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  id: Scalars['ID']['output'];
  text?: Maybe<Scalars['String']['output']>;
};

export type CommentInfoAggregateSelection = {
  __typename?: 'CommentInfoAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
};

export type CommentInfoCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  id: Scalars['ID']['input'];
  text?: InputMaybe<Scalars['String']['input']>;
};

export type CommentInfoCreatedEvent = {
  __typename?: 'CommentInfoCreatedEvent';
  createdCommentInfo: CommentInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CommentInfoDeletedEvent = {
  __typename?: 'CommentInfoDeletedEvent';
  deletedCommentInfo: CommentInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CommentInfoEdge = {
  __typename?: 'CommentInfoEdge';
  cursor: Scalars['String']['output'];
  node: CommentInfo;
};

export type CommentInfoEventPayload = {
  __typename?: 'CommentInfoEventPayload';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  id: Scalars['ID']['output'];
  text?: Maybe<Scalars['String']['output']>;
};

export type CommentInfoOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more CommentInfoSort objects to sort CommentInfos by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CommentInfoSort>>;
};

/** Fields to sort CommentInfos by. The order in which sorts are applied is not guaranteed when specifying many fields in one CommentInfoSort object. */
export type CommentInfoSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
};

export type CommentInfoSubscriptionWhere = {
  AND?: InputMaybe<Array<CommentInfoSubscriptionWhere>>;
  NOT?: InputMaybe<CommentInfoSubscriptionWhere>;
  OR?: InputMaybe<Array<CommentInfoSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type CommentInfoUpdateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type CommentInfoUpdatedEvent = {
  __typename?: 'CommentInfoUpdatedEvent';
  event: EventType;
  previousState: CommentInfoEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedCommentInfo: CommentInfoEventPayload;
};

export type CommentInfoWhere = {
  AND?: InputMaybe<Array<CommentInfoWhere>>;
  NOT?: InputMaybe<CommentInfoWhere>;
  OR?: InputMaybe<Array<CommentInfoWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type CommentInfosConnection = {
  __typename?: 'CommentInfosConnection';
  edges: Array<CommentInfoEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentIssueAggregateInput = {
  AND?: InputMaybe<Array<CommentIssueAggregateInput>>;
  NOT?: InputMaybe<CommentIssueAggregateInput>;
  OR?: InputMaybe<Array<CommentIssueAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentIssueNodeAggregationWhereInput>;
};

export type CommentIssueConnectFieldInput = {
  connect?: InputMaybe<IssueConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type CommentIssueConnectedRelationship = {
  __typename?: 'CommentIssueConnectedRelationship';
  node: IssueEventPayload;
};

export type CommentIssueConnection = {
  __typename?: 'CommentIssueConnection';
  edges: Array<CommentIssueRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentIssueConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type CommentIssueConnectionWhere = {
  AND?: InputMaybe<Array<CommentIssueConnectionWhere>>;
  NOT?: InputMaybe<CommentIssueConnectionWhere>;
  OR?: InputMaybe<Array<CommentIssueConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type CommentIssueCreateFieldInput = {
  node: IssueCreateInput;
};

export type CommentIssueDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<CommentIssueConnectionWhere>;
};

export type CommentIssueDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<CommentIssueConnectionWhere>;
};

export type CommentIssueFieldInput = {
  connect?: InputMaybe<CommentIssueConnectFieldInput>;
  create?: InputMaybe<CommentIssueCreateFieldInput>;
};

export type CommentIssueIssueAggregationSelection = {
  __typename?: 'CommentIssueIssueAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentIssueIssueNodeAggregateSelection>;
};

export type CommentIssueIssueNodeAggregateSelection = {
  __typename?: 'CommentIssueIssueNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type CommentIssueNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentIssueNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentIssueNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentIssueNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentIssueRelatedIssuesAggregationSelection = {
  __typename?: 'CommentIssueRelatedIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentIssueRelatedIssuesNodeAggregateSelection>;
};

export type CommentIssueRelatedIssuesNodeAggregateSelection = {
  __typename?: 'CommentIssueRelatedIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type CommentIssueRelationship = {
  __typename?: 'CommentIssueRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type CommentIssueRelationshipSubscriptionWhere = {
  node?: InputMaybe<IssueSubscriptionWhere>;
};

export type CommentIssueUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type CommentIssueUpdateFieldInput = {
  connect?: InputMaybe<CommentIssueConnectFieldInput>;
  create?: InputMaybe<CommentIssueCreateFieldInput>;
  delete?: InputMaybe<CommentIssueDeleteFieldInput>;
  disconnect?: InputMaybe<CommentIssueDisconnectFieldInput>;
  update?: InputMaybe<CommentIssueUpdateConnectionInput>;
  where?: InputMaybe<CommentIssueConnectionWhere>;
};

export type CommentModerationActionAggregateInput = {
  AND?: InputMaybe<Array<CommentModerationActionAggregateInput>>;
  NOT?: InputMaybe<CommentModerationActionAggregateInput>;
  OR?: InputMaybe<Array<CommentModerationActionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentModerationActionNodeAggregationWhereInput>;
};

export type CommentModerationActionConnectFieldInput = {
  connect?: InputMaybe<ModerationActionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationActionConnectWhere>;
};

export type CommentModerationActionConnectedRelationship = {
  __typename?: 'CommentModerationActionConnectedRelationship';
  node: ModerationActionEventPayload;
};

export type CommentModerationActionConnection = {
  __typename?: 'CommentModerationActionConnection';
  edges: Array<CommentModerationActionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentModerationActionConnectionSort = {
  node?: InputMaybe<ModerationActionSort>;
};

export type CommentModerationActionConnectionWhere = {
  AND?: InputMaybe<Array<CommentModerationActionConnectionWhere>>;
  NOT?: InputMaybe<CommentModerationActionConnectionWhere>;
  OR?: InputMaybe<Array<CommentModerationActionConnectionWhere>>;
  node?: InputMaybe<ModerationActionWhere>;
};

export type CommentModerationActionCreateFieldInput = {
  node: ModerationActionCreateInput;
};

export type CommentModerationActionDeleteFieldInput = {
  delete?: InputMaybe<ModerationActionDeleteInput>;
  where?: InputMaybe<CommentModerationActionConnectionWhere>;
};

export type CommentModerationActionDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationActionDisconnectInput>;
  where?: InputMaybe<CommentModerationActionConnectionWhere>;
};

export type CommentModerationActionFieldInput = {
  connect?: InputMaybe<CommentModerationActionConnectFieldInput>;
  create?: InputMaybe<CommentModerationActionCreateFieldInput>;
};

export type CommentModerationActionModerationActionAggregationSelection = {
  __typename?: 'CommentModerationActionModerationActionAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentModerationActionModerationActionNodeAggregateSelection>;
};

export type CommentModerationActionModerationActionNodeAggregateSelection = {
  __typename?: 'CommentModerationActionModerationActionNodeAggregateSelection';
  actionDescription: StringAggregateSelection;
  actionType: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
};

export type CommentModerationActionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentModerationActionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentModerationActionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentModerationActionNodeAggregationWhereInput>>;
  actionDescription_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentModerationActionRelationship = {
  __typename?: 'CommentModerationActionRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationAction;
};

export type CommentModerationActionRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModerationActionSubscriptionWhere>;
};

export type CommentModerationActionUpdateConnectionInput = {
  node?: InputMaybe<ModerationActionUpdateInput>;
};

export type CommentModerationActionUpdateFieldInput = {
  connect?: InputMaybe<CommentModerationActionConnectFieldInput>;
  create?: InputMaybe<CommentModerationActionCreateFieldInput>;
  delete?: InputMaybe<CommentModerationActionDeleteFieldInput>;
  disconnect?: InputMaybe<CommentModerationActionDisconnectFieldInput>;
  update?: InputMaybe<CommentModerationActionUpdateConnectionInput>;
  where?: InputMaybe<CommentModerationActionConnectionWhere>;
};

export type CommentOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more CommentSort objects to sort Comments by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CommentSort>>;
};

export type CommentParentCommentAggregateInput = {
  AND?: InputMaybe<Array<CommentParentCommentAggregateInput>>;
  NOT?: InputMaybe<CommentParentCommentAggregateInput>;
  OR?: InputMaybe<Array<CommentParentCommentAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentParentCommentNodeAggregationWhereInput>;
};

export type CommentParentCommentConnectFieldInput = {
  connect?: InputMaybe<CommentConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type CommentParentCommentConnectedRelationship = {
  __typename?: 'CommentParentCommentConnectedRelationship';
  node: CommentEventPayload;
};

export type CommentParentCommentConnection = {
  __typename?: 'CommentParentCommentConnection';
  edges: Array<CommentParentCommentRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentParentCommentConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type CommentParentCommentConnectionWhere = {
  AND?: InputMaybe<Array<CommentParentCommentConnectionWhere>>;
  NOT?: InputMaybe<CommentParentCommentConnectionWhere>;
  OR?: InputMaybe<Array<CommentParentCommentConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type CommentParentCommentCreateFieldInput = {
  node: CommentCreateInput;
};

export type CommentParentCommentDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentParentCommentConnectionWhere>;
};

export type CommentParentCommentDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<CommentParentCommentConnectionWhere>;
};

export type CommentParentCommentFieldInput = {
  connect?: InputMaybe<CommentParentCommentConnectFieldInput>;
  create?: InputMaybe<CommentParentCommentCreateFieldInput>;
};

export type CommentParentCommentNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentParentCommentNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentParentCommentNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentParentCommentNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentParentCommentRelationship = {
  __typename?: 'CommentParentCommentRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentParentCommentRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type CommentParentCommentUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type CommentParentCommentUpdateFieldInput = {
  connect?: InputMaybe<CommentParentCommentConnectFieldInput>;
  create?: InputMaybe<CommentParentCommentCreateFieldInput>;
  delete?: InputMaybe<CommentParentCommentDeleteFieldInput>;
  disconnect?: InputMaybe<CommentParentCommentDisconnectFieldInput>;
  update?: InputMaybe<CommentParentCommentUpdateConnectionInput>;
  where?: InputMaybe<CommentParentCommentConnectionWhere>;
};

export type CommentPastVersionsAggregateInput = {
  AND?: InputMaybe<Array<CommentPastVersionsAggregateInput>>;
  NOT?: InputMaybe<CommentPastVersionsAggregateInput>;
  OR?: InputMaybe<Array<CommentPastVersionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentPastVersionsNodeAggregationWhereInput>;
};

export type CommentPastVersionsConnectFieldInput = {
  connect?: InputMaybe<Array<TextVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TextVersionConnectWhere>;
};

export type CommentPastVersionsConnectedRelationship = {
  __typename?: 'CommentPastVersionsConnectedRelationship';
  node: TextVersionEventPayload;
};

export type CommentPastVersionsConnection = {
  __typename?: 'CommentPastVersionsConnection';
  edges: Array<CommentPastVersionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentPastVersionsConnectionSort = {
  node?: InputMaybe<TextVersionSort>;
};

export type CommentPastVersionsConnectionWhere = {
  AND?: InputMaybe<Array<CommentPastVersionsConnectionWhere>>;
  NOT?: InputMaybe<CommentPastVersionsConnectionWhere>;
  OR?: InputMaybe<Array<CommentPastVersionsConnectionWhere>>;
  node?: InputMaybe<TextVersionWhere>;
};

export type CommentPastVersionsCreateFieldInput = {
  node: TextVersionCreateInput;
};

export type CommentPastVersionsDeleteFieldInput = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<CommentPastVersionsConnectionWhere>;
};

export type CommentPastVersionsDisconnectFieldInput = {
  disconnect?: InputMaybe<TextVersionDisconnectInput>;
  where?: InputMaybe<CommentPastVersionsConnectionWhere>;
};

export type CommentPastVersionsFieldInput = {
  connect?: InputMaybe<Array<CommentPastVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentPastVersionsCreateFieldInput>>;
};

export type CommentPastVersionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentPastVersionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentPastVersionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentPastVersionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentPastVersionsRelationship = {
  __typename?: 'CommentPastVersionsRelationship';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type CommentPastVersionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TextVersionSubscriptionWhere>;
};

export type CommentPastVersionsUpdateConnectionInput = {
  node?: InputMaybe<TextVersionUpdateInput>;
};

export type CommentPastVersionsUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentPastVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentPastVersionsCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentPastVersionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentPastVersionsDisconnectFieldInput>>;
  update?: InputMaybe<CommentPastVersionsUpdateConnectionInput>;
  where?: InputMaybe<CommentPastVersionsConnectionWhere>;
};

export type CommentRelatedIssuesAggregateInput = {
  AND?: InputMaybe<Array<CommentRelatedIssuesAggregateInput>>;
  NOT?: InputMaybe<CommentRelatedIssuesAggregateInput>;
  OR?: InputMaybe<Array<CommentRelatedIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentRelatedIssuesNodeAggregationWhereInput>;
};

export type CommentRelatedIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type CommentRelatedIssuesConnectedRelationship = {
  __typename?: 'CommentRelatedIssuesConnectedRelationship';
  node: IssueEventPayload;
};

export type CommentRelatedIssuesConnection = {
  __typename?: 'CommentRelatedIssuesConnection';
  edges: Array<CommentRelatedIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentRelatedIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type CommentRelatedIssuesConnectionWhere = {
  AND?: InputMaybe<Array<CommentRelatedIssuesConnectionWhere>>;
  NOT?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  OR?: InputMaybe<Array<CommentRelatedIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type CommentRelatedIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type CommentRelatedIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
};

export type CommentRelatedIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
};

export type CommentRelatedIssuesFieldInput = {
  connect?: InputMaybe<Array<CommentRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<CommentRelatedIssuesCreateFieldInput>>;
};

export type CommentRelatedIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentRelatedIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentRelatedIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentRelatedIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentRelatedIssuesRelationship = {
  __typename?: 'CommentRelatedIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type CommentRelatedIssuesRelationshipSubscriptionWhere = {
  node?: InputMaybe<IssueSubscriptionWhere>;
};

export type CommentRelatedIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type CommentRelatedIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<CommentRelatedIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentRelatedIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentRelatedIssuesDisconnectFieldInput>>;
  update?: InputMaybe<CommentRelatedIssuesUpdateConnectionInput>;
  where?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
};

export type CommentRelationInput = {
  Channel?: InputMaybe<CommentChannelCreateFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsCreateFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorCreateFieldInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelCreateFieldInput>;
  Event?: InputMaybe<CommentEventCreateFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsCreateFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentCreateFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionCreateFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventCreateFieldInput>;
  Issue?: InputMaybe<CommentIssueCreateFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionCreateFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentCreateFieldInput>;
  PastVersions?: InputMaybe<Array<CommentPastVersionsCreateFieldInput>>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesCreateFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<CommentSubscribedToNotificationsCreateFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsCreateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersCreateFieldInput>>;
};

export type CommentRelationshipCreatedEvent = {
  __typename?: 'CommentRelationshipCreatedEvent';
  comment: CommentEventPayload;
  createdRelationship: CommentConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type CommentRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<CommentRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<CommentRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<CommentRelationshipCreatedSubscriptionWhere>>;
  comment?: InputMaybe<CommentSubscriptionWhere>;
  createdRelationship?: InputMaybe<CommentRelationshipsSubscriptionWhere>;
};

export type CommentRelationshipDeletedEvent = {
  __typename?: 'CommentRelationshipDeletedEvent';
  comment: CommentEventPayload;
  deletedRelationship: CommentConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type CommentRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<CommentRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<CommentRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<CommentRelationshipDeletedSubscriptionWhere>>;
  comment?: InputMaybe<CommentSubscriptionWhere>;
  deletedRelationship?: InputMaybe<CommentRelationshipsSubscriptionWhere>;
};

export type CommentRelationshipsSubscriptionWhere = {
  Channel?: InputMaybe<CommentChannelRelationshipSubscriptionWhere>;
  ChildComments?: InputMaybe<CommentChildCommentsRelationshipSubscriptionWhere>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorRelationshipSubscriptionWhere>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelRelationshipSubscriptionWhere>;
  Event?: InputMaybe<CommentEventRelationshipSubscriptionWhere>;
  FeedbackComments?: InputMaybe<CommentFeedbackCommentsRelationshipSubscriptionWhere>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentRelationshipSubscriptionWhere>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionRelationshipSubscriptionWhere>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventRelationshipSubscriptionWhere>;
  Issue?: InputMaybe<CommentIssueRelationshipSubscriptionWhere>;
  ModerationAction?: InputMaybe<CommentModerationActionRelationshipSubscriptionWhere>;
  ParentComment?: InputMaybe<CommentParentCommentRelationshipSubscriptionWhere>;
  PastVersions?: InputMaybe<CommentPastVersionsRelationshipSubscriptionWhere>;
  RelatedIssues?: InputMaybe<CommentRelatedIssuesRelationshipSubscriptionWhere>;
  SubscribedToNotifications?: InputMaybe<CommentSubscribedToNotificationsRelationshipSubscriptionWhere>;
  Tags?: InputMaybe<CommentTagsRelationshipSubscriptionWhere>;
  UpvotedByUsers?: InputMaybe<CommentUpvotedByUsersRelationshipSubscriptionWhere>;
};

export type CommentRepliesFormat = {
  __typename?: 'CommentRepliesFormat';
  ChildComments: Array<Comment>;
  aggregateChildCommentCount: Scalars['Int']['output'];
};

export type CommentRepliesFormatAggregateSelection = {
  __typename?: 'CommentRepliesFormatAggregateSelection';
  aggregateChildCommentCount: IntAggregateSelection;
  count: Scalars['Int']['output'];
};

export type CommentRepliesFormatCreateInput = {
  aggregateChildCommentCount: Scalars['Int']['input'];
};

export type CommentRepliesFormatCreatedEvent = {
  __typename?: 'CommentRepliesFormatCreatedEvent';
  createdCommentRepliesFormat: CommentRepliesFormatEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CommentRepliesFormatDeletedEvent = {
  __typename?: 'CommentRepliesFormatDeletedEvent';
  deletedCommentRepliesFormat: CommentRepliesFormatEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CommentRepliesFormatEdge = {
  __typename?: 'CommentRepliesFormatEdge';
  cursor: Scalars['String']['output'];
  node: CommentRepliesFormat;
};

export type CommentRepliesFormatEventPayload = {
  __typename?: 'CommentRepliesFormatEventPayload';
  aggregateChildCommentCount: Scalars['Int']['output'];
};

export type CommentRepliesFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more CommentRepliesFormatSort objects to sort CommentRepliesFormats by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CommentRepliesFormatSort>>;
};

/** Fields to sort CommentRepliesFormats by. The order in which sorts are applied is not guaranteed when specifying many fields in one CommentRepliesFormatSort object. */
export type CommentRepliesFormatSort = {
  aggregateChildCommentCount?: InputMaybe<SortDirection>;
};

export type CommentRepliesFormatSubscriptionWhere = {
  AND?: InputMaybe<Array<CommentRepliesFormatSubscriptionWhere>>;
  NOT?: InputMaybe<CommentRepliesFormatSubscriptionWhere>;
  OR?: InputMaybe<Array<CommentRepliesFormatSubscriptionWhere>>;
  aggregateChildCommentCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  aggregateChildCommentCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentRepliesFormatUpdateInput = {
  aggregateChildCommentCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentRepliesFormatUpdatedEvent = {
  __typename?: 'CommentRepliesFormatUpdatedEvent';
  event: EventType;
  previousState: CommentRepliesFormatEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedCommentRepliesFormat: CommentRepliesFormatEventPayload;
};

export type CommentRepliesFormatWhere = {
  AND?: InputMaybe<Array<CommentRepliesFormatWhere>>;
  NOT?: InputMaybe<CommentRepliesFormatWhere>;
  OR?: InputMaybe<Array<CommentRepliesFormatWhere>>;
  aggregateChildCommentCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  aggregateChildCommentCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentRepliesFormatsConnection = {
  __typename?: 'CommentRepliesFormatsConnection';
  edges: Array<CommentRepliesFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentSectionFormat = {
  __typename?: 'CommentSectionFormat';
  Comments: Array<Comment>;
  DiscussionChannel?: Maybe<DiscussionChannel>;
};

export type CommentSectionFormatAggregateSelection = {
  __typename?: 'CommentSectionFormatAggregateSelection';
  count: Scalars['Int']['output'];
};

export type CommentSectionFormatCreateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CommentSectionFormatCreatedEvent = {
  __typename?: 'CommentSectionFormatCreatedEvent';
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CommentSectionFormatDeletedEvent = {
  __typename?: 'CommentSectionFormatDeletedEvent';
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CommentSectionFormatEdge = {
  __typename?: 'CommentSectionFormatEdge';
  cursor: Scalars['String']['output'];
  node: CommentSectionFormat;
};

export type CommentSectionFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentSectionFormatUpdateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CommentSectionFormatUpdatedEvent = {
  __typename?: 'CommentSectionFormatUpdatedEvent';
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type CommentSectionFormatWhere = {
  AND?: InputMaybe<Array<CommentSectionFormatWhere>>;
  NOT?: InputMaybe<CommentSectionFormatWhere>;
  OR?: InputMaybe<Array<CommentSectionFormatWhere>>;
};

export type CommentSectionFormatsConnection = {
  __typename?: 'CommentSectionFormatsConnection';
  edges: Array<CommentSectionFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** Fields to sort Comments by. The order in which sorts are applied is not guaranteed when specifying many fields in one CommentSort object. */
export type CommentSort = {
  archived?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  emoji?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isFeedbackComment?: InputMaybe<SortDirection>;
  isRootComment?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  weightedVotesCount?: InputMaybe<SortDirection>;
};

export type CommentSubscribedToNotificationsAggregateInput = {
  AND?: InputMaybe<Array<CommentSubscribedToNotificationsAggregateInput>>;
  NOT?: InputMaybe<CommentSubscribedToNotificationsAggregateInput>;
  OR?: InputMaybe<Array<CommentSubscribedToNotificationsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentSubscribedToNotificationsNodeAggregationWhereInput>;
};

export type CommentSubscribedToNotificationsConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type CommentSubscribedToNotificationsConnectOrCreateFieldInput = {
  onCreate: CommentSubscribedToNotificationsConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type CommentSubscribedToNotificationsConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type CommentSubscribedToNotificationsConnectedRelationship = {
  __typename?: 'CommentSubscribedToNotificationsConnectedRelationship';
  node: UserEventPayload;
};

export type CommentSubscribedToNotificationsConnection = {
  __typename?: 'CommentSubscribedToNotificationsConnection';
  edges: Array<CommentSubscribedToNotificationsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentSubscribedToNotificationsConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type CommentSubscribedToNotificationsConnectionWhere = {
  AND?: InputMaybe<Array<CommentSubscribedToNotificationsConnectionWhere>>;
  NOT?: InputMaybe<CommentSubscribedToNotificationsConnectionWhere>;
  OR?: InputMaybe<Array<CommentSubscribedToNotificationsConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type CommentSubscribedToNotificationsCreateFieldInput = {
  node: UserCreateInput;
};

export type CommentSubscribedToNotificationsDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<CommentSubscribedToNotificationsConnectionWhere>;
};

export type CommentSubscribedToNotificationsDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<CommentSubscribedToNotificationsConnectionWhere>;
};

export type CommentSubscribedToNotificationsFieldInput = {
  connect?: InputMaybe<Array<CommentSubscribedToNotificationsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentSubscribedToNotificationsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentSubscribedToNotificationsCreateFieldInput>>;
};

export type CommentSubscribedToNotificationsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentSubscribedToNotificationsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentSubscribedToNotificationsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentSubscribedToNotificationsNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentSubscribedToNotificationsRelationship = {
  __typename?: 'CommentSubscribedToNotificationsRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type CommentSubscribedToNotificationsRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type CommentSubscribedToNotificationsUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type CommentSubscribedToNotificationsUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentSubscribedToNotificationsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentSubscribedToNotificationsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentSubscribedToNotificationsCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentSubscribedToNotificationsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentSubscribedToNotificationsDisconnectFieldInput>>;
  update?: InputMaybe<CommentSubscribedToNotificationsUpdateConnectionInput>;
  where?: InputMaybe<CommentSubscribedToNotificationsConnectionWhere>;
};

export type CommentSubscriptionWhere = {
  AND?: InputMaybe<Array<CommentSubscriptionWhere>>;
  NOT?: InputMaybe<CommentSubscriptionWhere>;
  OR?: InputMaybe<Array<CommentSubscriptionWhere>>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  emoji_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  isFeedbackComment?: InputMaybe<Scalars['Boolean']['input']>;
  isRootComment?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_IN?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
  weightedVotesCount_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentTagTagsAggregationSelection = {
  __typename?: 'CommentTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentTagTagsNodeAggregateSelection>;
};

export type CommentTagTagsNodeAggregateSelection = {
  __typename?: 'CommentTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type CommentTagsAggregateInput = {
  AND?: InputMaybe<Array<CommentTagsAggregateInput>>;
  NOT?: InputMaybe<CommentTagsAggregateInput>;
  OR?: InputMaybe<Array<CommentTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentTagsNodeAggregationWhereInput>;
};

export type CommentTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type CommentTagsConnectOrCreateFieldInput = {
  onCreate: CommentTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type CommentTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type CommentTagsConnectedRelationship = {
  __typename?: 'CommentTagsConnectedRelationship';
  node: TagEventPayload;
};

export type CommentTagsConnection = {
  __typename?: 'CommentTagsConnection';
  edges: Array<CommentTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type CommentTagsConnectionWhere = {
  AND?: InputMaybe<Array<CommentTagsConnectionWhere>>;
  NOT?: InputMaybe<CommentTagsConnectionWhere>;
  OR?: InputMaybe<Array<CommentTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type CommentTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type CommentTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<CommentTagsConnectionWhere>;
};

export type CommentTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<CommentTagsConnectionWhere>;
};

export type CommentTagsFieldInput = {
  connect?: InputMaybe<Array<CommentTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentTagsCreateFieldInput>>;
};

export type CommentTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentTagsRelationship = {
  __typename?: 'CommentTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type CommentTagsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TagSubscriptionWhere>;
};

export type CommentTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type CommentTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentTagsDisconnectFieldInput>>;
  update?: InputMaybe<CommentTagsUpdateConnectionInput>;
  where?: InputMaybe<CommentTagsConnectionWhere>;
};

export type CommentTextVersionPastVersionsAggregationSelection = {
  __typename?: 'CommentTextVersionPastVersionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentTextVersionPastVersionsNodeAggregateSelection>;
};

export type CommentTextVersionPastVersionsNodeAggregateSelection = {
  __typename?: 'CommentTextVersionPastVersionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type CommentUpdateInput = {
  Channel?: InputMaybe<CommentChannelUpdateFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsUpdateFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorUpdateInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelUpdateFieldInput>;
  Event?: InputMaybe<CommentEventUpdateFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsUpdateFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentUpdateFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionUpdateFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventUpdateFieldInput>;
  Issue?: InputMaybe<CommentIssueUpdateFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionUpdateFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentUpdateFieldInput>;
  PastVersions?: InputMaybe<Array<CommentPastVersionsUpdateFieldInput>>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesUpdateFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<CommentSubscribedToNotificationsUpdateFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsUpdateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersUpdateFieldInput>>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  isFeedbackComment?: InputMaybe<Scalars['Boolean']['input']>;
  isRootComment?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_ADD?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_DIVIDE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MULTIPLY?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUBTRACT?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentUpdatedEvent = {
  __typename?: 'CommentUpdatedEvent';
  event: EventType;
  previousState: CommentEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedComment: CommentEventPayload;
};

export type CommentUpvotedByUsersAggregateInput = {
  AND?: InputMaybe<Array<CommentUpvotedByUsersAggregateInput>>;
  NOT?: InputMaybe<CommentUpvotedByUsersAggregateInput>;
  OR?: InputMaybe<Array<CommentUpvotedByUsersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentUpvotedByUsersNodeAggregationWhereInput>;
};

export type CommentUpvotedByUsersConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type CommentUpvotedByUsersConnectOrCreateFieldInput = {
  onCreate: CommentUpvotedByUsersConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type CommentUpvotedByUsersConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type CommentUpvotedByUsersConnectedRelationship = {
  __typename?: 'CommentUpvotedByUsersConnectedRelationship';
  node: UserEventPayload;
};

export type CommentUpvotedByUsersConnection = {
  __typename?: 'CommentUpvotedByUsersConnection';
  edges: Array<CommentUpvotedByUsersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentUpvotedByUsersConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type CommentUpvotedByUsersConnectionWhere = {
  AND?: InputMaybe<Array<CommentUpvotedByUsersConnectionWhere>>;
  NOT?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  OR?: InputMaybe<Array<CommentUpvotedByUsersConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type CommentUpvotedByUsersCreateFieldInput = {
  node: UserCreateInput;
};

export type CommentUpvotedByUsersDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
};

export type CommentUpvotedByUsersDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
};

export type CommentUpvotedByUsersFieldInput = {
  connect?: InputMaybe<Array<CommentUpvotedByUsersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentUpvotedByUsersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentUpvotedByUsersCreateFieldInput>>;
};

export type CommentUpvotedByUsersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentUpvotedByUsersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentUpvotedByUsersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentUpvotedByUsersNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentUpvotedByUsersRelationship = {
  __typename?: 'CommentUpvotedByUsersRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type CommentUpvotedByUsersRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type CommentUpvotedByUsersUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type CommentUpvotedByUsersUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentUpvotedByUsersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentUpvotedByUsersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentUpvotedByUsersCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentUpvotedByUsersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentUpvotedByUsersDisconnectFieldInput>>;
  update?: InputMaybe<CommentUpvotedByUsersUpdateConnectionInput>;
  where?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
};

export type CommentUserSubscribedToNotificationsAggregationSelection = {
  __typename?: 'CommentUserSubscribedToNotificationsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentUserSubscribedToNotificationsNodeAggregateSelection>;
};

export type CommentUserSubscribedToNotificationsNodeAggregateSelection = {
  __typename?: 'CommentUserSubscribedToNotificationsNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type CommentUserUpvotedByUsersAggregationSelection = {
  __typename?: 'CommentUserUpvotedByUsersAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentUserUpvotedByUsersNodeAggregateSelection>;
};

export type CommentUserUpvotedByUsersNodeAggregateSelection = {
  __typename?: 'CommentUserUpvotedByUsersNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type CommentWhere = {
  AND?: InputMaybe<Array<CommentWhere>>;
  Channel?: InputMaybe<ChannelWhere>;
  ChannelAggregate?: InputMaybe<CommentChannelAggregateInput>;
  ChannelConnection?: InputMaybe<CommentChannelConnectionWhere>;
  ChannelConnection_NOT?: InputMaybe<CommentChannelConnectionWhere>;
  Channel_NOT?: InputMaybe<ChannelWhere>;
  ChildCommentsAggregate?: InputMaybe<CommentChildCommentsAggregateInput>;
  /** Return Comments where all of the related CommentChildCommentsConnections match this filter */
  ChildCommentsConnection_ALL?: InputMaybe<CommentChildCommentsConnectionWhere>;
  /** Return Comments where none of the related CommentChildCommentsConnections match this filter */
  ChildCommentsConnection_NONE?: InputMaybe<CommentChildCommentsConnectionWhere>;
  /** Return Comments where one of the related CommentChildCommentsConnections match this filter */
  ChildCommentsConnection_SINGLE?: InputMaybe<CommentChildCommentsConnectionWhere>;
  /** Return Comments where some of the related CommentChildCommentsConnections match this filter */
  ChildCommentsConnection_SOME?: InputMaybe<CommentChildCommentsConnectionWhere>;
  /** Return Comments where all of the related Comments match this filter */
  ChildComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Comments where none of the related Comments match this filter */
  ChildComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Comments where one of the related Comments match this filter */
  ChildComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Comments where some of the related Comments match this filter */
  ChildComments_SOME?: InputMaybe<CommentWhere>;
  CommentAuthor?: InputMaybe<CommentAuthorWhere>;
  CommentAuthorConnection?: InputMaybe<CommentCommentAuthorConnectionWhere>;
  CommentAuthorConnection_NOT?: InputMaybe<CommentCommentAuthorConnectionWhere>;
  CommentAuthor_NOT?: InputMaybe<CommentAuthorWhere>;
  DiscussionChannel?: InputMaybe<DiscussionChannelWhere>;
  DiscussionChannelAggregate?: InputMaybe<CommentDiscussionChannelAggregateInput>;
  DiscussionChannelConnection?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
  DiscussionChannelConnection_NOT?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
  DiscussionChannel_NOT?: InputMaybe<DiscussionChannelWhere>;
  Event?: InputMaybe<EventWhere>;
  EventAggregate?: InputMaybe<CommentEventAggregateInput>;
  EventConnection?: InputMaybe<CommentEventConnectionWhere>;
  EventConnection_NOT?: InputMaybe<CommentEventConnectionWhere>;
  Event_NOT?: InputMaybe<EventWhere>;
  FeedbackCommentsAggregate?: InputMaybe<CommentFeedbackCommentsAggregateInput>;
  /** Return Comments where all of the related CommentFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_ALL?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  /** Return Comments where none of the related CommentFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_NONE?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  /** Return Comments where one of the related CommentFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SINGLE?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  /** Return Comments where some of the related CommentFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SOME?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  /** Return Comments where all of the related Comments match this filter */
  FeedbackComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Comments where none of the related Comments match this filter */
  FeedbackComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Comments where one of the related Comments match this filter */
  FeedbackComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Comments where some of the related Comments match this filter */
  FeedbackComments_SOME?: InputMaybe<CommentWhere>;
  GivesFeedbackOnComment?: InputMaybe<CommentWhere>;
  GivesFeedbackOnCommentAggregate?: InputMaybe<CommentGivesFeedbackOnCommentAggregateInput>;
  GivesFeedbackOnCommentConnection?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
  GivesFeedbackOnCommentConnection_NOT?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
  GivesFeedbackOnComment_NOT?: InputMaybe<CommentWhere>;
  GivesFeedbackOnDiscussion?: InputMaybe<DiscussionWhere>;
  GivesFeedbackOnDiscussionAggregate?: InputMaybe<CommentGivesFeedbackOnDiscussionAggregateInput>;
  GivesFeedbackOnDiscussionConnection?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
  GivesFeedbackOnDiscussionConnection_NOT?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
  GivesFeedbackOnDiscussion_NOT?: InputMaybe<DiscussionWhere>;
  GivesFeedbackOnEvent?: InputMaybe<EventWhere>;
  GivesFeedbackOnEventAggregate?: InputMaybe<CommentGivesFeedbackOnEventAggregateInput>;
  GivesFeedbackOnEventConnection?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
  GivesFeedbackOnEventConnection_NOT?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
  GivesFeedbackOnEvent_NOT?: InputMaybe<EventWhere>;
  Issue?: InputMaybe<IssueWhere>;
  IssueAggregate?: InputMaybe<CommentIssueAggregateInput>;
  IssueConnection?: InputMaybe<CommentIssueConnectionWhere>;
  IssueConnection_NOT?: InputMaybe<CommentIssueConnectionWhere>;
  Issue_NOT?: InputMaybe<IssueWhere>;
  ModerationAction?: InputMaybe<ModerationActionWhere>;
  ModerationActionAggregate?: InputMaybe<CommentModerationActionAggregateInput>;
  ModerationActionConnection?: InputMaybe<CommentModerationActionConnectionWhere>;
  ModerationActionConnection_NOT?: InputMaybe<CommentModerationActionConnectionWhere>;
  ModerationAction_NOT?: InputMaybe<ModerationActionWhere>;
  NOT?: InputMaybe<CommentWhere>;
  OR?: InputMaybe<Array<CommentWhere>>;
  ParentComment?: InputMaybe<CommentWhere>;
  ParentCommentAggregate?: InputMaybe<CommentParentCommentAggregateInput>;
  ParentCommentConnection?: InputMaybe<CommentParentCommentConnectionWhere>;
  ParentCommentConnection_NOT?: InputMaybe<CommentParentCommentConnectionWhere>;
  ParentComment_NOT?: InputMaybe<CommentWhere>;
  PastVersionsAggregate?: InputMaybe<CommentPastVersionsAggregateInput>;
  /** Return Comments where all of the related CommentPastVersionsConnections match this filter */
  PastVersionsConnection_ALL?: InputMaybe<CommentPastVersionsConnectionWhere>;
  /** Return Comments where none of the related CommentPastVersionsConnections match this filter */
  PastVersionsConnection_NONE?: InputMaybe<CommentPastVersionsConnectionWhere>;
  /** Return Comments where one of the related CommentPastVersionsConnections match this filter */
  PastVersionsConnection_SINGLE?: InputMaybe<CommentPastVersionsConnectionWhere>;
  /** Return Comments where some of the related CommentPastVersionsConnections match this filter */
  PastVersionsConnection_SOME?: InputMaybe<CommentPastVersionsConnectionWhere>;
  /** Return Comments where all of the related TextVersions match this filter */
  PastVersions_ALL?: InputMaybe<TextVersionWhere>;
  /** Return Comments where none of the related TextVersions match this filter */
  PastVersions_NONE?: InputMaybe<TextVersionWhere>;
  /** Return Comments where one of the related TextVersions match this filter */
  PastVersions_SINGLE?: InputMaybe<TextVersionWhere>;
  /** Return Comments where some of the related TextVersions match this filter */
  PastVersions_SOME?: InputMaybe<TextVersionWhere>;
  RelatedIssuesAggregate?: InputMaybe<CommentRelatedIssuesAggregateInput>;
  /** Return Comments where all of the related CommentRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_ALL?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  /** Return Comments where none of the related CommentRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_NONE?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  /** Return Comments where one of the related CommentRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SINGLE?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  /** Return Comments where some of the related CommentRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SOME?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  /** Return Comments where all of the related Issues match this filter */
  RelatedIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return Comments where none of the related Issues match this filter */
  RelatedIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return Comments where one of the related Issues match this filter */
  RelatedIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return Comments where some of the related Issues match this filter */
  RelatedIssues_SOME?: InputMaybe<IssueWhere>;
  SubscribedToNotificationsAggregate?: InputMaybe<CommentSubscribedToNotificationsAggregateInput>;
  /** Return Comments where all of the related CommentSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_ALL?: InputMaybe<CommentSubscribedToNotificationsConnectionWhere>;
  /** Return Comments where none of the related CommentSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_NONE?: InputMaybe<CommentSubscribedToNotificationsConnectionWhere>;
  /** Return Comments where one of the related CommentSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_SINGLE?: InputMaybe<CommentSubscribedToNotificationsConnectionWhere>;
  /** Return Comments where some of the related CommentSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_SOME?: InputMaybe<CommentSubscribedToNotificationsConnectionWhere>;
  /** Return Comments where all of the related Users match this filter */
  SubscribedToNotifications_ALL?: InputMaybe<UserWhere>;
  /** Return Comments where none of the related Users match this filter */
  SubscribedToNotifications_NONE?: InputMaybe<UserWhere>;
  /** Return Comments where one of the related Users match this filter */
  SubscribedToNotifications_SINGLE?: InputMaybe<UserWhere>;
  /** Return Comments where some of the related Users match this filter */
  SubscribedToNotifications_SOME?: InputMaybe<UserWhere>;
  TagsAggregate?: InputMaybe<CommentTagsAggregateInput>;
  /** Return Comments where all of the related CommentTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<CommentTagsConnectionWhere>;
  /** Return Comments where none of the related CommentTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<CommentTagsConnectionWhere>;
  /** Return Comments where one of the related CommentTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<CommentTagsConnectionWhere>;
  /** Return Comments where some of the related CommentTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<CommentTagsConnectionWhere>;
  /** Return Comments where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Comments where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Comments where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Comments where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  UpvotedByUsersAggregate?: InputMaybe<CommentUpvotedByUsersAggregateInput>;
  /** Return Comments where all of the related CommentUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_ALL?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  /** Return Comments where none of the related CommentUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_NONE?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  /** Return Comments where one of the related CommentUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_SINGLE?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  /** Return Comments where some of the related CommentUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_SOME?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  /** Return Comments where all of the related Users match this filter */
  UpvotedByUsers_ALL?: InputMaybe<UserWhere>;
  /** Return Comments where none of the related Users match this filter */
  UpvotedByUsers_NONE?: InputMaybe<UserWhere>;
  /** Return Comments where one of the related Users match this filter */
  UpvotedByUsers_SINGLE?: InputMaybe<UserWhere>;
  /** Return Comments where some of the related Users match this filter */
  UpvotedByUsers_SOME?: InputMaybe<UserWhere>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  emoji_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  isFeedbackComment?: InputMaybe<Scalars['Boolean']['input']>;
  isRootComment?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_IN?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
  weightedVotesCount_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentsConnection = {
  __typename?: 'CommentsConnection';
  edges: Array<CommentEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Contact = {
  __typename?: 'Contact';
  MessageAuthor?: Maybe<CommentAuthor>;
  MessageAuthorConnection: ContactMessageAuthorConnection;
  Messages: Array<Message>;
  MessagesAggregate?: Maybe<ContactMessageMessagesAggregationSelection>;
  MessagesConnection: ContactMessagesConnection;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  mostRecentMessageTimestamp?: Maybe<Scalars['DateTime']['output']>;
};


export type ContactMessageAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<CommentAuthorWhere>;
};


export type ContactMessageAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ContactMessageAuthorConnectionWhere>;
};


export type ContactMessagesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<MessageOptions>;
  where?: InputMaybe<MessageWhere>;
};


export type ContactMessagesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<MessageWhere>;
};


export type ContactMessagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ContactMessagesConnectionSort>>;
  where?: InputMaybe<ContactMessagesConnectionWhere>;
};

export type ContactAggregateSelection = {
  __typename?: 'ContactAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  mostRecentMessageTimestamp: DateTimeAggregateSelection;
};

export type ContactConnectInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorConnectInput>;
  Messages?: InputMaybe<Array<ContactMessagesConnectFieldInput>>;
};

export type ContactConnectOrCreateInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorConnectOrCreateInput>;
};

export type ContactConnectWhere = {
  node: ContactWhere;
};

export type ContactConnectedRelationships = {
  __typename?: 'ContactConnectedRelationships';
  MessageAuthor?: Maybe<ContactMessageAuthorConnectedRelationship>;
  Messages?: Maybe<ContactMessagesConnectedRelationship>;
};

export type ContactCreateInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorCreateInput>;
  Messages?: InputMaybe<ContactMessagesFieldInput>;
  mostRecentMessageTimestamp?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ContactCreatedEvent = {
  __typename?: 'ContactCreatedEvent';
  createdContact: ContactEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ContactDeleteInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorDeleteInput>;
  Messages?: InputMaybe<Array<ContactMessagesDeleteFieldInput>>;
};

export type ContactDeletedEvent = {
  __typename?: 'ContactDeletedEvent';
  deletedContact: ContactEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ContactDisconnectInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorDisconnectInput>;
  Messages?: InputMaybe<Array<ContactMessagesDisconnectFieldInput>>;
};

export type ContactEdge = {
  __typename?: 'ContactEdge';
  cursor: Scalars['String']['output'];
  node: Contact;
};

export type ContactEventPayload = {
  __typename?: 'ContactEventPayload';
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  mostRecentMessageTimestamp?: Maybe<Scalars['DateTime']['output']>;
};

export type ContactMessageAuthorConnectInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileConnectFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserConnectFieldInput>;
};

export type ContactMessageAuthorConnectOrCreateInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileConnectOrCreateFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserConnectOrCreateFieldInput>;
};

export type ContactMessageAuthorConnectedRelationship = {
  __typename?: 'ContactMessageAuthorConnectedRelationship';
  node: CommentAuthorEventPayload;
};

export type ContactMessageAuthorConnection = {
  __typename?: 'ContactMessageAuthorConnection';
  edges: Array<ContactMessageAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ContactMessageAuthorConnectionWhere = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
  User?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
};

export type ContactMessageAuthorCreateFieldInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileCreateFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserCreateFieldInput>;
};

export type ContactMessageAuthorCreateInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserFieldInput>;
};

export type ContactMessageAuthorDeleteInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileDeleteFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserDeleteFieldInput>;
};

export type ContactMessageAuthorDisconnectInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileDisconnectFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserDisconnectFieldInput>;
};

export type ContactMessageAuthorModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type ContactMessageAuthorModerationProfileConnectOrCreateFieldInput = {
  onCreate: ContactMessageAuthorModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type ContactMessageAuthorModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type ContactMessageAuthorModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<ContactMessageAuthorModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<ContactMessageAuthorModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type ContactMessageAuthorModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type ContactMessageAuthorModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
};

export type ContactMessageAuthorModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
};

export type ContactMessageAuthorModerationProfileFieldInput = {
  connect?: InputMaybe<ContactMessageAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<ContactMessageAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<ContactMessageAuthorModerationProfileCreateFieldInput>;
};

export type ContactMessageAuthorModerationProfileSubscriptionWhere = {
  node?: InputMaybe<ModerationProfileSubscriptionWhere>;
};

export type ContactMessageAuthorModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type ContactMessageAuthorModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<ContactMessageAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<ContactMessageAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<ContactMessageAuthorModerationProfileCreateFieldInput>;
  delete?: InputMaybe<ContactMessageAuthorModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<ContactMessageAuthorModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<ContactMessageAuthorModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
};

export type ContactMessageAuthorRelationship = {
  __typename?: 'ContactMessageAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: CommentAuthor;
};

export type ContactMessageAuthorRelationshipSubscriptionWhere = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileSubscriptionWhere>;
  User?: InputMaybe<ContactMessageAuthorUserSubscriptionWhere>;
};

export type ContactMessageAuthorUpdateInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileUpdateFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserUpdateFieldInput>;
};

export type ContactMessageAuthorUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type ContactMessageAuthorUserConnectOrCreateFieldInput = {
  onCreate: ContactMessageAuthorUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ContactMessageAuthorUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ContactMessageAuthorUserConnectionWhere = {
  AND?: InputMaybe<Array<ContactMessageAuthorUserConnectionWhere>>;
  NOT?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
  OR?: InputMaybe<Array<ContactMessageAuthorUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ContactMessageAuthorUserCreateFieldInput = {
  node: UserCreateInput;
};

export type ContactMessageAuthorUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
};

export type ContactMessageAuthorUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
};

export type ContactMessageAuthorUserFieldInput = {
  connect?: InputMaybe<ContactMessageAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ContactMessageAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ContactMessageAuthorUserCreateFieldInput>;
};

export type ContactMessageAuthorUserSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type ContactMessageAuthorUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ContactMessageAuthorUserUpdateFieldInput = {
  connect?: InputMaybe<ContactMessageAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ContactMessageAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ContactMessageAuthorUserCreateFieldInput>;
  delete?: InputMaybe<ContactMessageAuthorUserDeleteFieldInput>;
  disconnect?: InputMaybe<ContactMessageAuthorUserDisconnectFieldInput>;
  update?: InputMaybe<ContactMessageAuthorUserUpdateConnectionInput>;
  where?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
};

export type ContactMessageMessagesAggregationSelection = {
  __typename?: 'ContactMessageMessagesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ContactMessageMessagesNodeAggregateSelection>;
};

export type ContactMessageMessagesNodeAggregateSelection = {
  __typename?: 'ContactMessageMessagesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
};

export type ContactMessagesAggregateInput = {
  AND?: InputMaybe<Array<ContactMessagesAggregateInput>>;
  NOT?: InputMaybe<ContactMessagesAggregateInput>;
  OR?: InputMaybe<Array<ContactMessagesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ContactMessagesNodeAggregationWhereInput>;
};

export type ContactMessagesConnectFieldInput = {
  connect?: InputMaybe<Array<MessageConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<MessageConnectWhere>;
};

export type ContactMessagesConnectedRelationship = {
  __typename?: 'ContactMessagesConnectedRelationship';
  node: MessageEventPayload;
};

export type ContactMessagesConnection = {
  __typename?: 'ContactMessagesConnection';
  edges: Array<ContactMessagesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ContactMessagesConnectionSort = {
  node?: InputMaybe<MessageSort>;
};

export type ContactMessagesConnectionWhere = {
  AND?: InputMaybe<Array<ContactMessagesConnectionWhere>>;
  NOT?: InputMaybe<ContactMessagesConnectionWhere>;
  OR?: InputMaybe<Array<ContactMessagesConnectionWhere>>;
  node?: InputMaybe<MessageWhere>;
};

export type ContactMessagesCreateFieldInput = {
  node: MessageCreateInput;
};

export type ContactMessagesDeleteFieldInput = {
  delete?: InputMaybe<MessageDeleteInput>;
  where?: InputMaybe<ContactMessagesConnectionWhere>;
};

export type ContactMessagesDisconnectFieldInput = {
  disconnect?: InputMaybe<MessageDisconnectInput>;
  where?: InputMaybe<ContactMessagesConnectionWhere>;
};

export type ContactMessagesFieldInput = {
  connect?: InputMaybe<Array<ContactMessagesConnectFieldInput>>;
  create?: InputMaybe<Array<ContactMessagesCreateFieldInput>>;
};

export type ContactMessagesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ContactMessagesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ContactMessagesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ContactMessagesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ContactMessagesRelationship = {
  __typename?: 'ContactMessagesRelationship';
  cursor: Scalars['String']['output'];
  node: Message;
};

export type ContactMessagesRelationshipSubscriptionWhere = {
  node?: InputMaybe<MessageSubscriptionWhere>;
};

export type ContactMessagesUpdateConnectionInput = {
  node?: InputMaybe<MessageUpdateInput>;
};

export type ContactMessagesUpdateFieldInput = {
  connect?: InputMaybe<Array<ContactMessagesConnectFieldInput>>;
  create?: InputMaybe<Array<ContactMessagesCreateFieldInput>>;
  delete?: InputMaybe<Array<ContactMessagesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ContactMessagesDisconnectFieldInput>>;
  update?: InputMaybe<ContactMessagesUpdateConnectionInput>;
  where?: InputMaybe<ContactMessagesConnectionWhere>;
};

export type ContactOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ContactSort objects to sort Contacts by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ContactSort>>;
};

export type ContactRelationInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorCreateFieldInput>;
  Messages?: InputMaybe<Array<ContactMessagesCreateFieldInput>>;
};

export type ContactRelationshipCreatedEvent = {
  __typename?: 'ContactRelationshipCreatedEvent';
  contact: ContactEventPayload;
  createdRelationship: ContactConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ContactRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<ContactRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<ContactRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<ContactRelationshipCreatedSubscriptionWhere>>;
  contact?: InputMaybe<ContactSubscriptionWhere>;
  createdRelationship?: InputMaybe<ContactRelationshipsSubscriptionWhere>;
};

export type ContactRelationshipDeletedEvent = {
  __typename?: 'ContactRelationshipDeletedEvent';
  contact: ContactEventPayload;
  deletedRelationship: ContactConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ContactRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<ContactRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<ContactRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<ContactRelationshipDeletedSubscriptionWhere>>;
  contact?: InputMaybe<ContactSubscriptionWhere>;
  deletedRelationship?: InputMaybe<ContactRelationshipsSubscriptionWhere>;
};

export type ContactRelationshipsSubscriptionWhere = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorRelationshipSubscriptionWhere>;
  Messages?: InputMaybe<ContactMessagesRelationshipSubscriptionWhere>;
};

/** Fields to sort Contacts by. The order in which sorts are applied is not guaranteed when specifying many fields in one ContactSort object. */
export type ContactSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  mostRecentMessageTimestamp?: InputMaybe<SortDirection>;
};

export type ContactSubscriptionWhere = {
  AND?: InputMaybe<Array<ContactSubscriptionWhere>>;
  NOT?: InputMaybe<ContactSubscriptionWhere>;
  OR?: InputMaybe<Array<ContactSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  mostRecentMessageTimestamp?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_GT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  mostRecentMessageTimestamp_LT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ContactUpdateInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorUpdateInput>;
  Messages?: InputMaybe<Array<ContactMessagesUpdateFieldInput>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ContactUpdatedEvent = {
  __typename?: 'ContactUpdatedEvent';
  event: EventType;
  previousState: ContactEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedContact: ContactEventPayload;
};

export type ContactWhere = {
  AND?: InputMaybe<Array<ContactWhere>>;
  MessageAuthor?: InputMaybe<CommentAuthorWhere>;
  MessageAuthorConnection?: InputMaybe<ContactMessageAuthorConnectionWhere>;
  MessageAuthorConnection_NOT?: InputMaybe<ContactMessageAuthorConnectionWhere>;
  MessageAuthor_NOT?: InputMaybe<CommentAuthorWhere>;
  MessagesAggregate?: InputMaybe<ContactMessagesAggregateInput>;
  /** Return Contacts where all of the related ContactMessagesConnections match this filter */
  MessagesConnection_ALL?: InputMaybe<ContactMessagesConnectionWhere>;
  /** Return Contacts where none of the related ContactMessagesConnections match this filter */
  MessagesConnection_NONE?: InputMaybe<ContactMessagesConnectionWhere>;
  /** Return Contacts where one of the related ContactMessagesConnections match this filter */
  MessagesConnection_SINGLE?: InputMaybe<ContactMessagesConnectionWhere>;
  /** Return Contacts where some of the related ContactMessagesConnections match this filter */
  MessagesConnection_SOME?: InputMaybe<ContactMessagesConnectionWhere>;
  /** Return Contacts where all of the related Messages match this filter */
  Messages_ALL?: InputMaybe<MessageWhere>;
  /** Return Contacts where none of the related Messages match this filter */
  Messages_NONE?: InputMaybe<MessageWhere>;
  /** Return Contacts where one of the related Messages match this filter */
  Messages_SINGLE?: InputMaybe<MessageWhere>;
  /** Return Contacts where some of the related Messages match this filter */
  Messages_SOME?: InputMaybe<MessageWhere>;
  NOT?: InputMaybe<ContactWhere>;
  OR?: InputMaybe<Array<ContactWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  mostRecentMessageTimestamp?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_GT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  mostRecentMessageTimestamp_LT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ContactsConnection = {
  __typename?: 'ContactsConnection';
  edges: Array<ContactEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CreateActivitiesMutationResponse = {
  __typename?: 'CreateActivitiesMutationResponse';
  activities: Array<Activity>;
  info: CreateInfo;
};

export type CreateAlbumsMutationResponse = {
  __typename?: 'CreateAlbumsMutationResponse';
  albums: Array<Album>;
  info: CreateInfo;
};

export type CreateChannelInfosMutationResponse = {
  __typename?: 'CreateChannelInfosMutationResponse';
  channelInfos: Array<ChannelInfo>;
  info: CreateInfo;
};

export type CreateChannelRolesMutationResponse = {
  __typename?: 'CreateChannelRolesMutationResponse';
  channelRoles: Array<ChannelRole>;
  info: CreateInfo;
};

export type CreateChannelsMutationResponse = {
  __typename?: 'CreateChannelsMutationResponse';
  channels: Array<Channel>;
  info: CreateInfo;
};

export type CreateCollectionsMutationResponse = {
  __typename?: 'CreateCollectionsMutationResponse';
  collections: Array<Collection>;
  info: CreateInfo;
};

export type CreateCommentInfosMutationResponse = {
  __typename?: 'CreateCommentInfosMutationResponse';
  commentInfos: Array<CommentInfo>;
  info: CreateInfo;
};

export type CreateCommentRepliesFormatsMutationResponse = {
  __typename?: 'CreateCommentRepliesFormatsMutationResponse';
  commentRepliesFormats: Array<CommentRepliesFormat>;
  info: CreateInfo;
};

export type CreateCommentSectionFormatsMutationResponse = {
  __typename?: 'CreateCommentSectionFormatsMutationResponse';
  commentSectionFormats: Array<CommentSectionFormat>;
  info: CreateInfo;
};

export type CreateCommentsMutationResponse = {
  __typename?: 'CreateCommentsMutationResponse';
  comments: Array<Comment>;
  info: CreateInfo;
};

export type CreateContactsMutationResponse = {
  __typename?: 'CreateContactsMutationResponse';
  contacts: Array<Contact>;
  info: CreateInfo;
};

export type CreateDayDataMutationResponse = {
  __typename?: 'CreateDayDataMutationResponse';
  dayData: Array<DayData>;
  info: CreateInfo;
};

export type CreateDiscussionChannelInfosMutationResponse = {
  __typename?: 'CreateDiscussionChannelInfosMutationResponse';
  discussionChannelInfos: Array<DiscussionChannelInfo>;
  info: CreateInfo;
};

export type CreateDiscussionChannelListFormatsMutationResponse = {
  __typename?: 'CreateDiscussionChannelListFormatsMutationResponse';
  discussionChannelListFormats: Array<DiscussionChannelListFormat>;
  info: CreateInfo;
};

export type CreateDiscussionChannelsMutationResponse = {
  __typename?: 'CreateDiscussionChannelsMutationResponse';
  discussionChannels: Array<DiscussionChannel>;
  info: CreateInfo;
};

export type CreateDiscussionInfosMutationResponse = {
  __typename?: 'CreateDiscussionInfosMutationResponse';
  discussionInfos: Array<DiscussionInfo>;
  info: CreateInfo;
};

export type CreateDiscussionsMutationResponse = {
  __typename?: 'CreateDiscussionsMutationResponse';
  discussions: Array<Discussion>;
  info: CreateInfo;
};

export type CreateDownloadableFilesMutationResponse = {
  __typename?: 'CreateDownloadableFilesMutationResponse';
  downloadableFiles: Array<DownloadableFile>;
  info: CreateInfo;
};

export type CreateDropDataResponsesMutationResponse = {
  __typename?: 'CreateDropDataResponsesMutationResponse';
  dropDataResponses: Array<DropDataResponse>;
  info: CreateInfo;
};

export type CreateEmailsMutationResponse = {
  __typename?: 'CreateEmailsMutationResponse';
  emails: Array<Email>;
  info: CreateInfo;
};

export type CreateEmojisMutationResponse = {
  __typename?: 'CreateEmojisMutationResponse';
  emojis: Array<Emoji>;
  info: CreateInfo;
};

export type CreateEnvironmentInfosMutationResponse = {
  __typename?: 'CreateEnvironmentInfosMutationResponse';
  environmentInfos: Array<EnvironmentInfo>;
  info: CreateInfo;
};

export type CreateEventChannelInfosMutationResponse = {
  __typename?: 'CreateEventChannelInfosMutationResponse';
  eventChannelInfos: Array<EventChannelInfo>;
  info: CreateInfo;
};

export type CreateEventChannelsMutationResponse = {
  __typename?: 'CreateEventChannelsMutationResponse';
  eventChannels: Array<EventChannel>;
  info: CreateInfo;
};

export type CreateEventCommentsFormatsMutationResponse = {
  __typename?: 'CreateEventCommentsFormatsMutationResponse';
  eventCommentsFormats: Array<EventCommentsFormat>;
  info: CreateInfo;
};

export type CreateEventInfosMutationResponse = {
  __typename?: 'CreateEventInfosMutationResponse';
  eventInfos: Array<EventInfo>;
  info: CreateInfo;
};

export type CreateEventsMutationResponse = {
  __typename?: 'CreateEventsMutationResponse';
  events: Array<Event>;
  info: CreateInfo;
};

export type CreateFeedsMutationResponse = {
  __typename?: 'CreateFeedsMutationResponse';
  feeds: Array<Feed>;
  info: CreateInfo;
};

export type CreateFileVersionsMutationResponse = {
  __typename?: 'CreateFileVersionsMutationResponse';
  fileVersions: Array<FileVersion>;
  info: CreateInfo;
};

export type CreateFilterGroupsMutationResponse = {
  __typename?: 'CreateFilterGroupsMutationResponse';
  filterGroups: Array<FilterGroup>;
  info: CreateInfo;
};

export type CreateFilterOptionsMutationResponse = {
  __typename?: 'CreateFilterOptionsMutationResponse';
  filterOptions: Array<FilterOption>;
  info: CreateInfo;
};

export type CreateGetSortedChannelsResponsesMutationResponse = {
  __typename?: 'CreateGetSortedChannelsResponsesMutationResponse';
  getSortedChannelsResponses: Array<GetSortedChannelsResponse>;
  info: CreateInfo;
};

export type CreateImagesMutationResponse = {
  __typename?: 'CreateImagesMutationResponse';
  images: Array<Image>;
  info: CreateInfo;
};

/** Information about the number of nodes and relationships created during a create mutation */
export type CreateInfo = {
  __typename?: 'CreateInfo';
  /** @deprecated This field has been deprecated because bookmarks are now handled by the driver. */
  bookmark?: Maybe<Scalars['String']['output']>;
  nodesCreated: Scalars['Int']['output'];
  relationshipsCreated: Scalars['Int']['output'];
};

export type CreateIssuesMutationResponse = {
  __typename?: 'CreateIssuesMutationResponse';
  info: CreateInfo;
  issues: Array<Issue>;
};

export type CreateLicensesMutationResponse = {
  __typename?: 'CreateLicensesMutationResponse';
  info: CreateInfo;
  licenses: Array<License>;
};

export type CreateLinkFlairsMutationResponse = {
  __typename?: 'CreateLinkFlairsMutationResponse';
  info: CreateInfo;
  linkFlairs: Array<LinkFlair>;
};

export type CreateMessagesMutationResponse = {
  __typename?: 'CreateMessagesMutationResponse';
  info: CreateInfo;
  messages: Array<Message>;
};

export type CreateModChannelRolesMutationResponse = {
  __typename?: 'CreateModChannelRolesMutationResponse';
  info: CreateInfo;
  modChannelRoles: Array<ModChannelRole>;
};

export type CreateModServerRolesMutationResponse = {
  __typename?: 'CreateModServerRolesMutationResponse';
  info: CreateInfo;
  modServerRoles: Array<ModServerRole>;
};

export type CreateModerationActionsMutationResponse = {
  __typename?: 'CreateModerationActionsMutationResponse';
  info: CreateInfo;
  moderationActions: Array<ModerationAction>;
};

export type CreateModerationProfilesMutationResponse = {
  __typename?: 'CreateModerationProfilesMutationResponse';
  info: CreateInfo;
  moderationProfiles: Array<ModerationProfile>;
};

export type CreateNotificationsMutationResponse = {
  __typename?: 'CreateNotificationsMutationResponse';
  info: CreateInfo;
  notifications: Array<Notification>;
};

export type CreatePluginRunsMutationResponse = {
  __typename?: 'CreatePluginRunsMutationResponse';
  info: CreateInfo;
  pluginRuns: Array<PluginRun>;
};

export type CreatePluginVersionsMutationResponse = {
  __typename?: 'CreatePluginVersionsMutationResponse';
  info: CreateInfo;
  pluginVersions: Array<PluginVersion>;
};

export type CreatePluginsMutationResponse = {
  __typename?: 'CreatePluginsMutationResponse';
  info: CreateInfo;
  plugins: Array<Plugin>;
};

export type CreatePurchasesMutationResponse = {
  __typename?: 'CreatePurchasesMutationResponse';
  info: CreateInfo;
  purchases: Array<Purchase>;
};

export type CreateRecurringEventsMutationResponse = {
  __typename?: 'CreateRecurringEventsMutationResponse';
  info: CreateInfo;
  recurringEvents: Array<RecurringEvent>;
};

export type CreateRepeatEndsMutationResponse = {
  __typename?: 'CreateRepeatEndsMutationResponse';
  info: CreateInfo;
  repeatEnds: Array<RepeatEnds>;
};

export type CreateRepeatEveriesMutationResponse = {
  __typename?: 'CreateRepeatEveriesMutationResponse';
  info: CreateInfo;
  repeatEveries: Array<RepeatEvery>;
};

export type CreateSafetyCheckResponsesMutationResponse = {
  __typename?: 'CreateSafetyCheckResponsesMutationResponse';
  info: CreateInfo;
  safetyCheckResponses: Array<SafetyCheckResponse>;
};

export type CreateSeedDataResponsesMutationResponse = {
  __typename?: 'CreateSeedDataResponsesMutationResponse';
  info: CreateInfo;
  seedDataResponses: Array<SeedDataResponse>;
};

export type CreateServerConfigsMutationResponse = {
  __typename?: 'CreateServerConfigsMutationResponse';
  info: CreateInfo;
  serverConfigs: Array<ServerConfig>;
};

export type CreateServerRolesMutationResponse = {
  __typename?: 'CreateServerRolesMutationResponse';
  info: CreateInfo;
  serverRoles: Array<ServerRole>;
};

export type CreateServerSecretsMutationResponse = {
  __typename?: 'CreateServerSecretsMutationResponse';
  info: CreateInfo;
  serverSecrets: Array<ServerSecret>;
};

export type CreateSignedUrlsMutationResponse = {
  __typename?: 'CreateSignedUrlsMutationResponse';
  info: CreateInfo;
  signedUrls: Array<SignedUrl>;
};

export type CreateSiteWideDiscussionListFormatsMutationResponse = {
  __typename?: 'CreateSiteWideDiscussionListFormatsMutationResponse';
  info: CreateInfo;
  siteWideDiscussionListFormats: Array<SiteWideDiscussionListFormat>;
};

export type CreateSuspensionsMutationResponse = {
  __typename?: 'CreateSuspensionsMutationResponse';
  info: CreateInfo;
  suspensions: Array<Suspension>;
};

export type CreateTagsMutationResponse = {
  __typename?: 'CreateTagsMutationResponse';
  info: CreateInfo;
  tags: Array<Tag>;
};

export type CreateTextVersionsMutationResponse = {
  __typename?: 'CreateTextVersionsMutationResponse';
  info: CreateInfo;
  textVersions: Array<TextVersion>;
};

export type CreateUsersMutationResponse = {
  __typename?: 'CreateUsersMutationResponse';
  info: CreateInfo;
  users: Array<User>;
};

export type CreateWikiPagesMutationResponse = {
  __typename?: 'CreateWikiPagesMutationResponse';
  info: CreateInfo;
  wikiPages: Array<WikiPage>;
};

export type DateTimeAggregateSelection = {
  __typename?: 'DateTimeAggregateSelection';
  max?: Maybe<Scalars['DateTime']['output']>;
  min?: Maybe<Scalars['DateTime']['output']>;
};

export type DayData = {
  __typename?: 'DayData';
  activities: Array<Activity>;
  count: Scalars['Int']['output'];
  date: Scalars['String']['output'];
};

export type DayDataAggregateSelection = {
  __typename?: 'DayDataAggregateSelection';
  count: IntAggregateSelection;
  date: StringAggregateSelection;
};

export type DayDataConnection = {
  __typename?: 'DayDataConnection';
  edges: Array<DayDataEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DayDataCreateInput = {
  count: Scalars['Int']['input'];
  date: Scalars['String']['input'];
};

export type DayDataCreatedEvent = {
  __typename?: 'DayDataCreatedEvent';
  createdDayData: DayDataEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DayDataDeletedEvent = {
  __typename?: 'DayDataDeletedEvent';
  deletedDayData: DayDataEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DayDataEdge = {
  __typename?: 'DayDataEdge';
  cursor: Scalars['String']['output'];
  node: DayData;
};

export type DayDataEventPayload = {
  __typename?: 'DayDataEventPayload';
  count: Scalars['Int']['output'];
  date: Scalars['String']['output'];
};

export type DayDataOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DayDataSort objects to sort DayData by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DayDataSort>>;
};

/** Fields to sort DayData by. The order in which sorts are applied is not guaranteed when specifying many fields in one DayDataSort object. */
export type DayDataSort = {
  count?: InputMaybe<SortDirection>;
  date?: InputMaybe<SortDirection>;
};

export type DayDataSubscriptionWhere = {
  AND?: InputMaybe<Array<DayDataSubscriptionWhere>>;
  NOT?: InputMaybe<DayDataSubscriptionWhere>;
  OR?: InputMaybe<Array<DayDataSubscriptionWhere>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  date?: InputMaybe<Scalars['String']['input']>;
  date_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  date_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  date_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  date_MATCHES?: InputMaybe<Scalars['String']['input']>;
  date_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type DayDataUpdateInput = {
  count?: InputMaybe<Scalars['Int']['input']>;
  count_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  count_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  date?: InputMaybe<Scalars['String']['input']>;
};

export type DayDataUpdatedEvent = {
  __typename?: 'DayDataUpdatedEvent';
  event: EventType;
  previousState: DayDataEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedDayData: DayDataEventPayload;
};

export type DayDataWhere = {
  AND?: InputMaybe<Array<DayDataWhere>>;
  NOT?: InputMaybe<DayDataWhere>;
  OR?: InputMaybe<Array<DayDataWhere>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  date?: InputMaybe<Scalars['String']['input']>;
  date_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  date_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  date_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  date_MATCHES?: InputMaybe<Scalars['String']['input']>;
  date_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

/** Information about the number of nodes and relationships deleted during a delete mutation */
export type DeleteInfo = {
  __typename?: 'DeleteInfo';
  /** @deprecated This field has been deprecated because bookmarks are now handled by the driver. */
  bookmark?: Maybe<Scalars['String']['output']>;
  nodesDeleted: Scalars['Int']['output'];
  relationshipsDeleted: Scalars['Int']['output'];
};

export type Discussion = {
  __typename?: 'Discussion';
  Album?: Maybe<Album>;
  AlbumAggregate?: Maybe<DiscussionAlbumAlbumAggregationSelection>;
  AlbumConnection: DiscussionAlbumConnection;
  Author?: Maybe<User>;
  AuthorAggregate?: Maybe<DiscussionUserAuthorAggregationSelection>;
  AuthorConnection: DiscussionAuthorConnection;
  DiscussionChannels: Array<DiscussionChannel>;
  DiscussionChannelsAggregate?: Maybe<DiscussionDiscussionChannelDiscussionChannelsAggregationSelection>;
  DiscussionChannelsConnection: DiscussionDiscussionChannelsConnection;
  DownloadableFiles: Array<DownloadableFile>;
  DownloadableFilesAggregate?: Maybe<DiscussionDownloadableFileDownloadableFilesAggregationSelection>;
  DownloadableFilesConnection: DiscussionDownloadableFilesConnection;
  FeedbackComments: Array<Comment>;
  FeedbackCommentsAggregate?: Maybe<DiscussionCommentFeedbackCommentsAggregationSelection>;
  FeedbackCommentsConnection: DiscussionFeedbackCommentsConnection;
  PastBodyVersions: Array<TextVersion>;
  PastBodyVersionsAggregate?: Maybe<DiscussionTextVersionPastBodyVersionsAggregationSelection>;
  PastBodyVersionsConnection: DiscussionPastBodyVersionsConnection;
  PastTitleVersions: Array<TextVersion>;
  PastTitleVersionsAggregate?: Maybe<DiscussionTextVersionPastTitleVersionsAggregationSelection>;
  PastTitleVersionsConnection: DiscussionPastTitleVersionsConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<DiscussionTagTagsAggregationSelection>;
  TagsConnection: DiscussionTagsConnection;
  body?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  hasDownload?: Maybe<Scalars['Boolean']['output']>;
  hasSensitiveContent?: Maybe<Scalars['Boolean']['output']>;
  hasSpoiler?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  title: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type DiscussionAlbumArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<AlbumOptions>;
  where?: InputMaybe<AlbumWhere>;
};


export type DiscussionAlbumAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<AlbumWhere>;
};


export type DiscussionAlbumConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionAlbumConnectionSort>>;
  where?: InputMaybe<DiscussionAlbumConnectionWhere>;
};


export type DiscussionAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionAuthorAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionAuthorConnectionSort>>;
  where?: InputMaybe<DiscussionAuthorConnectionWhere>;
};


export type DiscussionDiscussionChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type DiscussionDiscussionChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type DiscussionDiscussionChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionDiscussionChannelsConnectionSort>>;
  where?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
};


export type DiscussionDownloadableFilesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DownloadableFileOptions>;
  where?: InputMaybe<DownloadableFileWhere>;
};


export type DiscussionDownloadableFilesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DownloadableFileWhere>;
};


export type DiscussionDownloadableFilesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionDownloadableFilesConnectionSort>>;
  where?: InputMaybe<DiscussionDownloadableFilesConnectionWhere>;
};


export type DiscussionFeedbackCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionFeedbackCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionFeedbackCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionFeedbackCommentsConnectionSort>>;
  where?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
};


export type DiscussionPastBodyVersionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type DiscussionPastBodyVersionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TextVersionWhere>;
};


export type DiscussionPastBodyVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionPastBodyVersionsConnectionSort>>;
  where?: InputMaybe<DiscussionPastBodyVersionsConnectionWhere>;
};


export type DiscussionPastTitleVersionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type DiscussionPastTitleVersionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TextVersionWhere>;
};


export type DiscussionPastTitleVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionPastTitleVersionsConnectionSort>>;
  where?: InputMaybe<DiscussionPastTitleVersionsConnectionWhere>;
};


export type DiscussionTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type DiscussionTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type DiscussionTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionTagsConnectionSort>>;
  where?: InputMaybe<DiscussionTagsConnectionWhere>;
};

export type DiscussionAggregateSelection = {
  __typename?: 'DiscussionAggregateSelection';
  body: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type DiscussionAlbumAggregateInput = {
  AND?: InputMaybe<Array<DiscussionAlbumAggregateInput>>;
  NOT?: InputMaybe<DiscussionAlbumAggregateInput>;
  OR?: InputMaybe<Array<DiscussionAlbumAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionAlbumNodeAggregationWhereInput>;
};

export type DiscussionAlbumAlbumAggregationSelection = {
  __typename?: 'DiscussionAlbumAlbumAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionAlbumAlbumNodeAggregateSelection>;
};

export type DiscussionAlbumAlbumNodeAggregateSelection = {
  __typename?: 'DiscussionAlbumAlbumNodeAggregateSelection';
  id: IdAggregateSelection;
};

export type DiscussionAlbumConnectFieldInput = {
  connect?: InputMaybe<AlbumConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<AlbumConnectWhere>;
};

export type DiscussionAlbumConnectedRelationship = {
  __typename?: 'DiscussionAlbumConnectedRelationship';
  node: AlbumEventPayload;
};

export type DiscussionAlbumConnection = {
  __typename?: 'DiscussionAlbumConnection';
  edges: Array<DiscussionAlbumRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionAlbumConnectionSort = {
  node?: InputMaybe<AlbumSort>;
};

export type DiscussionAlbumConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionAlbumConnectionWhere>>;
  NOT?: InputMaybe<DiscussionAlbumConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionAlbumConnectionWhere>>;
  node?: InputMaybe<AlbumWhere>;
};

export type DiscussionAlbumCreateFieldInput = {
  node: AlbumCreateInput;
};

export type DiscussionAlbumDeleteFieldInput = {
  delete?: InputMaybe<AlbumDeleteInput>;
  where?: InputMaybe<DiscussionAlbumConnectionWhere>;
};

export type DiscussionAlbumDisconnectFieldInput = {
  disconnect?: InputMaybe<AlbumDisconnectInput>;
  where?: InputMaybe<DiscussionAlbumConnectionWhere>;
};

export type DiscussionAlbumFieldInput = {
  connect?: InputMaybe<DiscussionAlbumConnectFieldInput>;
  create?: InputMaybe<DiscussionAlbumCreateFieldInput>;
};

export type DiscussionAlbumNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionAlbumNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionAlbumNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionAlbumNodeAggregationWhereInput>>;
};

export type DiscussionAlbumRelationship = {
  __typename?: 'DiscussionAlbumRelationship';
  cursor: Scalars['String']['output'];
  node: Album;
};

export type DiscussionAlbumRelationshipSubscriptionWhere = {
  node?: InputMaybe<AlbumSubscriptionWhere>;
};

export type DiscussionAlbumUpdateConnectionInput = {
  node?: InputMaybe<AlbumUpdateInput>;
};

export type DiscussionAlbumUpdateFieldInput = {
  connect?: InputMaybe<DiscussionAlbumConnectFieldInput>;
  create?: InputMaybe<DiscussionAlbumCreateFieldInput>;
  delete?: InputMaybe<DiscussionAlbumDeleteFieldInput>;
  disconnect?: InputMaybe<DiscussionAlbumDisconnectFieldInput>;
  update?: InputMaybe<DiscussionAlbumUpdateConnectionInput>;
  where?: InputMaybe<DiscussionAlbumConnectionWhere>;
};

export type DiscussionAuthorAggregateInput = {
  AND?: InputMaybe<Array<DiscussionAuthorAggregateInput>>;
  NOT?: InputMaybe<DiscussionAuthorAggregateInput>;
  OR?: InputMaybe<Array<DiscussionAuthorAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionAuthorNodeAggregationWhereInput>;
};

export type DiscussionAuthorConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type DiscussionAuthorConnectOrCreateFieldInput = {
  onCreate: DiscussionAuthorConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type DiscussionAuthorConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type DiscussionAuthorConnectedRelationship = {
  __typename?: 'DiscussionAuthorConnectedRelationship';
  node: UserEventPayload;
};

export type DiscussionAuthorConnection = {
  __typename?: 'DiscussionAuthorConnection';
  edges: Array<DiscussionAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionAuthorConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type DiscussionAuthorConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionAuthorConnectionWhere>>;
  NOT?: InputMaybe<DiscussionAuthorConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionAuthorConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type DiscussionAuthorCreateFieldInput = {
  node: UserCreateInput;
};

export type DiscussionAuthorDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<DiscussionAuthorConnectionWhere>;
};

export type DiscussionAuthorDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<DiscussionAuthorConnectionWhere>;
};

export type DiscussionAuthorFieldInput = {
  connect?: InputMaybe<DiscussionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<DiscussionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<DiscussionAuthorCreateFieldInput>;
};

export type DiscussionAuthorNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionAuthorNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionAuthorNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionAuthorNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionAuthorRelationship = {
  __typename?: 'DiscussionAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type DiscussionAuthorRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type DiscussionAuthorUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type DiscussionAuthorUpdateFieldInput = {
  connect?: InputMaybe<DiscussionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<DiscussionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<DiscussionAuthorCreateFieldInput>;
  delete?: InputMaybe<DiscussionAuthorDeleteFieldInput>;
  disconnect?: InputMaybe<DiscussionAuthorDisconnectFieldInput>;
  update?: InputMaybe<DiscussionAuthorUpdateConnectionInput>;
  where?: InputMaybe<DiscussionAuthorConnectionWhere>;
};

export type DiscussionChannel = {
  __typename?: 'DiscussionChannel';
  Answers: Array<Comment>;
  AnswersAggregate?: Maybe<DiscussionChannelCommentAnswersAggregationSelection>;
  AnswersConnection: DiscussionChannelAnswersConnection;
  Channel?: Maybe<Channel>;
  ChannelAggregate?: Maybe<DiscussionChannelChannelChannelAggregationSelection>;
  ChannelConnection: DiscussionChannelChannelConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<DiscussionChannelCommentCommentsAggregationSelection>;
  CommentsConnection: DiscussionChannelCommentsConnection;
  Discussion?: Maybe<Discussion>;
  DiscussionAggregate?: Maybe<DiscussionChannelDiscussionDiscussionAggregationSelection>;
  DiscussionConnection: DiscussionChannelDiscussionConnection;
  LabelOptions: Array<FilterOption>;
  LabelOptionsAggregate?: Maybe<DiscussionChannelFilterOptionLabelOptionsAggregationSelection>;
  LabelOptionsConnection: DiscussionChannelLabelOptionsConnection;
  RelatedIssues: Array<Issue>;
  RelatedIssuesAggregate?: Maybe<DiscussionChannelIssueRelatedIssuesAggregationSelection>;
  RelatedIssuesConnection: DiscussionChannelRelatedIssuesConnection;
  SubscribedToNotifications: Array<User>;
  SubscribedToNotificationsAggregate?: Maybe<DiscussionChannelUserSubscribedToNotificationsAggregationSelection>;
  SubscribedToNotificationsConnection: DiscussionChannelSubscribedToNotificationsConnection;
  UpvotedByUsers: Array<User>;
  UpvotedByUsersAggregate?: Maybe<DiscussionChannelUserUpvotedByUsersAggregationSelection>;
  UpvotedByUsersConnection: DiscussionChannelUpvotedByUsersConnection;
  answered?: Maybe<Scalars['Boolean']['output']>;
  archived?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  discussionId: Scalars['ID']['output'];
  emoji?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  locked?: Maybe<Scalars['Boolean']['output']>;
  weightedVotesCount?: Maybe<Scalars['Float']['output']>;
};


export type DiscussionChannelAnswersArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionChannelAnswersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionChannelAnswersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelAnswersConnectionSort>>;
  where?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
};


export type DiscussionChannelChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type DiscussionChannelChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type DiscussionChannelChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelChannelConnectionSort>>;
  where?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
};


export type DiscussionChannelCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionChannelCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionChannelCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelCommentsConnectionSort>>;
  where?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
};


export type DiscussionChannelDiscussionArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type DiscussionChannelDiscussionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type DiscussionChannelDiscussionConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelDiscussionConnectionSort>>;
  where?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
};


export type DiscussionChannelLabelOptionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<FilterOptionOptions>;
  where?: InputMaybe<FilterOptionWhere>;
};


export type DiscussionChannelLabelOptionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<FilterOptionWhere>;
};


export type DiscussionChannelLabelOptionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelLabelOptionsConnectionSort>>;
  where?: InputMaybe<DiscussionChannelLabelOptionsConnectionWhere>;
};


export type DiscussionChannelRelatedIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type DiscussionChannelRelatedIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type DiscussionChannelRelatedIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectionSort>>;
  where?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
};


export type DiscussionChannelSubscribedToNotificationsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionChannelSubscribedToNotificationsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionChannelSubscribedToNotificationsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsConnectionSort>>;
  where?: InputMaybe<DiscussionChannelSubscribedToNotificationsConnectionWhere>;
};


export type DiscussionChannelUpvotedByUsersArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionChannelUpvotedByUsersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionChannelUpvotedByUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectionSort>>;
  where?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
};

export type DiscussionChannelAggregateSelection = {
  __typename?: 'DiscussionChannelAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionChannelAnswersAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelAnswersAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelAnswersAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelAnswersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelAnswersNodeAggregationWhereInput>;
};

export type DiscussionChannelAnswersConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type DiscussionChannelAnswersConnectedRelationship = {
  __typename?: 'DiscussionChannelAnswersConnectedRelationship';
  node: CommentEventPayload;
};

export type DiscussionChannelAnswersConnection = {
  __typename?: 'DiscussionChannelAnswersConnection';
  edges: Array<DiscussionChannelAnswersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelAnswersConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type DiscussionChannelAnswersConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelAnswersConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelAnswersConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type DiscussionChannelAnswersCreateFieldInput = {
  node: CommentCreateInput;
};

export type DiscussionChannelAnswersDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
};

export type DiscussionChannelAnswersDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
};

export type DiscussionChannelAnswersFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelAnswersConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelAnswersCreateFieldInput>>;
};

export type DiscussionChannelAnswersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelAnswersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelAnswersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelAnswersNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelAnswersRelationship = {
  __typename?: 'DiscussionChannelAnswersRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type DiscussionChannelAnswersRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type DiscussionChannelAnswersUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type DiscussionChannelAnswersUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelAnswersConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelAnswersCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelAnswersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelAnswersDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelAnswersUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
};

export type DiscussionChannelChannelAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelChannelAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelChannelAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelChannelNodeAggregationWhereInput>;
};

export type DiscussionChannelChannelChannelAggregationSelection = {
  __typename?: 'DiscussionChannelChannelChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelChannelChannelNodeAggregateSelection>;
};

export type DiscussionChannelChannelChannelNodeAggregateSelection = {
  __typename?: 'DiscussionChannelChannelChannelNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type DiscussionChannelChannelConnectFieldInput = {
  connect?: InputMaybe<ChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type DiscussionChannelChannelConnectOrCreateFieldInput = {
  onCreate: DiscussionChannelChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type DiscussionChannelChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type DiscussionChannelChannelConnectedRelationship = {
  __typename?: 'DiscussionChannelChannelConnectedRelationship';
  node: ChannelEventPayload;
};

export type DiscussionChannelChannelConnection = {
  __typename?: 'DiscussionChannelChannelConnection';
  edges: Array<DiscussionChannelChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelChannelConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type DiscussionChannelChannelConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelChannelConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type DiscussionChannelChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type DiscussionChannelChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
};

export type DiscussionChannelChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
};

export type DiscussionChannelChannelFieldInput = {
  connect?: InputMaybe<DiscussionChannelChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<DiscussionChannelChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<DiscussionChannelChannelCreateFieldInput>;
};

export type DiscussionChannelChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelChannelNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelChannelRelationship = {
  __typename?: 'DiscussionChannelChannelRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type DiscussionChannelChannelRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type DiscussionChannelChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type DiscussionChannelChannelUpdateFieldInput = {
  connect?: InputMaybe<DiscussionChannelChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<DiscussionChannelChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<DiscussionChannelChannelCreateFieldInput>;
  delete?: InputMaybe<DiscussionChannelChannelDeleteFieldInput>;
  disconnect?: InputMaybe<DiscussionChannelChannelDisconnectFieldInput>;
  update?: InputMaybe<DiscussionChannelChannelUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
};

export type DiscussionChannelCommentAnswersAggregationSelection = {
  __typename?: 'DiscussionChannelCommentAnswersAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelCommentAnswersNodeAggregateSelection>;
};

export type DiscussionChannelCommentAnswersNodeAggregateSelection = {
  __typename?: 'DiscussionChannelCommentAnswersNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionChannelCommentCommentsAggregationSelection = {
  __typename?: 'DiscussionChannelCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelCommentCommentsNodeAggregateSelection>;
};

export type DiscussionChannelCommentCommentsNodeAggregateSelection = {
  __typename?: 'DiscussionChannelCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionChannelCommentsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelCommentsAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelCommentsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelCommentsNodeAggregationWhereInput>;
};

export type DiscussionChannelCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type DiscussionChannelCommentsConnectedRelationship = {
  __typename?: 'DiscussionChannelCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type DiscussionChannelCommentsConnection = {
  __typename?: 'DiscussionChannelCommentsConnection';
  edges: Array<DiscussionChannelCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type DiscussionChannelCommentsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelCommentsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type DiscussionChannelCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type DiscussionChannelCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
};

export type DiscussionChannelCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
};

export type DiscussionChannelCommentsFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelCommentsCreateFieldInput>>;
};

export type DiscussionChannelCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelCommentsRelationship = {
  __typename?: 'DiscussionChannelCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type DiscussionChannelCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type DiscussionChannelCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type DiscussionChannelCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelCommentsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelCommentsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
};

export type DiscussionChannelConnectInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersConnectFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelConnectFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsConnectFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionConnectFieldInput>;
  LabelOptions?: InputMaybe<Array<DiscussionChannelLabelOptionsConnectFieldInput>>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsConnectFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectFieldInput>>;
};

export type DiscussionChannelConnectOrCreateInput = {
  Channel?: InputMaybe<DiscussionChannelChannelConnectOrCreateFieldInput>;
  SubscribedToNotifications?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsConnectOrCreateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectOrCreateFieldInput>>;
};

export type DiscussionChannelConnectWhere = {
  node: DiscussionChannelWhere;
};

export type DiscussionChannelConnectedRelationships = {
  __typename?: 'DiscussionChannelConnectedRelationships';
  Answers?: Maybe<DiscussionChannelAnswersConnectedRelationship>;
  Channel?: Maybe<DiscussionChannelChannelConnectedRelationship>;
  Comments?: Maybe<DiscussionChannelCommentsConnectedRelationship>;
  Discussion?: Maybe<DiscussionChannelDiscussionConnectedRelationship>;
  LabelOptions?: Maybe<DiscussionChannelLabelOptionsConnectedRelationship>;
  RelatedIssues?: Maybe<DiscussionChannelRelatedIssuesConnectedRelationship>;
  SubscribedToNotifications?: Maybe<DiscussionChannelSubscribedToNotificationsConnectedRelationship>;
  UpvotedByUsers?: Maybe<DiscussionChannelUpvotedByUsersConnectedRelationship>;
};

export type DiscussionChannelCreateInput = {
  Answers?: InputMaybe<DiscussionChannelAnswersFieldInput>;
  Channel?: InputMaybe<DiscussionChannelChannelFieldInput>;
  Comments?: InputMaybe<DiscussionChannelCommentsFieldInput>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionFieldInput>;
  LabelOptions?: InputMaybe<DiscussionChannelLabelOptionsFieldInput>;
  RelatedIssues?: InputMaybe<DiscussionChannelRelatedIssuesFieldInput>;
  SubscribedToNotifications?: InputMaybe<DiscussionChannelSubscribedToNotificationsFieldInput>;
  UpvotedByUsers?: InputMaybe<DiscussionChannelUpvotedByUsersFieldInput>;
  answered?: InputMaybe<Scalars['Boolean']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelCreatedEvent = {
  __typename?: 'DiscussionChannelCreatedEvent';
  createdDiscussionChannel: DiscussionChannelEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionChannelDeleteInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersDeleteFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelDeleteFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsDeleteFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionDeleteFieldInput>;
  LabelOptions?: InputMaybe<Array<DiscussionChannelLabelOptionsDeleteFieldInput>>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesDeleteFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsDeleteFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersDeleteFieldInput>>;
};

export type DiscussionChannelDeletedEvent = {
  __typename?: 'DiscussionChannelDeletedEvent';
  deletedDiscussionChannel: DiscussionChannelEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionChannelDisconnectInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersDisconnectFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelDisconnectFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsDisconnectFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionDisconnectFieldInput>;
  LabelOptions?: InputMaybe<Array<DiscussionChannelLabelOptionsDisconnectFieldInput>>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesDisconnectFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsDisconnectFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersDisconnectFieldInput>>;
};

export type DiscussionChannelDiscussionAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelDiscussionAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelDiscussionAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelDiscussionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelDiscussionNodeAggregationWhereInput>;
};

export type DiscussionChannelDiscussionConnectFieldInput = {
  connect?: InputMaybe<DiscussionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type DiscussionChannelDiscussionConnectedRelationship = {
  __typename?: 'DiscussionChannelDiscussionConnectedRelationship';
  node: DiscussionEventPayload;
};

export type DiscussionChannelDiscussionConnection = {
  __typename?: 'DiscussionChannelDiscussionConnection';
  edges: Array<DiscussionChannelDiscussionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelDiscussionConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type DiscussionChannelDiscussionConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelDiscussionConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelDiscussionConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type DiscussionChannelDiscussionCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type DiscussionChannelDiscussionDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
};

export type DiscussionChannelDiscussionDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
};

export type DiscussionChannelDiscussionDiscussionAggregationSelection = {
  __typename?: 'DiscussionChannelDiscussionDiscussionAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelDiscussionDiscussionNodeAggregateSelection>;
};

export type DiscussionChannelDiscussionDiscussionNodeAggregateSelection = {
  __typename?: 'DiscussionChannelDiscussionDiscussionNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type DiscussionChannelDiscussionFieldInput = {
  connect?: InputMaybe<DiscussionChannelDiscussionConnectFieldInput>;
  create?: InputMaybe<DiscussionChannelDiscussionCreateFieldInput>;
};

export type DiscussionChannelDiscussionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelDiscussionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelDiscussionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelDiscussionNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionChannelDiscussionRelationship = {
  __typename?: 'DiscussionChannelDiscussionRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type DiscussionChannelDiscussionRelationshipSubscriptionWhere = {
  node?: InputMaybe<DiscussionSubscriptionWhere>;
};

export type DiscussionChannelDiscussionUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type DiscussionChannelDiscussionUpdateFieldInput = {
  connect?: InputMaybe<DiscussionChannelDiscussionConnectFieldInput>;
  create?: InputMaybe<DiscussionChannelDiscussionCreateFieldInput>;
  delete?: InputMaybe<DiscussionChannelDiscussionDeleteFieldInput>;
  disconnect?: InputMaybe<DiscussionChannelDiscussionDisconnectFieldInput>;
  update?: InputMaybe<DiscussionChannelDiscussionUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
};

export type DiscussionChannelEdge = {
  __typename?: 'DiscussionChannelEdge';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type DiscussionChannelEventPayload = {
  __typename?: 'DiscussionChannelEventPayload';
  answered?: Maybe<Scalars['Boolean']['output']>;
  archived?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  discussionId: Scalars['ID']['output'];
  emoji?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  locked?: Maybe<Scalars['Boolean']['output']>;
  weightedVotesCount?: Maybe<Scalars['Float']['output']>;
};

export type DiscussionChannelFilterOptionLabelOptionsAggregationSelection = {
  __typename?: 'DiscussionChannelFilterOptionLabelOptionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelFilterOptionLabelOptionsNodeAggregateSelection>;
};

export type DiscussionChannelFilterOptionLabelOptionsNodeAggregateSelection = {
  __typename?: 'DiscussionChannelFilterOptionLabelOptionsNodeAggregateSelection';
  displayName: StringAggregateSelection;
  id: IdAggregateSelection;
  order: IntAggregateSelection;
  value: StringAggregateSelection;
};

export type DiscussionChannelInfo = {
  __typename?: 'DiscussionChannelInfo';
  Channel?: Maybe<ChannelInfo>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  discussionId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
};

export type DiscussionChannelInfoAggregateSelection = {
  __typename?: 'DiscussionChannelInfoAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  discussionId: StringAggregateSelection;
  id: IdAggregateSelection;
};

export type DiscussionChannelInfoCreateInput = {
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  discussionId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

export type DiscussionChannelInfoCreatedEvent = {
  __typename?: 'DiscussionChannelInfoCreatedEvent';
  createdDiscussionChannelInfo: DiscussionChannelInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionChannelInfoDeletedEvent = {
  __typename?: 'DiscussionChannelInfoDeletedEvent';
  deletedDiscussionChannelInfo: DiscussionChannelInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionChannelInfoEdge = {
  __typename?: 'DiscussionChannelInfoEdge';
  cursor: Scalars['String']['output'];
  node: DiscussionChannelInfo;
};

export type DiscussionChannelInfoEventPayload = {
  __typename?: 'DiscussionChannelInfoEventPayload';
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  discussionId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
};

export type DiscussionChannelInfoOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DiscussionChannelInfoSort objects to sort DiscussionChannelInfos by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DiscussionChannelInfoSort>>;
};

/** Fields to sort DiscussionChannelInfos by. The order in which sorts are applied is not guaranteed when specifying many fields in one DiscussionChannelInfoSort object. */
export type DiscussionChannelInfoSort = {
  channelUniqueName?: InputMaybe<SortDirection>;
  discussionId?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
};

export type DiscussionChannelInfoSubscriptionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelInfoSubscriptionWhere>>;
  NOT?: InputMaybe<DiscussionChannelInfoSubscriptionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelInfoSubscriptionWhere>>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  discussionId?: InputMaybe<Scalars['String']['input']>;
  discussionId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  discussionId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  discussionId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  discussionId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  discussionId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type DiscussionChannelInfoUpdateInput = {
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  discussionId?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
};

export type DiscussionChannelInfoUpdatedEvent = {
  __typename?: 'DiscussionChannelInfoUpdatedEvent';
  event: EventType;
  previousState: DiscussionChannelInfoEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedDiscussionChannelInfo: DiscussionChannelInfoEventPayload;
};

export type DiscussionChannelInfoWhere = {
  AND?: InputMaybe<Array<DiscussionChannelInfoWhere>>;
  NOT?: InputMaybe<DiscussionChannelInfoWhere>;
  OR?: InputMaybe<Array<DiscussionChannelInfoWhere>>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  discussionId?: InputMaybe<Scalars['String']['input']>;
  discussionId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  discussionId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  discussionId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  discussionId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  discussionId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type DiscussionChannelInfosConnection = {
  __typename?: 'DiscussionChannelInfosConnection';
  edges: Array<DiscussionChannelInfoEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelIssueRelatedIssuesAggregationSelection = {
  __typename?: 'DiscussionChannelIssueRelatedIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelIssueRelatedIssuesNodeAggregateSelection>;
};

export type DiscussionChannelIssueRelatedIssuesNodeAggregateSelection = {
  __typename?: 'DiscussionChannelIssueRelatedIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type DiscussionChannelLabelOptionsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelLabelOptionsAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelLabelOptionsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelLabelOptionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelLabelOptionsNodeAggregationWhereInput>;
};

export type DiscussionChannelLabelOptionsConnectFieldInput = {
  connect?: InputMaybe<Array<FilterOptionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<FilterOptionConnectWhere>;
};

export type DiscussionChannelLabelOptionsConnectedRelationship = {
  __typename?: 'DiscussionChannelLabelOptionsConnectedRelationship';
  node: FilterOptionEventPayload;
};

export type DiscussionChannelLabelOptionsConnection = {
  __typename?: 'DiscussionChannelLabelOptionsConnection';
  edges: Array<DiscussionChannelLabelOptionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelLabelOptionsConnectionSort = {
  node?: InputMaybe<FilterOptionSort>;
};

export type DiscussionChannelLabelOptionsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelLabelOptionsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelLabelOptionsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelLabelOptionsConnectionWhere>>;
  node?: InputMaybe<FilterOptionWhere>;
};

export type DiscussionChannelLabelOptionsCreateFieldInput = {
  node: FilterOptionCreateInput;
};

export type DiscussionChannelLabelOptionsDeleteFieldInput = {
  delete?: InputMaybe<FilterOptionDeleteInput>;
  where?: InputMaybe<DiscussionChannelLabelOptionsConnectionWhere>;
};

export type DiscussionChannelLabelOptionsDisconnectFieldInput = {
  disconnect?: InputMaybe<FilterOptionDisconnectInput>;
  where?: InputMaybe<DiscussionChannelLabelOptionsConnectionWhere>;
};

export type DiscussionChannelLabelOptionsFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelLabelOptionsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelLabelOptionsCreateFieldInput>>;
};

export type DiscussionChannelLabelOptionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelLabelOptionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelLabelOptionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelLabelOptionsNodeAggregationWhereInput>>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  order_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  value_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  value_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  value_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  value_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  value_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  value_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  value_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  value_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  value_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  value_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelLabelOptionsRelationship = {
  __typename?: 'DiscussionChannelLabelOptionsRelationship';
  cursor: Scalars['String']['output'];
  node: FilterOption;
};

export type DiscussionChannelLabelOptionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<FilterOptionSubscriptionWhere>;
};

export type DiscussionChannelLabelOptionsUpdateConnectionInput = {
  node?: InputMaybe<FilterOptionUpdateInput>;
};

export type DiscussionChannelLabelOptionsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelLabelOptionsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelLabelOptionsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelLabelOptionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelLabelOptionsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelLabelOptionsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelLabelOptionsConnectionWhere>;
};

export type DiscussionChannelListFormat = {
  __typename?: 'DiscussionChannelListFormat';
  aggregateDiscussionChannelsCount: Scalars['Int']['output'];
  discussionChannels: Array<DiscussionChannel>;
};

export type DiscussionChannelListFormatAggregateSelection = {
  __typename?: 'DiscussionChannelListFormatAggregateSelection';
  aggregateDiscussionChannelsCount: IntAggregateSelection;
  count: Scalars['Int']['output'];
};

export type DiscussionChannelListFormatCreateInput = {
  aggregateDiscussionChannelsCount: Scalars['Int']['input'];
};

export type DiscussionChannelListFormatCreatedEvent = {
  __typename?: 'DiscussionChannelListFormatCreatedEvent';
  createdDiscussionChannelListFormat: DiscussionChannelListFormatEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionChannelListFormatDeletedEvent = {
  __typename?: 'DiscussionChannelListFormatDeletedEvent';
  deletedDiscussionChannelListFormat: DiscussionChannelListFormatEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionChannelListFormatEdge = {
  __typename?: 'DiscussionChannelListFormatEdge';
  cursor: Scalars['String']['output'];
  node: DiscussionChannelListFormat;
};

export type DiscussionChannelListFormatEventPayload = {
  __typename?: 'DiscussionChannelListFormatEventPayload';
  aggregateDiscussionChannelsCount: Scalars['Int']['output'];
};

export type DiscussionChannelListFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DiscussionChannelListFormatSort objects to sort DiscussionChannelListFormats by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DiscussionChannelListFormatSort>>;
};

/** Fields to sort DiscussionChannelListFormats by. The order in which sorts are applied is not guaranteed when specifying many fields in one DiscussionChannelListFormatSort object. */
export type DiscussionChannelListFormatSort = {
  aggregateDiscussionChannelsCount?: InputMaybe<SortDirection>;
};

export type DiscussionChannelListFormatSubscriptionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelListFormatSubscriptionWhere>>;
  NOT?: InputMaybe<DiscussionChannelListFormatSubscriptionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelListFormatSubscriptionWhere>>;
  aggregateDiscussionChannelsCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  aggregateDiscussionChannelsCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelListFormatUpdateInput = {
  aggregateDiscussionChannelsCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelListFormatUpdatedEvent = {
  __typename?: 'DiscussionChannelListFormatUpdatedEvent';
  event: EventType;
  previousState: DiscussionChannelListFormatEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedDiscussionChannelListFormat: DiscussionChannelListFormatEventPayload;
};

export type DiscussionChannelListFormatWhere = {
  AND?: InputMaybe<Array<DiscussionChannelListFormatWhere>>;
  NOT?: InputMaybe<DiscussionChannelListFormatWhere>;
  OR?: InputMaybe<Array<DiscussionChannelListFormatWhere>>;
  aggregateDiscussionChannelsCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  aggregateDiscussionChannelsCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelListFormatsConnection = {
  __typename?: 'DiscussionChannelListFormatsConnection';
  edges: Array<DiscussionChannelListFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DiscussionChannelSort objects to sort DiscussionChannels by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DiscussionChannelSort>>;
};

export type DiscussionChannelRelatedIssuesAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelRelatedIssuesAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelRelatedIssuesAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelRelatedIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelRelatedIssuesNodeAggregationWhereInput>;
};

export type DiscussionChannelRelatedIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type DiscussionChannelRelatedIssuesConnectedRelationship = {
  __typename?: 'DiscussionChannelRelatedIssuesConnectedRelationship';
  node: IssueEventPayload;
};

export type DiscussionChannelRelatedIssuesConnection = {
  __typename?: 'DiscussionChannelRelatedIssuesConnection';
  edges: Array<DiscussionChannelRelatedIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelRelatedIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type DiscussionChannelRelatedIssuesConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type DiscussionChannelRelatedIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type DiscussionChannelRelatedIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
};

export type DiscussionChannelRelatedIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
};

export type DiscussionChannelRelatedIssuesFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelRelatedIssuesCreateFieldInput>>;
};

export type DiscussionChannelRelatedIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelRelatedIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelRelatedIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelRelatedIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionChannelRelatedIssuesRelationship = {
  __typename?: 'DiscussionChannelRelatedIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type DiscussionChannelRelatedIssuesRelationshipSubscriptionWhere = {
  node?: InputMaybe<IssueSubscriptionWhere>;
};

export type DiscussionChannelRelatedIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type DiscussionChannelRelatedIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelRelatedIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelRelatedIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelRelatedIssuesDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelRelatedIssuesUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
};

export type DiscussionChannelRelationInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersCreateFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelCreateFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsCreateFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionCreateFieldInput>;
  LabelOptions?: InputMaybe<Array<DiscussionChannelLabelOptionsCreateFieldInput>>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesCreateFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsCreateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersCreateFieldInput>>;
};

export type DiscussionChannelRelationshipCreatedEvent = {
  __typename?: 'DiscussionChannelRelationshipCreatedEvent';
  createdRelationship: DiscussionChannelConnectedRelationships;
  discussionChannel: DiscussionChannelEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type DiscussionChannelRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<DiscussionChannelRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<DiscussionChannelRelationshipsSubscriptionWhere>;
  discussionChannel?: InputMaybe<DiscussionChannelSubscriptionWhere>;
};

export type DiscussionChannelRelationshipDeletedEvent = {
  __typename?: 'DiscussionChannelRelationshipDeletedEvent';
  deletedRelationship: DiscussionChannelConnectedRelationships;
  discussionChannel: DiscussionChannelEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type DiscussionChannelRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<DiscussionChannelRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<DiscussionChannelRelationshipsSubscriptionWhere>;
  discussionChannel?: InputMaybe<DiscussionChannelSubscriptionWhere>;
};

export type DiscussionChannelRelationshipsSubscriptionWhere = {
  Answers?: InputMaybe<DiscussionChannelAnswersRelationshipSubscriptionWhere>;
  Channel?: InputMaybe<DiscussionChannelChannelRelationshipSubscriptionWhere>;
  Comments?: InputMaybe<DiscussionChannelCommentsRelationshipSubscriptionWhere>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionRelationshipSubscriptionWhere>;
  LabelOptions?: InputMaybe<DiscussionChannelLabelOptionsRelationshipSubscriptionWhere>;
  RelatedIssues?: InputMaybe<DiscussionChannelRelatedIssuesRelationshipSubscriptionWhere>;
  SubscribedToNotifications?: InputMaybe<DiscussionChannelSubscribedToNotificationsRelationshipSubscriptionWhere>;
  UpvotedByUsers?: InputMaybe<DiscussionChannelUpvotedByUsersRelationshipSubscriptionWhere>;
};

/** Fields to sort DiscussionChannels by. The order in which sorts are applied is not guaranteed when specifying many fields in one DiscussionChannelSort object. */
export type DiscussionChannelSort = {
  answered?: InputMaybe<SortDirection>;
  archived?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  discussionId?: InputMaybe<SortDirection>;
  emoji?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  locked?: InputMaybe<SortDirection>;
  weightedVotesCount?: InputMaybe<SortDirection>;
};

export type DiscussionChannelSubscribedToNotificationsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelSubscribedToNotificationsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelSubscribedToNotificationsNodeAggregationWhereInput>;
};

export type DiscussionChannelSubscribedToNotificationsConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type DiscussionChannelSubscribedToNotificationsConnectOrCreateFieldInput = {
  onCreate: DiscussionChannelSubscribedToNotificationsConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type DiscussionChannelSubscribedToNotificationsConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type DiscussionChannelSubscribedToNotificationsConnectedRelationship = {
  __typename?: 'DiscussionChannelSubscribedToNotificationsConnectedRelationship';
  node: UserEventPayload;
};

export type DiscussionChannelSubscribedToNotificationsConnection = {
  __typename?: 'DiscussionChannelSubscribedToNotificationsConnection';
  edges: Array<DiscussionChannelSubscribedToNotificationsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelSubscribedToNotificationsConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type DiscussionChannelSubscribedToNotificationsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelSubscribedToNotificationsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type DiscussionChannelSubscribedToNotificationsCreateFieldInput = {
  node: UserCreateInput;
};

export type DiscussionChannelSubscribedToNotificationsDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<DiscussionChannelSubscribedToNotificationsConnectionWhere>;
};

export type DiscussionChannelSubscribedToNotificationsDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<DiscussionChannelSubscribedToNotificationsConnectionWhere>;
};

export type DiscussionChannelSubscribedToNotificationsFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsCreateFieldInput>>;
};

export type DiscussionChannelSubscribedToNotificationsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelSubscribedToNotificationsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelSubscribedToNotificationsRelationship = {
  __typename?: 'DiscussionChannelSubscribedToNotificationsRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type DiscussionChannelSubscribedToNotificationsRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type DiscussionChannelSubscribedToNotificationsUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type DiscussionChannelSubscribedToNotificationsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelSubscribedToNotificationsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelSubscribedToNotificationsConnectionWhere>;
};

export type DiscussionChannelSubscriptionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelSubscriptionWhere>>;
  NOT?: InputMaybe<DiscussionChannelSubscriptionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelSubscriptionWhere>>;
  answered?: InputMaybe<Scalars['Boolean']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionId?: InputMaybe<Scalars['ID']['input']>;
  discussionId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  discussionId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  discussionId_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  discussionId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  emoji_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_IN?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
  weightedVotesCount_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelUpdateInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersUpdateFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelUpdateFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsUpdateFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionUpdateFieldInput>;
  LabelOptions?: InputMaybe<Array<DiscussionChannelLabelOptionsUpdateFieldInput>>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesUpdateFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<DiscussionChannelSubscribedToNotificationsUpdateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersUpdateFieldInput>>;
  answered?: InputMaybe<Scalars['Boolean']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  discussionId?: InputMaybe<Scalars['ID']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_ADD?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_DIVIDE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MULTIPLY?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUBTRACT?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelUpdatedEvent = {
  __typename?: 'DiscussionChannelUpdatedEvent';
  event: EventType;
  previousState: DiscussionChannelEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedDiscussionChannel: DiscussionChannelEventPayload;
};

export type DiscussionChannelUpvotedByUsersAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelUpvotedByUsersAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelUpvotedByUsersAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelUpvotedByUsersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelUpvotedByUsersNodeAggregationWhereInput>;
};

export type DiscussionChannelUpvotedByUsersConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type DiscussionChannelUpvotedByUsersConnectOrCreateFieldInput = {
  onCreate: DiscussionChannelUpvotedByUsersConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type DiscussionChannelUpvotedByUsersConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type DiscussionChannelUpvotedByUsersConnectedRelationship = {
  __typename?: 'DiscussionChannelUpvotedByUsersConnectedRelationship';
  node: UserEventPayload;
};

export type DiscussionChannelUpvotedByUsersConnection = {
  __typename?: 'DiscussionChannelUpvotedByUsersConnection';
  edges: Array<DiscussionChannelUpvotedByUsersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelUpvotedByUsersConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type DiscussionChannelUpvotedByUsersConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type DiscussionChannelUpvotedByUsersCreateFieldInput = {
  node: UserCreateInput;
};

export type DiscussionChannelUpvotedByUsersDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
};

export type DiscussionChannelUpvotedByUsersDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
};

export type DiscussionChannelUpvotedByUsersFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelUpvotedByUsersCreateFieldInput>>;
};

export type DiscussionChannelUpvotedByUsersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelUpvotedByUsersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelUpvotedByUsersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelUpvotedByUsersNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelUpvotedByUsersRelationship = {
  __typename?: 'DiscussionChannelUpvotedByUsersRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type DiscussionChannelUpvotedByUsersRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type DiscussionChannelUpvotedByUsersUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type DiscussionChannelUpvotedByUsersUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelUpvotedByUsersCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelUpvotedByUsersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelUpvotedByUsersDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelUpvotedByUsersUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
};

export type DiscussionChannelUserSubscribedToNotificationsAggregationSelection = {
  __typename?: 'DiscussionChannelUserSubscribedToNotificationsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelUserSubscribedToNotificationsNodeAggregateSelection>;
};

export type DiscussionChannelUserSubscribedToNotificationsNodeAggregateSelection = {
  __typename?: 'DiscussionChannelUserSubscribedToNotificationsNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type DiscussionChannelUserUpvotedByUsersAggregationSelection = {
  __typename?: 'DiscussionChannelUserUpvotedByUsersAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelUserUpvotedByUsersNodeAggregateSelection>;
};

export type DiscussionChannelUserUpvotedByUsersNodeAggregateSelection = {
  __typename?: 'DiscussionChannelUserUpvotedByUsersNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type DiscussionChannelWhere = {
  AND?: InputMaybe<Array<DiscussionChannelWhere>>;
  AnswersAggregate?: InputMaybe<DiscussionChannelAnswersAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelAnswersConnections match this filter */
  AnswersConnection_ALL?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelAnswersConnections match this filter */
  AnswersConnection_NONE?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelAnswersConnections match this filter */
  AnswersConnection_SINGLE?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelAnswersConnections match this filter */
  AnswersConnection_SOME?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  /** Return DiscussionChannels where all of the related Comments match this filter */
  Answers_ALL?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where none of the related Comments match this filter */
  Answers_NONE?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where one of the related Comments match this filter */
  Answers_SINGLE?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where some of the related Comments match this filter */
  Answers_SOME?: InputMaybe<CommentWhere>;
  Channel?: InputMaybe<ChannelWhere>;
  ChannelAggregate?: InputMaybe<DiscussionChannelChannelAggregateInput>;
  ChannelConnection?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
  ChannelConnection_NOT?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
  Channel_NOT?: InputMaybe<ChannelWhere>;
  CommentsAggregate?: InputMaybe<DiscussionChannelCommentsAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  /** Return DiscussionChannels where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  Discussion?: InputMaybe<DiscussionWhere>;
  DiscussionAggregate?: InputMaybe<DiscussionChannelDiscussionAggregateInput>;
  DiscussionConnection?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
  DiscussionConnection_NOT?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
  Discussion_NOT?: InputMaybe<DiscussionWhere>;
  LabelOptionsAggregate?: InputMaybe<DiscussionChannelLabelOptionsAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelLabelOptionsConnections match this filter */
  LabelOptionsConnection_ALL?: InputMaybe<DiscussionChannelLabelOptionsConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelLabelOptionsConnections match this filter */
  LabelOptionsConnection_NONE?: InputMaybe<DiscussionChannelLabelOptionsConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelLabelOptionsConnections match this filter */
  LabelOptionsConnection_SINGLE?: InputMaybe<DiscussionChannelLabelOptionsConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelLabelOptionsConnections match this filter */
  LabelOptionsConnection_SOME?: InputMaybe<DiscussionChannelLabelOptionsConnectionWhere>;
  /** Return DiscussionChannels where all of the related FilterOptions match this filter */
  LabelOptions_ALL?: InputMaybe<FilterOptionWhere>;
  /** Return DiscussionChannels where none of the related FilterOptions match this filter */
  LabelOptions_NONE?: InputMaybe<FilterOptionWhere>;
  /** Return DiscussionChannels where one of the related FilterOptions match this filter */
  LabelOptions_SINGLE?: InputMaybe<FilterOptionWhere>;
  /** Return DiscussionChannels where some of the related FilterOptions match this filter */
  LabelOptions_SOME?: InputMaybe<FilterOptionWhere>;
  NOT?: InputMaybe<DiscussionChannelWhere>;
  OR?: InputMaybe<Array<DiscussionChannelWhere>>;
  RelatedIssuesAggregate?: InputMaybe<DiscussionChannelRelatedIssuesAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_ALL?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_NONE?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SINGLE?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SOME?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  /** Return DiscussionChannels where all of the related Issues match this filter */
  RelatedIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return DiscussionChannels where none of the related Issues match this filter */
  RelatedIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return DiscussionChannels where one of the related Issues match this filter */
  RelatedIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return DiscussionChannels where some of the related Issues match this filter */
  RelatedIssues_SOME?: InputMaybe<IssueWhere>;
  SubscribedToNotificationsAggregate?: InputMaybe<DiscussionChannelSubscribedToNotificationsAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_ALL?: InputMaybe<DiscussionChannelSubscribedToNotificationsConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_NONE?: InputMaybe<DiscussionChannelSubscribedToNotificationsConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_SINGLE?: InputMaybe<DiscussionChannelSubscribedToNotificationsConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_SOME?: InputMaybe<DiscussionChannelSubscribedToNotificationsConnectionWhere>;
  /** Return DiscussionChannels where all of the related Users match this filter */
  SubscribedToNotifications_ALL?: InputMaybe<UserWhere>;
  /** Return DiscussionChannels where none of the related Users match this filter */
  SubscribedToNotifications_NONE?: InputMaybe<UserWhere>;
  /** Return DiscussionChannels where one of the related Users match this filter */
  SubscribedToNotifications_SINGLE?: InputMaybe<UserWhere>;
  /** Return DiscussionChannels where some of the related Users match this filter */
  SubscribedToNotifications_SOME?: InputMaybe<UserWhere>;
  UpvotedByUsersAggregate?: InputMaybe<DiscussionChannelUpvotedByUsersAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_ALL?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_NONE?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_SINGLE?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_SOME?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  /** Return DiscussionChannels where all of the related Users match this filter */
  UpvotedByUsers_ALL?: InputMaybe<UserWhere>;
  /** Return DiscussionChannels where none of the related Users match this filter */
  UpvotedByUsers_NONE?: InputMaybe<UserWhere>;
  /** Return DiscussionChannels where one of the related Users match this filter */
  UpvotedByUsers_SINGLE?: InputMaybe<UserWhere>;
  /** Return DiscussionChannels where some of the related Users match this filter */
  UpvotedByUsers_SOME?: InputMaybe<UserWhere>;
  answered?: InputMaybe<Scalars['Boolean']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionId?: InputMaybe<Scalars['ID']['input']>;
  discussionId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  discussionId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  discussionId_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  discussionId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  emoji_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_IN?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
  weightedVotesCount_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelsConnection = {
  __typename?: 'DiscussionChannelsConnection';
  edges: Array<DiscussionChannelEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionCommentFeedbackCommentsAggregationSelection = {
  __typename?: 'DiscussionCommentFeedbackCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionCommentFeedbackCommentsNodeAggregateSelection>;
};

export type DiscussionCommentFeedbackCommentsNodeAggregateSelection = {
  __typename?: 'DiscussionCommentFeedbackCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionConnectInput = {
  Album?: InputMaybe<DiscussionAlbumConnectFieldInput>;
  Author?: InputMaybe<DiscussionAuthorConnectFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsConnectFieldInput>>;
  DownloadableFiles?: InputMaybe<Array<DiscussionDownloadableFilesConnectFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsConnectFieldInput>>;
  PastBodyVersions?: InputMaybe<Array<DiscussionPastBodyVersionsConnectFieldInput>>;
  PastTitleVersions?: InputMaybe<Array<DiscussionPastTitleVersionsConnectFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsConnectFieldInput>>;
};

export type DiscussionConnectOrCreateInput = {
  Author?: InputMaybe<DiscussionAuthorConnectOrCreateFieldInput>;
  Tags?: InputMaybe<Array<DiscussionTagsConnectOrCreateFieldInput>>;
};

export type DiscussionConnectWhere = {
  node: DiscussionWhere;
};

export type DiscussionConnectedRelationships = {
  __typename?: 'DiscussionConnectedRelationships';
  Album?: Maybe<DiscussionAlbumConnectedRelationship>;
  Author?: Maybe<DiscussionAuthorConnectedRelationship>;
  DiscussionChannels?: Maybe<DiscussionDiscussionChannelsConnectedRelationship>;
  DownloadableFiles?: Maybe<DiscussionDownloadableFilesConnectedRelationship>;
  FeedbackComments?: Maybe<DiscussionFeedbackCommentsConnectedRelationship>;
  PastBodyVersions?: Maybe<DiscussionPastBodyVersionsConnectedRelationship>;
  PastTitleVersions?: Maybe<DiscussionPastTitleVersionsConnectedRelationship>;
  Tags?: Maybe<DiscussionTagsConnectedRelationship>;
};

export type DiscussionCreateInput = {
  Album?: InputMaybe<DiscussionAlbumFieldInput>;
  Author?: InputMaybe<DiscussionAuthorFieldInput>;
  DiscussionChannels?: InputMaybe<DiscussionDiscussionChannelsFieldInput>;
  DownloadableFiles?: InputMaybe<DiscussionDownloadableFilesFieldInput>;
  FeedbackComments?: InputMaybe<DiscussionFeedbackCommentsFieldInput>;
  PastBodyVersions?: InputMaybe<DiscussionPastBodyVersionsFieldInput>;
  PastTitleVersions?: InputMaybe<DiscussionPastTitleVersionsFieldInput>;
  Tags?: InputMaybe<DiscussionTagsFieldInput>;
  body?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  hasDownload?: InputMaybe<Scalars['Boolean']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  title: Scalars['String']['input'];
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionCreateInputWithChannels = {
  channelConnections: Array<Scalars['String']['input']>;
  discussionCreateInput: DiscussionCreateInput;
};

export type DiscussionCreatedEvent = {
  __typename?: 'DiscussionCreatedEvent';
  createdDiscussion: DiscussionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionDeleteInput = {
  Album?: InputMaybe<DiscussionAlbumDeleteFieldInput>;
  Author?: InputMaybe<DiscussionAuthorDeleteFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsDeleteFieldInput>>;
  DownloadableFiles?: InputMaybe<Array<DiscussionDownloadableFilesDeleteFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsDeleteFieldInput>>;
  PastBodyVersions?: InputMaybe<Array<DiscussionPastBodyVersionsDeleteFieldInput>>;
  PastTitleVersions?: InputMaybe<Array<DiscussionPastTitleVersionsDeleteFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsDeleteFieldInput>>;
};

export type DiscussionDeletedEvent = {
  __typename?: 'DiscussionDeletedEvent';
  deletedDiscussion: DiscussionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionDisconnectInput = {
  Album?: InputMaybe<DiscussionAlbumDisconnectFieldInput>;
  Author?: InputMaybe<DiscussionAuthorDisconnectFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsDisconnectFieldInput>>;
  DownloadableFiles?: InputMaybe<Array<DiscussionDownloadableFilesDisconnectFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsDisconnectFieldInput>>;
  PastBodyVersions?: InputMaybe<Array<DiscussionPastBodyVersionsDisconnectFieldInput>>;
  PastTitleVersions?: InputMaybe<Array<DiscussionPastTitleVersionsDisconnectFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsDisconnectFieldInput>>;
};

export type DiscussionDiscussionChannelDiscussionChannelsAggregationSelection = {
  __typename?: 'DiscussionDiscussionChannelDiscussionChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionDiscussionChannelDiscussionChannelsNodeAggregateSelection>;
};

export type DiscussionDiscussionChannelDiscussionChannelsNodeAggregateSelection = {
  __typename?: 'DiscussionDiscussionChannelDiscussionChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionDiscussionChannelsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionDiscussionChannelsAggregateInput>>;
  NOT?: InputMaybe<DiscussionDiscussionChannelsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionDiscussionChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionDiscussionChannelsNodeAggregationWhereInput>;
};

export type DiscussionDiscussionChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionChannelConnectWhere>;
};

export type DiscussionDiscussionChannelsConnectedRelationship = {
  __typename?: 'DiscussionDiscussionChannelsConnectedRelationship';
  node: DiscussionChannelEventPayload;
};

export type DiscussionDiscussionChannelsConnection = {
  __typename?: 'DiscussionDiscussionChannelsConnection';
  edges: Array<DiscussionDiscussionChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionDiscussionChannelsConnectionSort = {
  node?: InputMaybe<DiscussionChannelSort>;
};

export type DiscussionDiscussionChannelsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionDiscussionChannelsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionDiscussionChannelsConnectionWhere>>;
  node?: InputMaybe<DiscussionChannelWhere>;
};

export type DiscussionDiscussionChannelsCreateFieldInput = {
  node: DiscussionChannelCreateInput;
};

export type DiscussionDiscussionChannelsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
};

export type DiscussionDiscussionChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionChannelDisconnectInput>;
  where?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
};

export type DiscussionDiscussionChannelsFieldInput = {
  connect?: InputMaybe<Array<DiscussionDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionDiscussionChannelsCreateFieldInput>>;
};

export type DiscussionDiscussionChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionDiscussionChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionDiscussionChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionDiscussionChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionDiscussionChannelsRelationship = {
  __typename?: 'DiscussionDiscussionChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type DiscussionDiscussionChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<DiscussionChannelSubscriptionWhere>;
};

export type DiscussionDiscussionChannelsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionChannelUpdateInput>;
};

export type DiscussionDiscussionChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionDiscussionChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionDiscussionChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionDiscussionChannelsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionDiscussionChannelsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
};

export type DiscussionDownloadableFileDownloadableFilesAggregationSelection = {
  __typename?: 'DiscussionDownloadableFileDownloadableFilesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionDownloadableFileDownloadableFilesNodeAggregateSelection>;
};

export type DiscussionDownloadableFileDownloadableFilesNodeAggregateSelection = {
  __typename?: 'DiscussionDownloadableFileDownloadableFilesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  downloadCountTotal: IntAggregateSelection;
  downloadCountUnique: IntAggregateSelection;
  fileName: StringAggregateSelection;
  id: IdAggregateSelection;
  paywallExpiresAt: DateTimeAggregateSelection;
  priceCents: IntAggregateSelection;
  priceCurrency: StringAggregateSelection;
  scanCheckedAt: DateTimeAggregateSelection;
  size: IntAggregateSelection;
  stripePriceId: StringAggregateSelection;
  stripeProductId: StringAggregateSelection;
  url: StringAggregateSelection;
};

export type DiscussionDownloadableFilesAggregateInput = {
  AND?: InputMaybe<Array<DiscussionDownloadableFilesAggregateInput>>;
  NOT?: InputMaybe<DiscussionDownloadableFilesAggregateInput>;
  OR?: InputMaybe<Array<DiscussionDownloadableFilesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionDownloadableFilesNodeAggregationWhereInput>;
};

export type DiscussionDownloadableFilesConnectFieldInput = {
  connect?: InputMaybe<Array<DownloadableFileConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DownloadableFileConnectWhere>;
};

export type DiscussionDownloadableFilesConnectedRelationship = {
  __typename?: 'DiscussionDownloadableFilesConnectedRelationship';
  node: DownloadableFileEventPayload;
};

export type DiscussionDownloadableFilesConnection = {
  __typename?: 'DiscussionDownloadableFilesConnection';
  edges: Array<DiscussionDownloadableFilesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionDownloadableFilesConnectionSort = {
  node?: InputMaybe<DownloadableFileSort>;
};

export type DiscussionDownloadableFilesConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionDownloadableFilesConnectionWhere>>;
  NOT?: InputMaybe<DiscussionDownloadableFilesConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionDownloadableFilesConnectionWhere>>;
  node?: InputMaybe<DownloadableFileWhere>;
};

export type DiscussionDownloadableFilesCreateFieldInput = {
  node: DownloadableFileCreateInput;
};

export type DiscussionDownloadableFilesDeleteFieldInput = {
  delete?: InputMaybe<DownloadableFileDeleteInput>;
  where?: InputMaybe<DiscussionDownloadableFilesConnectionWhere>;
};

export type DiscussionDownloadableFilesDisconnectFieldInput = {
  disconnect?: InputMaybe<DownloadableFileDisconnectInput>;
  where?: InputMaybe<DiscussionDownloadableFilesConnectionWhere>;
};

export type DiscussionDownloadableFilesFieldInput = {
  connect?: InputMaybe<Array<DiscussionDownloadableFilesConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionDownloadableFilesCreateFieldInput>>;
};

export type DiscussionDownloadableFilesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionDownloadableFilesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionDownloadableFilesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionDownloadableFilesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  downloadCountTotal_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  paywallExpiresAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  scanCheckedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  size_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  size_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionDownloadableFilesRelationship = {
  __typename?: 'DiscussionDownloadableFilesRelationship';
  cursor: Scalars['String']['output'];
  node: DownloadableFile;
};

export type DiscussionDownloadableFilesRelationshipSubscriptionWhere = {
  node?: InputMaybe<DownloadableFileSubscriptionWhere>;
};

export type DiscussionDownloadableFilesUpdateConnectionInput = {
  node?: InputMaybe<DownloadableFileUpdateInput>;
};

export type DiscussionDownloadableFilesUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionDownloadableFilesConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionDownloadableFilesCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionDownloadableFilesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionDownloadableFilesDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionDownloadableFilesUpdateConnectionInput>;
  where?: InputMaybe<DiscussionDownloadableFilesConnectionWhere>;
};

export type DiscussionEdge = {
  __typename?: 'DiscussionEdge';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type DiscussionEventPayload = {
  __typename?: 'DiscussionEventPayload';
  body?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  hasDownload?: Maybe<Scalars['Boolean']['output']>;
  hasSensitiveContent?: Maybe<Scalars['Boolean']['output']>;
  hasSpoiler?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  title: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type DiscussionFeedbackCommentsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionFeedbackCommentsAggregateInput>>;
  NOT?: InputMaybe<DiscussionFeedbackCommentsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionFeedbackCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionFeedbackCommentsNodeAggregationWhereInput>;
};

export type DiscussionFeedbackCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type DiscussionFeedbackCommentsConnectedRelationship = {
  __typename?: 'DiscussionFeedbackCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type DiscussionFeedbackCommentsConnection = {
  __typename?: 'DiscussionFeedbackCommentsConnection';
  edges: Array<DiscussionFeedbackCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionFeedbackCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type DiscussionFeedbackCommentsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionFeedbackCommentsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionFeedbackCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type DiscussionFeedbackCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type DiscussionFeedbackCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
};

export type DiscussionFeedbackCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
};

export type DiscussionFeedbackCommentsFieldInput = {
  connect?: InputMaybe<Array<DiscussionFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionFeedbackCommentsCreateFieldInput>>;
};

export type DiscussionFeedbackCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionFeedbackCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionFeedbackCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionFeedbackCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionFeedbackCommentsRelationship = {
  __typename?: 'DiscussionFeedbackCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type DiscussionFeedbackCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type DiscussionFeedbackCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type DiscussionFeedbackCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionFeedbackCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionFeedbackCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionFeedbackCommentsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionFeedbackCommentsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
};

export type DiscussionInfo = {
  __typename?: 'DiscussionInfo';
  Author?: Maybe<User>;
  DiscussionChannels?: Maybe<Array<Maybe<DiscussionChannelInfo>>>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type DiscussionInfoAggregateSelection = {
  __typename?: 'DiscussionInfoAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type DiscussionInfoCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type DiscussionInfoCreatedEvent = {
  __typename?: 'DiscussionInfoCreatedEvent';
  createdDiscussionInfo: DiscussionInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionInfoDeletedEvent = {
  __typename?: 'DiscussionInfoDeletedEvent';
  deletedDiscussionInfo: DiscussionInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DiscussionInfoEdge = {
  __typename?: 'DiscussionInfoEdge';
  cursor: Scalars['String']['output'];
  node: DiscussionInfo;
};

export type DiscussionInfoEventPayload = {
  __typename?: 'DiscussionInfoEventPayload';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type DiscussionInfoOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DiscussionInfoSort objects to sort DiscussionInfos by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DiscussionInfoSort>>;
};

/** Fields to sort DiscussionInfos by. The order in which sorts are applied is not guaranteed when specifying many fields in one DiscussionInfoSort object. */
export type DiscussionInfoSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
};

export type DiscussionInfoSubscriptionWhere = {
  AND?: InputMaybe<Array<DiscussionInfoSubscriptionWhere>>;
  NOT?: InputMaybe<DiscussionInfoSubscriptionWhere>;
  OR?: InputMaybe<Array<DiscussionInfoSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type DiscussionInfoUpdateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type DiscussionInfoUpdatedEvent = {
  __typename?: 'DiscussionInfoUpdatedEvent';
  event: EventType;
  previousState: DiscussionInfoEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedDiscussionInfo: DiscussionInfoEventPayload;
};

export type DiscussionInfoWhere = {
  AND?: InputMaybe<Array<DiscussionInfoWhere>>;
  NOT?: InputMaybe<DiscussionInfoWhere>;
  OR?: InputMaybe<Array<DiscussionInfoWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type DiscussionInfosConnection = {
  __typename?: 'DiscussionInfosConnection';
  edges: Array<DiscussionInfoEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionListOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<SortType>;
  timeFrame?: InputMaybe<TimeFrame>;
};

export type DiscussionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DiscussionSort objects to sort Discussions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DiscussionSort>>;
};

export type DiscussionPastBodyVersionsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionPastBodyVersionsAggregateInput>>;
  NOT?: InputMaybe<DiscussionPastBodyVersionsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionPastBodyVersionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionPastBodyVersionsNodeAggregationWhereInput>;
};

export type DiscussionPastBodyVersionsConnectFieldInput = {
  connect?: InputMaybe<Array<TextVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TextVersionConnectWhere>;
};

export type DiscussionPastBodyVersionsConnectedRelationship = {
  __typename?: 'DiscussionPastBodyVersionsConnectedRelationship';
  node: TextVersionEventPayload;
};

export type DiscussionPastBodyVersionsConnection = {
  __typename?: 'DiscussionPastBodyVersionsConnection';
  edges: Array<DiscussionPastBodyVersionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionPastBodyVersionsConnectionSort = {
  node?: InputMaybe<TextVersionSort>;
};

export type DiscussionPastBodyVersionsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionPastBodyVersionsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionPastBodyVersionsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionPastBodyVersionsConnectionWhere>>;
  node?: InputMaybe<TextVersionWhere>;
};

export type DiscussionPastBodyVersionsCreateFieldInput = {
  node: TextVersionCreateInput;
};

export type DiscussionPastBodyVersionsDeleteFieldInput = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<DiscussionPastBodyVersionsConnectionWhere>;
};

export type DiscussionPastBodyVersionsDisconnectFieldInput = {
  disconnect?: InputMaybe<TextVersionDisconnectInput>;
  where?: InputMaybe<DiscussionPastBodyVersionsConnectionWhere>;
};

export type DiscussionPastBodyVersionsFieldInput = {
  connect?: InputMaybe<Array<DiscussionPastBodyVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionPastBodyVersionsCreateFieldInput>>;
};

export type DiscussionPastBodyVersionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionPastBodyVersionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionPastBodyVersionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionPastBodyVersionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionPastBodyVersionsRelationship = {
  __typename?: 'DiscussionPastBodyVersionsRelationship';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type DiscussionPastBodyVersionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TextVersionSubscriptionWhere>;
};

export type DiscussionPastBodyVersionsUpdateConnectionInput = {
  node?: InputMaybe<TextVersionUpdateInput>;
};

export type DiscussionPastBodyVersionsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionPastBodyVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionPastBodyVersionsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionPastBodyVersionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionPastBodyVersionsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionPastBodyVersionsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionPastBodyVersionsConnectionWhere>;
};

export type DiscussionPastTitleVersionsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionPastTitleVersionsAggregateInput>>;
  NOT?: InputMaybe<DiscussionPastTitleVersionsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionPastTitleVersionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionPastTitleVersionsNodeAggregationWhereInput>;
};

export type DiscussionPastTitleVersionsConnectFieldInput = {
  connect?: InputMaybe<Array<TextVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TextVersionConnectWhere>;
};

export type DiscussionPastTitleVersionsConnectedRelationship = {
  __typename?: 'DiscussionPastTitleVersionsConnectedRelationship';
  node: TextVersionEventPayload;
};

export type DiscussionPastTitleVersionsConnection = {
  __typename?: 'DiscussionPastTitleVersionsConnection';
  edges: Array<DiscussionPastTitleVersionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionPastTitleVersionsConnectionSort = {
  node?: InputMaybe<TextVersionSort>;
};

export type DiscussionPastTitleVersionsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionPastTitleVersionsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionPastTitleVersionsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionPastTitleVersionsConnectionWhere>>;
  node?: InputMaybe<TextVersionWhere>;
};

export type DiscussionPastTitleVersionsCreateFieldInput = {
  node: TextVersionCreateInput;
};

export type DiscussionPastTitleVersionsDeleteFieldInput = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<DiscussionPastTitleVersionsConnectionWhere>;
};

export type DiscussionPastTitleVersionsDisconnectFieldInput = {
  disconnect?: InputMaybe<TextVersionDisconnectInput>;
  where?: InputMaybe<DiscussionPastTitleVersionsConnectionWhere>;
};

export type DiscussionPastTitleVersionsFieldInput = {
  connect?: InputMaybe<Array<DiscussionPastTitleVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionPastTitleVersionsCreateFieldInput>>;
};

export type DiscussionPastTitleVersionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionPastTitleVersionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionPastTitleVersionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionPastTitleVersionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionPastTitleVersionsRelationship = {
  __typename?: 'DiscussionPastTitleVersionsRelationship';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type DiscussionPastTitleVersionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TextVersionSubscriptionWhere>;
};

export type DiscussionPastTitleVersionsUpdateConnectionInput = {
  node?: InputMaybe<TextVersionUpdateInput>;
};

export type DiscussionPastTitleVersionsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionPastTitleVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionPastTitleVersionsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionPastTitleVersionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionPastTitleVersionsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionPastTitleVersionsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionPastTitleVersionsConnectionWhere>;
};

export type DiscussionRelationInput = {
  Album?: InputMaybe<DiscussionAlbumCreateFieldInput>;
  Author?: InputMaybe<DiscussionAuthorCreateFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsCreateFieldInput>>;
  DownloadableFiles?: InputMaybe<Array<DiscussionDownloadableFilesCreateFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsCreateFieldInput>>;
  PastBodyVersions?: InputMaybe<Array<DiscussionPastBodyVersionsCreateFieldInput>>;
  PastTitleVersions?: InputMaybe<Array<DiscussionPastTitleVersionsCreateFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsCreateFieldInput>>;
};

export type DiscussionRelationshipCreatedEvent = {
  __typename?: 'DiscussionRelationshipCreatedEvent';
  createdRelationship: DiscussionConnectedRelationships;
  discussion: DiscussionEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type DiscussionRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<DiscussionRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<DiscussionRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<DiscussionRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<DiscussionRelationshipsSubscriptionWhere>;
  discussion?: InputMaybe<DiscussionSubscriptionWhere>;
};

export type DiscussionRelationshipDeletedEvent = {
  __typename?: 'DiscussionRelationshipDeletedEvent';
  deletedRelationship: DiscussionConnectedRelationships;
  discussion: DiscussionEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type DiscussionRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<DiscussionRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<DiscussionRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<DiscussionRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<DiscussionRelationshipsSubscriptionWhere>;
  discussion?: InputMaybe<DiscussionSubscriptionWhere>;
};

export type DiscussionRelationshipsSubscriptionWhere = {
  Album?: InputMaybe<DiscussionAlbumRelationshipSubscriptionWhere>;
  Author?: InputMaybe<DiscussionAuthorRelationshipSubscriptionWhere>;
  DiscussionChannels?: InputMaybe<DiscussionDiscussionChannelsRelationshipSubscriptionWhere>;
  DownloadableFiles?: InputMaybe<DiscussionDownloadableFilesRelationshipSubscriptionWhere>;
  FeedbackComments?: InputMaybe<DiscussionFeedbackCommentsRelationshipSubscriptionWhere>;
  PastBodyVersions?: InputMaybe<DiscussionPastBodyVersionsRelationshipSubscriptionWhere>;
  PastTitleVersions?: InputMaybe<DiscussionPastTitleVersionsRelationshipSubscriptionWhere>;
  Tags?: InputMaybe<DiscussionTagsRelationshipSubscriptionWhere>;
};

/** Fields to sort Discussions by. The order in which sorts are applied is not guaranteed when specifying many fields in one DiscussionSort object. */
export type DiscussionSort = {
  body?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  hasDownload?: InputMaybe<SortDirection>;
  hasSensitiveContent?: InputMaybe<SortDirection>;
  hasSpoiler?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DiscussionSubscriptionWhere = {
  AND?: InputMaybe<Array<DiscussionSubscriptionWhere>>;
  NOT?: InputMaybe<DiscussionSubscriptionWhere>;
  OR?: InputMaybe<Array<DiscussionSubscriptionWhere>>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  hasDownload?: InputMaybe<Scalars['Boolean']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionTagTagsAggregationSelection = {
  __typename?: 'DiscussionTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionTagTagsNodeAggregateSelection>;
};

export type DiscussionTagTagsNodeAggregateSelection = {
  __typename?: 'DiscussionTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type DiscussionTagsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionTagsAggregateInput>>;
  NOT?: InputMaybe<DiscussionTagsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionTagsNodeAggregationWhereInput>;
};

export type DiscussionTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type DiscussionTagsConnectOrCreateFieldInput = {
  onCreate: DiscussionTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type DiscussionTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type DiscussionTagsConnectedRelationship = {
  __typename?: 'DiscussionTagsConnectedRelationship';
  node: TagEventPayload;
};

export type DiscussionTagsConnection = {
  __typename?: 'DiscussionTagsConnection';
  edges: Array<DiscussionTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type DiscussionTagsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionTagsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionTagsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type DiscussionTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type DiscussionTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<DiscussionTagsConnectionWhere>;
};

export type DiscussionTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<DiscussionTagsConnectionWhere>;
};

export type DiscussionTagsFieldInput = {
  connect?: InputMaybe<Array<DiscussionTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionTagsCreateFieldInput>>;
};

export type DiscussionTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionTagsRelationship = {
  __typename?: 'DiscussionTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type DiscussionTagsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TagSubscriptionWhere>;
};

export type DiscussionTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type DiscussionTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionTagsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionTagsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionTagsConnectionWhere>;
};

export type DiscussionTextVersionPastBodyVersionsAggregationSelection = {
  __typename?: 'DiscussionTextVersionPastBodyVersionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionTextVersionPastBodyVersionsNodeAggregateSelection>;
};

export type DiscussionTextVersionPastBodyVersionsNodeAggregateSelection = {
  __typename?: 'DiscussionTextVersionPastBodyVersionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type DiscussionTextVersionPastTitleVersionsAggregationSelection = {
  __typename?: 'DiscussionTextVersionPastTitleVersionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionTextVersionPastTitleVersionsNodeAggregateSelection>;
};

export type DiscussionTextVersionPastTitleVersionsNodeAggregateSelection = {
  __typename?: 'DiscussionTextVersionPastTitleVersionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type DiscussionUpdateInput = {
  Album?: InputMaybe<DiscussionAlbumUpdateFieldInput>;
  Author?: InputMaybe<DiscussionAuthorUpdateFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsUpdateFieldInput>>;
  DownloadableFiles?: InputMaybe<Array<DiscussionDownloadableFilesUpdateFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsUpdateFieldInput>>;
  PastBodyVersions?: InputMaybe<Array<DiscussionPastBodyVersionsUpdateFieldInput>>;
  PastTitleVersions?: InputMaybe<Array<DiscussionPastTitleVersionsUpdateFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsUpdateFieldInput>>;
  body?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  hasDownload?: InputMaybe<Scalars['Boolean']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type DiscussionUpdatedEvent = {
  __typename?: 'DiscussionUpdatedEvent';
  event: EventType;
  previousState: DiscussionEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedDiscussion: DiscussionEventPayload;
};

export type DiscussionUserAuthorAggregationSelection = {
  __typename?: 'DiscussionUserAuthorAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionUserAuthorNodeAggregateSelection>;
};

export type DiscussionUserAuthorNodeAggregateSelection = {
  __typename?: 'DiscussionUserAuthorNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type DiscussionWhere = {
  AND?: InputMaybe<Array<DiscussionWhere>>;
  Album?: InputMaybe<AlbumWhere>;
  AlbumAggregate?: InputMaybe<DiscussionAlbumAggregateInput>;
  AlbumConnection?: InputMaybe<DiscussionAlbumConnectionWhere>;
  AlbumConnection_NOT?: InputMaybe<DiscussionAlbumConnectionWhere>;
  Album_NOT?: InputMaybe<AlbumWhere>;
  Author?: InputMaybe<UserWhere>;
  AuthorAggregate?: InputMaybe<DiscussionAuthorAggregateInput>;
  AuthorConnection?: InputMaybe<DiscussionAuthorConnectionWhere>;
  AuthorConnection_NOT?: InputMaybe<DiscussionAuthorConnectionWhere>;
  Author_NOT?: InputMaybe<UserWhere>;
  DiscussionChannelsAggregate?: InputMaybe<DiscussionDiscussionChannelsAggregateInput>;
  /** Return Discussions where all of the related DiscussionDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_ALL?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  /** Return Discussions where none of the related DiscussionDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_NONE?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  /** Return Discussions where one of the related DiscussionDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_SINGLE?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  /** Return Discussions where some of the related DiscussionDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_SOME?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  /** Return Discussions where all of the related DiscussionChannels match this filter */
  DiscussionChannels_ALL?: InputMaybe<DiscussionChannelWhere>;
  /** Return Discussions where none of the related DiscussionChannels match this filter */
  DiscussionChannels_NONE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Discussions where one of the related DiscussionChannels match this filter */
  DiscussionChannels_SINGLE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Discussions where some of the related DiscussionChannels match this filter */
  DiscussionChannels_SOME?: InputMaybe<DiscussionChannelWhere>;
  DownloadableFilesAggregate?: InputMaybe<DiscussionDownloadableFilesAggregateInput>;
  /** Return Discussions where all of the related DiscussionDownloadableFilesConnections match this filter */
  DownloadableFilesConnection_ALL?: InputMaybe<DiscussionDownloadableFilesConnectionWhere>;
  /** Return Discussions where none of the related DiscussionDownloadableFilesConnections match this filter */
  DownloadableFilesConnection_NONE?: InputMaybe<DiscussionDownloadableFilesConnectionWhere>;
  /** Return Discussions where one of the related DiscussionDownloadableFilesConnections match this filter */
  DownloadableFilesConnection_SINGLE?: InputMaybe<DiscussionDownloadableFilesConnectionWhere>;
  /** Return Discussions where some of the related DiscussionDownloadableFilesConnections match this filter */
  DownloadableFilesConnection_SOME?: InputMaybe<DiscussionDownloadableFilesConnectionWhere>;
  /** Return Discussions where all of the related DownloadableFiles match this filter */
  DownloadableFiles_ALL?: InputMaybe<DownloadableFileWhere>;
  /** Return Discussions where none of the related DownloadableFiles match this filter */
  DownloadableFiles_NONE?: InputMaybe<DownloadableFileWhere>;
  /** Return Discussions where one of the related DownloadableFiles match this filter */
  DownloadableFiles_SINGLE?: InputMaybe<DownloadableFileWhere>;
  /** Return Discussions where some of the related DownloadableFiles match this filter */
  DownloadableFiles_SOME?: InputMaybe<DownloadableFileWhere>;
  FeedbackCommentsAggregate?: InputMaybe<DiscussionFeedbackCommentsAggregateInput>;
  /** Return Discussions where all of the related DiscussionFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_ALL?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  /** Return Discussions where none of the related DiscussionFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_NONE?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  /** Return Discussions where one of the related DiscussionFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SINGLE?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  /** Return Discussions where some of the related DiscussionFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SOME?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  /** Return Discussions where all of the related Comments match this filter */
  FeedbackComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Discussions where none of the related Comments match this filter */
  FeedbackComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Discussions where one of the related Comments match this filter */
  FeedbackComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Discussions where some of the related Comments match this filter */
  FeedbackComments_SOME?: InputMaybe<CommentWhere>;
  NOT?: InputMaybe<DiscussionWhere>;
  OR?: InputMaybe<Array<DiscussionWhere>>;
  PastBodyVersionsAggregate?: InputMaybe<DiscussionPastBodyVersionsAggregateInput>;
  /** Return Discussions where all of the related DiscussionPastBodyVersionsConnections match this filter */
  PastBodyVersionsConnection_ALL?: InputMaybe<DiscussionPastBodyVersionsConnectionWhere>;
  /** Return Discussions where none of the related DiscussionPastBodyVersionsConnections match this filter */
  PastBodyVersionsConnection_NONE?: InputMaybe<DiscussionPastBodyVersionsConnectionWhere>;
  /** Return Discussions where one of the related DiscussionPastBodyVersionsConnections match this filter */
  PastBodyVersionsConnection_SINGLE?: InputMaybe<DiscussionPastBodyVersionsConnectionWhere>;
  /** Return Discussions where some of the related DiscussionPastBodyVersionsConnections match this filter */
  PastBodyVersionsConnection_SOME?: InputMaybe<DiscussionPastBodyVersionsConnectionWhere>;
  /** Return Discussions where all of the related TextVersions match this filter */
  PastBodyVersions_ALL?: InputMaybe<TextVersionWhere>;
  /** Return Discussions where none of the related TextVersions match this filter */
  PastBodyVersions_NONE?: InputMaybe<TextVersionWhere>;
  /** Return Discussions where one of the related TextVersions match this filter */
  PastBodyVersions_SINGLE?: InputMaybe<TextVersionWhere>;
  /** Return Discussions where some of the related TextVersions match this filter */
  PastBodyVersions_SOME?: InputMaybe<TextVersionWhere>;
  PastTitleVersionsAggregate?: InputMaybe<DiscussionPastTitleVersionsAggregateInput>;
  /** Return Discussions where all of the related DiscussionPastTitleVersionsConnections match this filter */
  PastTitleVersionsConnection_ALL?: InputMaybe<DiscussionPastTitleVersionsConnectionWhere>;
  /** Return Discussions where none of the related DiscussionPastTitleVersionsConnections match this filter */
  PastTitleVersionsConnection_NONE?: InputMaybe<DiscussionPastTitleVersionsConnectionWhere>;
  /** Return Discussions where one of the related DiscussionPastTitleVersionsConnections match this filter */
  PastTitleVersionsConnection_SINGLE?: InputMaybe<DiscussionPastTitleVersionsConnectionWhere>;
  /** Return Discussions where some of the related DiscussionPastTitleVersionsConnections match this filter */
  PastTitleVersionsConnection_SOME?: InputMaybe<DiscussionPastTitleVersionsConnectionWhere>;
  /** Return Discussions where all of the related TextVersions match this filter */
  PastTitleVersions_ALL?: InputMaybe<TextVersionWhere>;
  /** Return Discussions where none of the related TextVersions match this filter */
  PastTitleVersions_NONE?: InputMaybe<TextVersionWhere>;
  /** Return Discussions where one of the related TextVersions match this filter */
  PastTitleVersions_SINGLE?: InputMaybe<TextVersionWhere>;
  /** Return Discussions where some of the related TextVersions match this filter */
  PastTitleVersions_SOME?: InputMaybe<TextVersionWhere>;
  TagsAggregate?: InputMaybe<DiscussionTagsAggregateInput>;
  /** Return Discussions where all of the related DiscussionTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<DiscussionTagsConnectionWhere>;
  /** Return Discussions where none of the related DiscussionTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<DiscussionTagsConnectionWhere>;
  /** Return Discussions where one of the related DiscussionTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<DiscussionTagsConnectionWhere>;
  /** Return Discussions where some of the related DiscussionTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<DiscussionTagsConnectionWhere>;
  /** Return Discussions where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Discussions where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Discussions where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Discussions where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  hasDownload?: InputMaybe<Scalars['Boolean']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionsConnection = {
  __typename?: 'DiscussionsConnection';
  edges: Array<DiscussionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DownloadableFile = {
  __typename?: 'DownloadableFile';
  createdAt: Scalars['DateTime']['output'];
  downloadCountTotal?: Maybe<Scalars['Int']['output']>;
  downloadCountUnique?: Maybe<Scalars['Int']['output']>;
  fileName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  kind: FileKind;
  license?: Maybe<License>;
  licenseAggregate?: Maybe<DownloadableFileLicenseLicenseAggregationSelection>;
  licenseConnection: DownloadableFileLicenseConnection;
  paywallExpiresAt?: Maybe<Scalars['DateTime']['output']>;
  priceCents?: Maybe<Scalars['Int']['output']>;
  priceCurrency?: Maybe<Scalars['String']['output']>;
  priceModel: PriceModel;
  purchasers: Array<Purchase>;
  purchasersAggregate?: Maybe<DownloadableFilePurchasePurchasersAggregationSelection>;
  purchasersConnection: DownloadableFilePurchasersConnection;
  scanCheckedAt?: Maybe<Scalars['DateTime']['output']>;
  scanStatus: ScanStatus;
  size?: Maybe<Scalars['Int']['output']>;
  stripePriceId?: Maybe<Scalars['String']['output']>;
  stripeProductId?: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
  versions: Array<FileVersion>;
  versionsAggregate?: Maybe<DownloadableFileFileVersionVersionsAggregationSelection>;
  versionsConnection: DownloadableFileVersionsConnection;
};


export type DownloadableFileLicenseArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<LicenseOptions>;
  where?: InputMaybe<LicenseWhere>;
};


export type DownloadableFileLicenseAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<LicenseWhere>;
};


export type DownloadableFileLicenseConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DownloadableFileLicenseConnectionSort>>;
  where?: InputMaybe<DownloadableFileLicenseConnectionWhere>;
};


export type DownloadableFilePurchasersArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<PurchaseOptions>;
  where?: InputMaybe<PurchaseWhere>;
};


export type DownloadableFilePurchasersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<PurchaseWhere>;
};


export type DownloadableFilePurchasersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DownloadableFilePurchasersConnectionSort>>;
  where?: InputMaybe<DownloadableFilePurchasersConnectionWhere>;
};


export type DownloadableFileVersionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<FileVersionOptions>;
  where?: InputMaybe<FileVersionWhere>;
};


export type DownloadableFileVersionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<FileVersionWhere>;
};


export type DownloadableFileVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DownloadableFileVersionsConnectionSort>>;
  where?: InputMaybe<DownloadableFileVersionsConnectionWhere>;
};

export type DownloadableFileAggregateSelection = {
  __typename?: 'DownloadableFileAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  downloadCountTotal: IntAggregateSelection;
  downloadCountUnique: IntAggregateSelection;
  fileName: StringAggregateSelection;
  id: IdAggregateSelection;
  paywallExpiresAt: DateTimeAggregateSelection;
  priceCents: IntAggregateSelection;
  priceCurrency: StringAggregateSelection;
  scanCheckedAt: DateTimeAggregateSelection;
  size: IntAggregateSelection;
  stripePriceId: StringAggregateSelection;
  stripeProductId: StringAggregateSelection;
  url: StringAggregateSelection;
};

export type DownloadableFileConnectInput = {
  license?: InputMaybe<DownloadableFileLicenseConnectFieldInput>;
  purchasers?: InputMaybe<Array<DownloadableFilePurchasersConnectFieldInput>>;
  versions?: InputMaybe<Array<DownloadableFileVersionsConnectFieldInput>>;
};

export type DownloadableFileConnectWhere = {
  node: DownloadableFileWhere;
};

export type DownloadableFileConnectedRelationships = {
  __typename?: 'DownloadableFileConnectedRelationships';
  license?: Maybe<DownloadableFileLicenseConnectedRelationship>;
  purchasers?: Maybe<DownloadableFilePurchasersConnectedRelationship>;
  versions?: Maybe<DownloadableFileVersionsConnectedRelationship>;
};

export type DownloadableFileCreateInput = {
  downloadCountTotal?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique?: InputMaybe<Scalars['Int']['input']>;
  fileName: Scalars['String']['input'];
  kind: FileKind;
  license?: InputMaybe<DownloadableFileLicenseFieldInput>;
  paywallExpiresAt?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency?: InputMaybe<Scalars['String']['input']>;
  priceModel?: PriceModel;
  purchasers?: InputMaybe<DownloadableFilePurchasersFieldInput>;
  scanCheckedAt?: InputMaybe<Scalars['DateTime']['input']>;
  scanStatus?: ScanStatus;
  size?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId?: InputMaybe<Scalars['String']['input']>;
  stripeProductId?: InputMaybe<Scalars['String']['input']>;
  url: Scalars['String']['input'];
  versions?: InputMaybe<DownloadableFileVersionsFieldInput>;
};

export type DownloadableFileCreatedEvent = {
  __typename?: 'DownloadableFileCreatedEvent';
  createdDownloadableFile: DownloadableFileEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DownloadableFileDeleteInput = {
  license?: InputMaybe<DownloadableFileLicenseDeleteFieldInput>;
  purchasers?: InputMaybe<Array<DownloadableFilePurchasersDeleteFieldInput>>;
  versions?: InputMaybe<Array<DownloadableFileVersionsDeleteFieldInput>>;
};

export type DownloadableFileDeletedEvent = {
  __typename?: 'DownloadableFileDeletedEvent';
  deletedDownloadableFile: DownloadableFileEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DownloadableFileDisconnectInput = {
  license?: InputMaybe<DownloadableFileLicenseDisconnectFieldInput>;
  purchasers?: InputMaybe<Array<DownloadableFilePurchasersDisconnectFieldInput>>;
  versions?: InputMaybe<Array<DownloadableFileVersionsDisconnectFieldInput>>;
};

export type DownloadableFileEdge = {
  __typename?: 'DownloadableFileEdge';
  cursor: Scalars['String']['output'];
  node: DownloadableFile;
};

export type DownloadableFileEventPayload = {
  __typename?: 'DownloadableFileEventPayload';
  createdAt: Scalars['DateTime']['output'];
  downloadCountTotal?: Maybe<Scalars['Int']['output']>;
  downloadCountUnique?: Maybe<Scalars['Int']['output']>;
  fileName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  kind: FileKind;
  paywallExpiresAt?: Maybe<Scalars['DateTime']['output']>;
  priceCents?: Maybe<Scalars['Int']['output']>;
  priceCurrency?: Maybe<Scalars['String']['output']>;
  priceModel: PriceModel;
  scanCheckedAt?: Maybe<Scalars['DateTime']['output']>;
  scanStatus: ScanStatus;
  size?: Maybe<Scalars['Int']['output']>;
  stripePriceId?: Maybe<Scalars['String']['output']>;
  stripeProductId?: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
};

export type DownloadableFileFileVersionVersionsAggregationSelection = {
  __typename?: 'DownloadableFileFileVersionVersionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DownloadableFileFileVersionVersionsNodeAggregateSelection>;
};

export type DownloadableFileFileVersionVersionsNodeAggregateSelection = {
  __typename?: 'DownloadableFileFileVersionVersionsNodeAggregateSelection';
  changelog: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  fileName: StringAggregateSelection;
  id: IdAggregateSelection;
  size: IntAggregateSelection;
  url: StringAggregateSelection;
};

export type DownloadableFileLicenseAggregateInput = {
  AND?: InputMaybe<Array<DownloadableFileLicenseAggregateInput>>;
  NOT?: InputMaybe<DownloadableFileLicenseAggregateInput>;
  OR?: InputMaybe<Array<DownloadableFileLicenseAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DownloadableFileLicenseNodeAggregationWhereInput>;
};

export type DownloadableFileLicenseConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<LicenseConnectWhere>;
};

export type DownloadableFileLicenseConnectedRelationship = {
  __typename?: 'DownloadableFileLicenseConnectedRelationship';
  node: LicenseEventPayload;
};

export type DownloadableFileLicenseConnection = {
  __typename?: 'DownloadableFileLicenseConnection';
  edges: Array<DownloadableFileLicenseRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DownloadableFileLicenseConnectionSort = {
  node?: InputMaybe<LicenseSort>;
};

export type DownloadableFileLicenseConnectionWhere = {
  AND?: InputMaybe<Array<DownloadableFileLicenseConnectionWhere>>;
  NOT?: InputMaybe<DownloadableFileLicenseConnectionWhere>;
  OR?: InputMaybe<Array<DownloadableFileLicenseConnectionWhere>>;
  node?: InputMaybe<LicenseWhere>;
};

export type DownloadableFileLicenseCreateFieldInput = {
  node: LicenseCreateInput;
};

export type DownloadableFileLicenseDeleteFieldInput = {
  where?: InputMaybe<DownloadableFileLicenseConnectionWhere>;
};

export type DownloadableFileLicenseDisconnectFieldInput = {
  where?: InputMaybe<DownloadableFileLicenseConnectionWhere>;
};

export type DownloadableFileLicenseFieldInput = {
  connect?: InputMaybe<DownloadableFileLicenseConnectFieldInput>;
  create?: InputMaybe<DownloadableFileLicenseCreateFieldInput>;
};

export type DownloadableFileLicenseLicenseAggregationSelection = {
  __typename?: 'DownloadableFileLicenseLicenseAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DownloadableFileLicenseLicenseNodeAggregateSelection>;
};

export type DownloadableFileLicenseLicenseNodeAggregateSelection = {
  __typename?: 'DownloadableFileLicenseLicenseNodeAggregateSelection';
  id: IdAggregateSelection;
  name: StringAggregateSelection;
  shortName: StringAggregateSelection;
  text: StringAggregateSelection;
  url: StringAggregateSelection;
};

export type DownloadableFileLicenseNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DownloadableFileLicenseNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DownloadableFileLicenseNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DownloadableFileLicenseNodeAggregationWhereInput>>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  shortName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  shortName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  shortName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  shortName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  shortName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  shortName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  shortName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  shortName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  shortName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  shortName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DownloadableFileLicenseRelationship = {
  __typename?: 'DownloadableFileLicenseRelationship';
  cursor: Scalars['String']['output'];
  node: License;
};

export type DownloadableFileLicenseRelationshipSubscriptionWhere = {
  node?: InputMaybe<LicenseSubscriptionWhere>;
};

export type DownloadableFileLicenseUpdateConnectionInput = {
  node?: InputMaybe<LicenseUpdateInput>;
};

export type DownloadableFileLicenseUpdateFieldInput = {
  connect?: InputMaybe<DownloadableFileLicenseConnectFieldInput>;
  create?: InputMaybe<DownloadableFileLicenseCreateFieldInput>;
  delete?: InputMaybe<DownloadableFileLicenseDeleteFieldInput>;
  disconnect?: InputMaybe<DownloadableFileLicenseDisconnectFieldInput>;
  update?: InputMaybe<DownloadableFileLicenseUpdateConnectionInput>;
  where?: InputMaybe<DownloadableFileLicenseConnectionWhere>;
};

export type DownloadableFileOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DownloadableFileSort objects to sort DownloadableFiles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DownloadableFileSort>>;
};

export type DownloadableFilePurchasePurchasersAggregationSelection = {
  __typename?: 'DownloadableFilePurchasePurchasersAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DownloadableFilePurchasePurchasersNodeAggregateSelection>;
};

export type DownloadableFilePurchasePurchasersNodeAggregateSelection = {
  __typename?: 'DownloadableFilePurchasePurchasersNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  priceCents: IntAggregateSelection;
  priceCurrency: StringAggregateSelection;
};

export type DownloadableFilePurchasersAggregateInput = {
  AND?: InputMaybe<Array<DownloadableFilePurchasersAggregateInput>>;
  NOT?: InputMaybe<DownloadableFilePurchasersAggregateInput>;
  OR?: InputMaybe<Array<DownloadableFilePurchasersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DownloadableFilePurchasersNodeAggregationWhereInput>;
};

export type DownloadableFilePurchasersConnectFieldInput = {
  connect?: InputMaybe<Array<PurchaseConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<PurchaseConnectWhere>;
};

export type DownloadableFilePurchasersConnectedRelationship = {
  __typename?: 'DownloadableFilePurchasersConnectedRelationship';
  node: PurchaseEventPayload;
};

export type DownloadableFilePurchasersConnection = {
  __typename?: 'DownloadableFilePurchasersConnection';
  edges: Array<DownloadableFilePurchasersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DownloadableFilePurchasersConnectionSort = {
  node?: InputMaybe<PurchaseSort>;
};

export type DownloadableFilePurchasersConnectionWhere = {
  AND?: InputMaybe<Array<DownloadableFilePurchasersConnectionWhere>>;
  NOT?: InputMaybe<DownloadableFilePurchasersConnectionWhere>;
  OR?: InputMaybe<Array<DownloadableFilePurchasersConnectionWhere>>;
  node?: InputMaybe<PurchaseWhere>;
};

export type DownloadableFilePurchasersCreateFieldInput = {
  node: PurchaseCreateInput;
};

export type DownloadableFilePurchasersDeleteFieldInput = {
  delete?: InputMaybe<PurchaseDeleteInput>;
  where?: InputMaybe<DownloadableFilePurchasersConnectionWhere>;
};

export type DownloadableFilePurchasersDisconnectFieldInput = {
  disconnect?: InputMaybe<PurchaseDisconnectInput>;
  where?: InputMaybe<DownloadableFilePurchasersConnectionWhere>;
};

export type DownloadableFilePurchasersFieldInput = {
  connect?: InputMaybe<Array<DownloadableFilePurchasersConnectFieldInput>>;
  create?: InputMaybe<Array<DownloadableFilePurchasersCreateFieldInput>>;
};

export type DownloadableFilePurchasersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DownloadableFilePurchasersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DownloadableFilePurchasersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DownloadableFilePurchasersNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DownloadableFilePurchasersRelationship = {
  __typename?: 'DownloadableFilePurchasersRelationship';
  cursor: Scalars['String']['output'];
  node: Purchase;
};

export type DownloadableFilePurchasersRelationshipSubscriptionWhere = {
  node?: InputMaybe<PurchaseSubscriptionWhere>;
};

export type DownloadableFilePurchasersUpdateConnectionInput = {
  node?: InputMaybe<PurchaseUpdateInput>;
};

export type DownloadableFilePurchasersUpdateFieldInput = {
  connect?: InputMaybe<Array<DownloadableFilePurchasersConnectFieldInput>>;
  create?: InputMaybe<Array<DownloadableFilePurchasersCreateFieldInput>>;
  delete?: InputMaybe<Array<DownloadableFilePurchasersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DownloadableFilePurchasersDisconnectFieldInput>>;
  update?: InputMaybe<DownloadableFilePurchasersUpdateConnectionInput>;
  where?: InputMaybe<DownloadableFilePurchasersConnectionWhere>;
};

export type DownloadableFileRelationInput = {
  license?: InputMaybe<DownloadableFileLicenseCreateFieldInput>;
  purchasers?: InputMaybe<Array<DownloadableFilePurchasersCreateFieldInput>>;
  versions?: InputMaybe<Array<DownloadableFileVersionsCreateFieldInput>>;
};

export type DownloadableFileRelationshipCreatedEvent = {
  __typename?: 'DownloadableFileRelationshipCreatedEvent';
  createdRelationship: DownloadableFileConnectedRelationships;
  downloadableFile: DownloadableFileEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type DownloadableFileRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<DownloadableFileRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<DownloadableFileRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<DownloadableFileRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<DownloadableFileRelationshipsSubscriptionWhere>;
  downloadableFile?: InputMaybe<DownloadableFileSubscriptionWhere>;
};

export type DownloadableFileRelationshipDeletedEvent = {
  __typename?: 'DownloadableFileRelationshipDeletedEvent';
  deletedRelationship: DownloadableFileConnectedRelationships;
  downloadableFile: DownloadableFileEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type DownloadableFileRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<DownloadableFileRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<DownloadableFileRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<DownloadableFileRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<DownloadableFileRelationshipsSubscriptionWhere>;
  downloadableFile?: InputMaybe<DownloadableFileSubscriptionWhere>;
};

export type DownloadableFileRelationshipsSubscriptionWhere = {
  license?: InputMaybe<DownloadableFileLicenseRelationshipSubscriptionWhere>;
  purchasers?: InputMaybe<DownloadableFilePurchasersRelationshipSubscriptionWhere>;
  versions?: InputMaybe<DownloadableFileVersionsRelationshipSubscriptionWhere>;
};

/** Fields to sort DownloadableFiles by. The order in which sorts are applied is not guaranteed when specifying many fields in one DownloadableFileSort object. */
export type DownloadableFileSort = {
  createdAt?: InputMaybe<SortDirection>;
  downloadCountTotal?: InputMaybe<SortDirection>;
  downloadCountUnique?: InputMaybe<SortDirection>;
  fileName?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  kind?: InputMaybe<SortDirection>;
  paywallExpiresAt?: InputMaybe<SortDirection>;
  priceCents?: InputMaybe<SortDirection>;
  priceCurrency?: InputMaybe<SortDirection>;
  priceModel?: InputMaybe<SortDirection>;
  scanCheckedAt?: InputMaybe<SortDirection>;
  scanStatus?: InputMaybe<SortDirection>;
  size?: InputMaybe<SortDirection>;
  stripePriceId?: InputMaybe<SortDirection>;
  stripeProductId?: InputMaybe<SortDirection>;
  url?: InputMaybe<SortDirection>;
};

export type DownloadableFileSubscriptionWhere = {
  AND?: InputMaybe<Array<DownloadableFileSubscriptionWhere>>;
  NOT?: InputMaybe<DownloadableFileSubscriptionWhere>;
  OR?: InputMaybe<Array<DownloadableFileSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  downloadCountTotal?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  downloadCountTotal_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  downloadCountUnique_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  fileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  fileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  fileName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  fileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  fileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  kind?: InputMaybe<FileKind>;
  kind_IN?: InputMaybe<Array<FileKind>>;
  paywallExpiresAt?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  paywallExpiresAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents?: InputMaybe<Scalars['Int']['input']>;
  priceCents_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  priceCents_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  priceCurrency_MATCHES?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  priceModel?: InputMaybe<PriceModel>;
  priceModel_IN?: InputMaybe<Array<PriceModel>>;
  scanCheckedAt?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  scanCheckedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanStatus?: InputMaybe<ScanStatus>;
  scanStatus_IN?: InputMaybe<Array<ScanStatus>>;
  size?: InputMaybe<Scalars['Int']['input']>;
  size_GT?: InputMaybe<Scalars['Int']['input']>;
  size_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  size_LT?: InputMaybe<Scalars['Int']['input']>;
  size_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId?: InputMaybe<Scalars['String']['input']>;
  stripePriceId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  stripePriceId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  stripePriceId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  stripePriceId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  stripePriceId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  stripeProductId?: InputMaybe<Scalars['String']['input']>;
  stripeProductId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  stripeProductId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  stripeProductId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  stripeProductId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  stripeProductId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type DownloadableFileUpdateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  downloadCountTotal?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  kind?: InputMaybe<FileKind>;
  license?: InputMaybe<DownloadableFileLicenseUpdateFieldInput>;
  paywallExpiresAt?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents?: InputMaybe<Scalars['Int']['input']>;
  priceCents_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency?: InputMaybe<Scalars['String']['input']>;
  priceModel?: InputMaybe<PriceModel>;
  purchasers?: InputMaybe<Array<DownloadableFilePurchasersUpdateFieldInput>>;
  scanCheckedAt?: InputMaybe<Scalars['DateTime']['input']>;
  scanStatus?: InputMaybe<ScanStatus>;
  size?: InputMaybe<Scalars['Int']['input']>;
  size_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  size_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId?: InputMaybe<Scalars['String']['input']>;
  stripeProductId?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  versions?: InputMaybe<Array<DownloadableFileVersionsUpdateFieldInput>>;
};

export type DownloadableFileUpdatedEvent = {
  __typename?: 'DownloadableFileUpdatedEvent';
  event: EventType;
  previousState: DownloadableFileEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedDownloadableFile: DownloadableFileEventPayload;
};

export type DownloadableFileVersionsAggregateInput = {
  AND?: InputMaybe<Array<DownloadableFileVersionsAggregateInput>>;
  NOT?: InputMaybe<DownloadableFileVersionsAggregateInput>;
  OR?: InputMaybe<Array<DownloadableFileVersionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DownloadableFileVersionsNodeAggregationWhereInput>;
};

export type DownloadableFileVersionsConnectFieldInput = {
  connect?: InputMaybe<Array<FileVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<FileVersionConnectWhere>;
};

export type DownloadableFileVersionsConnectedRelationship = {
  __typename?: 'DownloadableFileVersionsConnectedRelationship';
  node: FileVersionEventPayload;
};

export type DownloadableFileVersionsConnection = {
  __typename?: 'DownloadableFileVersionsConnection';
  edges: Array<DownloadableFileVersionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DownloadableFileVersionsConnectionSort = {
  node?: InputMaybe<FileVersionSort>;
};

export type DownloadableFileVersionsConnectionWhere = {
  AND?: InputMaybe<Array<DownloadableFileVersionsConnectionWhere>>;
  NOT?: InputMaybe<DownloadableFileVersionsConnectionWhere>;
  OR?: InputMaybe<Array<DownloadableFileVersionsConnectionWhere>>;
  node?: InputMaybe<FileVersionWhere>;
};

export type DownloadableFileVersionsCreateFieldInput = {
  node: FileVersionCreateInput;
};

export type DownloadableFileVersionsDeleteFieldInput = {
  delete?: InputMaybe<FileVersionDeleteInput>;
  where?: InputMaybe<DownloadableFileVersionsConnectionWhere>;
};

export type DownloadableFileVersionsDisconnectFieldInput = {
  disconnect?: InputMaybe<FileVersionDisconnectInput>;
  where?: InputMaybe<DownloadableFileVersionsConnectionWhere>;
};

export type DownloadableFileVersionsFieldInput = {
  connect?: InputMaybe<Array<DownloadableFileVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<DownloadableFileVersionsCreateFieldInput>>;
};

export type DownloadableFileVersionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DownloadableFileVersionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DownloadableFileVersionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DownloadableFileVersionsNodeAggregationWhereInput>>;
  changelog_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  changelog_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  changelog_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  changelog_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  changelog_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  changelog_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  changelog_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  changelog_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  changelog_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  changelog_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  changelog_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  changelog_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  changelog_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  changelog_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  changelog_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  fileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  size_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DownloadableFileVersionsRelationship = {
  __typename?: 'DownloadableFileVersionsRelationship';
  cursor: Scalars['String']['output'];
  node: FileVersion;
};

export type DownloadableFileVersionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<FileVersionSubscriptionWhere>;
};

export type DownloadableFileVersionsUpdateConnectionInput = {
  node?: InputMaybe<FileVersionUpdateInput>;
};

export type DownloadableFileVersionsUpdateFieldInput = {
  connect?: InputMaybe<Array<DownloadableFileVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<DownloadableFileVersionsCreateFieldInput>>;
  delete?: InputMaybe<Array<DownloadableFileVersionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DownloadableFileVersionsDisconnectFieldInput>>;
  update?: InputMaybe<DownloadableFileVersionsUpdateConnectionInput>;
  where?: InputMaybe<DownloadableFileVersionsConnectionWhere>;
};

export type DownloadableFileWhere = {
  AND?: InputMaybe<Array<DownloadableFileWhere>>;
  NOT?: InputMaybe<DownloadableFileWhere>;
  OR?: InputMaybe<Array<DownloadableFileWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  downloadCountTotal?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  downloadCountTotal_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  downloadCountUnique_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  fileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  fileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  fileName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  fileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  fileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  kind?: InputMaybe<FileKind>;
  kind_IN?: InputMaybe<Array<FileKind>>;
  license?: InputMaybe<LicenseWhere>;
  licenseAggregate?: InputMaybe<DownloadableFileLicenseAggregateInput>;
  licenseConnection?: InputMaybe<DownloadableFileLicenseConnectionWhere>;
  licenseConnection_NOT?: InputMaybe<DownloadableFileLicenseConnectionWhere>;
  license_NOT?: InputMaybe<LicenseWhere>;
  paywallExpiresAt?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  paywallExpiresAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents?: InputMaybe<Scalars['Int']['input']>;
  priceCents_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  priceCents_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  priceCurrency_MATCHES?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  priceModel?: InputMaybe<PriceModel>;
  priceModel_IN?: InputMaybe<Array<PriceModel>>;
  purchasersAggregate?: InputMaybe<DownloadableFilePurchasersAggregateInput>;
  /** Return DownloadableFiles where all of the related DownloadableFilePurchasersConnections match this filter */
  purchasersConnection_ALL?: InputMaybe<DownloadableFilePurchasersConnectionWhere>;
  /** Return DownloadableFiles where none of the related DownloadableFilePurchasersConnections match this filter */
  purchasersConnection_NONE?: InputMaybe<DownloadableFilePurchasersConnectionWhere>;
  /** Return DownloadableFiles where one of the related DownloadableFilePurchasersConnections match this filter */
  purchasersConnection_SINGLE?: InputMaybe<DownloadableFilePurchasersConnectionWhere>;
  /** Return DownloadableFiles where some of the related DownloadableFilePurchasersConnections match this filter */
  purchasersConnection_SOME?: InputMaybe<DownloadableFilePurchasersConnectionWhere>;
  /** Return DownloadableFiles where all of the related Purchases match this filter */
  purchasers_ALL?: InputMaybe<PurchaseWhere>;
  /** Return DownloadableFiles where none of the related Purchases match this filter */
  purchasers_NONE?: InputMaybe<PurchaseWhere>;
  /** Return DownloadableFiles where one of the related Purchases match this filter */
  purchasers_SINGLE?: InputMaybe<PurchaseWhere>;
  /** Return DownloadableFiles where some of the related Purchases match this filter */
  purchasers_SOME?: InputMaybe<PurchaseWhere>;
  scanCheckedAt?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  scanCheckedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanStatus?: InputMaybe<ScanStatus>;
  scanStatus_IN?: InputMaybe<Array<ScanStatus>>;
  size?: InputMaybe<Scalars['Int']['input']>;
  size_GT?: InputMaybe<Scalars['Int']['input']>;
  size_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  size_LT?: InputMaybe<Scalars['Int']['input']>;
  size_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId?: InputMaybe<Scalars['String']['input']>;
  stripePriceId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  stripePriceId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  stripePriceId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  stripePriceId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  stripePriceId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  stripeProductId?: InputMaybe<Scalars['String']['input']>;
  stripeProductId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  stripeProductId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  stripeProductId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  stripeProductId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  stripeProductId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  versionsAggregate?: InputMaybe<DownloadableFileVersionsAggregateInput>;
  /** Return DownloadableFiles where all of the related DownloadableFileVersionsConnections match this filter */
  versionsConnection_ALL?: InputMaybe<DownloadableFileVersionsConnectionWhere>;
  /** Return DownloadableFiles where none of the related DownloadableFileVersionsConnections match this filter */
  versionsConnection_NONE?: InputMaybe<DownloadableFileVersionsConnectionWhere>;
  /** Return DownloadableFiles where one of the related DownloadableFileVersionsConnections match this filter */
  versionsConnection_SINGLE?: InputMaybe<DownloadableFileVersionsConnectionWhere>;
  /** Return DownloadableFiles where some of the related DownloadableFileVersionsConnections match this filter */
  versionsConnection_SOME?: InputMaybe<DownloadableFileVersionsConnectionWhere>;
  /** Return DownloadableFiles where all of the related FileVersions match this filter */
  versions_ALL?: InputMaybe<FileVersionWhere>;
  /** Return DownloadableFiles where none of the related FileVersions match this filter */
  versions_NONE?: InputMaybe<FileVersionWhere>;
  /** Return DownloadableFiles where one of the related FileVersions match this filter */
  versions_SINGLE?: InputMaybe<FileVersionWhere>;
  /** Return DownloadableFiles where some of the related FileVersions match this filter */
  versions_SOME?: InputMaybe<FileVersionWhere>;
};

export type DownloadableFilesConnection = {
  __typename?: 'DownloadableFilesConnection';
  edges: Array<DownloadableFileEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DropDataResponse = {
  __typename?: 'DropDataResponse';
  message?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type DropDataResponseAggregateSelection = {
  __typename?: 'DropDataResponseAggregateSelection';
  count: Scalars['Int']['output'];
  message: StringAggregateSelection;
};

export type DropDataResponseCreateInput = {
  message?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DropDataResponseCreatedEvent = {
  __typename?: 'DropDataResponseCreatedEvent';
  createdDropDataResponse: DropDataResponseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DropDataResponseDeletedEvent = {
  __typename?: 'DropDataResponseDeletedEvent';
  deletedDropDataResponse: DropDataResponseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type DropDataResponseEdge = {
  __typename?: 'DropDataResponseEdge';
  cursor: Scalars['String']['output'];
  node: DropDataResponse;
};

export type DropDataResponseEventPayload = {
  __typename?: 'DropDataResponseEventPayload';
  message?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type DropDataResponseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DropDataResponseSort objects to sort DropDataResponses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DropDataResponseSort>>;
};

/** Fields to sort DropDataResponses by. The order in which sorts are applied is not guaranteed when specifying many fields in one DropDataResponseSort object. */
export type DropDataResponseSort = {
  message?: InputMaybe<SortDirection>;
  success?: InputMaybe<SortDirection>;
};

export type DropDataResponseSubscriptionWhere = {
  AND?: InputMaybe<Array<DropDataResponseSubscriptionWhere>>;
  NOT?: InputMaybe<DropDataResponseSubscriptionWhere>;
  OR?: InputMaybe<Array<DropDataResponseSubscriptionWhere>>;
  message?: InputMaybe<Scalars['String']['input']>;
  message_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  message_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  message_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  message_MATCHES?: InputMaybe<Scalars['String']['input']>;
  message_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DropDataResponseUpdateInput = {
  message?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DropDataResponseUpdatedEvent = {
  __typename?: 'DropDataResponseUpdatedEvent';
  event: EventType;
  previousState: DropDataResponseEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedDropDataResponse: DropDataResponseEventPayload;
};

export type DropDataResponseWhere = {
  AND?: InputMaybe<Array<DropDataResponseWhere>>;
  NOT?: InputMaybe<DropDataResponseWhere>;
  OR?: InputMaybe<Array<DropDataResponseWhere>>;
  message?: InputMaybe<Scalars['String']['input']>;
  message_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  message_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  message_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  message_MATCHES?: InputMaybe<Scalars['String']['input']>;
  message_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DropDataResponsesConnection = {
  __typename?: 'DropDataResponsesConnection';
  edges: Array<DropDataResponseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Email = {
  __typename?: 'Email';
  User?: Maybe<User>;
  UserAggregate?: Maybe<EmailUserUserAggregationSelection>;
  UserConnection: EmailUserConnection;
  address: Scalars['String']['output'];
};


export type EmailUserArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type EmailUserAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type EmailUserConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EmailUserConnectionSort>>;
  where?: InputMaybe<EmailUserConnectionWhere>;
};

export type EmailAggregateSelection = {
  __typename?: 'EmailAggregateSelection';
  address: StringAggregateSelection;
  count: Scalars['Int']['output'];
};

export type EmailConnectInput = {
  User?: InputMaybe<EmailUserConnectFieldInput>;
};

export type EmailConnectOrCreateInput = {
  User?: InputMaybe<EmailUserConnectOrCreateFieldInput>;
};

export type EmailConnectOrCreateWhere = {
  node: EmailUniqueWhere;
};

export type EmailConnectWhere = {
  node: EmailWhere;
};

export type EmailConnectedRelationships = {
  __typename?: 'EmailConnectedRelationships';
  User?: Maybe<EmailUserConnectedRelationship>;
};

export type EmailCreateInput = {
  User?: InputMaybe<EmailUserFieldInput>;
  address: Scalars['String']['input'];
};

export type EmailCreatedEvent = {
  __typename?: 'EmailCreatedEvent';
  createdEmail: EmailEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EmailDeleteInput = {
  User?: InputMaybe<EmailUserDeleteFieldInput>;
};

export type EmailDeletedEvent = {
  __typename?: 'EmailDeletedEvent';
  deletedEmail: EmailEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EmailDisconnectInput = {
  User?: InputMaybe<EmailUserDisconnectFieldInput>;
};

export type EmailEdge = {
  __typename?: 'EmailEdge';
  cursor: Scalars['String']['output'];
  node: Email;
};

export type EmailEventPayload = {
  __typename?: 'EmailEventPayload';
  address: Scalars['String']['output'];
};

export type EmailOnCreateInput = {
  address: Scalars['String']['input'];
};

export type EmailOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EmailSort objects to sort Emails by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EmailSort>>;
};

export type EmailRelationInput = {
  User?: InputMaybe<EmailUserCreateFieldInput>;
};

export type EmailRelationshipCreatedEvent = {
  __typename?: 'EmailRelationshipCreatedEvent';
  createdRelationship: EmailConnectedRelationships;
  email: EmailEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type EmailRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<EmailRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<EmailRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<EmailRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<EmailRelationshipsSubscriptionWhere>;
  email?: InputMaybe<EmailSubscriptionWhere>;
};

export type EmailRelationshipDeletedEvent = {
  __typename?: 'EmailRelationshipDeletedEvent';
  deletedRelationship: EmailConnectedRelationships;
  email: EmailEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type EmailRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<EmailRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<EmailRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<EmailRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<EmailRelationshipsSubscriptionWhere>;
  email?: InputMaybe<EmailSubscriptionWhere>;
};

export type EmailRelationshipsSubscriptionWhere = {
  User?: InputMaybe<EmailUserRelationshipSubscriptionWhere>;
};

/** Fields to sort Emails by. The order in which sorts are applied is not guaranteed when specifying many fields in one EmailSort object. */
export type EmailSort = {
  address?: InputMaybe<SortDirection>;
};

export type EmailSubscriptionWhere = {
  AND?: InputMaybe<Array<EmailSubscriptionWhere>>;
  NOT?: InputMaybe<EmailSubscriptionWhere>;
  OR?: InputMaybe<Array<EmailSubscriptionWhere>>;
  address?: InputMaybe<Scalars['String']['input']>;
  address_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  address_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  address_MATCHES?: InputMaybe<Scalars['String']['input']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EmailUniqueWhere = {
  address?: InputMaybe<Scalars['String']['input']>;
};

export type EmailUpdateInput = {
  User?: InputMaybe<EmailUserUpdateFieldInput>;
  address?: InputMaybe<Scalars['String']['input']>;
};

export type EmailUpdatedEvent = {
  __typename?: 'EmailUpdatedEvent';
  event: EventType;
  previousState: EmailEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedEmail: EmailEventPayload;
};

export type EmailUserAggregateInput = {
  AND?: InputMaybe<Array<EmailUserAggregateInput>>;
  NOT?: InputMaybe<EmailUserAggregateInput>;
  OR?: InputMaybe<Array<EmailUserAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EmailUserNodeAggregationWhereInput>;
};

export type EmailUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type EmailUserConnectOrCreateFieldInput = {
  onCreate: EmailUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type EmailUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type EmailUserConnectedRelationship = {
  __typename?: 'EmailUserConnectedRelationship';
  node: UserEventPayload;
};

export type EmailUserConnection = {
  __typename?: 'EmailUserConnection';
  edges: Array<EmailUserRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EmailUserConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type EmailUserConnectionWhere = {
  AND?: InputMaybe<Array<EmailUserConnectionWhere>>;
  NOT?: InputMaybe<EmailUserConnectionWhere>;
  OR?: InputMaybe<Array<EmailUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type EmailUserCreateFieldInput = {
  node: UserCreateInput;
};

export type EmailUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<EmailUserConnectionWhere>;
};

export type EmailUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<EmailUserConnectionWhere>;
};

export type EmailUserFieldInput = {
  connect?: InputMaybe<EmailUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<EmailUserConnectOrCreateFieldInput>;
  create?: InputMaybe<EmailUserCreateFieldInput>;
};

export type EmailUserNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EmailUserNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EmailUserNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EmailUserNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EmailUserRelationship = {
  __typename?: 'EmailUserRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type EmailUserRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type EmailUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type EmailUserUpdateFieldInput = {
  connect?: InputMaybe<EmailUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<EmailUserConnectOrCreateFieldInput>;
  create?: InputMaybe<EmailUserCreateFieldInput>;
  delete?: InputMaybe<EmailUserDeleteFieldInput>;
  disconnect?: InputMaybe<EmailUserDisconnectFieldInput>;
  update?: InputMaybe<EmailUserUpdateConnectionInput>;
  where?: InputMaybe<EmailUserConnectionWhere>;
};

export type EmailUserUserAggregationSelection = {
  __typename?: 'EmailUserUserAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EmailUserUserNodeAggregateSelection>;
};

export type EmailUserUserNodeAggregateSelection = {
  __typename?: 'EmailUserUserNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type EmailWhere = {
  AND?: InputMaybe<Array<EmailWhere>>;
  NOT?: InputMaybe<EmailWhere>;
  OR?: InputMaybe<Array<EmailWhere>>;
  User?: InputMaybe<UserWhere>;
  UserAggregate?: InputMaybe<EmailUserAggregateInput>;
  UserConnection?: InputMaybe<EmailUserConnectionWhere>;
  UserConnection_NOT?: InputMaybe<EmailUserConnectionWhere>;
  User_NOT?: InputMaybe<UserWhere>;
  address?: InputMaybe<Scalars['String']['input']>;
  address_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  address_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  address_MATCHES?: InputMaybe<Scalars['String']['input']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EmailsConnection = {
  __typename?: 'EmailsConnection';
  edges: Array<EmailEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Emoji = {
  __typename?: 'Emoji';
  PostedByUser?: Maybe<User>;
  PostedByUserAggregate?: Maybe<EmojiUserPostedByUserAggregationSelection>;
  PostedByUserConnection: EmojiPostedByUserConnection;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};


export type EmojiPostedByUserArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type EmojiPostedByUserAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type EmojiPostedByUserConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EmojiPostedByUserConnectionSort>>;
  where?: InputMaybe<EmojiPostedByUserConnectionWhere>;
};

export type EmojiAggregateSelection = {
  __typename?: 'EmojiAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  name: StringAggregateSelection;
};

export type EmojiConnectInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserConnectFieldInput>;
};

export type EmojiConnectOrCreateInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserConnectOrCreateFieldInput>;
};

export type EmojiConnectedRelationships = {
  __typename?: 'EmojiConnectedRelationships';
  PostedByUser?: Maybe<EmojiPostedByUserConnectedRelationship>;
};

export type EmojiCreateInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserFieldInput>;
  name: Scalars['String']['input'];
};

export type EmojiCreatedEvent = {
  __typename?: 'EmojiCreatedEvent';
  createdEmoji: EmojiEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EmojiDeleteInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserDeleteFieldInput>;
};

export type EmojiDeletedEvent = {
  __typename?: 'EmojiDeletedEvent';
  deletedEmoji: EmojiEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EmojiDisconnectInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserDisconnectFieldInput>;
};

export type EmojiEdge = {
  __typename?: 'EmojiEdge';
  cursor: Scalars['String']['output'];
  node: Emoji;
};

export type EmojiEventPayload = {
  __typename?: 'EmojiEventPayload';
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type EmojiOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EmojiSort objects to sort Emojis by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EmojiSort>>;
};

export type EmojiPostedByUserAggregateInput = {
  AND?: InputMaybe<Array<EmojiPostedByUserAggregateInput>>;
  NOT?: InputMaybe<EmojiPostedByUserAggregateInput>;
  OR?: InputMaybe<Array<EmojiPostedByUserAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EmojiPostedByUserNodeAggregationWhereInput>;
};

export type EmojiPostedByUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type EmojiPostedByUserConnectOrCreateFieldInput = {
  onCreate: EmojiPostedByUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type EmojiPostedByUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type EmojiPostedByUserConnectedRelationship = {
  __typename?: 'EmojiPostedByUserConnectedRelationship';
  node: UserEventPayload;
};

export type EmojiPostedByUserConnection = {
  __typename?: 'EmojiPostedByUserConnection';
  edges: Array<EmojiPostedByUserRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EmojiPostedByUserConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type EmojiPostedByUserConnectionWhere = {
  AND?: InputMaybe<Array<EmojiPostedByUserConnectionWhere>>;
  NOT?: InputMaybe<EmojiPostedByUserConnectionWhere>;
  OR?: InputMaybe<Array<EmojiPostedByUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type EmojiPostedByUserCreateFieldInput = {
  node: UserCreateInput;
};

export type EmojiPostedByUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<EmojiPostedByUserConnectionWhere>;
};

export type EmojiPostedByUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<EmojiPostedByUserConnectionWhere>;
};

export type EmojiPostedByUserFieldInput = {
  connect?: InputMaybe<EmojiPostedByUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<EmojiPostedByUserConnectOrCreateFieldInput>;
  create?: InputMaybe<EmojiPostedByUserCreateFieldInput>;
};

export type EmojiPostedByUserNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EmojiPostedByUserNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EmojiPostedByUserNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EmojiPostedByUserNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EmojiPostedByUserRelationship = {
  __typename?: 'EmojiPostedByUserRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type EmojiPostedByUserRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type EmojiPostedByUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type EmojiPostedByUserUpdateFieldInput = {
  connect?: InputMaybe<EmojiPostedByUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<EmojiPostedByUserConnectOrCreateFieldInput>;
  create?: InputMaybe<EmojiPostedByUserCreateFieldInput>;
  delete?: InputMaybe<EmojiPostedByUserDeleteFieldInput>;
  disconnect?: InputMaybe<EmojiPostedByUserDisconnectFieldInput>;
  update?: InputMaybe<EmojiPostedByUserUpdateConnectionInput>;
  where?: InputMaybe<EmojiPostedByUserConnectionWhere>;
};

export type EmojiRelationInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserCreateFieldInput>;
};

export type EmojiRelationshipCreatedEvent = {
  __typename?: 'EmojiRelationshipCreatedEvent';
  createdRelationship: EmojiConnectedRelationships;
  emoji: EmojiEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type EmojiRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<EmojiRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<EmojiRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<EmojiRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<EmojiRelationshipsSubscriptionWhere>;
  emoji?: InputMaybe<EmojiSubscriptionWhere>;
};

export type EmojiRelationshipDeletedEvent = {
  __typename?: 'EmojiRelationshipDeletedEvent';
  deletedRelationship: EmojiConnectedRelationships;
  emoji: EmojiEventPayload;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type EmojiRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<EmojiRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<EmojiRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<EmojiRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<EmojiRelationshipsSubscriptionWhere>;
  emoji?: InputMaybe<EmojiSubscriptionWhere>;
};

export type EmojiRelationshipsSubscriptionWhere = {
  PostedByUser?: InputMaybe<EmojiPostedByUserRelationshipSubscriptionWhere>;
};

/** Fields to sort Emojis by. The order in which sorts are applied is not guaranteed when specifying many fields in one EmojiSort object. */
export type EmojiSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export type EmojiSubscriptionWhere = {
  AND?: InputMaybe<Array<EmojiSubscriptionWhere>>;
  NOT?: InputMaybe<EmojiSubscriptionWhere>;
  OR?: InputMaybe<Array<EmojiSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EmojiUpdateInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserUpdateFieldInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type EmojiUpdatedEvent = {
  __typename?: 'EmojiUpdatedEvent';
  event: EventType;
  previousState: EmojiEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedEmoji: EmojiEventPayload;
};

export type EmojiUserPostedByUserAggregationSelection = {
  __typename?: 'EmojiUserPostedByUserAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EmojiUserPostedByUserNodeAggregateSelection>;
};

export type EmojiUserPostedByUserNodeAggregateSelection = {
  __typename?: 'EmojiUserPostedByUserNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type EmojiWhere = {
  AND?: InputMaybe<Array<EmojiWhere>>;
  NOT?: InputMaybe<EmojiWhere>;
  OR?: InputMaybe<Array<EmojiWhere>>;
  PostedByUser?: InputMaybe<UserWhere>;
  PostedByUserAggregate?: InputMaybe<EmojiPostedByUserAggregateInput>;
  PostedByUserConnection?: InputMaybe<EmojiPostedByUserConnectionWhere>;
  PostedByUserConnection_NOT?: InputMaybe<EmojiPostedByUserConnectionWhere>;
  PostedByUser_NOT?: InputMaybe<UserWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EmojisConnection = {
  __typename?: 'EmojisConnection';
  edges: Array<EmojiEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EnvironmentInfo = {
  __typename?: 'EnvironmentInfo';
  currentDatabase?: Maybe<Scalars['String']['output']>;
  isTestEnvironment?: Maybe<Scalars['Boolean']['output']>;
};

export type EnvironmentInfoAggregateSelection = {
  __typename?: 'EnvironmentInfoAggregateSelection';
  count: Scalars['Int']['output'];
  currentDatabase: StringAggregateSelection;
};

export type EnvironmentInfoCreateInput = {
  currentDatabase?: InputMaybe<Scalars['String']['input']>;
  isTestEnvironment?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EnvironmentInfoCreatedEvent = {
  __typename?: 'EnvironmentInfoCreatedEvent';
  createdEnvironmentInfo: EnvironmentInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EnvironmentInfoDeletedEvent = {
  __typename?: 'EnvironmentInfoDeletedEvent';
  deletedEnvironmentInfo: EnvironmentInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EnvironmentInfoEdge = {
  __typename?: 'EnvironmentInfoEdge';
  cursor: Scalars['String']['output'];
  node: EnvironmentInfo;
};

export type EnvironmentInfoEventPayload = {
  __typename?: 'EnvironmentInfoEventPayload';
  currentDatabase?: Maybe<Scalars['String']['output']>;
  isTestEnvironment?: Maybe<Scalars['Boolean']['output']>;
};

export type EnvironmentInfoOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EnvironmentInfoSort objects to sort EnvironmentInfos by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EnvironmentInfoSort>>;
};

/** Fields to sort EnvironmentInfos by. The order in which sorts are applied is not guaranteed when specifying many fields in one EnvironmentInfoSort object. */
export type EnvironmentInfoSort = {
  currentDatabase?: InputMaybe<SortDirection>;
  isTestEnvironment?: InputMaybe<SortDirection>;
};

export type EnvironmentInfoSubscriptionWhere = {
  AND?: InputMaybe<Array<EnvironmentInfoSubscriptionWhere>>;
  NOT?: InputMaybe<EnvironmentInfoSubscriptionWhere>;
  OR?: InputMaybe<Array<EnvironmentInfoSubscriptionWhere>>;
  currentDatabase?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  currentDatabase_MATCHES?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  isTestEnvironment?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EnvironmentInfoUpdateInput = {
  currentDatabase?: InputMaybe<Scalars['String']['input']>;
  isTestEnvironment?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EnvironmentInfoUpdatedEvent = {
  __typename?: 'EnvironmentInfoUpdatedEvent';
  event: EventType;
  previousState: EnvironmentInfoEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedEnvironmentInfo: EnvironmentInfoEventPayload;
};

export type EnvironmentInfoWhere = {
  AND?: InputMaybe<Array<EnvironmentInfoWhere>>;
  NOT?: InputMaybe<EnvironmentInfoWhere>;
  OR?: InputMaybe<Array<EnvironmentInfoWhere>>;
  currentDatabase?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  currentDatabase_MATCHES?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  isTestEnvironment?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EnvironmentInfosConnection = {
  __typename?: 'EnvironmentInfosConnection';
  edges: Array<EnvironmentInfoEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Event = {
  __typename?: 'Event';
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<EventCommentCommentsAggregationSelection>;
  CommentsConnection: EventCommentsConnection;
  EventChannels: Array<EventChannel>;
  EventChannelsAggregate?: Maybe<EventEventChannelEventChannelsAggregationSelection>;
  EventChannelsConnection: EventEventChannelsConnection;
  FeedbackComments: Array<Comment>;
  FeedbackCommentsAggregate?: Maybe<EventCommentFeedbackCommentsAggregationSelection>;
  FeedbackCommentsConnection: EventFeedbackCommentsConnection;
  Poster?: Maybe<User>;
  PosterAggregate?: Maybe<EventUserPosterAggregationSelection>;
  PosterConnection: EventPosterConnection;
  RecurringEvent?: Maybe<RecurringEvent>;
  RecurringEventAggregate?: Maybe<EventRecurringEventRecurringEventAggregationSelection>;
  RecurringEventConnection: EventRecurringEventConnection;
  RelatedIssues: Array<Issue>;
  RelatedIssuesAggregate?: Maybe<EventIssueRelatedIssuesAggregationSelection>;
  RelatedIssuesConnection: EventRelatedIssuesConnection;
  SubscribedToNotifications: Array<User>;
  SubscribedToNotificationsAggregate?: Maybe<EventUserSubscribedToNotificationsAggregationSelection>;
  SubscribedToNotificationsConnection: EventSubscribedToNotificationsConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<EventTagTagsAggregationSelection>;
  TagsConnection: EventTagsConnection;
  address?: Maybe<Scalars['String']['output']>;
  canceled: Scalars['Boolean']['output'];
  cost?: Maybe<Scalars['String']['output']>;
  coverImageURL?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  endTime: Scalars['DateTime']['output'];
  free?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  isAllDay?: Maybe<Scalars['Boolean']['output']>;
  isHostedByOP?: Maybe<Scalars['Boolean']['output']>;
  isInPrivateResidence?: Maybe<Scalars['Boolean']['output']>;
  location?: Maybe<Point>;
  locationName?: Maybe<Scalars['String']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  placeId?: Maybe<Scalars['String']['output']>;
  startTime: Scalars['DateTime']['output'];
  startTimeDayOfWeek?: Maybe<Scalars['String']['output']>;
  startTimeHourOfDay?: Maybe<Scalars['Int']['output']>;
  title: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  virtualEventUrl?: Maybe<Scalars['String']['output']>;
};


export type EventCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type EventCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type EventCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventCommentsConnectionSort>>;
  where?: InputMaybe<EventCommentsConnectionWhere>;
};


export type EventEventChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventChannelOptions>;
  where?: InputMaybe<EventChannelWhere>;
};


export type EventEventChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventChannelWhere>;
};


export type EventEventChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventEventChannelsConnectionSort>>;
  where?: InputMaybe<EventEventChannelsConnectionWhere>;
};


export type EventFeedbackCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type EventFeedbackCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type EventFeedbackCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventFeedbackCommentsConnectionSort>>;
  where?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
};


export type EventPosterArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type EventPosterAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type EventPosterConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventPosterConnectionSort>>;
  where?: InputMaybe<EventPosterConnectionWhere>;
};


export type EventRecurringEventArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<RecurringEventOptions>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type EventRecurringEventAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type EventRecurringEventConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventRecurringEventConnectionSort>>;
  where?: InputMaybe<EventRecurringEventConnectionWhere>;
};


export type EventRelatedIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type EventRelatedIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type EventRelatedIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventRelatedIssuesConnectionSort>>;
  where?: InputMaybe<EventRelatedIssuesConnectionWhere>;
};


export type EventSubscribedToNotificationsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type EventSubscribedToNotificationsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type EventSubscribedToNotificationsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventSubscribedToNotificationsConnectionSort>>;
  where?: InputMaybe<EventSubscribedToNotificationsConnectionWhere>;
};


export type EventTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type EventTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type EventTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventTagsConnectionSort>>;
  where?: InputMaybe<EventTagsConnectionWhere>;
};

export type EventAggregateSelection = {
  __typename?: 'EventAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  count: Scalars['Int']['output'];
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type EventChannel = {
  __typename?: 'EventChannel';
  Channel?: Maybe<Channel>;
  ChannelAggregate?: Maybe<EventChannelChannelChannelAggregationSelection>;
  ChannelConnection: EventChannelChannelConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<EventChannelCommentCommentsAggregationSelection>;
  CommentsConnection: EventChannelCommentsConnection;
  Event?: Maybe<Event>;
  EventAggregate?: Maybe<EventChannelEventEventAggregationSelection>;
  EventConnection: EventChannelEventConnection;
  RelatedIssues: Array<Issue>;
  RelatedIssuesAggregate?: Maybe<EventChannelIssueRelatedIssuesAggregationSelection>;
  RelatedIssuesConnection: EventChannelRelatedIssuesConnection;
  archived?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  eventId: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  locked?: Maybe<Scalars['Boolean']['output']>;
};


export type EventChannelChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type EventChannelChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type EventChannelChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventChannelChannelConnectionSort>>;
  where?: InputMaybe<EventChannelChannelConnectionWhere>;
};


export type EventChannelCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type EventChannelCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type EventChannelCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventChannelCommentsConnectionSort>>;
  where?: InputMaybe<EventChannelCommentsConnectionWhere>;
};


export type EventChannelEventArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type EventChannelEventAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type EventChannelEventConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventChannelEventConnectionSort>>;
  where?: InputMaybe<EventChannelEventConnectionWhere>;
};


export type EventChannelRelatedIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type EventChannelRelatedIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type EventChannelRelatedIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventChannelRelatedIssuesConnectionSort>>;
  where?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
};

export type EventChannelAggregateSelection = {
  __typename?: 'EventChannelAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  eventId: IdAggregateSelection;
  id: IdAggregateSelection;
};

export type EventChannelChannelAggregateInput = {
  AND?: InputMaybe<Array<EventChannelChannelAggregateInput>>;
  NOT?: InputMaybe<EventChannelChannelAggregateInput>;
  OR?: InputMaybe<Array<EventChannelChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventChannelChannelNodeAggregationWhereInput>;
};

export type EventChannelChannelChannelAggregationSelection = {
  __typename?: 'EventChannelChannelChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventChannelChannelChannelNodeAggregateSelection>;
};

export type EventChannelChannelChannelNodeAggregateSelection = {
  __typename?: 'EventChannelChannelChannelNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type EventChannelChannelConnectFieldInput = {
  connect?: InputMaybe<ChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type EventChannelChannelConnectOrCreateFieldInput = {
  onCreate: EventChannelChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type EventChannelChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type EventChannelChannelConnectedRelationship = {
  __typename?: 'EventChannelChannelConnectedRelationship';
  node: ChannelEventPayload;
};

export type EventChannelChannelConnection = {
  __typename?: 'EventChannelChannelConnection';
  edges: Array<EventChannelChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventChannelChannelConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type EventChannelChannelConnectionWhere = {
  AND?: InputMaybe<Array<EventChannelChannelConnectionWhere>>;
  NOT?: InputMaybe<EventChannelChannelConnectionWhere>;
  OR?: InputMaybe<Array<EventChannelChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type EventChannelChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type EventChannelChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<EventChannelChannelConnectionWhere>;
};

export type EventChannelChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<EventChannelChannelConnectionWhere>;
};

export type EventChannelChannelFieldInput = {
  connect?: InputMaybe<EventChannelChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<EventChannelChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<EventChannelChannelCreateFieldInput>;
};

export type EventChannelChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventChannelChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventChannelChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventChannelChannelNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EventChannelChannelRelationship = {
  __typename?: 'EventChannelChannelRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type EventChannelChannelRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type EventChannelChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type EventChannelChannelUpdateFieldInput = {
  connect?: InputMaybe<EventChannelChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<EventChannelChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<EventChannelChannelCreateFieldInput>;
  delete?: InputMaybe<EventChannelChannelDeleteFieldInput>;
  disconnect?: InputMaybe<EventChannelChannelDisconnectFieldInput>;
  update?: InputMaybe<EventChannelChannelUpdateConnectionInput>;
  where?: InputMaybe<EventChannelChannelConnectionWhere>;
};

export type EventChannelCommentCommentsAggregationSelection = {
  __typename?: 'EventChannelCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventChannelCommentCommentsNodeAggregateSelection>;
};

export type EventChannelCommentCommentsNodeAggregateSelection = {
  __typename?: 'EventChannelCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type EventChannelCommentsAggregateInput = {
  AND?: InputMaybe<Array<EventChannelCommentsAggregateInput>>;
  NOT?: InputMaybe<EventChannelCommentsAggregateInput>;
  OR?: InputMaybe<Array<EventChannelCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventChannelCommentsNodeAggregationWhereInput>;
};

export type EventChannelCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type EventChannelCommentsConnectedRelationship = {
  __typename?: 'EventChannelCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type EventChannelCommentsConnection = {
  __typename?: 'EventChannelCommentsConnection';
  edges: Array<EventChannelCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventChannelCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type EventChannelCommentsConnectionWhere = {
  AND?: InputMaybe<Array<EventChannelCommentsConnectionWhere>>;
  NOT?: InputMaybe<EventChannelCommentsConnectionWhere>;
  OR?: InputMaybe<Array<EventChannelCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type EventChannelCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type EventChannelCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<EventChannelCommentsConnectionWhere>;
};

export type EventChannelCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<EventChannelCommentsConnectionWhere>;
};

export type EventChannelCommentsFieldInput = {
  connect?: InputMaybe<Array<EventChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventChannelCommentsCreateFieldInput>>;
};

export type EventChannelCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventChannelCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventChannelCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventChannelCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type EventChannelCommentsRelationship = {
  __typename?: 'EventChannelCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type EventChannelCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type EventChannelCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type EventChannelCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventChannelCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventChannelCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventChannelCommentsDisconnectFieldInput>>;
  update?: InputMaybe<EventChannelCommentsUpdateConnectionInput>;
  where?: InputMaybe<EventChannelCommentsConnectionWhere>;
};

export type EventChannelConnectInput = {
  Channel?: InputMaybe<EventChannelChannelConnectFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsConnectFieldInput>>;
  Event?: InputMaybe<EventChannelEventConnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesConnectFieldInput>>;
};

export type EventChannelConnectOrCreateInput = {
  Channel?: InputMaybe<EventChannelChannelConnectOrCreateFieldInput>;
};

export type EventChannelConnectWhere = {
  node: EventChannelWhere;
};

export type EventChannelConnectedRelationships = {
  __typename?: 'EventChannelConnectedRelationships';
  Channel?: Maybe<EventChannelChannelConnectedRelationship>;
  Comments?: Maybe<EventChannelCommentsConnectedRelationship>;
  Event?: Maybe<EventChannelEventConnectedRelationship>;
  RelatedIssues?: Maybe<EventChannelRelatedIssuesConnectedRelationship>;
};

export type EventChannelCreateInput = {
  Channel?: InputMaybe<EventChannelChannelFieldInput>;
  Comments?: InputMaybe<EventChannelCommentsFieldInput>;
  Event?: InputMaybe<EventChannelEventFieldInput>;
  RelatedIssues?: InputMaybe<EventChannelRelatedIssuesFieldInput>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName: Scalars['String']['input'];
  eventId: Scalars['ID']['input'];
  locked?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventChannelCreatedEvent = {
  __typename?: 'EventChannelCreatedEvent';
  createdEventChannel: EventChannelEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventChannelDeleteInput = {
  Channel?: InputMaybe<EventChannelChannelDeleteFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsDeleteFieldInput>>;
  Event?: InputMaybe<EventChannelEventDeleteFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesDeleteFieldInput>>;
};

export type EventChannelDeletedEvent = {
  __typename?: 'EventChannelDeletedEvent';
  deletedEventChannel: EventChannelEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventChannelDisconnectInput = {
  Channel?: InputMaybe<EventChannelChannelDisconnectFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsDisconnectFieldInput>>;
  Event?: InputMaybe<EventChannelEventDisconnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesDisconnectFieldInput>>;
};

export type EventChannelEdge = {
  __typename?: 'EventChannelEdge';
  cursor: Scalars['String']['output'];
  node: EventChannel;
};

export type EventChannelEventAggregateInput = {
  AND?: InputMaybe<Array<EventChannelEventAggregateInput>>;
  NOT?: InputMaybe<EventChannelEventAggregateInput>;
  OR?: InputMaybe<Array<EventChannelEventAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventChannelEventNodeAggregationWhereInput>;
};

export type EventChannelEventConnectFieldInput = {
  connect?: InputMaybe<EventConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type EventChannelEventConnectedRelationship = {
  __typename?: 'EventChannelEventConnectedRelationship';
  node: EventEventPayload;
};

export type EventChannelEventConnection = {
  __typename?: 'EventChannelEventConnection';
  edges: Array<EventChannelEventRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventChannelEventConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type EventChannelEventConnectionWhere = {
  AND?: InputMaybe<Array<EventChannelEventConnectionWhere>>;
  NOT?: InputMaybe<EventChannelEventConnectionWhere>;
  OR?: InputMaybe<Array<EventChannelEventConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type EventChannelEventCreateFieldInput = {
  node: EventCreateInput;
};

export type EventChannelEventDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<EventChannelEventConnectionWhere>;
};

export type EventChannelEventDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<EventChannelEventConnectionWhere>;
};

export type EventChannelEventEventAggregationSelection = {
  __typename?: 'EventChannelEventEventAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventChannelEventEventNodeAggregateSelection>;
};

export type EventChannelEventEventNodeAggregateSelection = {
  __typename?: 'EventChannelEventEventNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type EventChannelEventFieldInput = {
  connect?: InputMaybe<EventChannelEventConnectFieldInput>;
  create?: InputMaybe<EventChannelEventCreateFieldInput>;
};

export type EventChannelEventNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventChannelEventNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventChannelEventNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventChannelEventNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EventChannelEventPayload = {
  __typename?: 'EventChannelEventPayload';
  archived?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  eventId: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  locked?: Maybe<Scalars['Boolean']['output']>;
};

export type EventChannelEventRelationship = {
  __typename?: 'EventChannelEventRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type EventChannelEventRelationshipSubscriptionWhere = {
  node?: InputMaybe<EventSubscriptionWhere>;
};

export type EventChannelEventUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type EventChannelEventUpdateFieldInput = {
  connect?: InputMaybe<EventChannelEventConnectFieldInput>;
  create?: InputMaybe<EventChannelEventCreateFieldInput>;
  delete?: InputMaybe<EventChannelEventDeleteFieldInput>;
  disconnect?: InputMaybe<EventChannelEventDisconnectFieldInput>;
  update?: InputMaybe<EventChannelEventUpdateConnectionInput>;
  where?: InputMaybe<EventChannelEventConnectionWhere>;
};

export type EventChannelInfo = {
  __typename?: 'EventChannelInfo';
  Channel?: Maybe<ChannelInfo>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
};

export type EventChannelInfoAggregateSelection = {
  __typename?: 'EventChannelInfoAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  eventId: StringAggregateSelection;
  id: IdAggregateSelection;
};

export type EventChannelInfoCreateInput = {
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

export type EventChannelInfoCreatedEvent = {
  __typename?: 'EventChannelInfoCreatedEvent';
  createdEventChannelInfo: EventChannelInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventChannelInfoDeletedEvent = {
  __typename?: 'EventChannelInfoDeletedEvent';
  deletedEventChannelInfo: EventChannelInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventChannelInfoEdge = {
  __typename?: 'EventChannelInfoEdge';
  cursor: Scalars['String']['output'];
  node: EventChannelInfo;
};

export type EventChannelInfoEventPayload = {
  __typename?: 'EventChannelInfoEventPayload';
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  eventId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
};

export type EventChannelInfoOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EventChannelInfoSort objects to sort EventChannelInfos by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EventChannelInfoSort>>;
};

/** Fields to sort EventChannelInfos by. The order in which sorts are applied is not guaranteed when specifying many fields in one EventChannelInfoSort object. */
export type EventChannelInfoSort = {
  channelUniqueName?: InputMaybe<SortDirection>;
  eventId?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
};

export type EventChannelInfoSubscriptionWhere = {
  AND?: InputMaybe<Array<EventChannelInfoSubscriptionWhere>>;
  NOT?: InputMaybe<EventChannelInfoSubscriptionWhere>;
  OR?: InputMaybe<Array<EventChannelInfoSubscriptionWhere>>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['String']['input']>;
  eventId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  eventId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  eventId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  eventId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  eventId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type EventChannelInfoUpdateInput = {
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
};

export type EventChannelInfoUpdatedEvent = {
  __typename?: 'EventChannelInfoUpdatedEvent';
  event: EventType;
  previousState: EventChannelInfoEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedEventChannelInfo: EventChannelInfoEventPayload;
};

export type EventChannelInfoWhere = {
  AND?: InputMaybe<Array<EventChannelInfoWhere>>;
  NOT?: InputMaybe<EventChannelInfoWhere>;
  OR?: InputMaybe<Array<EventChannelInfoWhere>>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  eventId?: InputMaybe<Scalars['String']['input']>;
  eventId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  eventId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  eventId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  eventId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  eventId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type EventChannelInfosConnection = {
  __typename?: 'EventChannelInfosConnection';
  edges: Array<EventChannelInfoEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventChannelIssueRelatedIssuesAggregationSelection = {
  __typename?: 'EventChannelIssueRelatedIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventChannelIssueRelatedIssuesNodeAggregateSelection>;
};

export type EventChannelIssueRelatedIssuesNodeAggregateSelection = {
  __typename?: 'EventChannelIssueRelatedIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type EventChannelOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EventChannelSort objects to sort EventChannels by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EventChannelSort>>;
};

export type EventChannelRelatedIssuesAggregateInput = {
  AND?: InputMaybe<Array<EventChannelRelatedIssuesAggregateInput>>;
  NOT?: InputMaybe<EventChannelRelatedIssuesAggregateInput>;
  OR?: InputMaybe<Array<EventChannelRelatedIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventChannelRelatedIssuesNodeAggregationWhereInput>;
};

export type EventChannelRelatedIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type EventChannelRelatedIssuesConnectedRelationship = {
  __typename?: 'EventChannelRelatedIssuesConnectedRelationship';
  node: IssueEventPayload;
};

export type EventChannelRelatedIssuesConnection = {
  __typename?: 'EventChannelRelatedIssuesConnection';
  edges: Array<EventChannelRelatedIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventChannelRelatedIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type EventChannelRelatedIssuesConnectionWhere = {
  AND?: InputMaybe<Array<EventChannelRelatedIssuesConnectionWhere>>;
  NOT?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  OR?: InputMaybe<Array<EventChannelRelatedIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type EventChannelRelatedIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type EventChannelRelatedIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
};

export type EventChannelRelatedIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
};

export type EventChannelRelatedIssuesFieldInput = {
  connect?: InputMaybe<Array<EventChannelRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<EventChannelRelatedIssuesCreateFieldInput>>;
};

export type EventChannelRelatedIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventChannelRelatedIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventChannelRelatedIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventChannelRelatedIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type EventChannelRelatedIssuesRelationship = {
  __typename?: 'EventChannelRelatedIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type EventChannelRelatedIssuesRelationshipSubscriptionWhere = {
  node?: InputMaybe<IssueSubscriptionWhere>;
};

export type EventChannelRelatedIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type EventChannelRelatedIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<EventChannelRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<EventChannelRelatedIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<EventChannelRelatedIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventChannelRelatedIssuesDisconnectFieldInput>>;
  update?: InputMaybe<EventChannelRelatedIssuesUpdateConnectionInput>;
  where?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
};

export type EventChannelRelationInput = {
  Channel?: InputMaybe<EventChannelChannelCreateFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsCreateFieldInput>>;
  Event?: InputMaybe<EventChannelEventCreateFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesCreateFieldInput>>;
};

export type EventChannelRelationshipCreatedEvent = {
  __typename?: 'EventChannelRelationshipCreatedEvent';
  createdRelationship: EventChannelConnectedRelationships;
  event: EventType;
  eventChannel: EventChannelEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type EventChannelRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<EventChannelRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<EventChannelRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<EventChannelRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<EventChannelRelationshipsSubscriptionWhere>;
  eventChannel?: InputMaybe<EventChannelSubscriptionWhere>;
};

export type EventChannelRelationshipDeletedEvent = {
  __typename?: 'EventChannelRelationshipDeletedEvent';
  deletedRelationship: EventChannelConnectedRelationships;
  event: EventType;
  eventChannel: EventChannelEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type EventChannelRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<EventChannelRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<EventChannelRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<EventChannelRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<EventChannelRelationshipsSubscriptionWhere>;
  eventChannel?: InputMaybe<EventChannelSubscriptionWhere>;
};

export type EventChannelRelationshipsSubscriptionWhere = {
  Channel?: InputMaybe<EventChannelChannelRelationshipSubscriptionWhere>;
  Comments?: InputMaybe<EventChannelCommentsRelationshipSubscriptionWhere>;
  Event?: InputMaybe<EventChannelEventRelationshipSubscriptionWhere>;
  RelatedIssues?: InputMaybe<EventChannelRelatedIssuesRelationshipSubscriptionWhere>;
};

/** Fields to sort EventChannels by. The order in which sorts are applied is not guaranteed when specifying many fields in one EventChannelSort object. */
export type EventChannelSort = {
  archived?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  eventId?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  locked?: InputMaybe<SortDirection>;
};

export type EventChannelSubscriptionWhere = {
  AND?: InputMaybe<Array<EventChannelSubscriptionWhere>>;
  NOT?: InputMaybe<EventChannelSubscriptionWhere>;
  OR?: InputMaybe<Array<EventChannelSubscriptionWhere>>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  eventId?: InputMaybe<Scalars['ID']['input']>;
  eventId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  eventId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  eventId_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventChannelUpdateInput = {
  Channel?: InputMaybe<EventChannelChannelUpdateFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsUpdateFieldInput>>;
  Event?: InputMaybe<EventChannelEventUpdateFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesUpdateFieldInput>>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  eventId?: InputMaybe<Scalars['ID']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventChannelUpdatedEvent = {
  __typename?: 'EventChannelUpdatedEvent';
  event: EventType;
  previousState: EventChannelEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedEventChannel: EventChannelEventPayload;
};

export type EventChannelWhere = {
  AND?: InputMaybe<Array<EventChannelWhere>>;
  Channel?: InputMaybe<ChannelWhere>;
  ChannelAggregate?: InputMaybe<EventChannelChannelAggregateInput>;
  ChannelConnection?: InputMaybe<EventChannelChannelConnectionWhere>;
  ChannelConnection_NOT?: InputMaybe<EventChannelChannelConnectionWhere>;
  Channel_NOT?: InputMaybe<ChannelWhere>;
  CommentsAggregate?: InputMaybe<EventChannelCommentsAggregateInput>;
  /** Return EventChannels where all of the related EventChannelCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<EventChannelCommentsConnectionWhere>;
  /** Return EventChannels where none of the related EventChannelCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<EventChannelCommentsConnectionWhere>;
  /** Return EventChannels where one of the related EventChannelCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<EventChannelCommentsConnectionWhere>;
  /** Return EventChannels where some of the related EventChannelCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<EventChannelCommentsConnectionWhere>;
  /** Return EventChannels where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return EventChannels where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return EventChannels where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return EventChannels where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  Event?: InputMaybe<EventWhere>;
  EventAggregate?: InputMaybe<EventChannelEventAggregateInput>;
  EventConnection?: InputMaybe<EventChannelEventConnectionWhere>;
  EventConnection_NOT?: InputMaybe<EventChannelEventConnectionWhere>;
  Event_NOT?: InputMaybe<EventWhere>;
  NOT?: InputMaybe<EventChannelWhere>;
  OR?: InputMaybe<Array<EventChannelWhere>>;
  RelatedIssuesAggregate?: InputMaybe<EventChannelRelatedIssuesAggregateInput>;
  /** Return EventChannels where all of the related EventChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_ALL?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  /** Return EventChannels where none of the related EventChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_NONE?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  /** Return EventChannels where one of the related EventChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SINGLE?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  /** Return EventChannels where some of the related EventChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SOME?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  /** Return EventChannels where all of the related Issues match this filter */
  RelatedIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return EventChannels where none of the related Issues match this filter */
  RelatedIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return EventChannels where one of the related Issues match this filter */
  RelatedIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return EventChannels where some of the related Issues match this filter */
  RelatedIssues_SOME?: InputMaybe<IssueWhere>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  eventId?: InputMaybe<Scalars['ID']['input']>;
  eventId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  eventId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  eventId_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventChannelsConnection = {
  __typename?: 'EventChannelsConnection';
  edges: Array<EventChannelEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventCommentCommentsAggregationSelection = {
  __typename?: 'EventCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventCommentCommentsNodeAggregateSelection>;
};

export type EventCommentCommentsNodeAggregateSelection = {
  __typename?: 'EventCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type EventCommentFeedbackCommentsAggregationSelection = {
  __typename?: 'EventCommentFeedbackCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventCommentFeedbackCommentsNodeAggregateSelection>;
};

export type EventCommentFeedbackCommentsNodeAggregateSelection = {
  __typename?: 'EventCommentFeedbackCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type EventCommentsAggregateInput = {
  AND?: InputMaybe<Array<EventCommentsAggregateInput>>;
  NOT?: InputMaybe<EventCommentsAggregateInput>;
  OR?: InputMaybe<Array<EventCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventCommentsNodeAggregationWhereInput>;
};

export type EventCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type EventCommentsConnectedRelationship = {
  __typename?: 'EventCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type EventCommentsConnection = {
  __typename?: 'EventCommentsConnection';
  edges: Array<EventCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type EventCommentsConnectionWhere = {
  AND?: InputMaybe<Array<EventCommentsConnectionWhere>>;
  NOT?: InputMaybe<EventCommentsConnectionWhere>;
  OR?: InputMaybe<Array<EventCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type EventCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type EventCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<EventCommentsConnectionWhere>;
};

export type EventCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<EventCommentsConnectionWhere>;
};

export type EventCommentsFieldInput = {
  connect?: InputMaybe<Array<EventCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventCommentsCreateFieldInput>>;
};

export type EventCommentsFormat = {
  __typename?: 'EventCommentsFormat';
  Comments: Array<Comment>;
  Event?: Maybe<Event>;
};

export type EventCommentsFormatAggregateSelection = {
  __typename?: 'EventCommentsFormatAggregateSelection';
  count: Scalars['Int']['output'];
};

export type EventCommentsFormatCreateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventCommentsFormatCreatedEvent = {
  __typename?: 'EventCommentsFormatCreatedEvent';
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventCommentsFormatDeletedEvent = {
  __typename?: 'EventCommentsFormatDeletedEvent';
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventCommentsFormatEdge = {
  __typename?: 'EventCommentsFormatEdge';
  cursor: Scalars['String']['output'];
  node: EventCommentsFormat;
};

export type EventCommentsFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type EventCommentsFormatUpdateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventCommentsFormatUpdatedEvent = {
  __typename?: 'EventCommentsFormatUpdatedEvent';
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventCommentsFormatWhere = {
  AND?: InputMaybe<Array<EventCommentsFormatWhere>>;
  NOT?: InputMaybe<EventCommentsFormatWhere>;
  OR?: InputMaybe<Array<EventCommentsFormatWhere>>;
};

export type EventCommentsFormatsConnection = {
  __typename?: 'EventCommentsFormatsConnection';
  edges: Array<EventCommentsFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type EventCommentsRelationship = {
  __typename?: 'EventCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type EventCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type EventCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type EventCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventCommentsDisconnectFieldInput>>;
  update?: InputMaybe<EventCommentsUpdateConnectionInput>;
  where?: InputMaybe<EventCommentsConnectionWhere>;
};

export type EventConnectInput = {
  Comments?: InputMaybe<Array<EventCommentsConnectFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsConnectFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsConnectFieldInput>>;
  Poster?: InputMaybe<EventPosterConnectFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventConnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesConnectFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<EventSubscribedToNotificationsConnectFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsConnectFieldInput>>;
};

export type EventConnectOrCreateInput = {
  Poster?: InputMaybe<EventPosterConnectOrCreateFieldInput>;
  SubscribedToNotifications?: InputMaybe<Array<EventSubscribedToNotificationsConnectOrCreateFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsConnectOrCreateFieldInput>>;
};

export type EventConnectWhere = {
  node: EventWhere;
};

export type EventConnectedRelationships = {
  __typename?: 'EventConnectedRelationships';
  Comments?: Maybe<EventCommentsConnectedRelationship>;
  EventChannels?: Maybe<EventEventChannelsConnectedRelationship>;
  FeedbackComments?: Maybe<EventFeedbackCommentsConnectedRelationship>;
  Poster?: Maybe<EventPosterConnectedRelationship>;
  RecurringEvent?: Maybe<EventRecurringEventConnectedRelationship>;
  RelatedIssues?: Maybe<EventRelatedIssuesConnectedRelationship>;
  SubscribedToNotifications?: Maybe<EventSubscribedToNotificationsConnectedRelationship>;
  Tags?: Maybe<EventTagsConnectedRelationship>;
};

export type EventCreateInput = {
  Comments?: InputMaybe<EventCommentsFieldInput>;
  EventChannels?: InputMaybe<EventEventChannelsFieldInput>;
  FeedbackComments?: InputMaybe<EventFeedbackCommentsFieldInput>;
  Poster?: InputMaybe<EventPosterFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventFieldInput>;
  RelatedIssues?: InputMaybe<EventRelatedIssuesFieldInput>;
  SubscribedToNotifications?: InputMaybe<EventSubscribedToNotificationsFieldInput>;
  Tags?: InputMaybe<EventTagsFieldInput>;
  address?: InputMaybe<Scalars['String']['input']>;
  canceled: Scalars['Boolean']['input'];
  cost?: InputMaybe<Scalars['String']['input']>;
  coverImageURL?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  endTime: Scalars['DateTime']['input'];
  free?: InputMaybe<Scalars['Boolean']['input']>;
  isAllDay?: InputMaybe<Scalars['Boolean']['input']>;
  isHostedByOP?: InputMaybe<Scalars['Boolean']['input']>;
  isInPrivateResidence?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<PointInput>;
  locationName?: InputMaybe<Scalars['String']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  placeId?: InputMaybe<Scalars['String']['input']>;
  startTime: Scalars['DateTime']['input'];
  startTimeDayOfWeek?: InputMaybe<Scalars['String']['input']>;
  startTimeHourOfDay?: InputMaybe<Scalars['Int']['input']>;
  title: Scalars['String']['input'];
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl?: InputMaybe<Scalars['String']['input']>;
};

export type EventCreateInputWithChannels = {
  channelConnections: Array<Scalars['String']['input']>;
  eventCreateInput: EventCreateInput;
};

export type EventCreatedEvent = {
  __typename?: 'EventCreatedEvent';
  createdEvent: EventEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventDeleteInput = {
  Comments?: InputMaybe<Array<EventCommentsDeleteFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsDeleteFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsDeleteFieldInput>>;
  Poster?: InputMaybe<EventPosterDeleteFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventDeleteFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesDeleteFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<EventSubscribedToNotificationsDeleteFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsDeleteFieldInput>>;
};

export type EventDeletedEvent = {
  __typename?: 'EventDeletedEvent';
  deletedEvent: EventEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventDisconnectInput = {
  Comments?: InputMaybe<Array<EventCommentsDisconnectFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsDisconnectFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsDisconnectFieldInput>>;
  Poster?: InputMaybe<EventPosterDisconnectFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventDisconnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesDisconnectFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<EventSubscribedToNotificationsDisconnectFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsDisconnectFieldInput>>;
};

export type EventEdge = {
  __typename?: 'EventEdge';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type EventEventChannelEventChannelsAggregationSelection = {
  __typename?: 'EventEventChannelEventChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventEventChannelEventChannelsNodeAggregateSelection>;
};

export type EventEventChannelEventChannelsNodeAggregateSelection = {
  __typename?: 'EventEventChannelEventChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  eventId: IdAggregateSelection;
  id: IdAggregateSelection;
};

export type EventEventChannelsAggregateInput = {
  AND?: InputMaybe<Array<EventEventChannelsAggregateInput>>;
  NOT?: InputMaybe<EventEventChannelsAggregateInput>;
  OR?: InputMaybe<Array<EventEventChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventEventChannelsNodeAggregationWhereInput>;
};

export type EventEventChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<EventChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventChannelConnectWhere>;
};

export type EventEventChannelsConnectedRelationship = {
  __typename?: 'EventEventChannelsConnectedRelationship';
  node: EventChannelEventPayload;
};

export type EventEventChannelsConnection = {
  __typename?: 'EventEventChannelsConnection';
  edges: Array<EventEventChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventEventChannelsConnectionSort = {
  node?: InputMaybe<EventChannelSort>;
};

export type EventEventChannelsConnectionWhere = {
  AND?: InputMaybe<Array<EventEventChannelsConnectionWhere>>;
  NOT?: InputMaybe<EventEventChannelsConnectionWhere>;
  OR?: InputMaybe<Array<EventEventChannelsConnectionWhere>>;
  node?: InputMaybe<EventChannelWhere>;
};

export type EventEventChannelsCreateFieldInput = {
  node: EventChannelCreateInput;
};

export type EventEventChannelsDeleteFieldInput = {
  delete?: InputMaybe<EventChannelDeleteInput>;
  where?: InputMaybe<EventEventChannelsConnectionWhere>;
};

export type EventEventChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventChannelDisconnectInput>;
  where?: InputMaybe<EventEventChannelsConnectionWhere>;
};

export type EventEventChannelsFieldInput = {
  connect?: InputMaybe<Array<EventEventChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<EventEventChannelsCreateFieldInput>>;
};

export type EventEventChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventEventChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventEventChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventEventChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type EventEventChannelsRelationship = {
  __typename?: 'EventEventChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: EventChannel;
};

export type EventEventChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<EventChannelSubscriptionWhere>;
};

export type EventEventChannelsUpdateConnectionInput = {
  node?: InputMaybe<EventChannelUpdateInput>;
};

export type EventEventChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventEventChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<EventEventChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventEventChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventEventChannelsDisconnectFieldInput>>;
  update?: InputMaybe<EventEventChannelsUpdateConnectionInput>;
  where?: InputMaybe<EventEventChannelsConnectionWhere>;
};

export type EventEventPayload = {
  __typename?: 'EventEventPayload';
  address?: Maybe<Scalars['String']['output']>;
  canceled: Scalars['Boolean']['output'];
  cost?: Maybe<Scalars['String']['output']>;
  coverImageURL?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  endTime: Scalars['DateTime']['output'];
  free?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  isAllDay?: Maybe<Scalars['Boolean']['output']>;
  isHostedByOP?: Maybe<Scalars['Boolean']['output']>;
  isInPrivateResidence?: Maybe<Scalars['Boolean']['output']>;
  location?: Maybe<Point>;
  locationName?: Maybe<Scalars['String']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  placeId?: Maybe<Scalars['String']['output']>;
  startTime: Scalars['DateTime']['output'];
  startTimeDayOfWeek?: Maybe<Scalars['String']['output']>;
  startTimeHourOfDay?: Maybe<Scalars['Int']['output']>;
  title: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  virtualEventUrl?: Maybe<Scalars['String']['output']>;
};

export type EventFeedbackCommentsAggregateInput = {
  AND?: InputMaybe<Array<EventFeedbackCommentsAggregateInput>>;
  NOT?: InputMaybe<EventFeedbackCommentsAggregateInput>;
  OR?: InputMaybe<Array<EventFeedbackCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventFeedbackCommentsNodeAggregationWhereInput>;
};

export type EventFeedbackCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type EventFeedbackCommentsConnectedRelationship = {
  __typename?: 'EventFeedbackCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type EventFeedbackCommentsConnection = {
  __typename?: 'EventFeedbackCommentsConnection';
  edges: Array<EventFeedbackCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventFeedbackCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type EventFeedbackCommentsConnectionWhere = {
  AND?: InputMaybe<Array<EventFeedbackCommentsConnectionWhere>>;
  NOT?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  OR?: InputMaybe<Array<EventFeedbackCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type EventFeedbackCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type EventFeedbackCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
};

export type EventFeedbackCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
};

export type EventFeedbackCommentsFieldInput = {
  connect?: InputMaybe<Array<EventFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventFeedbackCommentsCreateFieldInput>>;
};

export type EventFeedbackCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventFeedbackCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventFeedbackCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventFeedbackCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type EventFeedbackCommentsRelationship = {
  __typename?: 'EventFeedbackCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type EventFeedbackCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type EventFeedbackCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type EventFeedbackCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventFeedbackCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventFeedbackCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventFeedbackCommentsDisconnectFieldInput>>;
  update?: InputMaybe<EventFeedbackCommentsUpdateConnectionInput>;
  where?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
};

export type EventInfo = {
  __typename?: 'EventInfo';
  EventChannels?: Maybe<Array<Maybe<EventChannelInfo>>>;
  Poster?: Maybe<User>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type EventInfoAggregateSelection = {
  __typename?: 'EventInfoAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type EventInfoCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type EventInfoCreatedEvent = {
  __typename?: 'EventInfoCreatedEvent';
  createdEventInfo: EventInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventInfoDeletedEvent = {
  __typename?: 'EventInfoDeletedEvent';
  deletedEventInfo: EventInfoEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type EventInfoEdge = {
  __typename?: 'EventInfoEdge';
  cursor: Scalars['String']['output'];
  node: EventInfo;
};

export type EventInfoEventPayload = {
  __typename?: 'EventInfoEventPayload';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type EventInfoOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EventInfoSort objects to sort EventInfos by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EventInfoSort>>;
};

/** Fields to sort EventInfos by. The order in which sorts are applied is not guaranteed when specifying many fields in one EventInfoSort object. */
export type EventInfoSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
};

export type EventInfoSubscriptionWhere = {
  AND?: InputMaybe<Array<EventInfoSubscriptionWhere>>;
  NOT?: InputMaybe<EventInfoSubscriptionWhere>;
  OR?: InputMaybe<Array<EventInfoSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EventInfoUpdateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type EventInfoUpdatedEvent = {
  __typename?: 'EventInfoUpdatedEvent';
  event: EventType;
  previousState: EventInfoEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedEventInfo: EventInfoEventPayload;
};

export type EventInfoWhere = {
  AND?: InputMaybe<Array<EventInfoWhere>>;
  NOT?: InputMaybe<EventInfoWhere>;
  OR?: InputMaybe<Array<EventInfoWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EventInfosConnection = {
  __typename?: 'EventInfosConnection';
  edges: Array<EventInfoEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventIssueRelatedIssuesAggregationSelection = {
  __typename?: 'EventIssueRelatedIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventIssueRelatedIssuesNodeAggregateSelection>;
};

export type EventIssueRelatedIssuesNodeAggregateSelection = {
  __typename?: 'EventIssueRelatedIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type EventOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EventSort objects to sort Events by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EventSort>>;
};

export type EventPosterAggregateInput = {
  AND?: InputMaybe<Array<EventPosterAggregateInput>>;
  NOT?: InputMaybe<EventPosterAggregateInput>;
  OR?: InputMaybe<Array<EventPosterAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventPosterNodeAggregationWhereInput>;
};

export type EventPosterConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type EventPosterConnectOrCreateFieldInput = {
  onCreate: EventPosterConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type EventPosterConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type EventPosterConnectedRelationship = {
  __typename?: 'EventPosterConnectedRelationship';
  node: UserEventPayload;
};

export type EventPosterConnection = {
  __typename?: 'EventPosterConnection';
  edges: Array<EventPosterRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventPosterConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type EventPosterConnectionWhere = {
  AND?: InputMaybe<Array<EventPosterConnectionWhere>>;
  NOT?: InputMaybe<EventPosterConnectionWhere>;
  OR?: InputMaybe<Array<EventPosterConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type EventPosterCreateFieldInput = {
  node: UserCreateInput;
};

export type EventPosterDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<EventPosterConnectionWhere>;
};

export type EventPosterDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<EventPosterConnectionWhere>;
};

export type EventPosterFieldInput = {
  connect?: InputMaybe<EventPosterConnectFieldInput>;
  connectOrCreate?: InputMaybe<EventPosterConnectOrCreateFieldInput>;
  create?: InputMaybe<EventPosterCreateFieldInput>;
};

export type EventPosterNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventPosterNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventPosterNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventPosterNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EventPosterRelationship = {
  __typename?: 'EventPosterRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type EventPosterRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type EventPosterUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type EventPosterUpdateFieldInput = {
  connect?: InputMaybe<EventPosterConnectFieldInput>;
  connectOrCreate?: InputMaybe<EventPosterConnectOrCreateFieldInput>;
  create?: InputMaybe<EventPosterCreateFieldInput>;
  delete?: InputMaybe<EventPosterDeleteFieldInput>;
  disconnect?: InputMaybe<EventPosterDisconnectFieldInput>;
  update?: InputMaybe<EventPosterUpdateConnectionInput>;
  where?: InputMaybe<EventPosterConnectionWhere>;
};

export type EventRecurringEventAggregateInput = {
  AND?: InputMaybe<Array<EventRecurringEventAggregateInput>>;
  NOT?: InputMaybe<EventRecurringEventAggregateInput>;
  OR?: InputMaybe<Array<EventRecurringEventAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventRecurringEventNodeAggregationWhereInput>;
};

export type EventRecurringEventConnectFieldInput = {
  connect?: InputMaybe<RecurringEventConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<RecurringEventConnectWhere>;
};

export type EventRecurringEventConnectedRelationship = {
  __typename?: 'EventRecurringEventConnectedRelationship';
  node: RecurringEventEventPayload;
};

export type EventRecurringEventConnection = {
  __typename?: 'EventRecurringEventConnection';
  edges: Array<EventRecurringEventRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventRecurringEventConnectionSort = {
  node?: InputMaybe<RecurringEventSort>;
};

export type EventRecurringEventConnectionWhere = {
  AND?: InputMaybe<Array<EventRecurringEventConnectionWhere>>;
  NOT?: InputMaybe<EventRecurringEventConnectionWhere>;
  OR?: InputMaybe<Array<EventRecurringEventConnectionWhere>>;
  node?: InputMaybe<RecurringEventWhere>;
};

export type EventRecurringEventCreateFieldInput = {
  node: RecurringEventCreateInput;
};

export type EventRecurringEventDeleteFieldInput = {
  delete?: InputMaybe<RecurringEventDeleteInput>;
  where?: InputMaybe<EventRecurringEventConnectionWhere>;
};

export type EventRecurringEventDisconnectFieldInput = {
  disconnect?: InputMaybe<RecurringEventDisconnectInput>;
  where?: InputMaybe<EventRecurringEventConnectionWhere>;
};

export type EventRecurringEventFieldInput = {
  connect?: InputMaybe<EventRecurringEventConnectFieldInput>;
  create?: InputMaybe<EventRecurringEventCreateFieldInput>;
};

export type EventRecurringEventNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventRecurringEventNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventRecurringEventNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventRecurringEventNodeAggregationWhereInput>>;
};

export type EventRecurringEventRecurringEventAggregationSelection = {
  __typename?: 'EventRecurringEventRecurringEventAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventRecurringEventRecurringEventNodeAggregateSelection>;
};

export type EventRecurringEventRecurringEventNodeAggregateSelection = {
  __typename?: 'EventRecurringEventRecurringEventNodeAggregateSelection';
  id: IdAggregateSelection;
};

export type EventRecurringEventRelationship = {
  __typename?: 'EventRecurringEventRelationship';
  cursor: Scalars['String']['output'];
  node: RecurringEvent;
};

export type EventRecurringEventRelationshipSubscriptionWhere = {
  node?: InputMaybe<RecurringEventSubscriptionWhere>;
};

export type EventRecurringEventUpdateConnectionInput = {
  node?: InputMaybe<RecurringEventUpdateInput>;
};

export type EventRecurringEventUpdateFieldInput = {
  connect?: InputMaybe<EventRecurringEventConnectFieldInput>;
  create?: InputMaybe<EventRecurringEventCreateFieldInput>;
  delete?: InputMaybe<EventRecurringEventDeleteFieldInput>;
  disconnect?: InputMaybe<EventRecurringEventDisconnectFieldInput>;
  update?: InputMaybe<EventRecurringEventUpdateConnectionInput>;
  where?: InputMaybe<EventRecurringEventConnectionWhere>;
};

export type EventRelatedIssuesAggregateInput = {
  AND?: InputMaybe<Array<EventRelatedIssuesAggregateInput>>;
  NOT?: InputMaybe<EventRelatedIssuesAggregateInput>;
  OR?: InputMaybe<Array<EventRelatedIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventRelatedIssuesNodeAggregationWhereInput>;
};

export type EventRelatedIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type EventRelatedIssuesConnectedRelationship = {
  __typename?: 'EventRelatedIssuesConnectedRelationship';
  node: IssueEventPayload;
};

export type EventRelatedIssuesConnection = {
  __typename?: 'EventRelatedIssuesConnection';
  edges: Array<EventRelatedIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventRelatedIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type EventRelatedIssuesConnectionWhere = {
  AND?: InputMaybe<Array<EventRelatedIssuesConnectionWhere>>;
  NOT?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  OR?: InputMaybe<Array<EventRelatedIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type EventRelatedIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type EventRelatedIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<EventRelatedIssuesConnectionWhere>;
};

export type EventRelatedIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<EventRelatedIssuesConnectionWhere>;
};

export type EventRelatedIssuesFieldInput = {
  connect?: InputMaybe<Array<EventRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<EventRelatedIssuesCreateFieldInput>>;
};

export type EventRelatedIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventRelatedIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventRelatedIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventRelatedIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type EventRelatedIssuesRelationship = {
  __typename?: 'EventRelatedIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type EventRelatedIssuesRelationshipSubscriptionWhere = {
  node?: InputMaybe<IssueSubscriptionWhere>;
};

export type EventRelatedIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type EventRelatedIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<EventRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<EventRelatedIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<EventRelatedIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventRelatedIssuesDisconnectFieldInput>>;
  update?: InputMaybe<EventRelatedIssuesUpdateConnectionInput>;
  where?: InputMaybe<EventRelatedIssuesConnectionWhere>;
};

export type EventRelationInput = {
  Comments?: InputMaybe<Array<EventCommentsCreateFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsCreateFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsCreateFieldInput>>;
  Poster?: InputMaybe<EventPosterCreateFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventCreateFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesCreateFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<EventSubscribedToNotificationsCreateFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsCreateFieldInput>>;
};

export type EventRelationshipCreatedEvent = {
  __typename?: 'EventRelationshipCreatedEvent';
  createdRelationship: EventConnectedRelationships;
  event: EventEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type EventRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<EventRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<EventRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<EventRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<EventRelationshipsSubscriptionWhere>;
  event?: InputMaybe<EventSubscriptionWhere>;
};

export type EventRelationshipDeletedEvent = {
  __typename?: 'EventRelationshipDeletedEvent';
  deletedRelationship: EventConnectedRelationships;
  event: EventEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type EventRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<EventRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<EventRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<EventRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<EventRelationshipsSubscriptionWhere>;
  event?: InputMaybe<EventSubscriptionWhere>;
};

export type EventRelationshipsSubscriptionWhere = {
  Comments?: InputMaybe<EventCommentsRelationshipSubscriptionWhere>;
  EventChannels?: InputMaybe<EventEventChannelsRelationshipSubscriptionWhere>;
  FeedbackComments?: InputMaybe<EventFeedbackCommentsRelationshipSubscriptionWhere>;
  Poster?: InputMaybe<EventPosterRelationshipSubscriptionWhere>;
  RecurringEvent?: InputMaybe<EventRecurringEventRelationshipSubscriptionWhere>;
  RelatedIssues?: InputMaybe<EventRelatedIssuesRelationshipSubscriptionWhere>;
  SubscribedToNotifications?: InputMaybe<EventSubscribedToNotificationsRelationshipSubscriptionWhere>;
  Tags?: InputMaybe<EventTagsRelationshipSubscriptionWhere>;
};

/** Fields to sort Events by. The order in which sorts are applied is not guaranteed when specifying many fields in one EventSort object. */
export type EventSort = {
  address?: InputMaybe<SortDirection>;
  canceled?: InputMaybe<SortDirection>;
  cost?: InputMaybe<SortDirection>;
  coverImageURL?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  endTime?: InputMaybe<SortDirection>;
  free?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isAllDay?: InputMaybe<SortDirection>;
  isHostedByOP?: InputMaybe<SortDirection>;
  isInPrivateResidence?: InputMaybe<SortDirection>;
  location?: InputMaybe<SortDirection>;
  locationName?: InputMaybe<SortDirection>;
  locked?: InputMaybe<SortDirection>;
  placeId?: InputMaybe<SortDirection>;
  startTime?: InputMaybe<SortDirection>;
  startTimeDayOfWeek?: InputMaybe<SortDirection>;
  startTimeHourOfDay?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  virtualEventUrl?: InputMaybe<SortDirection>;
};

export type EventSubscribedToNotificationsAggregateInput = {
  AND?: InputMaybe<Array<EventSubscribedToNotificationsAggregateInput>>;
  NOT?: InputMaybe<EventSubscribedToNotificationsAggregateInput>;
  OR?: InputMaybe<Array<EventSubscribedToNotificationsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventSubscribedToNotificationsNodeAggregationWhereInput>;
};

export type EventSubscribedToNotificationsConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type EventSubscribedToNotificationsConnectOrCreateFieldInput = {
  onCreate: EventSubscribedToNotificationsConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type EventSubscribedToNotificationsConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type EventSubscribedToNotificationsConnectedRelationship = {
  __typename?: 'EventSubscribedToNotificationsConnectedRelationship';
  node: UserEventPayload;
};

export type EventSubscribedToNotificationsConnection = {
  __typename?: 'EventSubscribedToNotificationsConnection';
  edges: Array<EventSubscribedToNotificationsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventSubscribedToNotificationsConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type EventSubscribedToNotificationsConnectionWhere = {
  AND?: InputMaybe<Array<EventSubscribedToNotificationsConnectionWhere>>;
  NOT?: InputMaybe<EventSubscribedToNotificationsConnectionWhere>;
  OR?: InputMaybe<Array<EventSubscribedToNotificationsConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type EventSubscribedToNotificationsCreateFieldInput = {
  node: UserCreateInput;
};

export type EventSubscribedToNotificationsDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<EventSubscribedToNotificationsConnectionWhere>;
};

export type EventSubscribedToNotificationsDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<EventSubscribedToNotificationsConnectionWhere>;
};

export type EventSubscribedToNotificationsFieldInput = {
  connect?: InputMaybe<Array<EventSubscribedToNotificationsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<EventSubscribedToNotificationsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<EventSubscribedToNotificationsCreateFieldInput>>;
};

export type EventSubscribedToNotificationsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventSubscribedToNotificationsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventSubscribedToNotificationsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventSubscribedToNotificationsNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EventSubscribedToNotificationsRelationship = {
  __typename?: 'EventSubscribedToNotificationsRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type EventSubscribedToNotificationsRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type EventSubscribedToNotificationsUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type EventSubscribedToNotificationsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventSubscribedToNotificationsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<EventSubscribedToNotificationsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<EventSubscribedToNotificationsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventSubscribedToNotificationsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventSubscribedToNotificationsDisconnectFieldInput>>;
  update?: InputMaybe<EventSubscribedToNotificationsUpdateConnectionInput>;
  where?: InputMaybe<EventSubscribedToNotificationsConnectionWhere>;
};

export type EventSubscriptionWhere = {
  AND?: InputMaybe<Array<EventSubscriptionWhere>>;
  NOT?: InputMaybe<EventSubscriptionWhere>;
  OR?: InputMaybe<Array<EventSubscriptionWhere>>;
  address?: InputMaybe<Scalars['String']['input']>;
  address_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']['input']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  canceled?: InputMaybe<Scalars['Boolean']['input']>;
  cost?: InputMaybe<Scalars['String']['input']>;
  cost_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  cost_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  cost_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  cost_MATCHES?: InputMaybe<Scalars['String']['input']>;
  cost_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  coverImageURL?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  coverImageURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  endTime?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  endTime_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  free?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  isAllDay?: InputMaybe<Scalars['Boolean']['input']>;
  isHostedByOP?: InputMaybe<Scalars['Boolean']['input']>;
  isInPrivateResidence?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<PointInput>;
  locationName?: InputMaybe<Scalars['String']['input']>;
  locationName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  locationName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  locationName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  locationName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  locationName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  location_DISTANCE?: InputMaybe<PointDistance>;
  location_GT?: InputMaybe<PointDistance>;
  location_GTE?: InputMaybe<PointDistance>;
  location_IN?: InputMaybe<Array<InputMaybe<PointInput>>>;
  location_LT?: InputMaybe<PointDistance>;
  location_LTE?: InputMaybe<PointDistance>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  placeId?: InputMaybe<Scalars['String']['input']>;
  placeId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  placeId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  placeId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  placeId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  placeId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  startTime?: InputMaybe<Scalars['DateTime']['input']>;
  startTimeDayOfWeek?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  startTimeDayOfWeek_MATCHES?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  startTimeHourOfDay?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  startTimeHourOfDay_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  startTime_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  virtualEventUrl_MATCHES?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EventTagTagsAggregationSelection = {
  __typename?: 'EventTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventTagTagsNodeAggregateSelection>;
};

export type EventTagTagsNodeAggregateSelection = {
  __typename?: 'EventTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type EventTagsAggregateInput = {
  AND?: InputMaybe<Array<EventTagsAggregateInput>>;
  NOT?: InputMaybe<EventTagsAggregateInput>;
  OR?: InputMaybe<Array<EventTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventTagsNodeAggregationWhereInput>;
};

export type EventTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type EventTagsConnectOrCreateFieldInput = {
  onCreate: EventTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type EventTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type EventTagsConnectedRelationship = {
  __typename?: 'EventTagsConnectedRelationship';
  node: TagEventPayload;
};

export type EventTagsConnection = {
  __typename?: 'EventTagsConnection';
  edges: Array<EventTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type EventTagsConnectionWhere = {
  AND?: InputMaybe<Array<EventTagsConnectionWhere>>;
  NOT?: InputMaybe<EventTagsConnectionWhere>;
  OR?: InputMaybe<Array<EventTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type EventTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type EventTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<EventTagsConnectionWhere>;
};

export type EventTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<EventTagsConnectionWhere>;
};

export type EventTagsFieldInput = {
  connect?: InputMaybe<Array<EventTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<EventTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<EventTagsCreateFieldInput>>;
};

export type EventTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EventTagsRelationship = {
  __typename?: 'EventTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type EventTagsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TagSubscriptionWhere>;
};

export type EventTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type EventTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<EventTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<EventTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventTagsDisconnectFieldInput>>;
  update?: InputMaybe<EventTagsUpdateConnectionInput>;
  where?: InputMaybe<EventTagsConnectionWhere>;
};

export enum EventType {
  Create = 'CREATE',
  CreateRelationship = 'CREATE_RELATIONSHIP',
  Delete = 'DELETE',
  DeleteRelationship = 'DELETE_RELATIONSHIP',
  Update = 'UPDATE'
}

export type EventUpdateInput = {
  Comments?: InputMaybe<Array<EventCommentsUpdateFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsUpdateFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsUpdateFieldInput>>;
  Poster?: InputMaybe<EventPosterUpdateFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventUpdateFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesUpdateFieldInput>>;
  SubscribedToNotifications?: InputMaybe<Array<EventSubscribedToNotificationsUpdateFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsUpdateFieldInput>>;
  address?: InputMaybe<Scalars['String']['input']>;
  canceled?: InputMaybe<Scalars['Boolean']['input']>;
  cost?: InputMaybe<Scalars['String']['input']>;
  coverImageURL?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  endTime?: InputMaybe<Scalars['DateTime']['input']>;
  free?: InputMaybe<Scalars['Boolean']['input']>;
  isAllDay?: InputMaybe<Scalars['Boolean']['input']>;
  isHostedByOP?: InputMaybe<Scalars['Boolean']['input']>;
  isInPrivateResidence?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<PointInput>;
  locationName?: InputMaybe<Scalars['String']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  placeId?: InputMaybe<Scalars['String']['input']>;
  startTime?: InputMaybe<Scalars['DateTime']['input']>;
  startTimeDayOfWeek?: InputMaybe<Scalars['String']['input']>;
  startTimeHourOfDay?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl?: InputMaybe<Scalars['String']['input']>;
};

export type EventUpdatedEvent = {
  __typename?: 'EventUpdatedEvent';
  event: EventType;
  previousState: EventEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedEvent: EventEventPayload;
};

export type EventUserPosterAggregationSelection = {
  __typename?: 'EventUserPosterAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventUserPosterNodeAggregateSelection>;
};

export type EventUserPosterNodeAggregateSelection = {
  __typename?: 'EventUserPosterNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type EventUserSubscribedToNotificationsAggregationSelection = {
  __typename?: 'EventUserSubscribedToNotificationsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventUserSubscribedToNotificationsNodeAggregateSelection>;
};

export type EventUserSubscribedToNotificationsNodeAggregateSelection = {
  __typename?: 'EventUserSubscribedToNotificationsNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type EventWhere = {
  AND?: InputMaybe<Array<EventWhere>>;
  CommentsAggregate?: InputMaybe<EventCommentsAggregateInput>;
  /** Return Events where all of the related EventCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<EventCommentsConnectionWhere>;
  /** Return Events where none of the related EventCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<EventCommentsConnectionWhere>;
  /** Return Events where one of the related EventCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<EventCommentsConnectionWhere>;
  /** Return Events where some of the related EventCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<EventCommentsConnectionWhere>;
  /** Return Events where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return Events where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return Events where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Events where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  EventChannelsAggregate?: InputMaybe<EventEventChannelsAggregateInput>;
  /** Return Events where all of the related EventEventChannelsConnections match this filter */
  EventChannelsConnection_ALL?: InputMaybe<EventEventChannelsConnectionWhere>;
  /** Return Events where none of the related EventEventChannelsConnections match this filter */
  EventChannelsConnection_NONE?: InputMaybe<EventEventChannelsConnectionWhere>;
  /** Return Events where one of the related EventEventChannelsConnections match this filter */
  EventChannelsConnection_SINGLE?: InputMaybe<EventEventChannelsConnectionWhere>;
  /** Return Events where some of the related EventEventChannelsConnections match this filter */
  EventChannelsConnection_SOME?: InputMaybe<EventEventChannelsConnectionWhere>;
  /** Return Events where all of the related EventChannels match this filter */
  EventChannels_ALL?: InputMaybe<EventChannelWhere>;
  /** Return Events where none of the related EventChannels match this filter */
  EventChannels_NONE?: InputMaybe<EventChannelWhere>;
  /** Return Events where one of the related EventChannels match this filter */
  EventChannels_SINGLE?: InputMaybe<EventChannelWhere>;
  /** Return Events where some of the related EventChannels match this filter */
  EventChannels_SOME?: InputMaybe<EventChannelWhere>;
  FeedbackCommentsAggregate?: InputMaybe<EventFeedbackCommentsAggregateInput>;
  /** Return Events where all of the related EventFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_ALL?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  /** Return Events where none of the related EventFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_NONE?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  /** Return Events where one of the related EventFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SINGLE?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  /** Return Events where some of the related EventFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SOME?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  /** Return Events where all of the related Comments match this filter */
  FeedbackComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Events where none of the related Comments match this filter */
  FeedbackComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Events where one of the related Comments match this filter */
  FeedbackComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Events where some of the related Comments match this filter */
  FeedbackComments_SOME?: InputMaybe<CommentWhere>;
  NOT?: InputMaybe<EventWhere>;
  OR?: InputMaybe<Array<EventWhere>>;
  Poster?: InputMaybe<UserWhere>;
  PosterAggregate?: InputMaybe<EventPosterAggregateInput>;
  PosterConnection?: InputMaybe<EventPosterConnectionWhere>;
  PosterConnection_NOT?: InputMaybe<EventPosterConnectionWhere>;
  Poster_NOT?: InputMaybe<UserWhere>;
  RecurringEvent?: InputMaybe<RecurringEventWhere>;
  RecurringEventAggregate?: InputMaybe<EventRecurringEventAggregateInput>;
  RecurringEventConnection?: InputMaybe<EventRecurringEventConnectionWhere>;
  RecurringEventConnection_NOT?: InputMaybe<EventRecurringEventConnectionWhere>;
  RecurringEvent_NOT?: InputMaybe<RecurringEventWhere>;
  RelatedIssuesAggregate?: InputMaybe<EventRelatedIssuesAggregateInput>;
  /** Return Events where all of the related EventRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_ALL?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  /** Return Events where none of the related EventRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_NONE?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  /** Return Events where one of the related EventRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SINGLE?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  /** Return Events where some of the related EventRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SOME?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  /** Return Events where all of the related Issues match this filter */
  RelatedIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return Events where none of the related Issues match this filter */
  RelatedIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return Events where one of the related Issues match this filter */
  RelatedIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return Events where some of the related Issues match this filter */
  RelatedIssues_SOME?: InputMaybe<IssueWhere>;
  SubscribedToNotificationsAggregate?: InputMaybe<EventSubscribedToNotificationsAggregateInput>;
  /** Return Events where all of the related EventSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_ALL?: InputMaybe<EventSubscribedToNotificationsConnectionWhere>;
  /** Return Events where none of the related EventSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_NONE?: InputMaybe<EventSubscribedToNotificationsConnectionWhere>;
  /** Return Events where one of the related EventSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_SINGLE?: InputMaybe<EventSubscribedToNotificationsConnectionWhere>;
  /** Return Events where some of the related EventSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_SOME?: InputMaybe<EventSubscribedToNotificationsConnectionWhere>;
  /** Return Events where all of the related Users match this filter */
  SubscribedToNotifications_ALL?: InputMaybe<UserWhere>;
  /** Return Events where none of the related Users match this filter */
  SubscribedToNotifications_NONE?: InputMaybe<UserWhere>;
  /** Return Events where one of the related Users match this filter */
  SubscribedToNotifications_SINGLE?: InputMaybe<UserWhere>;
  /** Return Events where some of the related Users match this filter */
  SubscribedToNotifications_SOME?: InputMaybe<UserWhere>;
  TagsAggregate?: InputMaybe<EventTagsAggregateInput>;
  /** Return Events where all of the related EventTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<EventTagsConnectionWhere>;
  /** Return Events where none of the related EventTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<EventTagsConnectionWhere>;
  /** Return Events where one of the related EventTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<EventTagsConnectionWhere>;
  /** Return Events where some of the related EventTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<EventTagsConnectionWhere>;
  /** Return Events where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Events where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Events where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Events where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  address?: InputMaybe<Scalars['String']['input']>;
  address_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']['input']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  canceled?: InputMaybe<Scalars['Boolean']['input']>;
  cost?: InputMaybe<Scalars['String']['input']>;
  cost_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  cost_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  cost_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  cost_MATCHES?: InputMaybe<Scalars['String']['input']>;
  cost_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  coverImageURL?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  coverImageURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  endTime?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  endTime_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  free?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  isAllDay?: InputMaybe<Scalars['Boolean']['input']>;
  isHostedByOP?: InputMaybe<Scalars['Boolean']['input']>;
  isInPrivateResidence?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<PointInput>;
  locationName?: InputMaybe<Scalars['String']['input']>;
  locationName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  locationName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  locationName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  locationName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  locationName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  location_DISTANCE?: InputMaybe<PointDistance>;
  location_GT?: InputMaybe<PointDistance>;
  location_GTE?: InputMaybe<PointDistance>;
  location_IN?: InputMaybe<Array<InputMaybe<PointInput>>>;
  location_LT?: InputMaybe<PointDistance>;
  location_LTE?: InputMaybe<PointDistance>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  placeId?: InputMaybe<Scalars['String']['input']>;
  placeId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  placeId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  placeId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  placeId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  placeId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  startTime?: InputMaybe<Scalars['DateTime']['input']>;
  startTimeDayOfWeek?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  startTimeDayOfWeek_MATCHES?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  startTimeHourOfDay?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  startTimeHourOfDay_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  startTime_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  virtualEventUrl_MATCHES?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EventsConnection = {
  __typename?: 'EventsConnection';
  edges: Array<EventEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Feed = {
  __typename?: 'Feed';
  Owner?: Maybe<User>;
  OwnerAggregate?: Maybe<FeedUserOwnerAggregationSelection>;
  OwnerConnection: FeedOwnerConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<FeedTagTagsAggregationSelection>;
  TagsConnection: FeedTagsConnection;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  title?: Maybe<Scalars['String']['output']>;
};


export type FeedOwnerArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type FeedOwnerAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type FeedOwnerConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<FeedOwnerConnectionSort>>;
  where?: InputMaybe<FeedOwnerConnectionWhere>;
};


export type FeedTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type FeedTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type FeedTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<FeedTagsConnectionSort>>;
  where?: InputMaybe<FeedTagsConnectionWhere>;
};

export type FeedAggregateSelection = {
  __typename?: 'FeedAggregateSelection';
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type FeedConnectInput = {
  Owner?: InputMaybe<FeedOwnerConnectFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsConnectFieldInput>>;
};

export type FeedConnectOrCreateInput = {
  Owner?: InputMaybe<FeedOwnerConnectOrCreateFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsConnectOrCreateFieldInput>>;
};

export type FeedConnectedRelationships = {
  __typename?: 'FeedConnectedRelationships';
  Owner?: Maybe<FeedOwnerConnectedRelationship>;
  Tags?: Maybe<FeedTagsConnectedRelationship>;
};

export type FeedCreateInput = {
  Owner?: InputMaybe<FeedOwnerFieldInput>;
  Tags?: InputMaybe<FeedTagsFieldInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type FeedCreatedEvent = {
  __typename?: 'FeedCreatedEvent';
  createdFeed: FeedEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type FeedDeleteInput = {
  Owner?: InputMaybe<FeedOwnerDeleteFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsDeleteFieldInput>>;
};

export type FeedDeletedEvent = {
  __typename?: 'FeedDeletedEvent';
  deletedFeed: FeedEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type FeedDisconnectInput = {
  Owner?: InputMaybe<FeedOwnerDisconnectFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsDisconnectFieldInput>>;
};

export type FeedEdge = {
  __typename?: 'FeedEdge';
  cursor: Scalars['String']['output'];
  node: Feed;
};

export type FeedEventPayload = {
  __typename?: 'FeedEventPayload';
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  title?: Maybe<Scalars['String']['output']>;
};

export type FeedOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more FeedSort objects to sort Feeds by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<FeedSort>>;
};

export type FeedOwnerAggregateInput = {
  AND?: InputMaybe<Array<FeedOwnerAggregateInput>>;
  NOT?: InputMaybe<FeedOwnerAggregateInput>;
  OR?: InputMaybe<Array<FeedOwnerAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<FeedOwnerNodeAggregationWhereInput>;
};

export type FeedOwnerConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type FeedOwnerConnectOrCreateFieldInput = {
  onCreate: FeedOwnerConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type FeedOwnerConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type FeedOwnerConnectedRelationship = {
  __typename?: 'FeedOwnerConnectedRelationship';
  node: UserEventPayload;
};

export type FeedOwnerConnection = {
  __typename?: 'FeedOwnerConnection';
  edges: Array<FeedOwnerRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FeedOwnerConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type FeedOwnerConnectionWhere = {
  AND?: InputMaybe<Array<FeedOwnerConnectionWhere>>;
  NOT?: InputMaybe<FeedOwnerConnectionWhere>;
  OR?: InputMaybe<Array<FeedOwnerConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type FeedOwnerCreateFieldInput = {
  node: UserCreateInput;
};

export type FeedOwnerDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<FeedOwnerConnectionWhere>;
};

export type FeedOwnerDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<FeedOwnerConnectionWhere>;
};

export type FeedOwnerFieldInput = {
  connect?: InputMaybe<FeedOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<FeedOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<FeedOwnerCreateFieldInput>;
};

export type FeedOwnerNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FeedOwnerNodeAggregationWhereInput>>;
  NOT?: InputMaybe<FeedOwnerNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<FeedOwnerNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FeedOwnerRelationship = {
  __typename?: 'FeedOwnerRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type FeedOwnerRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type FeedOwnerUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type FeedOwnerUpdateFieldInput = {
  connect?: InputMaybe<FeedOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<FeedOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<FeedOwnerCreateFieldInput>;
  delete?: InputMaybe<FeedOwnerDeleteFieldInput>;
  disconnect?: InputMaybe<FeedOwnerDisconnectFieldInput>;
  update?: InputMaybe<FeedOwnerUpdateConnectionInput>;
  where?: InputMaybe<FeedOwnerConnectionWhere>;
};

export type FeedRelationInput = {
  Owner?: InputMaybe<FeedOwnerCreateFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsCreateFieldInput>>;
};

export type FeedRelationshipCreatedEvent = {
  __typename?: 'FeedRelationshipCreatedEvent';
  createdRelationship: FeedConnectedRelationships;
  event: EventType;
  feed: FeedEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type FeedRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<FeedRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<FeedRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<FeedRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<FeedRelationshipsSubscriptionWhere>;
  feed?: InputMaybe<FeedSubscriptionWhere>;
};

export type FeedRelationshipDeletedEvent = {
  __typename?: 'FeedRelationshipDeletedEvent';
  deletedRelationship: FeedConnectedRelationships;
  event: EventType;
  feed: FeedEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type FeedRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<FeedRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<FeedRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<FeedRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<FeedRelationshipsSubscriptionWhere>;
  feed?: InputMaybe<FeedSubscriptionWhere>;
};

export type FeedRelationshipsSubscriptionWhere = {
  Owner?: InputMaybe<FeedOwnerRelationshipSubscriptionWhere>;
  Tags?: InputMaybe<FeedTagsRelationshipSubscriptionWhere>;
};

/** Fields to sort Feeds by. The order in which sorts are applied is not guaranteed when specifying many fields in one FeedSort object. */
export type FeedSort = {
  deleted?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
};

export type FeedSubscriptionWhere = {
  AND?: InputMaybe<Array<FeedSubscriptionWhere>>;
  NOT?: InputMaybe<FeedSubscriptionWhere>;
  OR?: InputMaybe<Array<FeedSubscriptionWhere>>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type FeedTagTagsAggregationSelection = {
  __typename?: 'FeedTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<FeedTagTagsNodeAggregateSelection>;
};

export type FeedTagTagsNodeAggregateSelection = {
  __typename?: 'FeedTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type FeedTagsAggregateInput = {
  AND?: InputMaybe<Array<FeedTagsAggregateInput>>;
  NOT?: InputMaybe<FeedTagsAggregateInput>;
  OR?: InputMaybe<Array<FeedTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<FeedTagsNodeAggregationWhereInput>;
};

export type FeedTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type FeedTagsConnectOrCreateFieldInput = {
  onCreate: FeedTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type FeedTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type FeedTagsConnectedRelationship = {
  __typename?: 'FeedTagsConnectedRelationship';
  node: TagEventPayload;
};

export type FeedTagsConnection = {
  __typename?: 'FeedTagsConnection';
  edges: Array<FeedTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FeedTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type FeedTagsConnectionWhere = {
  AND?: InputMaybe<Array<FeedTagsConnectionWhere>>;
  NOT?: InputMaybe<FeedTagsConnectionWhere>;
  OR?: InputMaybe<Array<FeedTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type FeedTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type FeedTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<FeedTagsConnectionWhere>;
};

export type FeedTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<FeedTagsConnectionWhere>;
};

export type FeedTagsFieldInput = {
  connect?: InputMaybe<Array<FeedTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<FeedTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<FeedTagsCreateFieldInput>>;
};

export type FeedTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FeedTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<FeedTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<FeedTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FeedTagsRelationship = {
  __typename?: 'FeedTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type FeedTagsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TagSubscriptionWhere>;
};

export type FeedTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type FeedTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<FeedTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<FeedTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<FeedTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<FeedTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<FeedTagsDisconnectFieldInput>>;
  update?: InputMaybe<FeedTagsUpdateConnectionInput>;
  where?: InputMaybe<FeedTagsConnectionWhere>;
};

export type FeedUpdateInput = {
  Owner?: InputMaybe<FeedOwnerUpdateFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsUpdateFieldInput>>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type FeedUpdatedEvent = {
  __typename?: 'FeedUpdatedEvent';
  event: EventType;
  previousState: FeedEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedFeed: FeedEventPayload;
};

export type FeedUserOwnerAggregationSelection = {
  __typename?: 'FeedUserOwnerAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<FeedUserOwnerNodeAggregateSelection>;
};

export type FeedUserOwnerNodeAggregateSelection = {
  __typename?: 'FeedUserOwnerNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type FeedWhere = {
  AND?: InputMaybe<Array<FeedWhere>>;
  NOT?: InputMaybe<FeedWhere>;
  OR?: InputMaybe<Array<FeedWhere>>;
  Owner?: InputMaybe<UserWhere>;
  OwnerAggregate?: InputMaybe<FeedOwnerAggregateInput>;
  OwnerConnection?: InputMaybe<FeedOwnerConnectionWhere>;
  OwnerConnection_NOT?: InputMaybe<FeedOwnerConnectionWhere>;
  Owner_NOT?: InputMaybe<UserWhere>;
  TagsAggregate?: InputMaybe<FeedTagsAggregateInput>;
  /** Return Feeds where all of the related FeedTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<FeedTagsConnectionWhere>;
  /** Return Feeds where none of the related FeedTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<FeedTagsConnectionWhere>;
  /** Return Feeds where one of the related FeedTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<FeedTagsConnectionWhere>;
  /** Return Feeds where some of the related FeedTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<FeedTagsConnectionWhere>;
  /** Return Feeds where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Feeds where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Feeds where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Feeds where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type FeedsConnection = {
  __typename?: 'FeedsConnection';
  edges: Array<FeedEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export enum FileKind {
  Blend = 'BLEND',
  Glb = 'GLB',
  Jpg = 'JPG',
  Other = 'OTHER',
  Png = 'PNG',
  Rar = 'RAR',
  Stl = 'STL',
  Zip = 'ZIP'
}

/** Older revision of a downloadable file */
export type FileVersion = {
  __typename?: 'FileVersion';
  changelog?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  fileName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  kind: FileKind;
  mainFile: DownloadableFile;
  mainFileAggregate?: Maybe<FileVersionDownloadableFileMainFileAggregationSelection>;
  mainFileConnection: FileVersionMainFileConnection;
  size?: Maybe<Scalars['Int']['output']>;
  url: Scalars['String']['output'];
};


/** Older revision of a downloadable file */
export type FileVersionMainFileArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DownloadableFileOptions>;
  where?: InputMaybe<DownloadableFileWhere>;
};


/** Older revision of a downloadable file */
export type FileVersionMainFileAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DownloadableFileWhere>;
};


/** Older revision of a downloadable file */
export type FileVersionMainFileConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<FileVersionMainFileConnectionSort>>;
  where?: InputMaybe<FileVersionMainFileConnectionWhere>;
};

export type FileVersionAggregateSelection = {
  __typename?: 'FileVersionAggregateSelection';
  changelog: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  fileName: StringAggregateSelection;
  id: IdAggregateSelection;
  size: IntAggregateSelection;
  url: StringAggregateSelection;
};

export type FileVersionConnectInput = {
  mainFile?: InputMaybe<FileVersionMainFileConnectFieldInput>;
};

export type FileVersionConnectWhere = {
  node: FileVersionWhere;
};

export type FileVersionConnectedRelationships = {
  __typename?: 'FileVersionConnectedRelationships';
  mainFile?: Maybe<FileVersionMainFileConnectedRelationship>;
};

export type FileVersionCreateInput = {
  changelog?: InputMaybe<Scalars['String']['input']>;
  fileName: Scalars['String']['input'];
  kind: FileKind;
  mainFile?: InputMaybe<FileVersionMainFileFieldInput>;
  size?: InputMaybe<Scalars['Int']['input']>;
  url: Scalars['String']['input'];
};

export type FileVersionCreatedEvent = {
  __typename?: 'FileVersionCreatedEvent';
  createdFileVersion: FileVersionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type FileVersionDeleteInput = {
  mainFile?: InputMaybe<FileVersionMainFileDeleteFieldInput>;
};

export type FileVersionDeletedEvent = {
  __typename?: 'FileVersionDeletedEvent';
  deletedFileVersion: FileVersionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type FileVersionDisconnectInput = {
  mainFile?: InputMaybe<FileVersionMainFileDisconnectFieldInput>;
};

export type FileVersionDownloadableFileMainFileAggregationSelection = {
  __typename?: 'FileVersionDownloadableFileMainFileAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<FileVersionDownloadableFileMainFileNodeAggregateSelection>;
};

export type FileVersionDownloadableFileMainFileNodeAggregateSelection = {
  __typename?: 'FileVersionDownloadableFileMainFileNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  downloadCountTotal: IntAggregateSelection;
  downloadCountUnique: IntAggregateSelection;
  fileName: StringAggregateSelection;
  id: IdAggregateSelection;
  paywallExpiresAt: DateTimeAggregateSelection;
  priceCents: IntAggregateSelection;
  priceCurrency: StringAggregateSelection;
  scanCheckedAt: DateTimeAggregateSelection;
  size: IntAggregateSelection;
  stripePriceId: StringAggregateSelection;
  stripeProductId: StringAggregateSelection;
  url: StringAggregateSelection;
};

export type FileVersionEdge = {
  __typename?: 'FileVersionEdge';
  cursor: Scalars['String']['output'];
  node: FileVersion;
};

export type FileVersionEventPayload = {
  __typename?: 'FileVersionEventPayload';
  changelog?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  fileName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  kind: FileKind;
  size?: Maybe<Scalars['Int']['output']>;
  url: Scalars['String']['output'];
};

export type FileVersionMainFileAggregateInput = {
  AND?: InputMaybe<Array<FileVersionMainFileAggregateInput>>;
  NOT?: InputMaybe<FileVersionMainFileAggregateInput>;
  OR?: InputMaybe<Array<FileVersionMainFileAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<FileVersionMainFileNodeAggregationWhereInput>;
};

export type FileVersionMainFileConnectFieldInput = {
  connect?: InputMaybe<DownloadableFileConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DownloadableFileConnectWhere>;
};

export type FileVersionMainFileConnectedRelationship = {
  __typename?: 'FileVersionMainFileConnectedRelationship';
  node: DownloadableFileEventPayload;
};

export type FileVersionMainFileConnection = {
  __typename?: 'FileVersionMainFileConnection';
  edges: Array<FileVersionMainFileRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FileVersionMainFileConnectionSort = {
  node?: InputMaybe<DownloadableFileSort>;
};

export type FileVersionMainFileConnectionWhere = {
  AND?: InputMaybe<Array<FileVersionMainFileConnectionWhere>>;
  NOT?: InputMaybe<FileVersionMainFileConnectionWhere>;
  OR?: InputMaybe<Array<FileVersionMainFileConnectionWhere>>;
  node?: InputMaybe<DownloadableFileWhere>;
};

export type FileVersionMainFileCreateFieldInput = {
  node: DownloadableFileCreateInput;
};

export type FileVersionMainFileDeleteFieldInput = {
  delete?: InputMaybe<DownloadableFileDeleteInput>;
  where?: InputMaybe<FileVersionMainFileConnectionWhere>;
};

export type FileVersionMainFileDisconnectFieldInput = {
  disconnect?: InputMaybe<DownloadableFileDisconnectInput>;
  where?: InputMaybe<FileVersionMainFileConnectionWhere>;
};

export type FileVersionMainFileFieldInput = {
  connect?: InputMaybe<FileVersionMainFileConnectFieldInput>;
  create?: InputMaybe<FileVersionMainFileCreateFieldInput>;
};

export type FileVersionMainFileNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FileVersionMainFileNodeAggregationWhereInput>>;
  NOT?: InputMaybe<FileVersionMainFileNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<FileVersionMainFileNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  downloadCountTotal_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  paywallExpiresAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  scanCheckedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  size_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  size_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FileVersionMainFileRelationship = {
  __typename?: 'FileVersionMainFileRelationship';
  cursor: Scalars['String']['output'];
  node: DownloadableFile;
};

export type FileVersionMainFileRelationshipSubscriptionWhere = {
  node?: InputMaybe<DownloadableFileSubscriptionWhere>;
};

export type FileVersionMainFileUpdateConnectionInput = {
  node?: InputMaybe<DownloadableFileUpdateInput>;
};

export type FileVersionMainFileUpdateFieldInput = {
  connect?: InputMaybe<FileVersionMainFileConnectFieldInput>;
  create?: InputMaybe<FileVersionMainFileCreateFieldInput>;
  delete?: InputMaybe<FileVersionMainFileDeleteFieldInput>;
  disconnect?: InputMaybe<FileVersionMainFileDisconnectFieldInput>;
  update?: InputMaybe<FileVersionMainFileUpdateConnectionInput>;
  where?: InputMaybe<FileVersionMainFileConnectionWhere>;
};

export type FileVersionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more FileVersionSort objects to sort FileVersions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<FileVersionSort>>;
};

export type FileVersionRelationInput = {
  mainFile?: InputMaybe<FileVersionMainFileCreateFieldInput>;
};

export type FileVersionRelationshipCreatedEvent = {
  __typename?: 'FileVersionRelationshipCreatedEvent';
  createdRelationship: FileVersionConnectedRelationships;
  event: EventType;
  fileVersion: FileVersionEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type FileVersionRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<FileVersionRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<FileVersionRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<FileVersionRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<FileVersionRelationshipsSubscriptionWhere>;
  fileVersion?: InputMaybe<FileVersionSubscriptionWhere>;
};

export type FileVersionRelationshipDeletedEvent = {
  __typename?: 'FileVersionRelationshipDeletedEvent';
  deletedRelationship: FileVersionConnectedRelationships;
  event: EventType;
  fileVersion: FileVersionEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type FileVersionRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<FileVersionRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<FileVersionRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<FileVersionRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<FileVersionRelationshipsSubscriptionWhere>;
  fileVersion?: InputMaybe<FileVersionSubscriptionWhere>;
};

export type FileVersionRelationshipsSubscriptionWhere = {
  mainFile?: InputMaybe<FileVersionMainFileRelationshipSubscriptionWhere>;
};

/** Fields to sort FileVersions by. The order in which sorts are applied is not guaranteed when specifying many fields in one FileVersionSort object. */
export type FileVersionSort = {
  changelog?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  fileName?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  kind?: InputMaybe<SortDirection>;
  size?: InputMaybe<SortDirection>;
  url?: InputMaybe<SortDirection>;
};

export type FileVersionSubscriptionWhere = {
  AND?: InputMaybe<Array<FileVersionSubscriptionWhere>>;
  NOT?: InputMaybe<FileVersionSubscriptionWhere>;
  OR?: InputMaybe<Array<FileVersionSubscriptionWhere>>;
  changelog?: InputMaybe<Scalars['String']['input']>;
  changelog_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  changelog_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  changelog_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  changelog_MATCHES?: InputMaybe<Scalars['String']['input']>;
  changelog_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  fileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  fileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  fileName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  fileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  fileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  kind?: InputMaybe<FileKind>;
  kind_IN?: InputMaybe<Array<FileKind>>;
  size?: InputMaybe<Scalars['Int']['input']>;
  size_GT?: InputMaybe<Scalars['Int']['input']>;
  size_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  size_LT?: InputMaybe<Scalars['Int']['input']>;
  size_LTE?: InputMaybe<Scalars['Int']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type FileVersionUpdateInput = {
  changelog?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  kind?: InputMaybe<FileKind>;
  mainFile?: InputMaybe<FileVersionMainFileUpdateFieldInput>;
  size?: InputMaybe<Scalars['Int']['input']>;
  size_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  size_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type FileVersionUpdatedEvent = {
  __typename?: 'FileVersionUpdatedEvent';
  event: EventType;
  previousState: FileVersionEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedFileVersion: FileVersionEventPayload;
};

export type FileVersionWhere = {
  AND?: InputMaybe<Array<FileVersionWhere>>;
  NOT?: InputMaybe<FileVersionWhere>;
  OR?: InputMaybe<Array<FileVersionWhere>>;
  changelog?: InputMaybe<Scalars['String']['input']>;
  changelog_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  changelog_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  changelog_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  changelog_MATCHES?: InputMaybe<Scalars['String']['input']>;
  changelog_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  fileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  fileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  fileName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  fileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  fileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  kind?: InputMaybe<FileKind>;
  kind_IN?: InputMaybe<Array<FileKind>>;
  mainFile?: InputMaybe<DownloadableFileWhere>;
  mainFileAggregate?: InputMaybe<FileVersionMainFileAggregateInput>;
  mainFileConnection?: InputMaybe<FileVersionMainFileConnectionWhere>;
  mainFileConnection_NOT?: InputMaybe<FileVersionMainFileConnectionWhere>;
  mainFile_NOT?: InputMaybe<DownloadableFileWhere>;
  size?: InputMaybe<Scalars['Int']['input']>;
  size_GT?: InputMaybe<Scalars['Int']['input']>;
  size_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  size_LT?: InputMaybe<Scalars['Int']['input']>;
  size_LTE?: InputMaybe<Scalars['Int']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type FileVersionsConnection = {
  __typename?: 'FileVersionsConnection';
  edges: Array<FileVersionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FilterGroup = {
  __typename?: 'FilterGroup';
  channel: Channel;
  channelAggregate?: Maybe<FilterGroupChannelChannelAggregationSelection>;
  channelConnection: FilterGroupChannelConnection;
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  key: Scalars['String']['output'];
  mode: FilterMode;
  options: Array<FilterOption>;
  optionsAggregate?: Maybe<FilterGroupFilterOptionOptionsAggregationSelection>;
  optionsConnection: FilterGroupOptionsConnection;
  order: Scalars['Int']['output'];
};


export type FilterGroupChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type FilterGroupChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type FilterGroupChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<FilterGroupChannelConnectionSort>>;
  where?: InputMaybe<FilterGroupChannelConnectionWhere>;
};


export type FilterGroupOptionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<FilterOptionOptions>;
  where?: InputMaybe<FilterOptionWhere>;
};


export type FilterGroupOptionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<FilterOptionWhere>;
};


export type FilterGroupOptionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<FilterGroupOptionsConnectionSort>>;
  where?: InputMaybe<FilterGroupOptionsConnectionWhere>;
};

export type FilterGroupAggregateSelection = {
  __typename?: 'FilterGroupAggregateSelection';
  count: Scalars['Int']['output'];
  displayName: StringAggregateSelection;
  id: IdAggregateSelection;
  key: StringAggregateSelection;
  order: IntAggregateSelection;
};

export type FilterGroupChannelAggregateInput = {
  AND?: InputMaybe<Array<FilterGroupChannelAggregateInput>>;
  NOT?: InputMaybe<FilterGroupChannelAggregateInput>;
  OR?: InputMaybe<Array<FilterGroupChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<FilterGroupChannelNodeAggregationWhereInput>;
};

export type FilterGroupChannelChannelAggregationSelection = {
  __typename?: 'FilterGroupChannelChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<FilterGroupChannelChannelNodeAggregateSelection>;
};

export type FilterGroupChannelChannelNodeAggregateSelection = {
  __typename?: 'FilterGroupChannelChannelNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type FilterGroupChannelConnectFieldInput = {
  connect?: InputMaybe<ChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type FilterGroupChannelConnectOrCreateFieldInput = {
  onCreate: FilterGroupChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type FilterGroupChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type FilterGroupChannelConnectedRelationship = {
  __typename?: 'FilterGroupChannelConnectedRelationship';
  node: ChannelEventPayload;
};

export type FilterGroupChannelConnection = {
  __typename?: 'FilterGroupChannelConnection';
  edges: Array<FilterGroupChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FilterGroupChannelConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type FilterGroupChannelConnectionWhere = {
  AND?: InputMaybe<Array<FilterGroupChannelConnectionWhere>>;
  NOT?: InputMaybe<FilterGroupChannelConnectionWhere>;
  OR?: InputMaybe<Array<FilterGroupChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type FilterGroupChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type FilterGroupChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<FilterGroupChannelConnectionWhere>;
};

export type FilterGroupChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<FilterGroupChannelConnectionWhere>;
};

export type FilterGroupChannelFieldInput = {
  connect?: InputMaybe<FilterGroupChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<FilterGroupChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<FilterGroupChannelCreateFieldInput>;
};

export type FilterGroupChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FilterGroupChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<FilterGroupChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<FilterGroupChannelNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterGroupChannelRelationship = {
  __typename?: 'FilterGroupChannelRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type FilterGroupChannelRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type FilterGroupChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type FilterGroupChannelUpdateFieldInput = {
  connect?: InputMaybe<FilterGroupChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<FilterGroupChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<FilterGroupChannelCreateFieldInput>;
  delete?: InputMaybe<FilterGroupChannelDeleteFieldInput>;
  disconnect?: InputMaybe<FilterGroupChannelDisconnectFieldInput>;
  update?: InputMaybe<FilterGroupChannelUpdateConnectionInput>;
  where?: InputMaybe<FilterGroupChannelConnectionWhere>;
};

export type FilterGroupConnectInput = {
  channel?: InputMaybe<FilterGroupChannelConnectFieldInput>;
  options?: InputMaybe<Array<FilterGroupOptionsConnectFieldInput>>;
};

export type FilterGroupConnectOrCreateInput = {
  channel?: InputMaybe<FilterGroupChannelConnectOrCreateFieldInput>;
};

export type FilterGroupConnectWhere = {
  node: FilterGroupWhere;
};

export type FilterGroupConnectedRelationships = {
  __typename?: 'FilterGroupConnectedRelationships';
  channel?: Maybe<FilterGroupChannelConnectedRelationship>;
  options?: Maybe<FilterGroupOptionsConnectedRelationship>;
};

export type FilterGroupCreateInput = {
  channel?: InputMaybe<FilterGroupChannelFieldInput>;
  displayName: Scalars['String']['input'];
  id: Scalars['ID']['input'];
  key: Scalars['String']['input'];
  mode: FilterMode;
  options?: InputMaybe<FilterGroupOptionsFieldInput>;
  order: Scalars['Int']['input'];
};

export type FilterGroupCreatedEvent = {
  __typename?: 'FilterGroupCreatedEvent';
  createdFilterGroup: FilterGroupEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type FilterGroupDeleteInput = {
  channel?: InputMaybe<FilterGroupChannelDeleteFieldInput>;
  options?: InputMaybe<Array<FilterGroupOptionsDeleteFieldInput>>;
};

export type FilterGroupDeletedEvent = {
  __typename?: 'FilterGroupDeletedEvent';
  deletedFilterGroup: FilterGroupEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type FilterGroupDisconnectInput = {
  channel?: InputMaybe<FilterGroupChannelDisconnectFieldInput>;
  options?: InputMaybe<Array<FilterGroupOptionsDisconnectFieldInput>>;
};

export type FilterGroupEdge = {
  __typename?: 'FilterGroupEdge';
  cursor: Scalars['String']['output'];
  node: FilterGroup;
};

export type FilterGroupEventPayload = {
  __typename?: 'FilterGroupEventPayload';
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  key: Scalars['String']['output'];
  mode: FilterMode;
  order: Scalars['Int']['output'];
};

export type FilterGroupFilterOptionOptionsAggregationSelection = {
  __typename?: 'FilterGroupFilterOptionOptionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<FilterGroupFilterOptionOptionsNodeAggregateSelection>;
};

export type FilterGroupFilterOptionOptionsNodeAggregateSelection = {
  __typename?: 'FilterGroupFilterOptionOptionsNodeAggregateSelection';
  displayName: StringAggregateSelection;
  id: IdAggregateSelection;
  order: IntAggregateSelection;
  value: StringAggregateSelection;
};

export type FilterGroupOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more FilterGroupSort objects to sort FilterGroups by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<FilterGroupSort>>;
};

export type FilterGroupOptionsAggregateInput = {
  AND?: InputMaybe<Array<FilterGroupOptionsAggregateInput>>;
  NOT?: InputMaybe<FilterGroupOptionsAggregateInput>;
  OR?: InputMaybe<Array<FilterGroupOptionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<FilterGroupOptionsNodeAggregationWhereInput>;
};

export type FilterGroupOptionsConnectFieldInput = {
  connect?: InputMaybe<Array<FilterOptionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<FilterOptionConnectWhere>;
};

export type FilterGroupOptionsConnectedRelationship = {
  __typename?: 'FilterGroupOptionsConnectedRelationship';
  node: FilterOptionEventPayload;
};

export type FilterGroupOptionsConnection = {
  __typename?: 'FilterGroupOptionsConnection';
  edges: Array<FilterGroupOptionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FilterGroupOptionsConnectionSort = {
  node?: InputMaybe<FilterOptionSort>;
};

export type FilterGroupOptionsConnectionWhere = {
  AND?: InputMaybe<Array<FilterGroupOptionsConnectionWhere>>;
  NOT?: InputMaybe<FilterGroupOptionsConnectionWhere>;
  OR?: InputMaybe<Array<FilterGroupOptionsConnectionWhere>>;
  node?: InputMaybe<FilterOptionWhere>;
};

export type FilterGroupOptionsCreateFieldInput = {
  node: FilterOptionCreateInput;
};

export type FilterGroupOptionsDeleteFieldInput = {
  delete?: InputMaybe<FilterOptionDeleteInput>;
  where?: InputMaybe<FilterGroupOptionsConnectionWhere>;
};

export type FilterGroupOptionsDisconnectFieldInput = {
  disconnect?: InputMaybe<FilterOptionDisconnectInput>;
  where?: InputMaybe<FilterGroupOptionsConnectionWhere>;
};

export type FilterGroupOptionsFieldInput = {
  connect?: InputMaybe<Array<FilterGroupOptionsConnectFieldInput>>;
  create?: InputMaybe<Array<FilterGroupOptionsCreateFieldInput>>;
};

export type FilterGroupOptionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FilterGroupOptionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<FilterGroupOptionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<FilterGroupOptionsNodeAggregationWhereInput>>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  order_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  value_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  value_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  value_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  value_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  value_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  value_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  value_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  value_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  value_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  value_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  value_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterGroupOptionsRelationship = {
  __typename?: 'FilterGroupOptionsRelationship';
  cursor: Scalars['String']['output'];
  node: FilterOption;
};

export type FilterGroupOptionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<FilterOptionSubscriptionWhere>;
};

export type FilterGroupOptionsUpdateConnectionInput = {
  node?: InputMaybe<FilterOptionUpdateInput>;
};

export type FilterGroupOptionsUpdateFieldInput = {
  connect?: InputMaybe<Array<FilterGroupOptionsConnectFieldInput>>;
  create?: InputMaybe<Array<FilterGroupOptionsCreateFieldInput>>;
  delete?: InputMaybe<Array<FilterGroupOptionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<FilterGroupOptionsDisconnectFieldInput>>;
  update?: InputMaybe<FilterGroupOptionsUpdateConnectionInput>;
  where?: InputMaybe<FilterGroupOptionsConnectionWhere>;
};

export type FilterGroupRelationInput = {
  channel?: InputMaybe<FilterGroupChannelCreateFieldInput>;
  options?: InputMaybe<Array<FilterGroupOptionsCreateFieldInput>>;
};

export type FilterGroupRelationshipCreatedEvent = {
  __typename?: 'FilterGroupRelationshipCreatedEvent';
  createdRelationship: FilterGroupConnectedRelationships;
  event: EventType;
  filterGroup: FilterGroupEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type FilterGroupRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<FilterGroupRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<FilterGroupRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<FilterGroupRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<FilterGroupRelationshipsSubscriptionWhere>;
  filterGroup?: InputMaybe<FilterGroupSubscriptionWhere>;
};

export type FilterGroupRelationshipDeletedEvent = {
  __typename?: 'FilterGroupRelationshipDeletedEvent';
  deletedRelationship: FilterGroupConnectedRelationships;
  event: EventType;
  filterGroup: FilterGroupEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type FilterGroupRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<FilterGroupRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<FilterGroupRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<FilterGroupRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<FilterGroupRelationshipsSubscriptionWhere>;
  filterGroup?: InputMaybe<FilterGroupSubscriptionWhere>;
};

export type FilterGroupRelationshipsSubscriptionWhere = {
  channel?: InputMaybe<FilterGroupChannelRelationshipSubscriptionWhere>;
  options?: InputMaybe<FilterGroupOptionsRelationshipSubscriptionWhere>;
};

/** Fields to sort FilterGroups by. The order in which sorts are applied is not guaranteed when specifying many fields in one FilterGroupSort object. */
export type FilterGroupSort = {
  displayName?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  key?: InputMaybe<SortDirection>;
  mode?: InputMaybe<SortDirection>;
  order?: InputMaybe<SortDirection>;
};

export type FilterGroupSubscriptionWhere = {
  AND?: InputMaybe<Array<FilterGroupSubscriptionWhere>>;
  NOT?: InputMaybe<FilterGroupSubscriptionWhere>;
  OR?: InputMaybe<Array<FilterGroupSubscriptionWhere>>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  key_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  key_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  key_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  key_MATCHES?: InputMaybe<Scalars['String']['input']>;
  key_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  mode?: InputMaybe<FilterMode>;
  mode_IN?: InputMaybe<Array<FilterMode>>;
  order?: InputMaybe<Scalars['Int']['input']>;
  order_GT?: InputMaybe<Scalars['Int']['input']>;
  order_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  order_LT?: InputMaybe<Scalars['Int']['input']>;
  order_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterGroupUpdateInput = {
  channel?: InputMaybe<FilterGroupChannelUpdateFieldInput>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  mode?: InputMaybe<FilterMode>;
  options?: InputMaybe<Array<FilterGroupOptionsUpdateFieldInput>>;
  order?: InputMaybe<Scalars['Int']['input']>;
  order_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  order_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterGroupUpdatedEvent = {
  __typename?: 'FilterGroupUpdatedEvent';
  event: EventType;
  previousState: FilterGroupEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedFilterGroup: FilterGroupEventPayload;
};

export type FilterGroupWhere = {
  AND?: InputMaybe<Array<FilterGroupWhere>>;
  NOT?: InputMaybe<FilterGroupWhere>;
  OR?: InputMaybe<Array<FilterGroupWhere>>;
  channel?: InputMaybe<ChannelWhere>;
  channelAggregate?: InputMaybe<FilterGroupChannelAggregateInput>;
  channelConnection?: InputMaybe<FilterGroupChannelConnectionWhere>;
  channelConnection_NOT?: InputMaybe<FilterGroupChannelConnectionWhere>;
  channel_NOT?: InputMaybe<ChannelWhere>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  key_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  key_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  key_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  key_MATCHES?: InputMaybe<Scalars['String']['input']>;
  key_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  mode?: InputMaybe<FilterMode>;
  mode_IN?: InputMaybe<Array<FilterMode>>;
  optionsAggregate?: InputMaybe<FilterGroupOptionsAggregateInput>;
  /** Return FilterGroups where all of the related FilterGroupOptionsConnections match this filter */
  optionsConnection_ALL?: InputMaybe<FilterGroupOptionsConnectionWhere>;
  /** Return FilterGroups where none of the related FilterGroupOptionsConnections match this filter */
  optionsConnection_NONE?: InputMaybe<FilterGroupOptionsConnectionWhere>;
  /** Return FilterGroups where one of the related FilterGroupOptionsConnections match this filter */
  optionsConnection_SINGLE?: InputMaybe<FilterGroupOptionsConnectionWhere>;
  /** Return FilterGroups where some of the related FilterGroupOptionsConnections match this filter */
  optionsConnection_SOME?: InputMaybe<FilterGroupOptionsConnectionWhere>;
  /** Return FilterGroups where all of the related FilterOptions match this filter */
  options_ALL?: InputMaybe<FilterOptionWhere>;
  /** Return FilterGroups where none of the related FilterOptions match this filter */
  options_NONE?: InputMaybe<FilterOptionWhere>;
  /** Return FilterGroups where one of the related FilterOptions match this filter */
  options_SINGLE?: InputMaybe<FilterOptionWhere>;
  /** Return FilterGroups where some of the related FilterOptions match this filter */
  options_SOME?: InputMaybe<FilterOptionWhere>;
  order?: InputMaybe<Scalars['Int']['input']>;
  order_GT?: InputMaybe<Scalars['Int']['input']>;
  order_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  order_LT?: InputMaybe<Scalars['Int']['input']>;
  order_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterGroupsConnection = {
  __typename?: 'FilterGroupsConnection';
  edges: Array<FilterGroupEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export enum FilterMode {
  Exclude = 'EXCLUDE',
  Include = 'INCLUDE'
}

/** A single checkbox inside a group, e.g. “10×20”. */
export type FilterOption = {
  __typename?: 'FilterOption';
  displayName: Scalars['String']['output'];
  group: FilterGroup;
  groupAggregate?: Maybe<FilterOptionFilterGroupGroupAggregationSelection>;
  groupConnection: FilterOptionGroupConnection;
  id: Scalars['ID']['output'];
  order: Scalars['Int']['output'];
  value: Scalars['String']['output'];
};


/** A single checkbox inside a group, e.g. “10×20”. */
export type FilterOptionGroupArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<FilterGroupOptions>;
  where?: InputMaybe<FilterGroupWhere>;
};


/** A single checkbox inside a group, e.g. “10×20”. */
export type FilterOptionGroupAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<FilterGroupWhere>;
};


/** A single checkbox inside a group, e.g. “10×20”. */
export type FilterOptionGroupConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<FilterOptionGroupConnectionSort>>;
  where?: InputMaybe<FilterOptionGroupConnectionWhere>;
};

export type FilterOptionAggregateSelection = {
  __typename?: 'FilterOptionAggregateSelection';
  count: Scalars['Int']['output'];
  displayName: StringAggregateSelection;
  id: IdAggregateSelection;
  order: IntAggregateSelection;
  value: StringAggregateSelection;
};

export type FilterOptionConnectInput = {
  group?: InputMaybe<FilterOptionGroupConnectFieldInput>;
};

export type FilterOptionConnectWhere = {
  node: FilterOptionWhere;
};

export type FilterOptionConnectedRelationships = {
  __typename?: 'FilterOptionConnectedRelationships';
  group?: Maybe<FilterOptionGroupConnectedRelationship>;
};

export type FilterOptionCreateInput = {
  displayName: Scalars['String']['input'];
  group?: InputMaybe<FilterOptionGroupFieldInput>;
  id: Scalars['ID']['input'];
  order: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type FilterOptionCreatedEvent = {
  __typename?: 'FilterOptionCreatedEvent';
  createdFilterOption: FilterOptionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type FilterOptionDeleteInput = {
  group?: InputMaybe<FilterOptionGroupDeleteFieldInput>;
};

export type FilterOptionDeletedEvent = {
  __typename?: 'FilterOptionDeletedEvent';
  deletedFilterOption: FilterOptionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type FilterOptionDisconnectInput = {
  group?: InputMaybe<FilterOptionGroupDisconnectFieldInput>;
};

export type FilterOptionEdge = {
  __typename?: 'FilterOptionEdge';
  cursor: Scalars['String']['output'];
  node: FilterOption;
};

export type FilterOptionEventPayload = {
  __typename?: 'FilterOptionEventPayload';
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  order: Scalars['Int']['output'];
  value: Scalars['String']['output'];
};

export type FilterOptionFilterGroupGroupAggregationSelection = {
  __typename?: 'FilterOptionFilterGroupGroupAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<FilterOptionFilterGroupGroupNodeAggregateSelection>;
};

export type FilterOptionFilterGroupGroupNodeAggregateSelection = {
  __typename?: 'FilterOptionFilterGroupGroupNodeAggregateSelection';
  displayName: StringAggregateSelection;
  id: IdAggregateSelection;
  key: StringAggregateSelection;
  order: IntAggregateSelection;
};

export type FilterOptionGroupAggregateInput = {
  AND?: InputMaybe<Array<FilterOptionGroupAggregateInput>>;
  NOT?: InputMaybe<FilterOptionGroupAggregateInput>;
  OR?: InputMaybe<Array<FilterOptionGroupAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<FilterOptionGroupNodeAggregationWhereInput>;
};

export type FilterOptionGroupConnectFieldInput = {
  connect?: InputMaybe<FilterGroupConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<FilterGroupConnectWhere>;
};

export type FilterOptionGroupConnectedRelationship = {
  __typename?: 'FilterOptionGroupConnectedRelationship';
  node: FilterGroupEventPayload;
};

export type FilterOptionGroupConnection = {
  __typename?: 'FilterOptionGroupConnection';
  edges: Array<FilterOptionGroupRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FilterOptionGroupConnectionSort = {
  node?: InputMaybe<FilterGroupSort>;
};

export type FilterOptionGroupConnectionWhere = {
  AND?: InputMaybe<Array<FilterOptionGroupConnectionWhere>>;
  NOT?: InputMaybe<FilterOptionGroupConnectionWhere>;
  OR?: InputMaybe<Array<FilterOptionGroupConnectionWhere>>;
  node?: InputMaybe<FilterGroupWhere>;
};

export type FilterOptionGroupCreateFieldInput = {
  node: FilterGroupCreateInput;
};

export type FilterOptionGroupDeleteFieldInput = {
  delete?: InputMaybe<FilterGroupDeleteInput>;
  where?: InputMaybe<FilterOptionGroupConnectionWhere>;
};

export type FilterOptionGroupDisconnectFieldInput = {
  disconnect?: InputMaybe<FilterGroupDisconnectInput>;
  where?: InputMaybe<FilterOptionGroupConnectionWhere>;
};

export type FilterOptionGroupFieldInput = {
  connect?: InputMaybe<FilterOptionGroupConnectFieldInput>;
  create?: InputMaybe<FilterOptionGroupCreateFieldInput>;
};

export type FilterOptionGroupNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FilterOptionGroupNodeAggregationWhereInput>>;
  NOT?: InputMaybe<FilterOptionGroupNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<FilterOptionGroupNodeAggregationWhereInput>>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  order_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  order_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  order_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  order_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  order_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FilterOptionGroupRelationship = {
  __typename?: 'FilterOptionGroupRelationship';
  cursor: Scalars['String']['output'];
  node: FilterGroup;
};

export type FilterOptionGroupRelationshipSubscriptionWhere = {
  node?: InputMaybe<FilterGroupSubscriptionWhere>;
};

export type FilterOptionGroupUpdateConnectionInput = {
  node?: InputMaybe<FilterGroupUpdateInput>;
};

export type FilterOptionGroupUpdateFieldInput = {
  connect?: InputMaybe<FilterOptionGroupConnectFieldInput>;
  create?: InputMaybe<FilterOptionGroupCreateFieldInput>;
  delete?: InputMaybe<FilterOptionGroupDeleteFieldInput>;
  disconnect?: InputMaybe<FilterOptionGroupDisconnectFieldInput>;
  update?: InputMaybe<FilterOptionGroupUpdateConnectionInput>;
  where?: InputMaybe<FilterOptionGroupConnectionWhere>;
};

export type FilterOptionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more FilterOptionSort objects to sort FilterOptions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<FilterOptionSort>>;
};

export type FilterOptionRelationInput = {
  group?: InputMaybe<FilterOptionGroupCreateFieldInput>;
};

export type FilterOptionRelationshipCreatedEvent = {
  __typename?: 'FilterOptionRelationshipCreatedEvent';
  createdRelationship: FilterOptionConnectedRelationships;
  event: EventType;
  filterOption: FilterOptionEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type FilterOptionRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<FilterOptionRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<FilterOptionRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<FilterOptionRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<FilterOptionRelationshipsSubscriptionWhere>;
  filterOption?: InputMaybe<FilterOptionSubscriptionWhere>;
};

export type FilterOptionRelationshipDeletedEvent = {
  __typename?: 'FilterOptionRelationshipDeletedEvent';
  deletedRelationship: FilterOptionConnectedRelationships;
  event: EventType;
  filterOption: FilterOptionEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type FilterOptionRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<FilterOptionRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<FilterOptionRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<FilterOptionRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<FilterOptionRelationshipsSubscriptionWhere>;
  filterOption?: InputMaybe<FilterOptionSubscriptionWhere>;
};

export type FilterOptionRelationshipsSubscriptionWhere = {
  group?: InputMaybe<FilterOptionGroupRelationshipSubscriptionWhere>;
};

/** Fields to sort FilterOptions by. The order in which sorts are applied is not guaranteed when specifying many fields in one FilterOptionSort object. */
export type FilterOptionSort = {
  displayName?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  order?: InputMaybe<SortDirection>;
  value?: InputMaybe<SortDirection>;
};

export type FilterOptionSubscriptionWhere = {
  AND?: InputMaybe<Array<FilterOptionSubscriptionWhere>>;
  NOT?: InputMaybe<FilterOptionSubscriptionWhere>;
  OR?: InputMaybe<Array<FilterOptionSubscriptionWhere>>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  order_GT?: InputMaybe<Scalars['Int']['input']>;
  order_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  order_LT?: InputMaybe<Scalars['Int']['input']>;
  order_LTE?: InputMaybe<Scalars['Int']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  value_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  value_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  value_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  value_MATCHES?: InputMaybe<Scalars['String']['input']>;
  value_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type FilterOptionUpdateInput = {
  displayName?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<FilterOptionGroupUpdateFieldInput>;
  id?: InputMaybe<Scalars['ID']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  order_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  order_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type FilterOptionUpdatedEvent = {
  __typename?: 'FilterOptionUpdatedEvent';
  event: EventType;
  previousState: FilterOptionEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedFilterOption: FilterOptionEventPayload;
};

export type FilterOptionWhere = {
  AND?: InputMaybe<Array<FilterOptionWhere>>;
  NOT?: InputMaybe<FilterOptionWhere>;
  OR?: InputMaybe<Array<FilterOptionWhere>>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<FilterGroupWhere>;
  groupAggregate?: InputMaybe<FilterOptionGroupAggregateInput>;
  groupConnection?: InputMaybe<FilterOptionGroupConnectionWhere>;
  groupConnection_NOT?: InputMaybe<FilterOptionGroupConnectionWhere>;
  group_NOT?: InputMaybe<FilterGroupWhere>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  order?: InputMaybe<Scalars['Int']['input']>;
  order_GT?: InputMaybe<Scalars['Int']['input']>;
  order_GTE?: InputMaybe<Scalars['Int']['input']>;
  order_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  order_LT?: InputMaybe<Scalars['Int']['input']>;
  order_LTE?: InputMaybe<Scalars['Int']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  value_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  value_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  value_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  value_MATCHES?: InputMaybe<Scalars['String']['input']>;
  value_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type FilterOptionsConnection = {
  __typename?: 'FilterOptionsConnection';
  edges: Array<FilterOptionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FloatAggregateSelection = {
  __typename?: 'FloatAggregateSelection';
  average?: Maybe<Scalars['Float']['output']>;
  max?: Maybe<Scalars['Float']['output']>;
  min?: Maybe<Scalars['Float']['output']>;
  sum?: Maybe<Scalars['Float']['output']>;
};

export type GetSortedChannelsResponse = {
  __typename?: 'GetSortedChannelsResponse';
  aggregateChannelCount?: Maybe<Scalars['Int']['output']>;
  channels?: Maybe<Array<Maybe<Channel>>>;
};

export type GetSortedChannelsResponseAggregateSelection = {
  __typename?: 'GetSortedChannelsResponseAggregateSelection';
  aggregateChannelCount: IntAggregateSelection;
  count: Scalars['Int']['output'];
};

export type GetSortedChannelsResponseCreateInput = {
  aggregateChannelCount?: InputMaybe<Scalars['Int']['input']>;
};

export type GetSortedChannelsResponseCreatedEvent = {
  __typename?: 'GetSortedChannelsResponseCreatedEvent';
  createdGetSortedChannelsResponse: GetSortedChannelsResponseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type GetSortedChannelsResponseDeletedEvent = {
  __typename?: 'GetSortedChannelsResponseDeletedEvent';
  deletedGetSortedChannelsResponse: GetSortedChannelsResponseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type GetSortedChannelsResponseEdge = {
  __typename?: 'GetSortedChannelsResponseEdge';
  cursor: Scalars['String']['output'];
  node: GetSortedChannelsResponse;
};

export type GetSortedChannelsResponseEventPayload = {
  __typename?: 'GetSortedChannelsResponseEventPayload';
  aggregateChannelCount?: Maybe<Scalars['Int']['output']>;
};

export type GetSortedChannelsResponseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more GetSortedChannelsResponseSort objects to sort GetSortedChannelsResponses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<GetSortedChannelsResponseSort>>;
};

/** Fields to sort GetSortedChannelsResponses by. The order in which sorts are applied is not guaranteed when specifying many fields in one GetSortedChannelsResponseSort object. */
export type GetSortedChannelsResponseSort = {
  aggregateChannelCount?: InputMaybe<SortDirection>;
};

export type GetSortedChannelsResponseSubscriptionWhere = {
  AND?: InputMaybe<Array<GetSortedChannelsResponseSubscriptionWhere>>;
  NOT?: InputMaybe<GetSortedChannelsResponseSubscriptionWhere>;
  OR?: InputMaybe<Array<GetSortedChannelsResponseSubscriptionWhere>>;
  aggregateChannelCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  aggregateChannelCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type GetSortedChannelsResponseUpdateInput = {
  aggregateChannelCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
};

export type GetSortedChannelsResponseUpdatedEvent = {
  __typename?: 'GetSortedChannelsResponseUpdatedEvent';
  event: EventType;
  previousState: GetSortedChannelsResponseEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedGetSortedChannelsResponse: GetSortedChannelsResponseEventPayload;
};

export type GetSortedChannelsResponseWhere = {
  AND?: InputMaybe<Array<GetSortedChannelsResponseWhere>>;
  NOT?: InputMaybe<GetSortedChannelsResponseWhere>;
  OR?: InputMaybe<Array<GetSortedChannelsResponseWhere>>;
  aggregateChannelCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  aggregateChannelCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type GetSortedChannelsResponsesConnection = {
  __typename?: 'GetSortedChannelsResponsesConnection';
  edges: Array<GetSortedChannelsResponseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IdAggregateSelection = {
  __typename?: 'IDAggregateSelection';
  longest?: Maybe<Scalars['ID']['output']>;
  shortest?: Maybe<Scalars['ID']['output']>;
};

export type Image = {
  __typename?: 'Image';
  Album?: Maybe<Album>;
  AlbumAggregate?: Maybe<ImageAlbumAlbumAggregationSelection>;
  AlbumConnection: ImageAlbumConnection;
  RelatedIssues: Array<Issue>;
  RelatedIssuesAggregate?: Maybe<ImageIssueRelatedIssuesAggregationSelection>;
  RelatedIssuesConnection: ImageRelatedIssuesConnection;
  Uploader?: Maybe<User>;
  UploaderAggregate?: Maybe<ImageUserUploaderAggregationSelection>;
  UploaderConnection: ImageUploaderConnection;
  alt?: Maybe<Scalars['String']['output']>;
  caption?: Maybe<Scalars['String']['output']>;
  copyright?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  hasSensitiveContent?: Maybe<Scalars['Boolean']['output']>;
  hasSpoiler?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  longDescription?: Maybe<Scalars['String']['output']>;
  scanCheckedAt?: Maybe<Scalars['DateTime']['output']>;
  scanStatus: ScanStatus;
  url?: Maybe<Scalars['String']['output']>;
};


export type ImageAlbumArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<AlbumOptions>;
  where?: InputMaybe<AlbumWhere>;
};


export type ImageAlbumAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<AlbumWhere>;
};


export type ImageAlbumConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ImageAlbumConnectionSort>>;
  where?: InputMaybe<ImageAlbumConnectionWhere>;
};


export type ImageRelatedIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type ImageRelatedIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type ImageRelatedIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ImageRelatedIssuesConnectionSort>>;
  where?: InputMaybe<ImageRelatedIssuesConnectionWhere>;
};


export type ImageUploaderArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ImageUploaderAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ImageUploaderConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ImageUploaderConnectionSort>>;
  where?: InputMaybe<ImageUploaderConnectionWhere>;
};

export type ImageAggregateSelection = {
  __typename?: 'ImageAggregateSelection';
  alt: StringAggregateSelection;
  caption: StringAggregateSelection;
  copyright: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  longDescription: StringAggregateSelection;
  scanCheckedAt: DateTimeAggregateSelection;
  url: StringAggregateSelection;
};

export type ImageAlbumAggregateInput = {
  AND?: InputMaybe<Array<ImageAlbumAggregateInput>>;
  NOT?: InputMaybe<ImageAlbumAggregateInput>;
  OR?: InputMaybe<Array<ImageAlbumAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ImageAlbumNodeAggregationWhereInput>;
};

export type ImageAlbumAlbumAggregationSelection = {
  __typename?: 'ImageAlbumAlbumAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ImageAlbumAlbumNodeAggregateSelection>;
};

export type ImageAlbumAlbumNodeAggregateSelection = {
  __typename?: 'ImageAlbumAlbumNodeAggregateSelection';
  id: IdAggregateSelection;
};

export type ImageAlbumConnectFieldInput = {
  connect?: InputMaybe<AlbumConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<AlbumConnectWhere>;
};

export type ImageAlbumConnectedRelationship = {
  __typename?: 'ImageAlbumConnectedRelationship';
  node: AlbumEventPayload;
};

export type ImageAlbumConnection = {
  __typename?: 'ImageAlbumConnection';
  edges: Array<ImageAlbumRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ImageAlbumConnectionSort = {
  node?: InputMaybe<AlbumSort>;
};

export type ImageAlbumConnectionWhere = {
  AND?: InputMaybe<Array<ImageAlbumConnectionWhere>>;
  NOT?: InputMaybe<ImageAlbumConnectionWhere>;
  OR?: InputMaybe<Array<ImageAlbumConnectionWhere>>;
  node?: InputMaybe<AlbumWhere>;
};

export type ImageAlbumCreateFieldInput = {
  node: AlbumCreateInput;
};

export type ImageAlbumDeleteFieldInput = {
  delete?: InputMaybe<AlbumDeleteInput>;
  where?: InputMaybe<ImageAlbumConnectionWhere>;
};

export type ImageAlbumDisconnectFieldInput = {
  disconnect?: InputMaybe<AlbumDisconnectInput>;
  where?: InputMaybe<ImageAlbumConnectionWhere>;
};

export type ImageAlbumFieldInput = {
  connect?: InputMaybe<ImageAlbumConnectFieldInput>;
  create?: InputMaybe<ImageAlbumCreateFieldInput>;
};

export type ImageAlbumNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ImageAlbumNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ImageAlbumNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ImageAlbumNodeAggregationWhereInput>>;
};

export type ImageAlbumRelationship = {
  __typename?: 'ImageAlbumRelationship';
  cursor: Scalars['String']['output'];
  node: Album;
};

export type ImageAlbumRelationshipSubscriptionWhere = {
  node?: InputMaybe<AlbumSubscriptionWhere>;
};

export type ImageAlbumUpdateConnectionInput = {
  node?: InputMaybe<AlbumUpdateInput>;
};

export type ImageAlbumUpdateFieldInput = {
  connect?: InputMaybe<ImageAlbumConnectFieldInput>;
  create?: InputMaybe<ImageAlbumCreateFieldInput>;
  delete?: InputMaybe<ImageAlbumDeleteFieldInput>;
  disconnect?: InputMaybe<ImageAlbumDisconnectFieldInput>;
  update?: InputMaybe<ImageAlbumUpdateConnectionInput>;
  where?: InputMaybe<ImageAlbumConnectionWhere>;
};

export type ImageConnectInput = {
  Album?: InputMaybe<ImageAlbumConnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<ImageRelatedIssuesConnectFieldInput>>;
  Uploader?: InputMaybe<ImageUploaderConnectFieldInput>;
};

export type ImageConnectOrCreateInput = {
  Uploader?: InputMaybe<ImageUploaderConnectOrCreateFieldInput>;
};

export type ImageConnectWhere = {
  node: ImageWhere;
};

export type ImageConnectedRelationships = {
  __typename?: 'ImageConnectedRelationships';
  Album?: Maybe<ImageAlbumConnectedRelationship>;
  RelatedIssues?: Maybe<ImageRelatedIssuesConnectedRelationship>;
  Uploader?: Maybe<ImageUploaderConnectedRelationship>;
};

export type ImageCreateInput = {
  Album?: InputMaybe<ImageAlbumFieldInput>;
  RelatedIssues?: InputMaybe<ImageRelatedIssuesFieldInput>;
  Uploader?: InputMaybe<ImageUploaderFieldInput>;
  alt?: InputMaybe<Scalars['String']['input']>;
  caption?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  longDescription?: InputMaybe<Scalars['String']['input']>;
  scanCheckedAt?: InputMaybe<Scalars['DateTime']['input']>;
  scanStatus?: ScanStatus;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ImageCreatedEvent = {
  __typename?: 'ImageCreatedEvent';
  createdImage: ImageEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ImageDeleteInput = {
  Album?: InputMaybe<ImageAlbumDeleteFieldInput>;
  RelatedIssues?: InputMaybe<Array<ImageRelatedIssuesDeleteFieldInput>>;
  Uploader?: InputMaybe<ImageUploaderDeleteFieldInput>;
};

export type ImageDeletedEvent = {
  __typename?: 'ImageDeletedEvent';
  deletedImage: ImageEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ImageDisconnectInput = {
  Album?: InputMaybe<ImageAlbumDisconnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<ImageRelatedIssuesDisconnectFieldInput>>;
  Uploader?: InputMaybe<ImageUploaderDisconnectFieldInput>;
};

export type ImageEdge = {
  __typename?: 'ImageEdge';
  cursor: Scalars['String']['output'];
  node: Image;
};

export type ImageEventPayload = {
  __typename?: 'ImageEventPayload';
  alt?: Maybe<Scalars['String']['output']>;
  caption?: Maybe<Scalars['String']['output']>;
  copyright?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  hasSensitiveContent?: Maybe<Scalars['Boolean']['output']>;
  hasSpoiler?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  longDescription?: Maybe<Scalars['String']['output']>;
  scanCheckedAt?: Maybe<Scalars['DateTime']['output']>;
  scanStatus: ScanStatus;
  url?: Maybe<Scalars['String']['output']>;
};

export type ImageIssueRelatedIssuesAggregationSelection = {
  __typename?: 'ImageIssueRelatedIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ImageIssueRelatedIssuesNodeAggregateSelection>;
};

export type ImageIssueRelatedIssuesNodeAggregateSelection = {
  __typename?: 'ImageIssueRelatedIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type ImageOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ImageSort objects to sort Images by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ImageSort>>;
};

export type ImageRelatedIssuesAggregateInput = {
  AND?: InputMaybe<Array<ImageRelatedIssuesAggregateInput>>;
  NOT?: InputMaybe<ImageRelatedIssuesAggregateInput>;
  OR?: InputMaybe<Array<ImageRelatedIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ImageRelatedIssuesNodeAggregationWhereInput>;
};

export type ImageRelatedIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type ImageRelatedIssuesConnectedRelationship = {
  __typename?: 'ImageRelatedIssuesConnectedRelationship';
  node: IssueEventPayload;
};

export type ImageRelatedIssuesConnection = {
  __typename?: 'ImageRelatedIssuesConnection';
  edges: Array<ImageRelatedIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ImageRelatedIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type ImageRelatedIssuesConnectionWhere = {
  AND?: InputMaybe<Array<ImageRelatedIssuesConnectionWhere>>;
  NOT?: InputMaybe<ImageRelatedIssuesConnectionWhere>;
  OR?: InputMaybe<Array<ImageRelatedIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type ImageRelatedIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type ImageRelatedIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<ImageRelatedIssuesConnectionWhere>;
};

export type ImageRelatedIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<ImageRelatedIssuesConnectionWhere>;
};

export type ImageRelatedIssuesFieldInput = {
  connect?: InputMaybe<Array<ImageRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ImageRelatedIssuesCreateFieldInput>>;
};

export type ImageRelatedIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ImageRelatedIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ImageRelatedIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ImageRelatedIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ImageRelatedIssuesRelationship = {
  __typename?: 'ImageRelatedIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type ImageRelatedIssuesRelationshipSubscriptionWhere = {
  node?: InputMaybe<IssueSubscriptionWhere>;
};

export type ImageRelatedIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type ImageRelatedIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<ImageRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ImageRelatedIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<ImageRelatedIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ImageRelatedIssuesDisconnectFieldInput>>;
  update?: InputMaybe<ImageRelatedIssuesUpdateConnectionInput>;
  where?: InputMaybe<ImageRelatedIssuesConnectionWhere>;
};

export type ImageRelationInput = {
  Album?: InputMaybe<ImageAlbumCreateFieldInput>;
  RelatedIssues?: InputMaybe<Array<ImageRelatedIssuesCreateFieldInput>>;
  Uploader?: InputMaybe<ImageUploaderCreateFieldInput>;
};

export type ImageRelationshipCreatedEvent = {
  __typename?: 'ImageRelationshipCreatedEvent';
  createdRelationship: ImageConnectedRelationships;
  event: EventType;
  image: ImageEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ImageRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<ImageRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<ImageRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<ImageRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<ImageRelationshipsSubscriptionWhere>;
  image?: InputMaybe<ImageSubscriptionWhere>;
};

export type ImageRelationshipDeletedEvent = {
  __typename?: 'ImageRelationshipDeletedEvent';
  deletedRelationship: ImageConnectedRelationships;
  event: EventType;
  image: ImageEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ImageRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<ImageRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<ImageRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<ImageRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<ImageRelationshipsSubscriptionWhere>;
  image?: InputMaybe<ImageSubscriptionWhere>;
};

export type ImageRelationshipsSubscriptionWhere = {
  Album?: InputMaybe<ImageAlbumRelationshipSubscriptionWhere>;
  RelatedIssues?: InputMaybe<ImageRelatedIssuesRelationshipSubscriptionWhere>;
  Uploader?: InputMaybe<ImageUploaderRelationshipSubscriptionWhere>;
};

/** Fields to sort Images by. The order in which sorts are applied is not guaranteed when specifying many fields in one ImageSort object. */
export type ImageSort = {
  alt?: InputMaybe<SortDirection>;
  caption?: InputMaybe<SortDirection>;
  copyright?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  hasSensitiveContent?: InputMaybe<SortDirection>;
  hasSpoiler?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  longDescription?: InputMaybe<SortDirection>;
  scanCheckedAt?: InputMaybe<SortDirection>;
  scanStatus?: InputMaybe<SortDirection>;
  url?: InputMaybe<SortDirection>;
};

export type ImageSubscriptionWhere = {
  AND?: InputMaybe<Array<ImageSubscriptionWhere>>;
  NOT?: InputMaybe<ImageSubscriptionWhere>;
  OR?: InputMaybe<Array<ImageSubscriptionWhere>>;
  alt?: InputMaybe<Scalars['String']['input']>;
  alt_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  alt_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  alt_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  alt_MATCHES?: InputMaybe<Scalars['String']['input']>;
  alt_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  caption?: InputMaybe<Scalars['String']['input']>;
  caption_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  caption_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  caption_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  caption_MATCHES?: InputMaybe<Scalars['String']['input']>;
  caption_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
  copyright_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  copyright_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  copyright_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  copyright_MATCHES?: InputMaybe<Scalars['String']['input']>;
  copyright_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  longDescription?: InputMaybe<Scalars['String']['input']>;
  longDescription_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  longDescription_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  longDescription_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  longDescription_MATCHES?: InputMaybe<Scalars['String']['input']>;
  longDescription_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  scanCheckedAt?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  scanCheckedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanStatus?: InputMaybe<ScanStatus>;
  scanStatus_IN?: InputMaybe<Array<ScanStatus>>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ImageUpdateInput = {
  Album?: InputMaybe<ImageAlbumUpdateFieldInput>;
  RelatedIssues?: InputMaybe<Array<ImageRelatedIssuesUpdateFieldInput>>;
  Uploader?: InputMaybe<ImageUploaderUpdateFieldInput>;
  alt?: InputMaybe<Scalars['String']['input']>;
  caption?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  longDescription?: InputMaybe<Scalars['String']['input']>;
  scanCheckedAt?: InputMaybe<Scalars['DateTime']['input']>;
  scanStatus?: InputMaybe<ScanStatus>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ImageUpdatedEvent = {
  __typename?: 'ImageUpdatedEvent';
  event: EventType;
  previousState: ImageEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedImage: ImageEventPayload;
};

export type ImageUploaderAggregateInput = {
  AND?: InputMaybe<Array<ImageUploaderAggregateInput>>;
  NOT?: InputMaybe<ImageUploaderAggregateInput>;
  OR?: InputMaybe<Array<ImageUploaderAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ImageUploaderNodeAggregationWhereInput>;
};

export type ImageUploaderConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ImageUploaderConnectOrCreateFieldInput = {
  onCreate: ImageUploaderConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ImageUploaderConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ImageUploaderConnectedRelationship = {
  __typename?: 'ImageUploaderConnectedRelationship';
  node: UserEventPayload;
};

export type ImageUploaderConnection = {
  __typename?: 'ImageUploaderConnection';
  edges: Array<ImageUploaderRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ImageUploaderConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ImageUploaderConnectionWhere = {
  AND?: InputMaybe<Array<ImageUploaderConnectionWhere>>;
  NOT?: InputMaybe<ImageUploaderConnectionWhere>;
  OR?: InputMaybe<Array<ImageUploaderConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ImageUploaderCreateFieldInput = {
  node: UserCreateInput;
};

export type ImageUploaderDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ImageUploaderConnectionWhere>;
};

export type ImageUploaderDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ImageUploaderConnectionWhere>;
};

export type ImageUploaderFieldInput = {
  connect?: InputMaybe<ImageUploaderConnectFieldInput>;
  connectOrCreate?: InputMaybe<ImageUploaderConnectOrCreateFieldInput>;
  create?: InputMaybe<ImageUploaderCreateFieldInput>;
};

export type ImageUploaderNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ImageUploaderNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ImageUploaderNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ImageUploaderNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ImageUploaderRelationship = {
  __typename?: 'ImageUploaderRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ImageUploaderRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type ImageUploaderUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ImageUploaderUpdateFieldInput = {
  connect?: InputMaybe<ImageUploaderConnectFieldInput>;
  connectOrCreate?: InputMaybe<ImageUploaderConnectOrCreateFieldInput>;
  create?: InputMaybe<ImageUploaderCreateFieldInput>;
  delete?: InputMaybe<ImageUploaderDeleteFieldInput>;
  disconnect?: InputMaybe<ImageUploaderDisconnectFieldInput>;
  update?: InputMaybe<ImageUploaderUpdateConnectionInput>;
  where?: InputMaybe<ImageUploaderConnectionWhere>;
};

export type ImageUserUploaderAggregationSelection = {
  __typename?: 'ImageUserUploaderAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ImageUserUploaderNodeAggregateSelection>;
};

export type ImageUserUploaderNodeAggregateSelection = {
  __typename?: 'ImageUserUploaderNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ImageWhere = {
  AND?: InputMaybe<Array<ImageWhere>>;
  Album?: InputMaybe<AlbumWhere>;
  AlbumAggregate?: InputMaybe<ImageAlbumAggregateInput>;
  AlbumConnection?: InputMaybe<ImageAlbumConnectionWhere>;
  AlbumConnection_NOT?: InputMaybe<ImageAlbumConnectionWhere>;
  Album_NOT?: InputMaybe<AlbumWhere>;
  NOT?: InputMaybe<ImageWhere>;
  OR?: InputMaybe<Array<ImageWhere>>;
  RelatedIssuesAggregate?: InputMaybe<ImageRelatedIssuesAggregateInput>;
  /** Return Images where all of the related ImageRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_ALL?: InputMaybe<ImageRelatedIssuesConnectionWhere>;
  /** Return Images where none of the related ImageRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_NONE?: InputMaybe<ImageRelatedIssuesConnectionWhere>;
  /** Return Images where one of the related ImageRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SINGLE?: InputMaybe<ImageRelatedIssuesConnectionWhere>;
  /** Return Images where some of the related ImageRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SOME?: InputMaybe<ImageRelatedIssuesConnectionWhere>;
  /** Return Images where all of the related Issues match this filter */
  RelatedIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return Images where none of the related Issues match this filter */
  RelatedIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return Images where one of the related Issues match this filter */
  RelatedIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return Images where some of the related Issues match this filter */
  RelatedIssues_SOME?: InputMaybe<IssueWhere>;
  Uploader?: InputMaybe<UserWhere>;
  UploaderAggregate?: InputMaybe<ImageUploaderAggregateInput>;
  UploaderConnection?: InputMaybe<ImageUploaderConnectionWhere>;
  UploaderConnection_NOT?: InputMaybe<ImageUploaderConnectionWhere>;
  Uploader_NOT?: InputMaybe<UserWhere>;
  alt?: InputMaybe<Scalars['String']['input']>;
  alt_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  alt_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  alt_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  alt_MATCHES?: InputMaybe<Scalars['String']['input']>;
  alt_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  caption?: InputMaybe<Scalars['String']['input']>;
  caption_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  caption_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  caption_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  caption_MATCHES?: InputMaybe<Scalars['String']['input']>;
  caption_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
  copyright_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  copyright_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  copyright_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  copyright_MATCHES?: InputMaybe<Scalars['String']['input']>;
  copyright_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  longDescription?: InputMaybe<Scalars['String']['input']>;
  longDescription_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  longDescription_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  longDescription_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  longDescription_MATCHES?: InputMaybe<Scalars['String']['input']>;
  longDescription_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  scanCheckedAt?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  scanCheckedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanStatus?: InputMaybe<ScanStatus>;
  scanStatus_IN?: InputMaybe<Array<ScanStatus>>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ImagesConnection = {
  __typename?: 'ImagesConnection';
  edges: Array<ImageEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/**
 * The edge properties for the following fields:
 * * ServerConfig.InstalledVersions
 */
export type InstallationProperties = {
  __typename?: 'InstallationProperties';
  enabled: Scalars['Boolean']['output'];
  settingsJson?: Maybe<Scalars['JSON']['output']>;
};

export type InstallationPropertiesCreateInput = {
  enabled: Scalars['Boolean']['input'];
  settingsJson?: InputMaybe<Scalars['JSON']['input']>;
};

export type InstallationPropertiesSort = {
  enabled?: InputMaybe<SortDirection>;
  settingsJson?: InputMaybe<SortDirection>;
};

export type InstallationPropertiesSubscriptionWhere = {
  AND?: InputMaybe<Array<InstallationPropertiesSubscriptionWhere>>;
  NOT?: InputMaybe<InstallationPropertiesSubscriptionWhere>;
  OR?: InputMaybe<Array<InstallationPropertiesSubscriptionWhere>>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  settingsJson?: InputMaybe<Scalars['JSON']['input']>;
  settingsJson_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
};

export type InstallationPropertiesUpdateInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  settingsJson?: InputMaybe<Scalars['JSON']['input']>;
};

export type InstallationPropertiesWhere = {
  AND?: InputMaybe<Array<InstallationPropertiesWhere>>;
  NOT?: InputMaybe<InstallationPropertiesWhere>;
  OR?: InputMaybe<Array<InstallationPropertiesWhere>>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  settingsJson?: InputMaybe<Scalars['JSON']['input']>;
  settingsJson_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
};

export type IntAggregateSelection = {
  __typename?: 'IntAggregateSelection';
  average?: Maybe<Scalars['Float']['output']>;
  max?: Maybe<Scalars['Int']['output']>;
  min?: Maybe<Scalars['Int']['output']>;
  sum?: Maybe<Scalars['Int']['output']>;
};

export type Issue = {
  __typename?: 'Issue';
  ActivityFeed: Array<ModerationAction>;
  ActivityFeedAggregate?: Maybe<IssueModerationActionActivityFeedAggregationSelection>;
  ActivityFeedConnection: IssueActivityFeedConnection;
  Author?: Maybe<IssueAuthor>;
  AuthorConnection: IssueAuthorConnection;
  Channel?: Maybe<Channel>;
  ChannelAggregate?: Maybe<IssueChannelChannelAggregationSelection>;
  ChannelConnection: IssueChannelConnection;
  SubscribedToNotifications: Array<User>;
  SubscribedToNotificationsAggregate?: Maybe<IssueUserSubscribedToNotificationsAggregationSelection>;
  SubscribedToNotificationsConnection: IssueSubscribedToNotificationsConnection;
  authorName?: Maybe<Scalars['String']['output']>;
  body?: Maybe<Scalars['String']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  flaggedServerRuleViolation?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  isOpen: Scalars['Boolean']['output'];
  relatedCommentId?: Maybe<Scalars['ID']['output']>;
  relatedDiscussionId?: Maybe<Scalars['ID']['output']>;
  relatedEventId?: Maybe<Scalars['ID']['output']>;
  relatedModProfileName?: Maybe<Scalars['String']['output']>;
  relatedUsername?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type IssueActivityFeedArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationActionOptions>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type IssueActivityFeedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type IssueActivityFeedConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<IssueActivityFeedConnectionSort>>;
  where?: InputMaybe<IssueActivityFeedConnectionWhere>;
};


export type IssueAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<IssueAuthorWhere>;
};


export type IssueAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<IssueAuthorConnectionWhere>;
};


export type IssueChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type IssueChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type IssueChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<IssueChannelConnectionSort>>;
  where?: InputMaybe<IssueChannelConnectionWhere>;
};


export type IssueSubscribedToNotificationsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type IssueSubscribedToNotificationsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type IssueSubscribedToNotificationsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<IssueSubscribedToNotificationsConnectionSort>>;
  where?: InputMaybe<IssueSubscribedToNotificationsConnectionWhere>;
};

export type IssueActivityFeedAggregateInput = {
  AND?: InputMaybe<Array<IssueActivityFeedAggregateInput>>;
  NOT?: InputMaybe<IssueActivityFeedAggregateInput>;
  OR?: InputMaybe<Array<IssueActivityFeedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<IssueActivityFeedNodeAggregationWhereInput>;
};

export type IssueActivityFeedConnectFieldInput = {
  connect?: InputMaybe<Array<ModerationActionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationActionConnectWhere>;
};

export type IssueActivityFeedConnectedRelationship = {
  __typename?: 'IssueActivityFeedConnectedRelationship';
  node: ModerationActionEventPayload;
};

export type IssueActivityFeedConnection = {
  __typename?: 'IssueActivityFeedConnection';
  edges: Array<IssueActivityFeedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IssueActivityFeedConnectionSort = {
  node?: InputMaybe<ModerationActionSort>;
};

export type IssueActivityFeedConnectionWhere = {
  AND?: InputMaybe<Array<IssueActivityFeedConnectionWhere>>;
  NOT?: InputMaybe<IssueActivityFeedConnectionWhere>;
  OR?: InputMaybe<Array<IssueActivityFeedConnectionWhere>>;
  node?: InputMaybe<ModerationActionWhere>;
};

export type IssueActivityFeedCreateFieldInput = {
  node: ModerationActionCreateInput;
};

export type IssueActivityFeedDeleteFieldInput = {
  delete?: InputMaybe<ModerationActionDeleteInput>;
  where?: InputMaybe<IssueActivityFeedConnectionWhere>;
};

export type IssueActivityFeedDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationActionDisconnectInput>;
  where?: InputMaybe<IssueActivityFeedConnectionWhere>;
};

export type IssueActivityFeedFieldInput = {
  connect?: InputMaybe<Array<IssueActivityFeedConnectFieldInput>>;
  create?: InputMaybe<Array<IssueActivityFeedCreateFieldInput>>;
};

export type IssueActivityFeedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<IssueActivityFeedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<IssueActivityFeedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<IssueActivityFeedNodeAggregationWhereInput>>;
  actionDescription_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type IssueActivityFeedRelationship = {
  __typename?: 'IssueActivityFeedRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationAction;
};

export type IssueActivityFeedRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModerationActionSubscriptionWhere>;
};

export type IssueActivityFeedUpdateConnectionInput = {
  node?: InputMaybe<ModerationActionUpdateInput>;
};

export type IssueActivityFeedUpdateFieldInput = {
  connect?: InputMaybe<Array<IssueActivityFeedConnectFieldInput>>;
  create?: InputMaybe<Array<IssueActivityFeedCreateFieldInput>>;
  delete?: InputMaybe<Array<IssueActivityFeedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<IssueActivityFeedDisconnectFieldInput>>;
  update?: InputMaybe<IssueActivityFeedUpdateConnectionInput>;
  where?: InputMaybe<IssueActivityFeedConnectionWhere>;
};

export type IssueAggregateSelection = {
  __typename?: 'IssueAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type IssueAuthor = ModerationProfile | User;

export type IssueAuthorConnectInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileConnectFieldInput>;
  User?: InputMaybe<IssueAuthorUserConnectFieldInput>;
};

export type IssueAuthorConnectOrCreateInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileConnectOrCreateFieldInput>;
  User?: InputMaybe<IssueAuthorUserConnectOrCreateFieldInput>;
};

export type IssueAuthorConnectedRelationship = {
  __typename?: 'IssueAuthorConnectedRelationship';
  node: IssueAuthorEventPayload;
};

export type IssueAuthorConnection = {
  __typename?: 'IssueAuthorConnection';
  edges: Array<IssueAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IssueAuthorConnectionWhere = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
  User?: InputMaybe<IssueAuthorUserConnectionWhere>;
};

export type IssueAuthorCreateFieldInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileCreateFieldInput>;
  User?: InputMaybe<IssueAuthorUserCreateFieldInput>;
};

export type IssueAuthorCreateInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileFieldInput>;
  User?: InputMaybe<IssueAuthorUserFieldInput>;
};

export type IssueAuthorDeleteInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileDeleteFieldInput>;
  User?: InputMaybe<IssueAuthorUserDeleteFieldInput>;
};

export type IssueAuthorDisconnectInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileDisconnectFieldInput>;
  User?: InputMaybe<IssueAuthorUserDisconnectFieldInput>;
};

export type IssueAuthorEventPayload = ModerationProfileEventPayload | UserEventPayload;

export type IssueAuthorModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type IssueAuthorModerationProfileConnectOrCreateFieldInput = {
  onCreate: IssueAuthorModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type IssueAuthorModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type IssueAuthorModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<IssueAuthorModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<IssueAuthorModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type IssueAuthorModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type IssueAuthorModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
};

export type IssueAuthorModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
};

export type IssueAuthorModerationProfileFieldInput = {
  connect?: InputMaybe<IssueAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueAuthorModerationProfileCreateFieldInput>;
};

export type IssueAuthorModerationProfileSubscriptionWhere = {
  node?: InputMaybe<ModerationProfileSubscriptionWhere>;
};

export type IssueAuthorModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type IssueAuthorModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<IssueAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueAuthorModerationProfileCreateFieldInput>;
  delete?: InputMaybe<IssueAuthorModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<IssueAuthorModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<IssueAuthorModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
};

export type IssueAuthorRelationship = {
  __typename?: 'IssueAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: IssueAuthor;
};

export type IssueAuthorRelationshipSubscriptionWhere = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileSubscriptionWhere>;
  User?: InputMaybe<IssueAuthorUserSubscriptionWhere>;
};

export type IssueAuthorUpdateInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileUpdateFieldInput>;
  User?: InputMaybe<IssueAuthorUserUpdateFieldInput>;
};

export type IssueAuthorUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type IssueAuthorUserConnectOrCreateFieldInput = {
  onCreate: IssueAuthorUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type IssueAuthorUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type IssueAuthorUserConnectionWhere = {
  AND?: InputMaybe<Array<IssueAuthorUserConnectionWhere>>;
  NOT?: InputMaybe<IssueAuthorUserConnectionWhere>;
  OR?: InputMaybe<Array<IssueAuthorUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type IssueAuthorUserCreateFieldInput = {
  node: UserCreateInput;
};

export type IssueAuthorUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<IssueAuthorUserConnectionWhere>;
};

export type IssueAuthorUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<IssueAuthorUserConnectionWhere>;
};

export type IssueAuthorUserFieldInput = {
  connect?: InputMaybe<IssueAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueAuthorUserCreateFieldInput>;
};

export type IssueAuthorUserSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type IssueAuthorUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type IssueAuthorUserUpdateFieldInput = {
  connect?: InputMaybe<IssueAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueAuthorUserCreateFieldInput>;
  delete?: InputMaybe<IssueAuthorUserDeleteFieldInput>;
  disconnect?: InputMaybe<IssueAuthorUserDisconnectFieldInput>;
  update?: InputMaybe<IssueAuthorUserUpdateConnectionInput>;
  where?: InputMaybe<IssueAuthorUserConnectionWhere>;
};

export type IssueAuthorWhere = {
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  User?: InputMaybe<UserWhere>;
};

export type IssueChannelAggregateInput = {
  AND?: InputMaybe<Array<IssueChannelAggregateInput>>;
  NOT?: InputMaybe<IssueChannelAggregateInput>;
  OR?: InputMaybe<Array<IssueChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<IssueChannelNodeAggregationWhereInput>;
};

export type IssueChannelChannelAggregationSelection = {
  __typename?: 'IssueChannelChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<IssueChannelChannelNodeAggregateSelection>;
};

export type IssueChannelChannelNodeAggregateSelection = {
  __typename?: 'IssueChannelChannelNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type IssueChannelConnectFieldInput = {
  connect?: InputMaybe<ChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type IssueChannelConnectOrCreateFieldInput = {
  onCreate: IssueChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type IssueChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type IssueChannelConnectedRelationship = {
  __typename?: 'IssueChannelConnectedRelationship';
  node: ChannelEventPayload;
};

export type IssueChannelConnection = {
  __typename?: 'IssueChannelConnection';
  edges: Array<IssueChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IssueChannelConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type IssueChannelConnectionWhere = {
  AND?: InputMaybe<Array<IssueChannelConnectionWhere>>;
  NOT?: InputMaybe<IssueChannelConnectionWhere>;
  OR?: InputMaybe<Array<IssueChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type IssueChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type IssueChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<IssueChannelConnectionWhere>;
};

export type IssueChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<IssueChannelConnectionWhere>;
};

export type IssueChannelFieldInput = {
  connect?: InputMaybe<IssueChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueChannelCreateFieldInput>;
};

export type IssueChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<IssueChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<IssueChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<IssueChannelNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type IssueChannelRelationship = {
  __typename?: 'IssueChannelRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type IssueChannelRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type IssueChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type IssueChannelUpdateFieldInput = {
  connect?: InputMaybe<IssueChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueChannelCreateFieldInput>;
  delete?: InputMaybe<IssueChannelDeleteFieldInput>;
  disconnect?: InputMaybe<IssueChannelDisconnectFieldInput>;
  update?: InputMaybe<IssueChannelUpdateConnectionInput>;
  where?: InputMaybe<IssueChannelConnectionWhere>;
};

export type IssueCommentAuthor = ModerationProfile | User;

export type IssueCommentAuthorWhere = {
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  User?: InputMaybe<UserWhere>;
};

export type IssueConnectInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedConnectFieldInput>>;
  Author?: InputMaybe<IssueAuthorConnectInput>;
  Channel?: InputMaybe<IssueChannelConnectFieldInput>;
  SubscribedToNotifications?: InputMaybe<Array<IssueSubscribedToNotificationsConnectFieldInput>>;
};

export type IssueConnectOrCreateInput = {
  Author?: InputMaybe<IssueAuthorConnectOrCreateInput>;
  Channel?: InputMaybe<IssueChannelConnectOrCreateFieldInput>;
  SubscribedToNotifications?: InputMaybe<Array<IssueSubscribedToNotificationsConnectOrCreateFieldInput>>;
};

export type IssueConnectWhere = {
  node: IssueWhere;
};

export type IssueConnectedRelationships = {
  __typename?: 'IssueConnectedRelationships';
  ActivityFeed?: Maybe<IssueActivityFeedConnectedRelationship>;
  Author?: Maybe<IssueAuthorConnectedRelationship>;
  Channel?: Maybe<IssueChannelConnectedRelationship>;
  SubscribedToNotifications?: Maybe<IssueSubscribedToNotificationsConnectedRelationship>;
};

export type IssueCreateInput = {
  ActivityFeed?: InputMaybe<IssueActivityFeedFieldInput>;
  Author?: InputMaybe<IssueAuthorCreateInput>;
  Channel?: InputMaybe<IssueChannelFieldInput>;
  SubscribedToNotifications?: InputMaybe<IssueSubscribedToNotificationsFieldInput>;
  authorName?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  flaggedServerRuleViolation?: InputMaybe<Scalars['Boolean']['input']>;
  isOpen: Scalars['Boolean']['input'];
  relatedCommentId?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId?: InputMaybe<Scalars['ID']['input']>;
  relatedModProfileName?: InputMaybe<Scalars['String']['input']>;
  relatedUsername?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type IssueCreatedEvent = {
  __typename?: 'IssueCreatedEvent';
  createdIssue: IssueEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type IssueDeleteInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedDeleteFieldInput>>;
  Author?: InputMaybe<IssueAuthorDeleteInput>;
  Channel?: InputMaybe<IssueChannelDeleteFieldInput>;
  SubscribedToNotifications?: InputMaybe<Array<IssueSubscribedToNotificationsDeleteFieldInput>>;
};

export type IssueDeletedEvent = {
  __typename?: 'IssueDeletedEvent';
  deletedIssue: IssueEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type IssueDisconnectInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedDisconnectFieldInput>>;
  Author?: InputMaybe<IssueAuthorDisconnectInput>;
  Channel?: InputMaybe<IssueChannelDisconnectFieldInput>;
  SubscribedToNotifications?: InputMaybe<Array<IssueSubscribedToNotificationsDisconnectFieldInput>>;
};

export type IssueEdge = {
  __typename?: 'IssueEdge';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type IssueEventPayload = {
  __typename?: 'IssueEventPayload';
  authorName?: Maybe<Scalars['String']['output']>;
  body?: Maybe<Scalars['String']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  flaggedServerRuleViolation?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  isOpen: Scalars['Boolean']['output'];
  relatedCommentId?: Maybe<Scalars['ID']['output']>;
  relatedDiscussionId?: Maybe<Scalars['ID']['output']>;
  relatedEventId?: Maybe<Scalars['ID']['output']>;
  relatedModProfileName?: Maybe<Scalars['String']['output']>;
  relatedUsername?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type IssueModerationActionActivityFeedAggregationSelection = {
  __typename?: 'IssueModerationActionActivityFeedAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<IssueModerationActionActivityFeedNodeAggregateSelection>;
};

export type IssueModerationActionActivityFeedNodeAggregateSelection = {
  __typename?: 'IssueModerationActionActivityFeedNodeAggregateSelection';
  actionDescription: StringAggregateSelection;
  actionType: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
};

export type IssueOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more IssueSort objects to sort Issues by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<IssueSort>>;
};

export type IssueRelationInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedCreateFieldInput>>;
  Author?: InputMaybe<IssueAuthorCreateFieldInput>;
  Channel?: InputMaybe<IssueChannelCreateFieldInput>;
  SubscribedToNotifications?: InputMaybe<Array<IssueSubscribedToNotificationsCreateFieldInput>>;
};

export type IssueRelationshipCreatedEvent = {
  __typename?: 'IssueRelationshipCreatedEvent';
  createdRelationship: IssueConnectedRelationships;
  event: EventType;
  issue: IssueEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type IssueRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<IssueRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<IssueRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<IssueRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<IssueRelationshipsSubscriptionWhere>;
  issue?: InputMaybe<IssueSubscriptionWhere>;
};

export type IssueRelationshipDeletedEvent = {
  __typename?: 'IssueRelationshipDeletedEvent';
  deletedRelationship: IssueConnectedRelationships;
  event: EventType;
  issue: IssueEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type IssueRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<IssueRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<IssueRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<IssueRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<IssueRelationshipsSubscriptionWhere>;
  issue?: InputMaybe<IssueSubscriptionWhere>;
};

export type IssueRelationshipsSubscriptionWhere = {
  ActivityFeed?: InputMaybe<IssueActivityFeedRelationshipSubscriptionWhere>;
  Author?: InputMaybe<IssueAuthorRelationshipSubscriptionWhere>;
  Channel?: InputMaybe<IssueChannelRelationshipSubscriptionWhere>;
  SubscribedToNotifications?: InputMaybe<IssueSubscribedToNotificationsRelationshipSubscriptionWhere>;
};

/** Fields to sort Issues by. The order in which sorts are applied is not guaranteed when specifying many fields in one IssueSort object. */
export type IssueSort = {
  authorName?: InputMaybe<SortDirection>;
  body?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  flaggedServerRuleViolation?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isOpen?: InputMaybe<SortDirection>;
  relatedCommentId?: InputMaybe<SortDirection>;
  relatedDiscussionId?: InputMaybe<SortDirection>;
  relatedEventId?: InputMaybe<SortDirection>;
  relatedModProfileName?: InputMaybe<SortDirection>;
  relatedUsername?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type IssueSubscribedToNotificationsAggregateInput = {
  AND?: InputMaybe<Array<IssueSubscribedToNotificationsAggregateInput>>;
  NOT?: InputMaybe<IssueSubscribedToNotificationsAggregateInput>;
  OR?: InputMaybe<Array<IssueSubscribedToNotificationsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<IssueSubscribedToNotificationsNodeAggregationWhereInput>;
};

export type IssueSubscribedToNotificationsConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type IssueSubscribedToNotificationsConnectOrCreateFieldInput = {
  onCreate: IssueSubscribedToNotificationsConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type IssueSubscribedToNotificationsConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type IssueSubscribedToNotificationsConnectedRelationship = {
  __typename?: 'IssueSubscribedToNotificationsConnectedRelationship';
  node: UserEventPayload;
};

export type IssueSubscribedToNotificationsConnection = {
  __typename?: 'IssueSubscribedToNotificationsConnection';
  edges: Array<IssueSubscribedToNotificationsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IssueSubscribedToNotificationsConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type IssueSubscribedToNotificationsConnectionWhere = {
  AND?: InputMaybe<Array<IssueSubscribedToNotificationsConnectionWhere>>;
  NOT?: InputMaybe<IssueSubscribedToNotificationsConnectionWhere>;
  OR?: InputMaybe<Array<IssueSubscribedToNotificationsConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type IssueSubscribedToNotificationsCreateFieldInput = {
  node: UserCreateInput;
};

export type IssueSubscribedToNotificationsDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<IssueSubscribedToNotificationsConnectionWhere>;
};

export type IssueSubscribedToNotificationsDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<IssueSubscribedToNotificationsConnectionWhere>;
};

export type IssueSubscribedToNotificationsFieldInput = {
  connect?: InputMaybe<Array<IssueSubscribedToNotificationsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<IssueSubscribedToNotificationsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<IssueSubscribedToNotificationsCreateFieldInput>>;
};

export type IssueSubscribedToNotificationsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<IssueSubscribedToNotificationsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<IssueSubscribedToNotificationsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<IssueSubscribedToNotificationsNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type IssueSubscribedToNotificationsRelationship = {
  __typename?: 'IssueSubscribedToNotificationsRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type IssueSubscribedToNotificationsRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type IssueSubscribedToNotificationsUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type IssueSubscribedToNotificationsUpdateFieldInput = {
  connect?: InputMaybe<Array<IssueSubscribedToNotificationsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<IssueSubscribedToNotificationsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<IssueSubscribedToNotificationsCreateFieldInput>>;
  delete?: InputMaybe<Array<IssueSubscribedToNotificationsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<IssueSubscribedToNotificationsDisconnectFieldInput>>;
  update?: InputMaybe<IssueSubscribedToNotificationsUpdateConnectionInput>;
  where?: InputMaybe<IssueSubscribedToNotificationsConnectionWhere>;
};

export type IssueSubscriptionWhere = {
  AND?: InputMaybe<Array<IssueSubscriptionWhere>>;
  NOT?: InputMaybe<IssueSubscriptionWhere>;
  OR?: InputMaybe<Array<IssueSubscriptionWhere>>;
  authorName?: InputMaybe<Scalars['String']['input']>;
  authorName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  authorName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  authorName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  authorName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  flaggedServerRuleViolation?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  isOpen?: InputMaybe<Scalars['Boolean']['input']>;
  relatedCommentId?: InputMaybe<Scalars['ID']['input']>;
  relatedCommentId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  relatedCommentId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedCommentId_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  relatedCommentId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  relatedDiscussionId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  relatedEventId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedModProfileName?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedModProfileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  relatedUsername?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedUsername_MATCHES?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type IssueUpdateInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedUpdateFieldInput>>;
  Author?: InputMaybe<IssueAuthorUpdateInput>;
  Channel?: InputMaybe<IssueChannelUpdateFieldInput>;
  SubscribedToNotifications?: InputMaybe<Array<IssueSubscribedToNotificationsUpdateFieldInput>>;
  authorName?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  flaggedServerRuleViolation?: InputMaybe<Scalars['Boolean']['input']>;
  isOpen?: InputMaybe<Scalars['Boolean']['input']>;
  relatedCommentId?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId?: InputMaybe<Scalars['ID']['input']>;
  relatedModProfileName?: InputMaybe<Scalars['String']['input']>;
  relatedUsername?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type IssueUpdatedEvent = {
  __typename?: 'IssueUpdatedEvent';
  event: EventType;
  previousState: IssueEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedIssue: IssueEventPayload;
};

export type IssueUserSubscribedToNotificationsAggregationSelection = {
  __typename?: 'IssueUserSubscribedToNotificationsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<IssueUserSubscribedToNotificationsNodeAggregateSelection>;
};

export type IssueUserSubscribedToNotificationsNodeAggregateSelection = {
  __typename?: 'IssueUserSubscribedToNotificationsNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type IssueWhere = {
  AND?: InputMaybe<Array<IssueWhere>>;
  ActivityFeedAggregate?: InputMaybe<IssueActivityFeedAggregateInput>;
  /** Return Issues where all of the related IssueActivityFeedConnections match this filter */
  ActivityFeedConnection_ALL?: InputMaybe<IssueActivityFeedConnectionWhere>;
  /** Return Issues where none of the related IssueActivityFeedConnections match this filter */
  ActivityFeedConnection_NONE?: InputMaybe<IssueActivityFeedConnectionWhere>;
  /** Return Issues where one of the related IssueActivityFeedConnections match this filter */
  ActivityFeedConnection_SINGLE?: InputMaybe<IssueActivityFeedConnectionWhere>;
  /** Return Issues where some of the related IssueActivityFeedConnections match this filter */
  ActivityFeedConnection_SOME?: InputMaybe<IssueActivityFeedConnectionWhere>;
  /** Return Issues where all of the related ModerationActions match this filter */
  ActivityFeed_ALL?: InputMaybe<ModerationActionWhere>;
  /** Return Issues where none of the related ModerationActions match this filter */
  ActivityFeed_NONE?: InputMaybe<ModerationActionWhere>;
  /** Return Issues where one of the related ModerationActions match this filter */
  ActivityFeed_SINGLE?: InputMaybe<ModerationActionWhere>;
  /** Return Issues where some of the related ModerationActions match this filter */
  ActivityFeed_SOME?: InputMaybe<ModerationActionWhere>;
  Author?: InputMaybe<IssueAuthorWhere>;
  AuthorConnection?: InputMaybe<IssueAuthorConnectionWhere>;
  AuthorConnection_NOT?: InputMaybe<IssueAuthorConnectionWhere>;
  Author_NOT?: InputMaybe<IssueAuthorWhere>;
  Channel?: InputMaybe<ChannelWhere>;
  ChannelAggregate?: InputMaybe<IssueChannelAggregateInput>;
  ChannelConnection?: InputMaybe<IssueChannelConnectionWhere>;
  ChannelConnection_NOT?: InputMaybe<IssueChannelConnectionWhere>;
  Channel_NOT?: InputMaybe<ChannelWhere>;
  NOT?: InputMaybe<IssueWhere>;
  OR?: InputMaybe<Array<IssueWhere>>;
  SubscribedToNotificationsAggregate?: InputMaybe<IssueSubscribedToNotificationsAggregateInput>;
  /** Return Issues where all of the related IssueSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_ALL?: InputMaybe<IssueSubscribedToNotificationsConnectionWhere>;
  /** Return Issues where none of the related IssueSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_NONE?: InputMaybe<IssueSubscribedToNotificationsConnectionWhere>;
  /** Return Issues where one of the related IssueSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_SINGLE?: InputMaybe<IssueSubscribedToNotificationsConnectionWhere>;
  /** Return Issues where some of the related IssueSubscribedToNotificationsConnections match this filter */
  SubscribedToNotificationsConnection_SOME?: InputMaybe<IssueSubscribedToNotificationsConnectionWhere>;
  /** Return Issues where all of the related Users match this filter */
  SubscribedToNotifications_ALL?: InputMaybe<UserWhere>;
  /** Return Issues where none of the related Users match this filter */
  SubscribedToNotifications_NONE?: InputMaybe<UserWhere>;
  /** Return Issues where one of the related Users match this filter */
  SubscribedToNotifications_SINGLE?: InputMaybe<UserWhere>;
  /** Return Issues where some of the related Users match this filter */
  SubscribedToNotifications_SOME?: InputMaybe<UserWhere>;
  authorName?: InputMaybe<Scalars['String']['input']>;
  authorName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  authorName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  authorName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  authorName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  flaggedServerRuleViolation?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  isOpen?: InputMaybe<Scalars['Boolean']['input']>;
  relatedCommentId?: InputMaybe<Scalars['ID']['input']>;
  relatedCommentId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  relatedCommentId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedCommentId_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  relatedCommentId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  relatedDiscussionId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  relatedEventId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedModProfileName?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedModProfileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  relatedUsername?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedUsername_MATCHES?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type IssuesConnection = {
  __typename?: 'IssuesConnection';
  edges: Array<IssueEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type LabelFilterInput = {
  groupKey: Scalars['String']['input'];
  values: Array<Scalars['String']['input']>;
};

/** SPDX or custom content licence */
export type License = {
  __typename?: 'License';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  shortName?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type LicenseAggregateSelection = {
  __typename?: 'LicenseAggregateSelection';
  count: Scalars['Int']['output'];
  id: IdAggregateSelection;
  name: StringAggregateSelection;
  shortName: StringAggregateSelection;
  text: StringAggregateSelection;
  url: StringAggregateSelection;
};

export type LicenseConnectWhere = {
  node: LicenseWhere;
};

export type LicenseCreateInput = {
  name: Scalars['String']['input'];
  shortName?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type LicenseCreatedEvent = {
  __typename?: 'LicenseCreatedEvent';
  createdLicense: LicenseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type LicenseDeletedEvent = {
  __typename?: 'LicenseDeletedEvent';
  deletedLicense: LicenseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type LicenseEdge = {
  __typename?: 'LicenseEdge';
  cursor: Scalars['String']['output'];
  node: License;
};

export type LicenseEventPayload = {
  __typename?: 'LicenseEventPayload';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  shortName?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type LicenseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more LicenseSort objects to sort Licenses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<LicenseSort>>;
};

/** Fields to sort Licenses by. The order in which sorts are applied is not guaranteed when specifying many fields in one LicenseSort object. */
export type LicenseSort = {
  id?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  shortName?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
  url?: InputMaybe<SortDirection>;
};

export type LicenseSubscriptionWhere = {
  AND?: InputMaybe<Array<LicenseSubscriptionWhere>>;
  NOT?: InputMaybe<LicenseSubscriptionWhere>;
  OR?: InputMaybe<Array<LicenseSubscriptionWhere>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  shortName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  shortName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  shortName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  shortName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  shortName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type LicenseUpdateInput = {
  name?: InputMaybe<Scalars['String']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type LicenseUpdatedEvent = {
  __typename?: 'LicenseUpdatedEvent';
  event: EventType;
  previousState: LicenseEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedLicense: LicenseEventPayload;
};

export type LicenseWhere = {
  AND?: InputMaybe<Array<LicenseWhere>>;
  NOT?: InputMaybe<LicenseWhere>;
  OR?: InputMaybe<Array<LicenseWhere>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  shortName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  shortName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  shortName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  shortName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  shortName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type LicensesConnection = {
  __typename?: 'LicensesConnection';
  edges: Array<LicenseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type LinkFlair = {
  __typename?: 'LinkFlair';
  cssClass?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
};

export type LinkFlairAggregateSelection = {
  __typename?: 'LinkFlairAggregateSelection';
  count: Scalars['Int']['output'];
  cssClass: StringAggregateSelection;
  id: StringAggregateSelection;
  text: StringAggregateSelection;
};

export type LinkFlairCreateInput = {
  cssClass?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type LinkFlairCreatedEvent = {
  __typename?: 'LinkFlairCreatedEvent';
  createdLinkFlair: LinkFlairEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type LinkFlairDeletedEvent = {
  __typename?: 'LinkFlairDeletedEvent';
  deletedLinkFlair: LinkFlairEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type LinkFlairEdge = {
  __typename?: 'LinkFlairEdge';
  cursor: Scalars['String']['output'];
  node: LinkFlair;
};

export type LinkFlairEventPayload = {
  __typename?: 'LinkFlairEventPayload';
  cssClass?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
};

export type LinkFlairOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more LinkFlairSort objects to sort LinkFlairs by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<LinkFlairSort>>;
};

/** Fields to sort LinkFlairs by. The order in which sorts are applied is not guaranteed when specifying many fields in one LinkFlairSort object. */
export type LinkFlairSort = {
  cssClass?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
};

export type LinkFlairSubscriptionWhere = {
  AND?: InputMaybe<Array<LinkFlairSubscriptionWhere>>;
  NOT?: InputMaybe<LinkFlairSubscriptionWhere>;
  OR?: InputMaybe<Array<LinkFlairSubscriptionWhere>>;
  cssClass?: InputMaybe<Scalars['String']['input']>;
  cssClass_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  cssClass_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  cssClass_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  cssClass_MATCHES?: InputMaybe<Scalars['String']['input']>;
  cssClass_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  id_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id_MATCHES?: InputMaybe<Scalars['String']['input']>;
  id_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type LinkFlairUpdateInput = {
  cssClass?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type LinkFlairUpdatedEvent = {
  __typename?: 'LinkFlairUpdatedEvent';
  event: EventType;
  previousState: LinkFlairEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedLinkFlair: LinkFlairEventPayload;
};

export type LinkFlairWhere = {
  AND?: InputMaybe<Array<LinkFlairWhere>>;
  NOT?: InputMaybe<LinkFlairWhere>;
  OR?: InputMaybe<Array<LinkFlairWhere>>;
  cssClass?: InputMaybe<Scalars['String']['input']>;
  cssClass_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  cssClass_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  cssClass_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  cssClass_MATCHES?: InputMaybe<Scalars['String']['input']>;
  cssClass_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  id_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id_MATCHES?: InputMaybe<Scalars['String']['input']>;
  id_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type LinkFlairsConnection = {
  __typename?: 'LinkFlairsConnection';
  edges: Array<LinkFlairEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Message = {
  __typename?: 'Message';
  Contact?: Maybe<Contact>;
  ContactAggregate?: Maybe<MessageContactContactAggregationSelection>;
  ContactConnection: MessageContactConnection;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  text?: Maybe<Scalars['String']['output']>;
};


export type MessageContactArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ContactOptions>;
  where?: InputMaybe<ContactWhere>;
};


export type MessageContactAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ContactWhere>;
};


export type MessageContactConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<MessageContactConnectionSort>>;
  where?: InputMaybe<MessageContactConnectionWhere>;
};

export type MessageAggregateSelection = {
  __typename?: 'MessageAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
};

export type MessageConnectInput = {
  Contact?: InputMaybe<MessageContactConnectFieldInput>;
};

export type MessageConnectWhere = {
  node: MessageWhere;
};

export type MessageConnectedRelationships = {
  __typename?: 'MessageConnectedRelationships';
  Contact?: Maybe<MessageContactConnectedRelationship>;
};

export type MessageContactAggregateInput = {
  AND?: InputMaybe<Array<MessageContactAggregateInput>>;
  NOT?: InputMaybe<MessageContactAggregateInput>;
  OR?: InputMaybe<Array<MessageContactAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<MessageContactNodeAggregationWhereInput>;
};

export type MessageContactConnectFieldInput = {
  connect?: InputMaybe<ContactConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ContactConnectWhere>;
};

export type MessageContactConnectedRelationship = {
  __typename?: 'MessageContactConnectedRelationship';
  node: ContactEventPayload;
};

export type MessageContactConnection = {
  __typename?: 'MessageContactConnection';
  edges: Array<MessageContactRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type MessageContactConnectionSort = {
  node?: InputMaybe<ContactSort>;
};

export type MessageContactConnectionWhere = {
  AND?: InputMaybe<Array<MessageContactConnectionWhere>>;
  NOT?: InputMaybe<MessageContactConnectionWhere>;
  OR?: InputMaybe<Array<MessageContactConnectionWhere>>;
  node?: InputMaybe<ContactWhere>;
};

export type MessageContactContactAggregationSelection = {
  __typename?: 'MessageContactContactAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<MessageContactContactNodeAggregateSelection>;
};

export type MessageContactContactNodeAggregateSelection = {
  __typename?: 'MessageContactContactNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  mostRecentMessageTimestamp: DateTimeAggregateSelection;
};

export type MessageContactCreateFieldInput = {
  node: ContactCreateInput;
};

export type MessageContactDeleteFieldInput = {
  delete?: InputMaybe<ContactDeleteInput>;
  where?: InputMaybe<MessageContactConnectionWhere>;
};

export type MessageContactDisconnectFieldInput = {
  disconnect?: InputMaybe<ContactDisconnectInput>;
  where?: InputMaybe<MessageContactConnectionWhere>;
};

export type MessageContactFieldInput = {
  connect?: InputMaybe<MessageContactConnectFieldInput>;
  create?: InputMaybe<MessageContactCreateFieldInput>;
};

export type MessageContactNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MessageContactNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MessageContactNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MessageContactNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type MessageContactRelationship = {
  __typename?: 'MessageContactRelationship';
  cursor: Scalars['String']['output'];
  node: Contact;
};

export type MessageContactRelationshipSubscriptionWhere = {
  node?: InputMaybe<ContactSubscriptionWhere>;
};

export type MessageContactUpdateConnectionInput = {
  node?: InputMaybe<ContactUpdateInput>;
};

export type MessageContactUpdateFieldInput = {
  connect?: InputMaybe<MessageContactConnectFieldInput>;
  create?: InputMaybe<MessageContactCreateFieldInput>;
  delete?: InputMaybe<MessageContactDeleteFieldInput>;
  disconnect?: InputMaybe<MessageContactDisconnectFieldInput>;
  update?: InputMaybe<MessageContactUpdateConnectionInput>;
  where?: InputMaybe<MessageContactConnectionWhere>;
};

export type MessageCreateInput = {
  Contact?: InputMaybe<MessageContactFieldInput>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type MessageCreatedEvent = {
  __typename?: 'MessageCreatedEvent';
  createdMessage: MessageEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type MessageDeleteInput = {
  Contact?: InputMaybe<MessageContactDeleteFieldInput>;
};

export type MessageDeletedEvent = {
  __typename?: 'MessageDeletedEvent';
  deletedMessage: MessageEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type MessageDisconnectInput = {
  Contact?: InputMaybe<MessageContactDisconnectFieldInput>;
};

export type MessageEdge = {
  __typename?: 'MessageEdge';
  cursor: Scalars['String']['output'];
  node: Message;
};

export type MessageEventPayload = {
  __typename?: 'MessageEventPayload';
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  text?: Maybe<Scalars['String']['output']>;
};

export type MessageOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more MessageSort objects to sort Messages by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MessageSort>>;
};

export type MessageRelationInput = {
  Contact?: InputMaybe<MessageContactCreateFieldInput>;
};

export type MessageRelationshipCreatedEvent = {
  __typename?: 'MessageRelationshipCreatedEvent';
  createdRelationship: MessageConnectedRelationships;
  event: EventType;
  message: MessageEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type MessageRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<MessageRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<MessageRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<MessageRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<MessageRelationshipsSubscriptionWhere>;
  message?: InputMaybe<MessageSubscriptionWhere>;
};

export type MessageRelationshipDeletedEvent = {
  __typename?: 'MessageRelationshipDeletedEvent';
  deletedRelationship: MessageConnectedRelationships;
  event: EventType;
  message: MessageEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type MessageRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<MessageRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<MessageRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<MessageRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<MessageRelationshipsSubscriptionWhere>;
  message?: InputMaybe<MessageSubscriptionWhere>;
};

export type MessageRelationshipsSubscriptionWhere = {
  Contact?: InputMaybe<MessageContactRelationshipSubscriptionWhere>;
};

/** Fields to sort Messages by. The order in which sorts are applied is not guaranteed when specifying many fields in one MessageSort object. */
export type MessageSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
};

export type MessageSubscriptionWhere = {
  AND?: InputMaybe<Array<MessageSubscriptionWhere>>;
  NOT?: InputMaybe<MessageSubscriptionWhere>;
  OR?: InputMaybe<Array<MessageSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type MessageUpdateInput = {
  Contact?: InputMaybe<MessageContactUpdateFieldInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type MessageUpdatedEvent = {
  __typename?: 'MessageUpdatedEvent';
  event: EventType;
  previousState: MessageEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedMessage: MessageEventPayload;
};

export type MessageWhere = {
  AND?: InputMaybe<Array<MessageWhere>>;
  Contact?: InputMaybe<ContactWhere>;
  ContactAggregate?: InputMaybe<MessageContactAggregateInput>;
  ContactConnection?: InputMaybe<MessageContactConnectionWhere>;
  ContactConnection_NOT?: InputMaybe<MessageContactConnectionWhere>;
  Contact_NOT?: InputMaybe<ContactWhere>;
  NOT?: InputMaybe<MessageWhere>;
  OR?: InputMaybe<Array<MessageWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type MessagesConnection = {
  __typename?: 'MessagesConnection';
  edges: Array<MessageEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModChannelRole = {
  __typename?: 'ModChannelRole';
  canCloseSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canGiveFeedback?: Maybe<Scalars['Boolean']['output']>;
  canHideComment?: Maybe<Scalars['Boolean']['output']>;
  canHideDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canHideEvent?: Maybe<Scalars['Boolean']['output']>;
  canOpenSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canReport?: Maybe<Scalars['Boolean']['output']>;
  canSuspendUser?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ModChannelRoleAggregateSelection = {
  __typename?: 'ModChannelRoleAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ModChannelRoleConnectOrCreateWhere = {
  node: ModChannelRoleUniqueWhere;
};

export type ModChannelRoleConnectWhere = {
  node: ModChannelRoleWhere;
};

export type ModChannelRoleCreateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRoleCreatedEvent = {
  __typename?: 'ModChannelRoleCreatedEvent';
  createdModChannelRole: ModChannelRoleEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ModChannelRoleDeletedEvent = {
  __typename?: 'ModChannelRoleDeletedEvent';
  deletedModChannelRole: ModChannelRoleEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ModChannelRoleEdge = {
  __typename?: 'ModChannelRoleEdge';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ModChannelRoleEventPayload = {
  __typename?: 'ModChannelRoleEventPayload';
  canCloseSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canGiveFeedback?: Maybe<Scalars['Boolean']['output']>;
  canHideComment?: Maybe<Scalars['Boolean']['output']>;
  canHideDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canHideEvent?: Maybe<Scalars['Boolean']['output']>;
  canOpenSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canReport?: Maybe<Scalars['Boolean']['output']>;
  canSuspendUser?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ModChannelRoleOnCreateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRoleOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ModChannelRoleSort objects to sort ModChannelRoles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ModChannelRoleSort>>;
};

/** Fields to sort ModChannelRoles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ModChannelRoleSort object. */
export type ModChannelRoleSort = {
  canCloseSupportTickets?: InputMaybe<SortDirection>;
  canGiveFeedback?: InputMaybe<SortDirection>;
  canHideComment?: InputMaybe<SortDirection>;
  canHideDiscussion?: InputMaybe<SortDirection>;
  canHideEvent?: InputMaybe<SortDirection>;
  canOpenSupportTickets?: InputMaybe<SortDirection>;
  canReport?: InputMaybe<SortDirection>;
  canSuspendUser?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export type ModChannelRoleSubscriptionWhere = {
  AND?: InputMaybe<Array<ModChannelRoleSubscriptionWhere>>;
  NOT?: InputMaybe<ModChannelRoleSubscriptionWhere>;
  OR?: InputMaybe<Array<ModChannelRoleSubscriptionWhere>>;
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRoleUniqueWhere = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRoleUpdateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRoleUpdatedEvent = {
  __typename?: 'ModChannelRoleUpdatedEvent';
  event: EventType;
  previousState: ModChannelRoleEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedModChannelRole: ModChannelRoleEventPayload;
};

export type ModChannelRoleWhere = {
  AND?: InputMaybe<Array<ModChannelRoleWhere>>;
  NOT?: InputMaybe<ModChannelRoleWhere>;
  OR?: InputMaybe<Array<ModChannelRoleWhere>>;
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRolesConnection = {
  __typename?: 'ModChannelRolesConnection';
  edges: Array<ModChannelRoleEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModServerRole = {
  __typename?: 'ModServerRole';
  canCloseSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canGiveFeedback?: Maybe<Scalars['Boolean']['output']>;
  canHideComment?: Maybe<Scalars['Boolean']['output']>;
  canHideDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canHideEvent?: Maybe<Scalars['Boolean']['output']>;
  canLockChannel?: Maybe<Scalars['Boolean']['output']>;
  canOpenSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canReport?: Maybe<Scalars['Boolean']['output']>;
  canSuspendUser?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ModServerRoleAggregateSelection = {
  __typename?: 'ModServerRoleAggregateSelection';
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ModServerRoleConnectOrCreateWhere = {
  node: ModServerRoleUniqueWhere;
};

export type ModServerRoleConnectWhere = {
  node: ModServerRoleWhere;
};

export type ModServerRoleCreateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canLockChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRoleCreatedEvent = {
  __typename?: 'ModServerRoleCreatedEvent';
  createdModServerRole: ModServerRoleEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ModServerRoleDeletedEvent = {
  __typename?: 'ModServerRoleDeletedEvent';
  deletedModServerRole: ModServerRoleEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ModServerRoleEdge = {
  __typename?: 'ModServerRoleEdge';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ModServerRoleEventPayload = {
  __typename?: 'ModServerRoleEventPayload';
  canCloseSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canGiveFeedback?: Maybe<Scalars['Boolean']['output']>;
  canHideComment?: Maybe<Scalars['Boolean']['output']>;
  canHideDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canHideEvent?: Maybe<Scalars['Boolean']['output']>;
  canLockChannel?: Maybe<Scalars['Boolean']['output']>;
  canOpenSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canReport?: Maybe<Scalars['Boolean']['output']>;
  canSuspendUser?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ModServerRoleOnCreateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canLockChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRoleOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ModServerRoleSort objects to sort ModServerRoles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ModServerRoleSort>>;
};

/** Fields to sort ModServerRoles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ModServerRoleSort object. */
export type ModServerRoleSort = {
  canCloseSupportTickets?: InputMaybe<SortDirection>;
  canGiveFeedback?: InputMaybe<SortDirection>;
  canHideComment?: InputMaybe<SortDirection>;
  canHideDiscussion?: InputMaybe<SortDirection>;
  canHideEvent?: InputMaybe<SortDirection>;
  canLockChannel?: InputMaybe<SortDirection>;
  canOpenSupportTickets?: InputMaybe<SortDirection>;
  canReport?: InputMaybe<SortDirection>;
  canSuspendUser?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export type ModServerRoleSubscriptionWhere = {
  AND?: InputMaybe<Array<ModServerRoleSubscriptionWhere>>;
  NOT?: InputMaybe<ModServerRoleSubscriptionWhere>;
  OR?: InputMaybe<Array<ModServerRoleSubscriptionWhere>>;
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canLockChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRoleUniqueWhere = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRoleUpdateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canLockChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRoleUpdatedEvent = {
  __typename?: 'ModServerRoleUpdatedEvent';
  event: EventType;
  previousState: ModServerRoleEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedModServerRole: ModServerRoleEventPayload;
};

export type ModServerRoleWhere = {
  AND?: InputMaybe<Array<ModServerRoleWhere>>;
  NOT?: InputMaybe<ModServerRoleWhere>;
  OR?: InputMaybe<Array<ModServerRoleWhere>>;
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canLockChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRolesConnection = {
  __typename?: 'ModServerRolesConnection';
  edges: Array<ModServerRoleEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationAction = {
  __typename?: 'ModerationAction';
  Comment?: Maybe<Comment>;
  CommentAggregate?: Maybe<ModerationActionCommentCommentAggregationSelection>;
  CommentConnection: ModerationActionCommentConnection;
  ModerationProfile?: Maybe<ModerationProfile>;
  ModerationProfileAggregate?: Maybe<ModerationActionModerationProfileModerationProfileAggregationSelection>;
  ModerationProfileConnection: ModerationActionModerationProfileConnection;
  User?: Maybe<User>;
  UserAggregate?: Maybe<ModerationActionUserUserAggregationSelection>;
  UserConnection: ModerationActionUserConnection;
  actionDescription?: Maybe<Scalars['String']['output']>;
  actionType?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
};


export type ModerationActionCommentArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type ModerationActionCommentAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type ModerationActionCommentConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationActionCommentConnectionSort>>;
  where?: InputMaybe<ModerationActionCommentConnectionWhere>;
};


export type ModerationActionModerationProfileArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type ModerationActionModerationProfileAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type ModerationActionModerationProfileConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationActionModerationProfileConnectionSort>>;
  where?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
};


export type ModerationActionUserArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ModerationActionUserAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ModerationActionUserConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationActionUserConnectionSort>>;
  where?: InputMaybe<ModerationActionUserConnectionWhere>;
};

export type ModerationActionAggregateSelection = {
  __typename?: 'ModerationActionAggregateSelection';
  actionDescription: StringAggregateSelection;
  actionType: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
};

export type ModerationActionCommentAggregateInput = {
  AND?: InputMaybe<Array<ModerationActionCommentAggregateInput>>;
  NOT?: InputMaybe<ModerationActionCommentAggregateInput>;
  OR?: InputMaybe<Array<ModerationActionCommentAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationActionCommentNodeAggregationWhereInput>;
};

export type ModerationActionCommentCommentAggregationSelection = {
  __typename?: 'ModerationActionCommentCommentAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationActionCommentCommentNodeAggregateSelection>;
};

export type ModerationActionCommentCommentNodeAggregateSelection = {
  __typename?: 'ModerationActionCommentCommentNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type ModerationActionCommentConnectFieldInput = {
  connect?: InputMaybe<CommentConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type ModerationActionCommentConnectedRelationship = {
  __typename?: 'ModerationActionCommentConnectedRelationship';
  node: CommentEventPayload;
};

export type ModerationActionCommentConnection = {
  __typename?: 'ModerationActionCommentConnection';
  edges: Array<ModerationActionCommentRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationActionCommentConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type ModerationActionCommentConnectionWhere = {
  AND?: InputMaybe<Array<ModerationActionCommentConnectionWhere>>;
  NOT?: InputMaybe<ModerationActionCommentConnectionWhere>;
  OR?: InputMaybe<Array<ModerationActionCommentConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type ModerationActionCommentCreateFieldInput = {
  node: CommentCreateInput;
};

export type ModerationActionCommentDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<ModerationActionCommentConnectionWhere>;
};

export type ModerationActionCommentDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<ModerationActionCommentConnectionWhere>;
};

export type ModerationActionCommentFieldInput = {
  connect?: InputMaybe<ModerationActionCommentConnectFieldInput>;
  create?: InputMaybe<ModerationActionCommentCreateFieldInput>;
};

export type ModerationActionCommentNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationActionCommentNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationActionCommentNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationActionCommentNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type ModerationActionCommentRelationship = {
  __typename?: 'ModerationActionCommentRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type ModerationActionCommentRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type ModerationActionCommentUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type ModerationActionCommentUpdateFieldInput = {
  connect?: InputMaybe<ModerationActionCommentConnectFieldInput>;
  create?: InputMaybe<ModerationActionCommentCreateFieldInput>;
  delete?: InputMaybe<ModerationActionCommentDeleteFieldInput>;
  disconnect?: InputMaybe<ModerationActionCommentDisconnectFieldInput>;
  update?: InputMaybe<ModerationActionCommentUpdateConnectionInput>;
  where?: InputMaybe<ModerationActionCommentConnectionWhere>;
};

export type ModerationActionConnectInput = {
  Comment?: InputMaybe<ModerationActionCommentConnectFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileConnectFieldInput>;
  User?: InputMaybe<ModerationActionUserConnectFieldInput>;
};

export type ModerationActionConnectOrCreateInput = {
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileConnectOrCreateFieldInput>;
  User?: InputMaybe<ModerationActionUserConnectOrCreateFieldInput>;
};

export type ModerationActionConnectWhere = {
  node: ModerationActionWhere;
};

export type ModerationActionConnectedRelationships = {
  __typename?: 'ModerationActionConnectedRelationships';
  Comment?: Maybe<ModerationActionCommentConnectedRelationship>;
  ModerationProfile?: Maybe<ModerationActionModerationProfileConnectedRelationship>;
  User?: Maybe<ModerationActionUserConnectedRelationship>;
};

export type ModerationActionCreateInput = {
  Comment?: InputMaybe<ModerationActionCommentFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileFieldInput>;
  User?: InputMaybe<ModerationActionUserFieldInput>;
  actionDescription?: InputMaybe<Scalars['String']['input']>;
  actionType?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationActionCreatedEvent = {
  __typename?: 'ModerationActionCreatedEvent';
  createdModerationAction: ModerationActionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ModerationActionDeleteInput = {
  Comment?: InputMaybe<ModerationActionCommentDeleteFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileDeleteFieldInput>;
  User?: InputMaybe<ModerationActionUserDeleteFieldInput>;
};

export type ModerationActionDeletedEvent = {
  __typename?: 'ModerationActionDeletedEvent';
  deletedModerationAction: ModerationActionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ModerationActionDisconnectInput = {
  Comment?: InputMaybe<ModerationActionCommentDisconnectFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileDisconnectFieldInput>;
  User?: InputMaybe<ModerationActionUserDisconnectFieldInput>;
};

export type ModerationActionEdge = {
  __typename?: 'ModerationActionEdge';
  cursor: Scalars['String']['output'];
  node: ModerationAction;
};

export type ModerationActionEventPayload = {
  __typename?: 'ModerationActionEventPayload';
  actionDescription?: Maybe<Scalars['String']['output']>;
  actionType?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
};

export type ModerationActionModerationProfileAggregateInput = {
  AND?: InputMaybe<Array<ModerationActionModerationProfileAggregateInput>>;
  NOT?: InputMaybe<ModerationActionModerationProfileAggregateInput>;
  OR?: InputMaybe<Array<ModerationActionModerationProfileAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationActionModerationProfileNodeAggregationWhereInput>;
};

export type ModerationActionModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type ModerationActionModerationProfileConnectOrCreateFieldInput = {
  onCreate: ModerationActionModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type ModerationActionModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type ModerationActionModerationProfileConnectedRelationship = {
  __typename?: 'ModerationActionModerationProfileConnectedRelationship';
  node: ModerationProfileEventPayload;
};

export type ModerationActionModerationProfileConnection = {
  __typename?: 'ModerationActionModerationProfileConnection';
  edges: Array<ModerationActionModerationProfileRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationActionModerationProfileConnectionSort = {
  node?: InputMaybe<ModerationProfileSort>;
};

export type ModerationActionModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<ModerationActionModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<ModerationActionModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type ModerationActionModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type ModerationActionModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
};

export type ModerationActionModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
};

export type ModerationActionModerationProfileFieldInput = {
  connect?: InputMaybe<ModerationActionModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationActionModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationActionModerationProfileCreateFieldInput>;
};

export type ModerationActionModerationProfileModerationProfileAggregationSelection = {
  __typename?: 'ModerationActionModerationProfileModerationProfileAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationActionModerationProfileModerationProfileNodeAggregateSelection>;
};

export type ModerationActionModerationProfileModerationProfileNodeAggregateSelection = {
  __typename?: 'ModerationActionModerationProfileModerationProfileNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type ModerationActionModerationProfileNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationActionModerationProfileNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationActionModerationProfileNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationActionModerationProfileNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationActionModerationProfileRelationship = {
  __typename?: 'ModerationActionModerationProfileRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type ModerationActionModerationProfileRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModerationProfileSubscriptionWhere>;
};

export type ModerationActionModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type ModerationActionModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<ModerationActionModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationActionModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationActionModerationProfileCreateFieldInput>;
  delete?: InputMaybe<ModerationActionModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<ModerationActionModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<ModerationActionModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
};

export type ModerationActionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ModerationActionSort objects to sort ModerationActions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ModerationActionSort>>;
};

export type ModerationActionRelationInput = {
  Comment?: InputMaybe<ModerationActionCommentCreateFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileCreateFieldInput>;
  User?: InputMaybe<ModerationActionUserCreateFieldInput>;
};

export type ModerationActionRelationshipCreatedEvent = {
  __typename?: 'ModerationActionRelationshipCreatedEvent';
  createdRelationship: ModerationActionConnectedRelationships;
  event: EventType;
  moderationAction: ModerationActionEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ModerationActionRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<ModerationActionRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<ModerationActionRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<ModerationActionRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<ModerationActionRelationshipsSubscriptionWhere>;
  moderationAction?: InputMaybe<ModerationActionSubscriptionWhere>;
};

export type ModerationActionRelationshipDeletedEvent = {
  __typename?: 'ModerationActionRelationshipDeletedEvent';
  deletedRelationship: ModerationActionConnectedRelationships;
  event: EventType;
  moderationAction: ModerationActionEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ModerationActionRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<ModerationActionRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<ModerationActionRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<ModerationActionRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<ModerationActionRelationshipsSubscriptionWhere>;
  moderationAction?: InputMaybe<ModerationActionSubscriptionWhere>;
};

export type ModerationActionRelationshipsSubscriptionWhere = {
  Comment?: InputMaybe<ModerationActionCommentRelationshipSubscriptionWhere>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileRelationshipSubscriptionWhere>;
  User?: InputMaybe<ModerationActionUserRelationshipSubscriptionWhere>;
};

/** Fields to sort ModerationActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one ModerationActionSort object. */
export type ModerationActionSort = {
  actionDescription?: InputMaybe<SortDirection>;
  actionType?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
};

export type ModerationActionSubscriptionWhere = {
  AND?: InputMaybe<Array<ModerationActionSubscriptionWhere>>;
  NOT?: InputMaybe<ModerationActionSubscriptionWhere>;
  OR?: InputMaybe<Array<ModerationActionSubscriptionWhere>>;
  actionDescription?: InputMaybe<Scalars['String']['input']>;
  actionDescription_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  actionDescription_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  actionDescription_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  actionDescription_MATCHES?: InputMaybe<Scalars['String']['input']>;
  actionDescription_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  actionType?: InputMaybe<Scalars['String']['input']>;
  actionType_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  actionType_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  actionType_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  actionType_MATCHES?: InputMaybe<Scalars['String']['input']>;
  actionType_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type ModerationActionUpdateInput = {
  Comment?: InputMaybe<ModerationActionCommentUpdateFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileUpdateFieldInput>;
  User?: InputMaybe<ModerationActionUserUpdateFieldInput>;
  actionDescription?: InputMaybe<Scalars['String']['input']>;
  actionType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ModerationActionUpdatedEvent = {
  __typename?: 'ModerationActionUpdatedEvent';
  event: EventType;
  previousState: ModerationActionEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedModerationAction: ModerationActionEventPayload;
};

export type ModerationActionUserAggregateInput = {
  AND?: InputMaybe<Array<ModerationActionUserAggregateInput>>;
  NOT?: InputMaybe<ModerationActionUserAggregateInput>;
  OR?: InputMaybe<Array<ModerationActionUserAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationActionUserNodeAggregationWhereInput>;
};

export type ModerationActionUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ModerationActionUserConnectOrCreateFieldInput = {
  onCreate: ModerationActionUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ModerationActionUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ModerationActionUserConnectedRelationship = {
  __typename?: 'ModerationActionUserConnectedRelationship';
  node: UserEventPayload;
};

export type ModerationActionUserConnection = {
  __typename?: 'ModerationActionUserConnection';
  edges: Array<ModerationActionUserRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationActionUserConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ModerationActionUserConnectionWhere = {
  AND?: InputMaybe<Array<ModerationActionUserConnectionWhere>>;
  NOT?: InputMaybe<ModerationActionUserConnectionWhere>;
  OR?: InputMaybe<Array<ModerationActionUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ModerationActionUserCreateFieldInput = {
  node: UserCreateInput;
};

export type ModerationActionUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ModerationActionUserConnectionWhere>;
};

export type ModerationActionUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ModerationActionUserConnectionWhere>;
};

export type ModerationActionUserFieldInput = {
  connect?: InputMaybe<ModerationActionUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationActionUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationActionUserCreateFieldInput>;
};

export type ModerationActionUserNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationActionUserNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationActionUserNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationActionUserNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationActionUserRelationship = {
  __typename?: 'ModerationActionUserRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ModerationActionUserRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type ModerationActionUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ModerationActionUserUpdateFieldInput = {
  connect?: InputMaybe<ModerationActionUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationActionUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationActionUserCreateFieldInput>;
  delete?: InputMaybe<ModerationActionUserDeleteFieldInput>;
  disconnect?: InputMaybe<ModerationActionUserDisconnectFieldInput>;
  update?: InputMaybe<ModerationActionUserUpdateConnectionInput>;
  where?: InputMaybe<ModerationActionUserConnectionWhere>;
};

export type ModerationActionUserUserAggregationSelection = {
  __typename?: 'ModerationActionUserUserAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationActionUserUserNodeAggregateSelection>;
};

export type ModerationActionUserUserNodeAggregateSelection = {
  __typename?: 'ModerationActionUserUserNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ModerationActionWhere = {
  AND?: InputMaybe<Array<ModerationActionWhere>>;
  Comment?: InputMaybe<CommentWhere>;
  CommentAggregate?: InputMaybe<ModerationActionCommentAggregateInput>;
  CommentConnection?: InputMaybe<ModerationActionCommentConnectionWhere>;
  CommentConnection_NOT?: InputMaybe<ModerationActionCommentConnectionWhere>;
  Comment_NOT?: InputMaybe<CommentWhere>;
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  ModerationProfileAggregate?: InputMaybe<ModerationActionModerationProfileAggregateInput>;
  ModerationProfileConnection?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
  ModerationProfileConnection_NOT?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
  ModerationProfile_NOT?: InputMaybe<ModerationProfileWhere>;
  NOT?: InputMaybe<ModerationActionWhere>;
  OR?: InputMaybe<Array<ModerationActionWhere>>;
  User?: InputMaybe<UserWhere>;
  UserAggregate?: InputMaybe<ModerationActionUserAggregateInput>;
  UserConnection?: InputMaybe<ModerationActionUserConnectionWhere>;
  UserConnection_NOT?: InputMaybe<ModerationActionUserConnectionWhere>;
  User_NOT?: InputMaybe<UserWhere>;
  actionDescription?: InputMaybe<Scalars['String']['input']>;
  actionDescription_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  actionDescription_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  actionDescription_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  actionDescription_MATCHES?: InputMaybe<Scalars['String']['input']>;
  actionDescription_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  actionType?: InputMaybe<Scalars['String']['input']>;
  actionType_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  actionType_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  actionType_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  actionType_MATCHES?: InputMaybe<Scalars['String']['input']>;
  actionType_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type ModerationActionsConnection = {
  __typename?: 'ModerationActionsConnection';
  edges: Array<ModerationActionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfile = {
  __typename?: 'ModerationProfile';
  ActivityFeed: Array<ModerationAction>;
  ActivityFeedAggregate?: Maybe<ModerationProfileModerationActionActivityFeedAggregationSelection>;
  ActivityFeedConnection: ModerationProfileActivityFeedConnection;
  AuthoredComments: Array<Comment>;
  AuthoredCommentsAggregate?: Maybe<ModerationProfileCommentAuthoredCommentsAggregationSelection>;
  AuthoredCommentsConnection: ModerationProfileAuthoredCommentsConnection;
  AuthoredIssues: Array<Issue>;
  AuthoredIssuesAggregate?: Maybe<ModerationProfileIssueAuthoredIssuesAggregationSelection>;
  AuthoredIssuesConnection: ModerationProfileAuthoredIssuesConnection;
  ModChannelRoles: Array<ModChannelRole>;
  ModChannelRolesAggregate?: Maybe<ModerationProfileModChannelRoleModChannelRolesAggregationSelection>;
  ModChannelRolesConnection: ModerationProfileModChannelRolesConnection;
  ModServerRoles: Array<ModServerRole>;
  ModServerRolesAggregate?: Maybe<ModerationProfileModServerRoleModServerRolesAggregationSelection>;
  ModServerRolesConnection: ModerationProfileModServerRolesConnection;
  Suspensions: Array<Suspension>;
  SuspensionsAggregate?: Maybe<ModerationProfileSuspensionSuspensionsAggregationSelection>;
  SuspensionsConnection: ModerationProfileSuspensionsConnection;
  User?: Maybe<User>;
  UserAggregate?: Maybe<ModerationProfileUserUserAggregationSelection>;
  UserConnection: ModerationProfileUserConnection;
  createdAt: Scalars['DateTime']['output'];
  displayName?: Maybe<Scalars['String']['output']>;
};


export type ModerationProfileActivityFeedArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationActionOptions>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type ModerationProfileActivityFeedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type ModerationProfileActivityFeedConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileActivityFeedConnectionSort>>;
  where?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
};


export type ModerationProfileAuthoredCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type ModerationProfileAuthoredCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type ModerationProfileAuthoredCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectionSort>>;
  where?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
};


export type ModerationProfileAuthoredIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type ModerationProfileAuthoredIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type ModerationProfileAuthoredIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectionSort>>;
  where?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
};


export type ModerationProfileModChannelRolesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ModerationProfileModChannelRolesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ModerationProfileModChannelRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileModChannelRolesConnectionSort>>;
  where?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
};


export type ModerationProfileModServerRolesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ModerationProfileModServerRolesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ModerationProfileModServerRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileModServerRolesConnectionSort>>;
  where?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
};


export type ModerationProfileSuspensionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ModerationProfileSuspensionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ModerationProfileSuspensionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileSuspensionsConnectionSort>>;
  where?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
};


export type ModerationProfileUserArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ModerationProfileUserAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ModerationProfileUserConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileUserConnectionSort>>;
  where?: InputMaybe<ModerationProfileUserConnectionWhere>;
};

export type ModerationProfileActivityFeedAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileActivityFeedAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileActivityFeedAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileActivityFeedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileActivityFeedNodeAggregationWhereInput>;
};

export type ModerationProfileActivityFeedConnectFieldInput = {
  connect?: InputMaybe<Array<ModerationActionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationActionConnectWhere>;
};

export type ModerationProfileActivityFeedConnectedRelationship = {
  __typename?: 'ModerationProfileActivityFeedConnectedRelationship';
  node: ModerationActionEventPayload;
};

export type ModerationProfileActivityFeedConnection = {
  __typename?: 'ModerationProfileActivityFeedConnection';
  edges: Array<ModerationProfileActivityFeedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileActivityFeedConnectionSort = {
  node?: InputMaybe<ModerationActionSort>;
};

export type ModerationProfileActivityFeedConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileActivityFeedConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileActivityFeedConnectionWhere>>;
  node?: InputMaybe<ModerationActionWhere>;
};

export type ModerationProfileActivityFeedCreateFieldInput = {
  node: ModerationActionCreateInput;
};

export type ModerationProfileActivityFeedDeleteFieldInput = {
  delete?: InputMaybe<ModerationActionDeleteInput>;
  where?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
};

export type ModerationProfileActivityFeedDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationActionDisconnectInput>;
  where?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
};

export type ModerationProfileActivityFeedFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileActivityFeedConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileActivityFeedCreateFieldInput>>;
};

export type ModerationProfileActivityFeedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileActivityFeedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileActivityFeedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileActivityFeedNodeAggregationWhereInput>>;
  actionDescription_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ModerationProfileActivityFeedRelationship = {
  __typename?: 'ModerationProfileActivityFeedRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationAction;
};

export type ModerationProfileActivityFeedRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModerationActionSubscriptionWhere>;
};

export type ModerationProfileActivityFeedUpdateConnectionInput = {
  node?: InputMaybe<ModerationActionUpdateInput>;
};

export type ModerationProfileActivityFeedUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileActivityFeedConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileActivityFeedCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileActivityFeedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileActivityFeedDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileActivityFeedUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
};

export type ModerationProfileAggregateSelection = {
  __typename?: 'ModerationProfileAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type ModerationProfileAuthoredCommentsAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredCommentsAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileAuthoredCommentsAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileAuthoredCommentsNodeAggregationWhereInput>;
};

export type ModerationProfileAuthoredCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type ModerationProfileAuthoredCommentsConnectedRelationship = {
  __typename?: 'ModerationProfileAuthoredCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type ModerationProfileAuthoredCommentsConnection = {
  __typename?: 'ModerationProfileAuthoredCommentsConnection';
  edges: Array<ModerationProfileAuthoredCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileAuthoredCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type ModerationProfileAuthoredCommentsConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type ModerationProfileAuthoredCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type ModerationProfileAuthoredCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
};

export type ModerationProfileAuthoredCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
};

export type ModerationProfileAuthoredCommentsFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileAuthoredCommentsCreateFieldInput>>;
};

export type ModerationProfileAuthoredCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileAuthoredCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type ModerationProfileAuthoredCommentsRelationship = {
  __typename?: 'ModerationProfileAuthoredCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type ModerationProfileAuthoredCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type ModerationProfileAuthoredCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type ModerationProfileAuthoredCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileAuthoredCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileAuthoredCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileAuthoredCommentsDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileAuthoredCommentsUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
};

export type ModerationProfileAuthoredIssuesAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredIssuesAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileAuthoredIssuesAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileAuthoredIssuesNodeAggregationWhereInput>;
};

export type ModerationProfileAuthoredIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type ModerationProfileAuthoredIssuesConnectedRelationship = {
  __typename?: 'ModerationProfileAuthoredIssuesConnectedRelationship';
  node: IssueEventPayload;
};

export type ModerationProfileAuthoredIssuesConnection = {
  __typename?: 'ModerationProfileAuthoredIssuesConnection';
  edges: Array<ModerationProfileAuthoredIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileAuthoredIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type ModerationProfileAuthoredIssuesConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type ModerationProfileAuthoredIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type ModerationProfileAuthoredIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
};

export type ModerationProfileAuthoredIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
};

export type ModerationProfileAuthoredIssuesFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileAuthoredIssuesCreateFieldInput>>;
};

export type ModerationProfileAuthoredIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileAuthoredIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ModerationProfileAuthoredIssuesRelationship = {
  __typename?: 'ModerationProfileAuthoredIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type ModerationProfileAuthoredIssuesRelationshipSubscriptionWhere = {
  node?: InputMaybe<IssueSubscriptionWhere>;
};

export type ModerationProfileAuthoredIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type ModerationProfileAuthoredIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileAuthoredIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileAuthoredIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileAuthoredIssuesDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileAuthoredIssuesUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
};

export type ModerationProfileCommentAuthoredCommentsAggregationSelection = {
  __typename?: 'ModerationProfileCommentAuthoredCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileCommentAuthoredCommentsNodeAggregateSelection>;
};

export type ModerationProfileCommentAuthoredCommentsNodeAggregateSelection = {
  __typename?: 'ModerationProfileCommentAuthoredCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type ModerationProfileConnectInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedConnectFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesConnectFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesConnectFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsConnectFieldInput>>;
  User?: InputMaybe<ModerationProfileUserConnectFieldInput>;
};

export type ModerationProfileConnectOrCreateInput = {
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesConnectOrCreateFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesConnectOrCreateFieldInput>>;
  User?: InputMaybe<ModerationProfileUserConnectOrCreateFieldInput>;
};

export type ModerationProfileConnectOrCreateWhere = {
  node: ModerationProfileUniqueWhere;
};

export type ModerationProfileConnectWhere = {
  node: ModerationProfileWhere;
};

export type ModerationProfileConnectedRelationships = {
  __typename?: 'ModerationProfileConnectedRelationships';
  ActivityFeed?: Maybe<ModerationProfileActivityFeedConnectedRelationship>;
  AuthoredComments?: Maybe<ModerationProfileAuthoredCommentsConnectedRelationship>;
  AuthoredIssues?: Maybe<ModerationProfileAuthoredIssuesConnectedRelationship>;
  ModChannelRoles?: Maybe<ModerationProfileModChannelRolesConnectedRelationship>;
  ModServerRoles?: Maybe<ModerationProfileModServerRolesConnectedRelationship>;
  Suspensions?: Maybe<ModerationProfileSuspensionsConnectedRelationship>;
  User?: Maybe<ModerationProfileUserConnectedRelationship>;
};

export type ModerationProfileCreateInput = {
  ActivityFeed?: InputMaybe<ModerationProfileActivityFeedFieldInput>;
  AuthoredComments?: InputMaybe<ModerationProfileAuthoredCommentsFieldInput>;
  AuthoredIssues?: InputMaybe<ModerationProfileAuthoredIssuesFieldInput>;
  ModChannelRoles?: InputMaybe<ModerationProfileModChannelRolesFieldInput>;
  ModServerRoles?: InputMaybe<ModerationProfileModServerRolesFieldInput>;
  Suspensions?: InputMaybe<ModerationProfileSuspensionsFieldInput>;
  User?: InputMaybe<ModerationProfileUserFieldInput>;
  displayName?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfileCreatedEvent = {
  __typename?: 'ModerationProfileCreatedEvent';
  createdModerationProfile: ModerationProfileEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ModerationProfileDeleteInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedDeleteFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsDeleteFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesDeleteFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesDeleteFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesDeleteFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsDeleteFieldInput>>;
  User?: InputMaybe<ModerationProfileUserDeleteFieldInput>;
};

export type ModerationProfileDeletedEvent = {
  __typename?: 'ModerationProfileDeletedEvent';
  deletedModerationProfile: ModerationProfileEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ModerationProfileDisconnectInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedDisconnectFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsDisconnectFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesDisconnectFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesDisconnectFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesDisconnectFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsDisconnectFieldInput>>;
  User?: InputMaybe<ModerationProfileUserDisconnectFieldInput>;
};

export type ModerationProfileEdge = {
  __typename?: 'ModerationProfileEdge';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type ModerationProfileEventPayload = {
  __typename?: 'ModerationProfileEventPayload';
  createdAt: Scalars['DateTime']['output'];
  displayName?: Maybe<Scalars['String']['output']>;
};

export type ModerationProfileIssueAuthoredIssuesAggregationSelection = {
  __typename?: 'ModerationProfileIssueAuthoredIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileIssueAuthoredIssuesNodeAggregateSelection>;
};

export type ModerationProfileIssueAuthoredIssuesNodeAggregateSelection = {
  __typename?: 'ModerationProfileIssueAuthoredIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type ModerationProfileModChannelRoleModChannelRolesAggregationSelection = {
  __typename?: 'ModerationProfileModChannelRoleModChannelRolesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileModChannelRoleModChannelRolesNodeAggregateSelection>;
};

export type ModerationProfileModChannelRoleModChannelRolesNodeAggregateSelection = {
  __typename?: 'ModerationProfileModChannelRoleModChannelRolesNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ModerationProfileModChannelRolesAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileModChannelRolesAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileModChannelRolesAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileModChannelRolesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileModChannelRolesNodeAggregationWhereInput>;
};

export type ModerationProfileModChannelRolesConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModChannelRoleConnectWhere>;
};

export type ModerationProfileModChannelRolesConnectOrCreateFieldInput = {
  onCreate: ModerationProfileModChannelRolesConnectOrCreateFieldInputOnCreate;
  where: ModChannelRoleConnectOrCreateWhere;
};

export type ModerationProfileModChannelRolesConnectOrCreateFieldInputOnCreate = {
  node: ModChannelRoleOnCreateInput;
};

export type ModerationProfileModChannelRolesConnectedRelationship = {
  __typename?: 'ModerationProfileModChannelRolesConnectedRelationship';
  node: ModChannelRoleEventPayload;
};

export type ModerationProfileModChannelRolesConnection = {
  __typename?: 'ModerationProfileModChannelRolesConnection';
  edges: Array<ModerationProfileModChannelRolesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileModChannelRolesConnectionSort = {
  node?: InputMaybe<ModChannelRoleSort>;
};

export type ModerationProfileModChannelRolesConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileModChannelRolesConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileModChannelRolesConnectionWhere>>;
  node?: InputMaybe<ModChannelRoleWhere>;
};

export type ModerationProfileModChannelRolesCreateFieldInput = {
  node: ModChannelRoleCreateInput;
};

export type ModerationProfileModChannelRolesDeleteFieldInput = {
  where?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
};

export type ModerationProfileModChannelRolesDisconnectFieldInput = {
  where?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
};

export type ModerationProfileModChannelRolesFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileModChannelRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ModerationProfileModChannelRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileModChannelRolesCreateFieldInput>>;
};

export type ModerationProfileModChannelRolesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileModChannelRolesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileModChannelRolesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileModChannelRolesNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationProfileModChannelRolesRelationship = {
  __typename?: 'ModerationProfileModChannelRolesRelationship';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ModerationProfileModChannelRolesRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModChannelRoleSubscriptionWhere>;
};

export type ModerationProfileModChannelRolesUpdateConnectionInput = {
  node?: InputMaybe<ModChannelRoleUpdateInput>;
};

export type ModerationProfileModChannelRolesUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileModChannelRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ModerationProfileModChannelRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileModChannelRolesCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileModChannelRolesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileModChannelRolesDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileModChannelRolesUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
};

export type ModerationProfileModServerRoleModServerRolesAggregationSelection = {
  __typename?: 'ModerationProfileModServerRoleModServerRolesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileModServerRoleModServerRolesNodeAggregateSelection>;
};

export type ModerationProfileModServerRoleModServerRolesNodeAggregateSelection = {
  __typename?: 'ModerationProfileModServerRoleModServerRolesNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ModerationProfileModServerRolesAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileModServerRolesAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileModServerRolesAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileModServerRolesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileModServerRolesNodeAggregationWhereInput>;
};

export type ModerationProfileModServerRolesConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModServerRoleConnectWhere>;
};

export type ModerationProfileModServerRolesConnectOrCreateFieldInput = {
  onCreate: ModerationProfileModServerRolesConnectOrCreateFieldInputOnCreate;
  where: ModServerRoleConnectOrCreateWhere;
};

export type ModerationProfileModServerRolesConnectOrCreateFieldInputOnCreate = {
  node: ModServerRoleOnCreateInput;
};

export type ModerationProfileModServerRolesConnectedRelationship = {
  __typename?: 'ModerationProfileModServerRolesConnectedRelationship';
  node: ModServerRoleEventPayload;
};

export type ModerationProfileModServerRolesConnection = {
  __typename?: 'ModerationProfileModServerRolesConnection';
  edges: Array<ModerationProfileModServerRolesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileModServerRolesConnectionSort = {
  node?: InputMaybe<ModServerRoleSort>;
};

export type ModerationProfileModServerRolesConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileModServerRolesConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileModServerRolesConnectionWhere>>;
  node?: InputMaybe<ModServerRoleWhere>;
};

export type ModerationProfileModServerRolesCreateFieldInput = {
  node: ModServerRoleCreateInput;
};

export type ModerationProfileModServerRolesDeleteFieldInput = {
  where?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
};

export type ModerationProfileModServerRolesDisconnectFieldInput = {
  where?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
};

export type ModerationProfileModServerRolesFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileModServerRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ModerationProfileModServerRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileModServerRolesCreateFieldInput>>;
};

export type ModerationProfileModServerRolesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileModServerRolesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileModServerRolesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileModServerRolesNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationProfileModServerRolesRelationship = {
  __typename?: 'ModerationProfileModServerRolesRelationship';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ModerationProfileModServerRolesRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModServerRoleSubscriptionWhere>;
};

export type ModerationProfileModServerRolesUpdateConnectionInput = {
  node?: InputMaybe<ModServerRoleUpdateInput>;
};

export type ModerationProfileModServerRolesUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileModServerRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ModerationProfileModServerRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileModServerRolesCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileModServerRolesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileModServerRolesDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileModServerRolesUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
};

export type ModerationProfileModerationActionActivityFeedAggregationSelection = {
  __typename?: 'ModerationProfileModerationActionActivityFeedAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileModerationActionActivityFeedNodeAggregateSelection>;
};

export type ModerationProfileModerationActionActivityFeedNodeAggregateSelection = {
  __typename?: 'ModerationProfileModerationActionActivityFeedNodeAggregateSelection';
  actionDescription: StringAggregateSelection;
  actionType: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
};

export type ModerationProfileOnCreateInput = {
  displayName?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfileOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ModerationProfileSort objects to sort ModerationProfiles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ModerationProfileSort>>;
};

export type ModerationProfileRelationInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedCreateFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsCreateFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesCreateFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesCreateFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesCreateFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsCreateFieldInput>>;
  User?: InputMaybe<ModerationProfileUserCreateFieldInput>;
};

export type ModerationProfileRelationshipCreatedEvent = {
  __typename?: 'ModerationProfileRelationshipCreatedEvent';
  createdRelationship: ModerationProfileConnectedRelationships;
  event: EventType;
  moderationProfile: ModerationProfileEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ModerationProfileRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<ModerationProfileRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<ModerationProfileRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<ModerationProfileRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<ModerationProfileRelationshipsSubscriptionWhere>;
  moderationProfile?: InputMaybe<ModerationProfileSubscriptionWhere>;
};

export type ModerationProfileRelationshipDeletedEvent = {
  __typename?: 'ModerationProfileRelationshipDeletedEvent';
  deletedRelationship: ModerationProfileConnectedRelationships;
  event: EventType;
  moderationProfile: ModerationProfileEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type ModerationProfileRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<ModerationProfileRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<ModerationProfileRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<ModerationProfileRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<ModerationProfileRelationshipsSubscriptionWhere>;
  moderationProfile?: InputMaybe<ModerationProfileSubscriptionWhere>;
};

export type ModerationProfileRelationshipsSubscriptionWhere = {
  ActivityFeed?: InputMaybe<ModerationProfileActivityFeedRelationshipSubscriptionWhere>;
  AuthoredComments?: InputMaybe<ModerationProfileAuthoredCommentsRelationshipSubscriptionWhere>;
  AuthoredIssues?: InputMaybe<ModerationProfileAuthoredIssuesRelationshipSubscriptionWhere>;
  ModChannelRoles?: InputMaybe<ModerationProfileModChannelRolesRelationshipSubscriptionWhere>;
  ModServerRoles?: InputMaybe<ModerationProfileModServerRolesRelationshipSubscriptionWhere>;
  Suspensions?: InputMaybe<ModerationProfileSuspensionsRelationshipSubscriptionWhere>;
  User?: InputMaybe<ModerationProfileUserRelationshipSubscriptionWhere>;
};

/** Fields to sort ModerationProfiles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ModerationProfileSort object. */
export type ModerationProfileSort = {
  createdAt?: InputMaybe<SortDirection>;
  displayName?: InputMaybe<SortDirection>;
};

export type ModerationProfileSubscriptionWhere = {
  AND?: InputMaybe<Array<ModerationProfileSubscriptionWhere>>;
  NOT?: InputMaybe<ModerationProfileSubscriptionWhere>;
  OR?: InputMaybe<Array<ModerationProfileSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfileSuspensionSuspensionsAggregationSelection = {
  __typename?: 'ModerationProfileSuspensionSuspensionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileSuspensionSuspensionsNodeAggregateSelection>;
};

export type ModerationProfileSuspensionSuspensionsNodeAggregateSelection = {
  __typename?: 'ModerationProfileSuspensionSuspensionsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type ModerationProfileSuspensionsAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileSuspensionsAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileSuspensionsAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileSuspensionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileSuspensionsNodeAggregationWhereInput>;
};

export type ModerationProfileSuspensionsConnectFieldInput = {
  connect?: InputMaybe<Array<SuspensionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<SuspensionConnectWhere>;
};

export type ModerationProfileSuspensionsConnectedRelationship = {
  __typename?: 'ModerationProfileSuspensionsConnectedRelationship';
  node: SuspensionEventPayload;
};

export type ModerationProfileSuspensionsConnection = {
  __typename?: 'ModerationProfileSuspensionsConnection';
  edges: Array<ModerationProfileSuspensionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileSuspensionsConnectionSort = {
  node?: InputMaybe<SuspensionSort>;
};

export type ModerationProfileSuspensionsConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileSuspensionsConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileSuspensionsConnectionWhere>>;
  node?: InputMaybe<SuspensionWhere>;
};

export type ModerationProfileSuspensionsCreateFieldInput = {
  node: SuspensionCreateInput;
};

export type ModerationProfileSuspensionsDeleteFieldInput = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
};

export type ModerationProfileSuspensionsDisconnectFieldInput = {
  disconnect?: InputMaybe<SuspensionDisconnectInput>;
  where?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
};

export type ModerationProfileSuspensionsFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileSuspensionsConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileSuspensionsCreateFieldInput>>;
};

export type ModerationProfileSuspensionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileSuspensionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileSuspensionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileSuspensionsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  suspendedUntil_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationProfileSuspensionsRelationship = {
  __typename?: 'ModerationProfileSuspensionsRelationship';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type ModerationProfileSuspensionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<SuspensionSubscriptionWhere>;
};

export type ModerationProfileSuspensionsUpdateConnectionInput = {
  node?: InputMaybe<SuspensionUpdateInput>;
};

export type ModerationProfileSuspensionsUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileSuspensionsConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileSuspensionsCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileSuspensionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileSuspensionsDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileSuspensionsUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
};

export type ModerationProfileUniqueWhere = {
  displayName?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfileUpdateInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedUpdateFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsUpdateFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesUpdateFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesUpdateFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesUpdateFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsUpdateFieldInput>>;
  User?: InputMaybe<ModerationProfileUserUpdateFieldInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfileUpdatedEvent = {
  __typename?: 'ModerationProfileUpdatedEvent';
  event: EventType;
  previousState: ModerationProfileEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedModerationProfile: ModerationProfileEventPayload;
};

export type ModerationProfileUserAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileUserAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileUserAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileUserAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileUserNodeAggregationWhereInput>;
};

export type ModerationProfileUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ModerationProfileUserConnectOrCreateFieldInput = {
  onCreate: ModerationProfileUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ModerationProfileUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ModerationProfileUserConnectedRelationship = {
  __typename?: 'ModerationProfileUserConnectedRelationship';
  node: UserEventPayload;
};

export type ModerationProfileUserConnection = {
  __typename?: 'ModerationProfileUserConnection';
  edges: Array<ModerationProfileUserRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileUserConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ModerationProfileUserConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileUserConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileUserConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ModerationProfileUserCreateFieldInput = {
  node: UserCreateInput;
};

export type ModerationProfileUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ModerationProfileUserConnectionWhere>;
};

export type ModerationProfileUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ModerationProfileUserConnectionWhere>;
};

export type ModerationProfileUserFieldInput = {
  connect?: InputMaybe<ModerationProfileUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationProfileUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationProfileUserCreateFieldInput>;
};

export type ModerationProfileUserNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileUserNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileUserNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileUserNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationProfileUserRelationship = {
  __typename?: 'ModerationProfileUserRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ModerationProfileUserRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type ModerationProfileUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ModerationProfileUserUpdateFieldInput = {
  connect?: InputMaybe<ModerationProfileUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationProfileUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationProfileUserCreateFieldInput>;
  delete?: InputMaybe<ModerationProfileUserDeleteFieldInput>;
  disconnect?: InputMaybe<ModerationProfileUserDisconnectFieldInput>;
  update?: InputMaybe<ModerationProfileUserUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileUserConnectionWhere>;
};

export type ModerationProfileUserUserAggregationSelection = {
  __typename?: 'ModerationProfileUserUserAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileUserUserNodeAggregateSelection>;
};

export type ModerationProfileUserUserNodeAggregateSelection = {
  __typename?: 'ModerationProfileUserUserNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ModerationProfileWhere = {
  AND?: InputMaybe<Array<ModerationProfileWhere>>;
  ActivityFeedAggregate?: InputMaybe<ModerationProfileActivityFeedAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileActivityFeedConnections match this filter */
  ActivityFeedConnection_ALL?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileActivityFeedConnections match this filter */
  ActivityFeedConnection_NONE?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileActivityFeedConnections match this filter */
  ActivityFeedConnection_SINGLE?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileActivityFeedConnections match this filter */
  ActivityFeedConnection_SOME?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  /** Return ModerationProfiles where all of the related ModerationActions match this filter */
  ActivityFeed_ALL?: InputMaybe<ModerationActionWhere>;
  /** Return ModerationProfiles where none of the related ModerationActions match this filter */
  ActivityFeed_NONE?: InputMaybe<ModerationActionWhere>;
  /** Return ModerationProfiles where one of the related ModerationActions match this filter */
  ActivityFeed_SINGLE?: InputMaybe<ModerationActionWhere>;
  /** Return ModerationProfiles where some of the related ModerationActions match this filter */
  ActivityFeed_SOME?: InputMaybe<ModerationActionWhere>;
  AuthoredCommentsAggregate?: InputMaybe<ModerationProfileAuthoredCommentsAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileAuthoredCommentsConnections match this filter */
  AuthoredCommentsConnection_ALL?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileAuthoredCommentsConnections match this filter */
  AuthoredCommentsConnection_NONE?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileAuthoredCommentsConnections match this filter */
  AuthoredCommentsConnection_SINGLE?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileAuthoredCommentsConnections match this filter */
  AuthoredCommentsConnection_SOME?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  /** Return ModerationProfiles where all of the related Comments match this filter */
  AuthoredComments_ALL?: InputMaybe<CommentWhere>;
  /** Return ModerationProfiles where none of the related Comments match this filter */
  AuthoredComments_NONE?: InputMaybe<CommentWhere>;
  /** Return ModerationProfiles where one of the related Comments match this filter */
  AuthoredComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return ModerationProfiles where some of the related Comments match this filter */
  AuthoredComments_SOME?: InputMaybe<CommentWhere>;
  AuthoredIssuesAggregate?: InputMaybe<ModerationProfileAuthoredIssuesAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileAuthoredIssuesConnections match this filter */
  AuthoredIssuesConnection_ALL?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileAuthoredIssuesConnections match this filter */
  AuthoredIssuesConnection_NONE?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileAuthoredIssuesConnections match this filter */
  AuthoredIssuesConnection_SINGLE?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileAuthoredIssuesConnections match this filter */
  AuthoredIssuesConnection_SOME?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  /** Return ModerationProfiles where all of the related Issues match this filter */
  AuthoredIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return ModerationProfiles where none of the related Issues match this filter */
  AuthoredIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return ModerationProfiles where one of the related Issues match this filter */
  AuthoredIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return ModerationProfiles where some of the related Issues match this filter */
  AuthoredIssues_SOME?: InputMaybe<IssueWhere>;
  ModChannelRolesAggregate?: InputMaybe<ModerationProfileModChannelRolesAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileModChannelRolesConnections match this filter */
  ModChannelRolesConnection_ALL?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileModChannelRolesConnections match this filter */
  ModChannelRolesConnection_NONE?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileModChannelRolesConnections match this filter */
  ModChannelRolesConnection_SINGLE?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileModChannelRolesConnections match this filter */
  ModChannelRolesConnection_SOME?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  /** Return ModerationProfiles where all of the related ModChannelRoles match this filter */
  ModChannelRoles_ALL?: InputMaybe<ModChannelRoleWhere>;
  /** Return ModerationProfiles where none of the related ModChannelRoles match this filter */
  ModChannelRoles_NONE?: InputMaybe<ModChannelRoleWhere>;
  /** Return ModerationProfiles where one of the related ModChannelRoles match this filter */
  ModChannelRoles_SINGLE?: InputMaybe<ModChannelRoleWhere>;
  /** Return ModerationProfiles where some of the related ModChannelRoles match this filter */
  ModChannelRoles_SOME?: InputMaybe<ModChannelRoleWhere>;
  ModServerRolesAggregate?: InputMaybe<ModerationProfileModServerRolesAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileModServerRolesConnections match this filter */
  ModServerRolesConnection_ALL?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileModServerRolesConnections match this filter */
  ModServerRolesConnection_NONE?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileModServerRolesConnections match this filter */
  ModServerRolesConnection_SINGLE?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileModServerRolesConnections match this filter */
  ModServerRolesConnection_SOME?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  /** Return ModerationProfiles where all of the related ModServerRoles match this filter */
  ModServerRoles_ALL?: InputMaybe<ModServerRoleWhere>;
  /** Return ModerationProfiles where none of the related ModServerRoles match this filter */
  ModServerRoles_NONE?: InputMaybe<ModServerRoleWhere>;
  /** Return ModerationProfiles where one of the related ModServerRoles match this filter */
  ModServerRoles_SINGLE?: InputMaybe<ModServerRoleWhere>;
  /** Return ModerationProfiles where some of the related ModServerRoles match this filter */
  ModServerRoles_SOME?: InputMaybe<ModServerRoleWhere>;
  NOT?: InputMaybe<ModerationProfileWhere>;
  OR?: InputMaybe<Array<ModerationProfileWhere>>;
  SuspensionsAggregate?: InputMaybe<ModerationProfileSuspensionsAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileSuspensionsConnections match this filter */
  SuspensionsConnection_ALL?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileSuspensionsConnections match this filter */
  SuspensionsConnection_NONE?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileSuspensionsConnections match this filter */
  SuspensionsConnection_SINGLE?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileSuspensionsConnections match this filter */
  SuspensionsConnection_SOME?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  /** Return ModerationProfiles where all of the related Suspensions match this filter */
  Suspensions_ALL?: InputMaybe<SuspensionWhere>;
  /** Return ModerationProfiles where none of the related Suspensions match this filter */
  Suspensions_NONE?: InputMaybe<SuspensionWhere>;
  /** Return ModerationProfiles where one of the related Suspensions match this filter */
  Suspensions_SINGLE?: InputMaybe<SuspensionWhere>;
  /** Return ModerationProfiles where some of the related Suspensions match this filter */
  Suspensions_SOME?: InputMaybe<SuspensionWhere>;
  User?: InputMaybe<UserWhere>;
  UserAggregate?: InputMaybe<ModerationProfileUserAggregateInput>;
  UserConnection?: InputMaybe<ModerationProfileUserConnectionWhere>;
  UserConnection_NOT?: InputMaybe<ModerationProfileUserConnectionWhere>;
  User_NOT?: InputMaybe<UserWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfilesConnection = {
  __typename?: 'ModerationProfilesConnection';
  edges: Array<ModerationProfileEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Mutation = {
  __typename?: 'Mutation';
  acceptForumModInvite?: Maybe<Scalars['Boolean']['output']>;
  acceptForumOwnerInvite?: Maybe<Scalars['Boolean']['output']>;
  addEmojiToComment?: Maybe<Comment>;
  addEmojiToDiscussionChannel?: Maybe<DiscussionChannel>;
  archiveComment?: Maybe<Issue>;
  archiveDiscussion?: Maybe<Issue>;
  archiveEvent?: Maybe<Issue>;
  becomeForumAdmin?: Maybe<Scalars['Boolean']['output']>;
  cancelInviteForumMod?: Maybe<Scalars['Boolean']['output']>;
  cancelInviteForumOwner?: Maybe<Scalars['Boolean']['output']>;
  createActivities: CreateActivitiesMutationResponse;
  createAlbums: CreateAlbumsMutationResponse;
  createChannelInfos: CreateChannelInfosMutationResponse;
  createChannelRoles: CreateChannelRolesMutationResponse;
  createChannels: CreateChannelsMutationResponse;
  createCollections: CreateCollectionsMutationResponse;
  createCommentInfos: CreateCommentInfosMutationResponse;
  createCommentRepliesFormats: CreateCommentRepliesFormatsMutationResponse;
  createCommentSectionFormats: CreateCommentSectionFormatsMutationResponse;
  createComments: CreateCommentsMutationResponse;
  createContacts: CreateContactsMutationResponse;
  createDayData: CreateDayDataMutationResponse;
  createDiscussionChannelInfos: CreateDiscussionChannelInfosMutationResponse;
  createDiscussionChannelListFormats: CreateDiscussionChannelListFormatsMutationResponse;
  createDiscussionChannels: CreateDiscussionChannelsMutationResponse;
  createDiscussionInfos: CreateDiscussionInfosMutationResponse;
  createDiscussionWithChannelConnections: Array<Discussion>;
  createDiscussions: CreateDiscussionsMutationResponse;
  createDownloadableFiles: CreateDownloadableFilesMutationResponse;
  createDropDataResponses: CreateDropDataResponsesMutationResponse;
  createEmailAndUser?: Maybe<User>;
  createEmails: CreateEmailsMutationResponse;
  createEmojis: CreateEmojisMutationResponse;
  createEnvironmentInfos: CreateEnvironmentInfosMutationResponse;
  createEventChannelInfos: CreateEventChannelInfosMutationResponse;
  createEventChannels: CreateEventChannelsMutationResponse;
  createEventCommentsFormats: CreateEventCommentsFormatsMutationResponse;
  createEventInfos: CreateEventInfosMutationResponse;
  createEventWithChannelConnections: Array<Event>;
  createEvents: CreateEventsMutationResponse;
  createFeeds: CreateFeedsMutationResponse;
  createFileVersions: CreateFileVersionsMutationResponse;
  createFilterGroups: CreateFilterGroupsMutationResponse;
  createFilterOptions: CreateFilterOptionsMutationResponse;
  createGetSortedChannelsResponses: CreateGetSortedChannelsResponsesMutationResponse;
  createImages: CreateImagesMutationResponse;
  createIssues: CreateIssuesMutationResponse;
  createLicenses: CreateLicensesMutationResponse;
  createLinkFlairs: CreateLinkFlairsMutationResponse;
  createMessages: CreateMessagesMutationResponse;
  createModChannelRoles: CreateModChannelRolesMutationResponse;
  createModServerRoles: CreateModServerRolesMutationResponse;
  createModerationActions: CreateModerationActionsMutationResponse;
  createModerationProfiles: CreateModerationProfilesMutationResponse;
  createNotifications: CreateNotificationsMutationResponse;
  createPluginRuns: CreatePluginRunsMutationResponse;
  createPluginVersions: CreatePluginVersionsMutationResponse;
  createPlugins: CreatePluginsMutationResponse;
  createPurchases: CreatePurchasesMutationResponse;
  createRecurringEvents: CreateRecurringEventsMutationResponse;
  createRepeatEnds: CreateRepeatEndsMutationResponse;
  createRepeatEveries: CreateRepeatEveriesMutationResponse;
  createSafetyCheckResponses: CreateSafetyCheckResponsesMutationResponse;
  createSeedDataResponses: CreateSeedDataResponsesMutationResponse;
  createServerConfigs: CreateServerConfigsMutationResponse;
  createServerRoles: CreateServerRolesMutationResponse;
  createServerSecrets: CreateServerSecretsMutationResponse;
  createSignedStorageURL?: Maybe<SignedUrl>;
  createSignedUrls: CreateSignedUrlsMutationResponse;
  createSiteWideDiscussionListFormats: CreateSiteWideDiscussionListFormatsMutationResponse;
  createSuspensions: CreateSuspensionsMutationResponse;
  createTags: CreateTagsMutationResponse;
  createTextVersions: CreateTextVersionsMutationResponse;
  createUsers: CreateUsersMutationResponse;
  createWikiPages: CreateWikiPagesMutationResponse;
  deleteActivities: DeleteInfo;
  deleteAlbums: DeleteInfo;
  deleteChannelInfos: DeleteInfo;
  deleteChannelRoles: DeleteInfo;
  deleteChannels: DeleteInfo;
  deleteCollections: DeleteInfo;
  deleteCommentInfos: DeleteInfo;
  deleteCommentRepliesFormats: DeleteInfo;
  deleteCommentSectionFormats: DeleteInfo;
  deleteComments: DeleteInfo;
  deleteContacts: DeleteInfo;
  deleteDayData: DeleteInfo;
  deleteDiscussionChannelInfos: DeleteInfo;
  deleteDiscussionChannelListFormats: DeleteInfo;
  deleteDiscussionChannels: DeleteInfo;
  deleteDiscussionInfos: DeleteInfo;
  deleteDiscussions: DeleteInfo;
  deleteDownloadableFiles: DeleteInfo;
  deleteDropDataResponses: DeleteInfo;
  deleteEmails: DeleteInfo;
  deleteEmojis: DeleteInfo;
  deleteEnvironmentInfos: DeleteInfo;
  deleteEventChannelInfos: DeleteInfo;
  deleteEventChannels: DeleteInfo;
  deleteEventCommentsFormats: DeleteInfo;
  deleteEventInfos: DeleteInfo;
  deleteEvents: DeleteInfo;
  deleteFeeds: DeleteInfo;
  deleteFileVersions: DeleteInfo;
  deleteFilterGroups: DeleteInfo;
  deleteFilterOptions: DeleteInfo;
  deleteGetSortedChannelsResponses: DeleteInfo;
  deleteImages: DeleteInfo;
  deleteIssues: DeleteInfo;
  deleteLicenses: DeleteInfo;
  deleteLinkFlairs: DeleteInfo;
  deleteMessages: DeleteInfo;
  deleteModChannelRoles: DeleteInfo;
  deleteModServerRoles: DeleteInfo;
  deleteModerationActions: DeleteInfo;
  deleteModerationProfiles: DeleteInfo;
  deleteNotifications: DeleteInfo;
  deletePluginRuns: DeleteInfo;
  deletePluginVersions: DeleteInfo;
  deletePlugins: DeleteInfo;
  deletePurchases: DeleteInfo;
  deleteRecurringEvents: DeleteInfo;
  deleteRepeatEnds: DeleteInfo;
  deleteRepeatEveries: DeleteInfo;
  deleteSafetyCheckResponses: DeleteInfo;
  deleteSeedDataResponses: DeleteInfo;
  deleteServerConfigs: DeleteInfo;
  deleteServerRoles: DeleteInfo;
  deleteServerSecrets: DeleteInfo;
  deleteSignedUrls: DeleteInfo;
  deleteSiteWideDiscussionListFormats: DeleteInfo;
  deleteSuspensions: DeleteInfo;
  deleteTags: DeleteInfo;
  deleteTextVersions: DeleteInfo;
  deleteUsers: DeleteInfo;
  deleteWikiPages: DeleteInfo;
  dropDataForCypressTests?: Maybe<DropDataResponse>;
  inviteForumMod?: Maybe<Scalars['Boolean']['output']>;
  inviteForumOwner?: Maybe<Scalars['Boolean']['output']>;
  refreshPlugins: Array<Plugin>;
  removeEmojiFromComment?: Maybe<Comment>;
  removeEmojiFromDiscussionChannel?: Maybe<DiscussionChannel>;
  removeForumMod?: Maybe<Scalars['Boolean']['output']>;
  removeForumOwner?: Maybe<Scalars['Boolean']['output']>;
  reportComment?: Maybe<Issue>;
  reportDiscussion?: Maybe<Issue>;
  reportEvent?: Maybe<Issue>;
  seedDataForCypressTests?: Maybe<SeedDataResponse>;
  sendBugReport?: Maybe<Scalars['Boolean']['output']>;
  subscribeToComment?: Maybe<Comment>;
  subscribeToDiscussionChannel?: Maybe<DiscussionChannel>;
  subscribeToEvent?: Maybe<Event>;
  subscribeToIssue?: Maybe<Issue>;
  suspendMod?: Maybe<Issue>;
  suspendUser?: Maybe<Issue>;
  unarchiveComment?: Maybe<Issue>;
  unarchiveDiscussion?: Maybe<Issue>;
  unarchiveEvent?: Maybe<Issue>;
  undoUpvoteComment?: Maybe<Comment>;
  undoUpvoteDiscussionChannel?: Maybe<DiscussionChannel>;
  unsubscribeFromComment?: Maybe<Comment>;
  unsubscribeFromDiscussionChannel?: Maybe<DiscussionChannel>;
  unsubscribeFromEvent?: Maybe<Event>;
  unsubscribeFromIssue?: Maybe<Issue>;
  unsuspendMod?: Maybe<Issue>;
  unsuspendUser?: Maybe<Issue>;
  updateActivities: UpdateActivitiesMutationResponse;
  updateAlbums: UpdateAlbumsMutationResponse;
  updateChannelInfos: UpdateChannelInfosMutationResponse;
  updateChannelRoles: UpdateChannelRolesMutationResponse;
  updateChannels: UpdateChannelsMutationResponse;
  updateCollections: UpdateCollectionsMutationResponse;
  updateCommentInfos: UpdateCommentInfosMutationResponse;
  updateCommentRepliesFormats: UpdateCommentRepliesFormatsMutationResponse;
  updateCommentSectionFormats: UpdateCommentSectionFormatsMutationResponse;
  updateComments: UpdateCommentsMutationResponse;
  updateContacts: UpdateContactsMutationResponse;
  updateDayData: UpdateDayDataMutationResponse;
  updateDiscussionChannelInfos: UpdateDiscussionChannelInfosMutationResponse;
  updateDiscussionChannelListFormats: UpdateDiscussionChannelListFormatsMutationResponse;
  updateDiscussionChannels: UpdateDiscussionChannelsMutationResponse;
  updateDiscussionInfos: UpdateDiscussionInfosMutationResponse;
  updateDiscussionWithChannelConnections?: Maybe<Discussion>;
  updateDiscussions: UpdateDiscussionsMutationResponse;
  updateDownloadableFiles: UpdateDownloadableFilesMutationResponse;
  updateDropDataResponses: UpdateDropDataResponsesMutationResponse;
  updateEmails: UpdateEmailsMutationResponse;
  updateEmojis: UpdateEmojisMutationResponse;
  updateEnvironmentInfos: UpdateEnvironmentInfosMutationResponse;
  updateEventChannelInfos: UpdateEventChannelInfosMutationResponse;
  updateEventChannels: UpdateEventChannelsMutationResponse;
  updateEventCommentsFormats: UpdateEventCommentsFormatsMutationResponse;
  updateEventInfos: UpdateEventInfosMutationResponse;
  updateEventWithChannelConnections?: Maybe<Event>;
  updateEvents: UpdateEventsMutationResponse;
  updateFeeds: UpdateFeedsMutationResponse;
  updateFileVersions: UpdateFileVersionsMutationResponse;
  updateFilterGroups: UpdateFilterGroupsMutationResponse;
  updateFilterOptions: UpdateFilterOptionsMutationResponse;
  updateGetSortedChannelsResponses: UpdateGetSortedChannelsResponsesMutationResponse;
  updateImages: UpdateImagesMutationResponse;
  updateIssues: UpdateIssuesMutationResponse;
  updateLicenses: UpdateLicensesMutationResponse;
  updateLinkFlairs: UpdateLinkFlairsMutationResponse;
  updateMessages: UpdateMessagesMutationResponse;
  updateModChannelRoles: UpdateModChannelRolesMutationResponse;
  updateModServerRoles: UpdateModServerRolesMutationResponse;
  updateModerationActions: UpdateModerationActionsMutationResponse;
  updateModerationProfiles: UpdateModerationProfilesMutationResponse;
  updateNotifications: UpdateNotificationsMutationResponse;
  updatePluginRuns: UpdatePluginRunsMutationResponse;
  updatePluginVersions: UpdatePluginVersionsMutationResponse;
  updatePlugins: UpdatePluginsMutationResponse;
  updatePurchases: UpdatePurchasesMutationResponse;
  updateRecurringEvents: UpdateRecurringEventsMutationResponse;
  updateRepeatEnds: UpdateRepeatEndsMutationResponse;
  updateRepeatEveries: UpdateRepeatEveriesMutationResponse;
  updateSafetyCheckResponses: UpdateSafetyCheckResponsesMutationResponse;
  updateSeedDataResponses: UpdateSeedDataResponsesMutationResponse;
  updateServerConfigs: UpdateServerConfigsMutationResponse;
  updateServerRoles: UpdateServerRolesMutationResponse;
  updateServerSecrets: UpdateServerSecretsMutationResponse;
  updateSignedUrls: UpdateSignedUrlsMutationResponse;
  updateSiteWideDiscussionListFormats: UpdateSiteWideDiscussionListFormatsMutationResponse;
  updateSuspensions: UpdateSuspensionsMutationResponse;
  updateTags: UpdateTagsMutationResponse;
  updateTextVersions: UpdateTextVersionsMutationResponse;
  updateUsers: UpdateUsersMutationResponse;
  updateWikiPages: UpdateWikiPagesMutationResponse;
  upvoteComment?: Maybe<Comment>;
  upvoteDiscussionChannel?: Maybe<DiscussionChannel>;
};


export type MutationAcceptForumModInviteArgs = {
  channelUniqueName: Scalars['String']['input'];
};


export type MutationAcceptForumOwnerInviteArgs = {
  channelUniqueName: Scalars['String']['input'];
};


export type MutationAddEmojiToCommentArgs = {
  commentId: Scalars['ID']['input'];
  emojiLabel: Scalars['String']['input'];
  unicode: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationAddEmojiToDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
  emojiLabel: Scalars['String']['input'];
  unicode: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationArchiveCommentArgs = {
  commentId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationArchiveDiscussionArgs = {
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationArchiveEventArgs = {
  channelUniqueName: Scalars['String']['input'];
  eventId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationBecomeForumAdminArgs = {
  channelUniqueName: Scalars['String']['input'];
};


export type MutationCancelInviteForumModArgs = {
  channelUniqueName: Scalars['String']['input'];
  inviteeUsername: Scalars['String']['input'];
};


export type MutationCancelInviteForumOwnerArgs = {
  channelUniqueName: Scalars['String']['input'];
  inviteeUsername: Scalars['String']['input'];
};


export type MutationCreateActivitiesArgs = {
  input: Array<ActivityCreateInput>;
};


export type MutationCreateAlbumsArgs = {
  input: Array<AlbumCreateInput>;
};


export type MutationCreateChannelInfosArgs = {
  input: Array<ChannelInfoCreateInput>;
};


export type MutationCreateChannelRolesArgs = {
  input: Array<ChannelRoleCreateInput>;
};


export type MutationCreateChannelsArgs = {
  input: Array<ChannelCreateInput>;
};


export type MutationCreateCollectionsArgs = {
  input: Array<CollectionCreateInput>;
};


export type MutationCreateCommentInfosArgs = {
  input: Array<CommentInfoCreateInput>;
};


export type MutationCreateCommentRepliesFormatsArgs = {
  input: Array<CommentRepliesFormatCreateInput>;
};


export type MutationCreateCommentSectionFormatsArgs = {
  input: Array<CommentSectionFormatCreateInput>;
};


export type MutationCreateCommentsArgs = {
  input: Array<CommentCreateInput>;
};


export type MutationCreateContactsArgs = {
  input: Array<ContactCreateInput>;
};


export type MutationCreateDayDataArgs = {
  input: Array<DayDataCreateInput>;
};


export type MutationCreateDiscussionChannelInfosArgs = {
  input: Array<DiscussionChannelInfoCreateInput>;
};


export type MutationCreateDiscussionChannelListFormatsArgs = {
  input: Array<DiscussionChannelListFormatCreateInput>;
};


export type MutationCreateDiscussionChannelsArgs = {
  input: Array<DiscussionChannelCreateInput>;
};


export type MutationCreateDiscussionInfosArgs = {
  input: Array<DiscussionInfoCreateInput>;
};


export type MutationCreateDiscussionWithChannelConnectionsArgs = {
  input: Array<DiscussionCreateInputWithChannels>;
};


export type MutationCreateDiscussionsArgs = {
  input: Array<DiscussionCreateInput>;
};


export type MutationCreateDownloadableFilesArgs = {
  input: Array<DownloadableFileCreateInput>;
};


export type MutationCreateDropDataResponsesArgs = {
  input: Array<DropDataResponseCreateInput>;
};


export type MutationCreateEmailAndUserArgs = {
  emailAddress: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationCreateEmailsArgs = {
  input: Array<EmailCreateInput>;
};


export type MutationCreateEmojisArgs = {
  input: Array<EmojiCreateInput>;
};


export type MutationCreateEnvironmentInfosArgs = {
  input: Array<EnvironmentInfoCreateInput>;
};


export type MutationCreateEventChannelInfosArgs = {
  input: Array<EventChannelInfoCreateInput>;
};


export type MutationCreateEventChannelsArgs = {
  input: Array<EventChannelCreateInput>;
};


export type MutationCreateEventCommentsFormatsArgs = {
  input: Array<EventCommentsFormatCreateInput>;
};


export type MutationCreateEventInfosArgs = {
  input: Array<EventInfoCreateInput>;
};


export type MutationCreateEventWithChannelConnectionsArgs = {
  input: Array<EventCreateInputWithChannels>;
};


export type MutationCreateEventsArgs = {
  input: Array<EventCreateInput>;
};


export type MutationCreateFeedsArgs = {
  input: Array<FeedCreateInput>;
};


export type MutationCreateFileVersionsArgs = {
  input: Array<FileVersionCreateInput>;
};


export type MutationCreateFilterGroupsArgs = {
  input: Array<FilterGroupCreateInput>;
};


export type MutationCreateFilterOptionsArgs = {
  input: Array<FilterOptionCreateInput>;
};


export type MutationCreateGetSortedChannelsResponsesArgs = {
  input: Array<GetSortedChannelsResponseCreateInput>;
};


export type MutationCreateImagesArgs = {
  input: Array<ImageCreateInput>;
};


export type MutationCreateIssuesArgs = {
  input: Array<IssueCreateInput>;
};


export type MutationCreateLicensesArgs = {
  input: Array<LicenseCreateInput>;
};


export type MutationCreateLinkFlairsArgs = {
  input: Array<LinkFlairCreateInput>;
};


export type MutationCreateMessagesArgs = {
  input: Array<MessageCreateInput>;
};


export type MutationCreateModChannelRolesArgs = {
  input: Array<ModChannelRoleCreateInput>;
};


export type MutationCreateModServerRolesArgs = {
  input: Array<ModServerRoleCreateInput>;
};


export type MutationCreateModerationActionsArgs = {
  input: Array<ModerationActionCreateInput>;
};


export type MutationCreateModerationProfilesArgs = {
  input: Array<ModerationProfileCreateInput>;
};


export type MutationCreateNotificationsArgs = {
  input: Array<NotificationCreateInput>;
};


export type MutationCreatePluginRunsArgs = {
  input: Array<PluginRunCreateInput>;
};


export type MutationCreatePluginVersionsArgs = {
  input: Array<PluginVersionCreateInput>;
};


export type MutationCreatePluginsArgs = {
  input: Array<PluginCreateInput>;
};


export type MutationCreatePurchasesArgs = {
  input: Array<PurchaseCreateInput>;
};


export type MutationCreateRecurringEventsArgs = {
  input: Array<RecurringEventCreateInput>;
};


export type MutationCreateRepeatEndsArgs = {
  input: Array<RepeatEndsCreateInput>;
};


export type MutationCreateRepeatEveriesArgs = {
  input: Array<RepeatEveryCreateInput>;
};


export type MutationCreateSafetyCheckResponsesArgs = {
  input: Array<SafetyCheckResponseCreateInput>;
};


export type MutationCreateSeedDataResponsesArgs = {
  input: Array<SeedDataResponseCreateInput>;
};


export type MutationCreateServerConfigsArgs = {
  input: Array<ServerConfigCreateInput>;
};


export type MutationCreateServerRolesArgs = {
  input: Array<ServerRoleCreateInput>;
};


export type MutationCreateServerSecretsArgs = {
  input: Array<ServerSecretCreateInput>;
};


export type MutationCreateSignedStorageUrlArgs = {
  channelConnections?: InputMaybe<Array<Scalars['String']['input']>>;
  contentType: Scalars['String']['input'];
  filename: Scalars['String']['input'];
};


export type MutationCreateSignedUrlsArgs = {
  input: Array<SignedUrlCreateInput>;
};


export type MutationCreateSiteWideDiscussionListFormatsArgs = {
  input: Array<SiteWideDiscussionListFormatCreateInput>;
};


export type MutationCreateSuspensionsArgs = {
  input: Array<SuspensionCreateInput>;
};


export type MutationCreateTagsArgs = {
  input: Array<TagCreateInput>;
};


export type MutationCreateTextVersionsArgs = {
  input: Array<TextVersionCreateInput>;
};


export type MutationCreateUsersArgs = {
  input: Array<UserCreateInput>;
};


export type MutationCreateWikiPagesArgs = {
  input: Array<WikiPageCreateInput>;
};


export type MutationDeleteActivitiesArgs = {
  where?: InputMaybe<ActivityWhere>;
};


export type MutationDeleteAlbumsArgs = {
  delete?: InputMaybe<AlbumDeleteInput>;
  where?: InputMaybe<AlbumWhere>;
};


export type MutationDeleteChannelInfosArgs = {
  where?: InputMaybe<ChannelInfoWhere>;
};


export type MutationDeleteChannelRolesArgs = {
  where?: InputMaybe<ChannelRoleWhere>;
};


export type MutationDeleteChannelsArgs = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<ChannelWhere>;
};


export type MutationDeleteCollectionsArgs = {
  delete?: InputMaybe<CollectionDeleteInput>;
  where?: InputMaybe<CollectionWhere>;
};


export type MutationDeleteCommentInfosArgs = {
  where?: InputMaybe<CommentInfoWhere>;
};


export type MutationDeleteCommentRepliesFormatsArgs = {
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type MutationDeleteCommentSectionFormatsArgs = {
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type MutationDeleteCommentsArgs = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentWhere>;
};


export type MutationDeleteContactsArgs = {
  delete?: InputMaybe<ContactDeleteInput>;
  where?: InputMaybe<ContactWhere>;
};


export type MutationDeleteDayDataArgs = {
  where?: InputMaybe<DayDataWhere>;
};


export type MutationDeleteDiscussionChannelInfosArgs = {
  where?: InputMaybe<DiscussionChannelInfoWhere>;
};


export type MutationDeleteDiscussionChannelListFormatsArgs = {
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type MutationDeleteDiscussionChannelsArgs = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type MutationDeleteDiscussionInfosArgs = {
  where?: InputMaybe<DiscussionInfoWhere>;
};


export type MutationDeleteDiscussionsArgs = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<DiscussionWhere>;
};


export type MutationDeleteDownloadableFilesArgs = {
  delete?: InputMaybe<DownloadableFileDeleteInput>;
  where?: InputMaybe<DownloadableFileWhere>;
};


export type MutationDeleteDropDataResponsesArgs = {
  where?: InputMaybe<DropDataResponseWhere>;
};


export type MutationDeleteEmailsArgs = {
  delete?: InputMaybe<EmailDeleteInput>;
  where?: InputMaybe<EmailWhere>;
};


export type MutationDeleteEmojisArgs = {
  delete?: InputMaybe<EmojiDeleteInput>;
  where?: InputMaybe<EmojiWhere>;
};


export type MutationDeleteEnvironmentInfosArgs = {
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type MutationDeleteEventChannelInfosArgs = {
  where?: InputMaybe<EventChannelInfoWhere>;
};


export type MutationDeleteEventChannelsArgs = {
  delete?: InputMaybe<EventChannelDeleteInput>;
  where?: InputMaybe<EventChannelWhere>;
};


export type MutationDeleteEventCommentsFormatsArgs = {
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type MutationDeleteEventInfosArgs = {
  where?: InputMaybe<EventInfoWhere>;
};


export type MutationDeleteEventsArgs = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<EventWhere>;
};


export type MutationDeleteFeedsArgs = {
  delete?: InputMaybe<FeedDeleteInput>;
  where?: InputMaybe<FeedWhere>;
};


export type MutationDeleteFileVersionsArgs = {
  delete?: InputMaybe<FileVersionDeleteInput>;
  where?: InputMaybe<FileVersionWhere>;
};


export type MutationDeleteFilterGroupsArgs = {
  delete?: InputMaybe<FilterGroupDeleteInput>;
  where?: InputMaybe<FilterGroupWhere>;
};


export type MutationDeleteFilterOptionsArgs = {
  delete?: InputMaybe<FilterOptionDeleteInput>;
  where?: InputMaybe<FilterOptionWhere>;
};


export type MutationDeleteGetSortedChannelsResponsesArgs = {
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type MutationDeleteImagesArgs = {
  delete?: InputMaybe<ImageDeleteInput>;
  where?: InputMaybe<ImageWhere>;
};


export type MutationDeleteIssuesArgs = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<IssueWhere>;
};


export type MutationDeleteLicensesArgs = {
  where?: InputMaybe<LicenseWhere>;
};


export type MutationDeleteLinkFlairsArgs = {
  where?: InputMaybe<LinkFlairWhere>;
};


export type MutationDeleteMessagesArgs = {
  delete?: InputMaybe<MessageDeleteInput>;
  where?: InputMaybe<MessageWhere>;
};


export type MutationDeleteModChannelRolesArgs = {
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type MutationDeleteModServerRolesArgs = {
  where?: InputMaybe<ModServerRoleWhere>;
};


export type MutationDeleteModerationActionsArgs = {
  delete?: InputMaybe<ModerationActionDeleteInput>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type MutationDeleteModerationProfilesArgs = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type MutationDeleteNotificationsArgs = {
  where?: InputMaybe<NotificationWhere>;
};


export type MutationDeletePluginRunsArgs = {
  where?: InputMaybe<PluginRunWhere>;
};


export type MutationDeletePluginVersionsArgs = {
  delete?: InputMaybe<PluginVersionDeleteInput>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type MutationDeletePluginsArgs = {
  delete?: InputMaybe<PluginDeleteInput>;
  where?: InputMaybe<PluginWhere>;
};


export type MutationDeletePurchasesArgs = {
  delete?: InputMaybe<PurchaseDeleteInput>;
  where?: InputMaybe<PurchaseWhere>;
};


export type MutationDeleteRecurringEventsArgs = {
  delete?: InputMaybe<RecurringEventDeleteInput>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type MutationDeleteRepeatEndsArgs = {
  where?: InputMaybe<RepeatEndsWhere>;
};


export type MutationDeleteRepeatEveriesArgs = {
  where?: InputMaybe<RepeatEveryWhere>;
};


export type MutationDeleteSafetyCheckResponsesArgs = {
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type MutationDeleteSeedDataResponsesArgs = {
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type MutationDeleteServerConfigsArgs = {
  delete?: InputMaybe<ServerConfigDeleteInput>;
  where?: InputMaybe<ServerConfigWhere>;
};


export type MutationDeleteServerRolesArgs = {
  where?: InputMaybe<ServerRoleWhere>;
};


export type MutationDeleteServerSecretsArgs = {
  where?: InputMaybe<ServerSecretWhere>;
};


export type MutationDeleteSignedUrlsArgs = {
  where?: InputMaybe<SignedUrlWhere>;
};


export type MutationDeleteSiteWideDiscussionListFormatsArgs = {
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type MutationDeleteSuspensionsArgs = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<SuspensionWhere>;
};


export type MutationDeleteTagsArgs = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<TagWhere>;
};


export type MutationDeleteTextVersionsArgs = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<TextVersionWhere>;
};


export type MutationDeleteUsersArgs = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserWhere>;
};


export type MutationDeleteWikiPagesArgs = {
  delete?: InputMaybe<WikiPageDeleteInput>;
  where?: InputMaybe<WikiPageWhere>;
};


export type MutationInviteForumModArgs = {
  channelUniqueName: Scalars['String']['input'];
  inviteeUsername: Scalars['String']['input'];
};


export type MutationInviteForumOwnerArgs = {
  channelUniqueName: Scalars['String']['input'];
  inviteeUsername: Scalars['String']['input'];
};


export type MutationRemoveEmojiFromCommentArgs = {
  commentId: Scalars['ID']['input'];
  emojiLabel: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationRemoveEmojiFromDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
  emojiLabel: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationRemoveForumModArgs = {
  channelUniqueName: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationRemoveForumOwnerArgs = {
  channelUniqueName: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationReportCommentArgs = {
  channelUniqueName: Scalars['String']['input'];
  commentId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationReportDiscussionArgs = {
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationReportEventArgs = {
  channelUniqueName: Scalars['String']['input'];
  eventId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationSeedDataForCypressTestsArgs = {
  channelRoles: Array<ChannelRoleCreateInput>;
  channels: Array<ChannelCreateInput>;
  comments: Array<CommentCreateInput>;
  discussions: Array<DiscussionCreateInputWithChannels>;
  events: Array<EventCreateInputWithChannels>;
  modChannelRoles: Array<ModChannelRoleCreateInput>;
  modServerRoles: Array<ModServerRoleCreateInput>;
  serverConfigs: Array<ServerConfigCreateInput>;
  serverRoles: Array<ServerRoleCreateInput>;
  tags: Array<TagCreateInput>;
  users: Array<NewUserInput>;
};


export type MutationSendBugReportArgs = {
  contactEmail: Scalars['String']['input'];
  subject: Scalars['String']['input'];
  text: Scalars['String']['input'];
  username?: InputMaybe<Scalars['String']['input']>;
};


export type MutationSubscribeToCommentArgs = {
  commentId: Scalars['ID']['input'];
};


export type MutationSubscribeToDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
};


export type MutationSubscribeToEventArgs = {
  eventId: Scalars['ID']['input'];
};


export type MutationSubscribeToIssueArgs = {
  issueId: Scalars['ID']['input'];
};


export type MutationSuspendModArgs = {
  explanation?: InputMaybe<Scalars['String']['input']>;
  issueId: Scalars['ID']['input'];
  suspendIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendUntil?: InputMaybe<Scalars['DateTime']['input']>;
};


export type MutationSuspendUserArgs = {
  explanation?: InputMaybe<Scalars['String']['input']>;
  issueId: Scalars['ID']['input'];
  suspendIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendUntil?: InputMaybe<Scalars['DateTime']['input']>;
};


export type MutationUnarchiveCommentArgs = {
  commentId: Scalars['ID']['input'];
  explanation?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUnarchiveDiscussionArgs = {
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  explanation?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUnarchiveEventArgs = {
  channelUniqueName: Scalars['String']['input'];
  eventId: Scalars['ID']['input'];
  explanation?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUndoUpvoteCommentArgs = {
  commentId: Scalars['ID']['input'];
  username: Scalars['String']['input'];
};


export type MutationUndoUpvoteDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
  username: Scalars['String']['input'];
};


export type MutationUnsubscribeFromCommentArgs = {
  commentId: Scalars['ID']['input'];
};


export type MutationUnsubscribeFromDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
};


export type MutationUnsubscribeFromEventArgs = {
  eventId: Scalars['ID']['input'];
};


export type MutationUnsubscribeFromIssueArgs = {
  issueId: Scalars['ID']['input'];
};


export type MutationUnsuspendModArgs = {
  explanation?: InputMaybe<Scalars['String']['input']>;
  issueId: Scalars['ID']['input'];
};


export type MutationUnsuspendUserArgs = {
  explanation?: InputMaybe<Scalars['String']['input']>;
  issueId: Scalars['ID']['input'];
};


export type MutationUpdateActivitiesArgs = {
  update?: InputMaybe<ActivityUpdateInput>;
  where?: InputMaybe<ActivityWhere>;
};


export type MutationUpdateAlbumsArgs = {
  update?: InputMaybe<AlbumUpdateInput>;
  where?: InputMaybe<AlbumWhere>;
};


export type MutationUpdateChannelInfosArgs = {
  update?: InputMaybe<ChannelInfoUpdateInput>;
  where?: InputMaybe<ChannelInfoWhere>;
};


export type MutationUpdateChannelRolesArgs = {
  update?: InputMaybe<ChannelRoleUpdateInput>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type MutationUpdateChannelsArgs = {
  update?: InputMaybe<ChannelUpdateInput>;
  where?: InputMaybe<ChannelWhere>;
};


export type MutationUpdateCollectionsArgs = {
  update?: InputMaybe<CollectionUpdateInput>;
  where?: InputMaybe<CollectionWhere>;
};


export type MutationUpdateCommentInfosArgs = {
  update?: InputMaybe<CommentInfoUpdateInput>;
  where?: InputMaybe<CommentInfoWhere>;
};


export type MutationUpdateCommentRepliesFormatsArgs = {
  update?: InputMaybe<CommentRepliesFormatUpdateInput>;
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type MutationUpdateCommentSectionFormatsArgs = {
  update?: InputMaybe<CommentSectionFormatUpdateInput>;
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type MutationUpdateCommentsArgs = {
  update?: InputMaybe<CommentUpdateInput>;
  where?: InputMaybe<CommentWhere>;
};


export type MutationUpdateContactsArgs = {
  update?: InputMaybe<ContactUpdateInput>;
  where?: InputMaybe<ContactWhere>;
};


export type MutationUpdateDayDataArgs = {
  update?: InputMaybe<DayDataUpdateInput>;
  where?: InputMaybe<DayDataWhere>;
};


export type MutationUpdateDiscussionChannelInfosArgs = {
  update?: InputMaybe<DiscussionChannelInfoUpdateInput>;
  where?: InputMaybe<DiscussionChannelInfoWhere>;
};


export type MutationUpdateDiscussionChannelListFormatsArgs = {
  update?: InputMaybe<DiscussionChannelListFormatUpdateInput>;
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type MutationUpdateDiscussionChannelsArgs = {
  update?: InputMaybe<DiscussionChannelUpdateInput>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type MutationUpdateDiscussionInfosArgs = {
  update?: InputMaybe<DiscussionInfoUpdateInput>;
  where?: InputMaybe<DiscussionInfoWhere>;
};


export type MutationUpdateDiscussionWithChannelConnectionsArgs = {
  channelConnections?: InputMaybe<Array<Scalars['String']['input']>>;
  channelDisconnections?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  discussionUpdateInput: DiscussionUpdateInput;
  where: DiscussionWhere;
};


export type MutationUpdateDiscussionsArgs = {
  update?: InputMaybe<DiscussionUpdateInput>;
  where?: InputMaybe<DiscussionWhere>;
};


export type MutationUpdateDownloadableFilesArgs = {
  update?: InputMaybe<DownloadableFileUpdateInput>;
  where?: InputMaybe<DownloadableFileWhere>;
};


export type MutationUpdateDropDataResponsesArgs = {
  update?: InputMaybe<DropDataResponseUpdateInput>;
  where?: InputMaybe<DropDataResponseWhere>;
};


export type MutationUpdateEmailsArgs = {
  update?: InputMaybe<EmailUpdateInput>;
  where?: InputMaybe<EmailWhere>;
};


export type MutationUpdateEmojisArgs = {
  update?: InputMaybe<EmojiUpdateInput>;
  where?: InputMaybe<EmojiWhere>;
};


export type MutationUpdateEnvironmentInfosArgs = {
  update?: InputMaybe<EnvironmentInfoUpdateInput>;
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type MutationUpdateEventChannelInfosArgs = {
  update?: InputMaybe<EventChannelInfoUpdateInput>;
  where?: InputMaybe<EventChannelInfoWhere>;
};


export type MutationUpdateEventChannelsArgs = {
  update?: InputMaybe<EventChannelUpdateInput>;
  where?: InputMaybe<EventChannelWhere>;
};


export type MutationUpdateEventCommentsFormatsArgs = {
  update?: InputMaybe<EventCommentsFormatUpdateInput>;
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type MutationUpdateEventInfosArgs = {
  update?: InputMaybe<EventInfoUpdateInput>;
  where?: InputMaybe<EventInfoWhere>;
};


export type MutationUpdateEventWithChannelConnectionsArgs = {
  channelConnections?: InputMaybe<Array<Scalars['String']['input']>>;
  channelDisconnections?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  eventUpdateInput: EventUpdateInput;
  where: EventWhere;
};


export type MutationUpdateEventsArgs = {
  update?: InputMaybe<EventUpdateInput>;
  where?: InputMaybe<EventWhere>;
};


export type MutationUpdateFeedsArgs = {
  update?: InputMaybe<FeedUpdateInput>;
  where?: InputMaybe<FeedWhere>;
};


export type MutationUpdateFileVersionsArgs = {
  update?: InputMaybe<FileVersionUpdateInput>;
  where?: InputMaybe<FileVersionWhere>;
};


export type MutationUpdateFilterGroupsArgs = {
  update?: InputMaybe<FilterGroupUpdateInput>;
  where?: InputMaybe<FilterGroupWhere>;
};


export type MutationUpdateFilterOptionsArgs = {
  update?: InputMaybe<FilterOptionUpdateInput>;
  where?: InputMaybe<FilterOptionWhere>;
};


export type MutationUpdateGetSortedChannelsResponsesArgs = {
  update?: InputMaybe<GetSortedChannelsResponseUpdateInput>;
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type MutationUpdateImagesArgs = {
  update?: InputMaybe<ImageUpdateInput>;
  where?: InputMaybe<ImageWhere>;
};


export type MutationUpdateIssuesArgs = {
  update?: InputMaybe<IssueUpdateInput>;
  where?: InputMaybe<IssueWhere>;
};


export type MutationUpdateLicensesArgs = {
  update?: InputMaybe<LicenseUpdateInput>;
  where?: InputMaybe<LicenseWhere>;
};


export type MutationUpdateLinkFlairsArgs = {
  update?: InputMaybe<LinkFlairUpdateInput>;
  where?: InputMaybe<LinkFlairWhere>;
};


export type MutationUpdateMessagesArgs = {
  update?: InputMaybe<MessageUpdateInput>;
  where?: InputMaybe<MessageWhere>;
};


export type MutationUpdateModChannelRolesArgs = {
  update?: InputMaybe<ModChannelRoleUpdateInput>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type MutationUpdateModServerRolesArgs = {
  update?: InputMaybe<ModServerRoleUpdateInput>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type MutationUpdateModerationActionsArgs = {
  update?: InputMaybe<ModerationActionUpdateInput>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type MutationUpdateModerationProfilesArgs = {
  update?: InputMaybe<ModerationProfileUpdateInput>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type MutationUpdateNotificationsArgs = {
  update?: InputMaybe<NotificationUpdateInput>;
  where?: InputMaybe<NotificationWhere>;
};


export type MutationUpdatePluginRunsArgs = {
  update?: InputMaybe<PluginRunUpdateInput>;
  where?: InputMaybe<PluginRunWhere>;
};


export type MutationUpdatePluginVersionsArgs = {
  update?: InputMaybe<PluginVersionUpdateInput>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type MutationUpdatePluginsArgs = {
  update?: InputMaybe<PluginUpdateInput>;
  where?: InputMaybe<PluginWhere>;
};


export type MutationUpdatePurchasesArgs = {
  update?: InputMaybe<PurchaseUpdateInput>;
  where?: InputMaybe<PurchaseWhere>;
};


export type MutationUpdateRecurringEventsArgs = {
  update?: InputMaybe<RecurringEventUpdateInput>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type MutationUpdateRepeatEndsArgs = {
  update?: InputMaybe<RepeatEndsUpdateInput>;
  where?: InputMaybe<RepeatEndsWhere>;
};


export type MutationUpdateRepeatEveriesArgs = {
  update?: InputMaybe<RepeatEveryUpdateInput>;
  where?: InputMaybe<RepeatEveryWhere>;
};


export type MutationUpdateSafetyCheckResponsesArgs = {
  update?: InputMaybe<SafetyCheckResponseUpdateInput>;
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type MutationUpdateSeedDataResponsesArgs = {
  update?: InputMaybe<SeedDataResponseUpdateInput>;
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type MutationUpdateServerConfigsArgs = {
  update?: InputMaybe<ServerConfigUpdateInput>;
  where?: InputMaybe<ServerConfigWhere>;
};


export type MutationUpdateServerRolesArgs = {
  update?: InputMaybe<ServerRoleUpdateInput>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type MutationUpdateServerSecretsArgs = {
  update?: InputMaybe<ServerSecretUpdateInput>;
  where?: InputMaybe<ServerSecretWhere>;
};


export type MutationUpdateSignedUrlsArgs = {
  update?: InputMaybe<SignedUrlUpdateInput>;
  where?: InputMaybe<SignedUrlWhere>;
};


export type MutationUpdateSiteWideDiscussionListFormatsArgs = {
  update?: InputMaybe<SiteWideDiscussionListFormatUpdateInput>;
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type MutationUpdateSuspensionsArgs = {
  update?: InputMaybe<SuspensionUpdateInput>;
  where?: InputMaybe<SuspensionWhere>;
};


export type MutationUpdateTagsArgs = {
  update?: InputMaybe<TagUpdateInput>;
  where?: InputMaybe<TagWhere>;
};


export type MutationUpdateTextVersionsArgs = {
  update?: InputMaybe<TextVersionUpdateInput>;
  where?: InputMaybe<TextVersionWhere>;
};


export type MutationUpdateUsersArgs = {
  update?: InputMaybe<UserUpdateInput>;
  where?: InputMaybe<UserWhere>;
};


export type MutationUpdateWikiPagesArgs = {
  update?: InputMaybe<WikiPageUpdateInput>;
  where?: InputMaybe<WikiPageWhere>;
};


export type MutationUpvoteCommentArgs = {
  commentId: Scalars['ID']['input'];
  username: Scalars['String']['input'];
};


export type MutationUpvoteDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
  username: Scalars['String']['input'];
};

export type NewUserInput = {
  emailAddress: Scalars['String']['input'];
  username: Scalars['String']['input'];
};

export type Notification = {
  __typename?: 'Notification';
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  read?: Maybe<Scalars['Boolean']['output']>;
  text?: Maybe<Scalars['String']['output']>;
};

export type NotificationAggregateSelection = {
  __typename?: 'NotificationAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
};

export type NotificationConnectWhere = {
  node: NotificationWhere;
};

export type NotificationCreateInput = {
  read?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type NotificationCreatedEvent = {
  __typename?: 'NotificationCreatedEvent';
  createdNotification: NotificationEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type NotificationDeletedEvent = {
  __typename?: 'NotificationDeletedEvent';
  deletedNotification: NotificationEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type NotificationEdge = {
  __typename?: 'NotificationEdge';
  cursor: Scalars['String']['output'];
  node: Notification;
};

export type NotificationEventPayload = {
  __typename?: 'NotificationEventPayload';
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  read?: Maybe<Scalars['Boolean']['output']>;
  text?: Maybe<Scalars['String']['output']>;
};

export type NotificationOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more NotificationSort objects to sort Notifications by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<NotificationSort>>;
};

/** Fields to sort Notifications by. The order in which sorts are applied is not guaranteed when specifying many fields in one NotificationSort object. */
export type NotificationSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  read?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
};

export type NotificationSubscriptionWhere = {
  AND?: InputMaybe<Array<NotificationSubscriptionWhere>>;
  NOT?: InputMaybe<NotificationSubscriptionWhere>;
  OR?: InputMaybe<Array<NotificationSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  read?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type NotificationUpdateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  read?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type NotificationUpdatedEvent = {
  __typename?: 'NotificationUpdatedEvent';
  event: EventType;
  previousState: NotificationEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedNotification: NotificationEventPayload;
};

export type NotificationWhere = {
  AND?: InputMaybe<Array<NotificationWhere>>;
  NOT?: InputMaybe<NotificationWhere>;
  OR?: InputMaybe<Array<NotificationWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  read?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type NotificationsConnection = {
  __typename?: 'NotificationsConnection';
  edges: Array<NotificationEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** Pagination information (Relay) */
export type PageInfo = {
  __typename?: 'PageInfo';
  endCursor?: Maybe<Scalars['String']['output']>;
  hasNextPage: Scalars['Boolean']['output'];
  hasPreviousPage: Scalars['Boolean']['output'];
  startCursor?: Maybe<Scalars['String']['output']>;
};

export type Plugin = {
  __typename?: 'Plugin';
  Versions: Array<PluginVersion>;
  VersionsAggregate?: Maybe<PluginPluginVersionVersionsAggregationSelection>;
  VersionsConnection: PluginVersionsConnection;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};


export type PluginVersionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<PluginVersionOptions>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type PluginVersionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type PluginVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<PluginVersionsConnectionSort>>;
  where?: InputMaybe<PluginVersionsConnectionWhere>;
};

export type PluginAggregateSelection = {
  __typename?: 'PluginAggregateSelection';
  count: Scalars['Int']['output'];
  id: IdAggregateSelection;
  name: StringAggregateSelection;
};

export type PluginConnectInput = {
  Versions?: InputMaybe<Array<PluginVersionsConnectFieldInput>>;
};

export type PluginConnectWhere = {
  node: PluginWhere;
};

export type PluginConnectedRelationships = {
  __typename?: 'PluginConnectedRelationships';
  Versions?: Maybe<PluginVersionsConnectedRelationship>;
};

export type PluginCreateInput = {
  Versions?: InputMaybe<PluginVersionsFieldInput>;
  name: Scalars['String']['input'];
};

export type PluginCreatedEvent = {
  __typename?: 'PluginCreatedEvent';
  createdPlugin: PluginEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type PluginDeleteInput = {
  Versions?: InputMaybe<Array<PluginVersionsDeleteFieldInput>>;
};

export type PluginDeletedEvent = {
  __typename?: 'PluginDeletedEvent';
  deletedPlugin: PluginEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type PluginDisconnectInput = {
  Versions?: InputMaybe<Array<PluginVersionsDisconnectFieldInput>>;
};

export type PluginEdge = {
  __typename?: 'PluginEdge';
  cursor: Scalars['String']['output'];
  node: Plugin;
};

export type PluginEventPayload = {
  __typename?: 'PluginEventPayload';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type PluginOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more PluginSort objects to sort Plugins by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<PluginSort>>;
};

export type PluginPluginVersionVersionsAggregationSelection = {
  __typename?: 'PluginPluginVersionVersionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<PluginPluginVersionVersionsNodeAggregateSelection>;
};

export type PluginPluginVersionVersionsNodeAggregateSelection = {
  __typename?: 'PluginPluginVersionVersionsNodeAggregateSelection';
  entryPath: StringAggregateSelection;
  id: IdAggregateSelection;
  repoUrl: StringAggregateSelection;
  version: StringAggregateSelection;
};

export type PluginRelationInput = {
  Versions?: InputMaybe<Array<PluginVersionsCreateFieldInput>>;
};

export type PluginRelationshipCreatedEvent = {
  __typename?: 'PluginRelationshipCreatedEvent';
  createdRelationship: PluginConnectedRelationships;
  event: EventType;
  plugin: PluginEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type PluginRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<PluginRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<PluginRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<PluginRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<PluginRelationshipsSubscriptionWhere>;
  plugin?: InputMaybe<PluginSubscriptionWhere>;
};

export type PluginRelationshipDeletedEvent = {
  __typename?: 'PluginRelationshipDeletedEvent';
  deletedRelationship: PluginConnectedRelationships;
  event: EventType;
  plugin: PluginEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type PluginRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<PluginRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<PluginRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<PluginRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<PluginRelationshipsSubscriptionWhere>;
  plugin?: InputMaybe<PluginSubscriptionWhere>;
};

export type PluginRelationshipsSubscriptionWhere = {
  Versions?: InputMaybe<PluginVersionsRelationshipSubscriptionWhere>;
};

export type PluginRun = {
  __typename?: 'PluginRun';
  channelId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  durationMs?: Maybe<Scalars['Int']['output']>;
  eventType: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  message?: Maybe<Scalars['String']['output']>;
  pluginId: Scalars['String']['output'];
  scope: Scalars['String']['output'];
  status: Scalars['String']['output'];
  version: Scalars['String']['output'];
};

export type PluginRunAggregateSelection = {
  __typename?: 'PluginRunAggregateSelection';
  channelId: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  durationMs: IntAggregateSelection;
  eventType: StringAggregateSelection;
  id: IdAggregateSelection;
  message: StringAggregateSelection;
  pluginId: StringAggregateSelection;
  scope: StringAggregateSelection;
  status: StringAggregateSelection;
  version: StringAggregateSelection;
};

export type PluginRunCreateInput = {
  channelId?: InputMaybe<Scalars['String']['input']>;
  durationMs?: InputMaybe<Scalars['Int']['input']>;
  eventType: Scalars['String']['input'];
  message?: InputMaybe<Scalars['String']['input']>;
  pluginId: Scalars['String']['input'];
  scope: Scalars['String']['input'];
  status: Scalars['String']['input'];
  version: Scalars['String']['input'];
};

export type PluginRunCreatedEvent = {
  __typename?: 'PluginRunCreatedEvent';
  createdPluginRun: PluginRunEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type PluginRunDeletedEvent = {
  __typename?: 'PluginRunDeletedEvent';
  deletedPluginRun: PluginRunEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type PluginRunEdge = {
  __typename?: 'PluginRunEdge';
  cursor: Scalars['String']['output'];
  node: PluginRun;
};

export type PluginRunEventPayload = {
  __typename?: 'PluginRunEventPayload';
  channelId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  durationMs?: Maybe<Scalars['Int']['output']>;
  eventType: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  message?: Maybe<Scalars['String']['output']>;
  pluginId: Scalars['String']['output'];
  scope: Scalars['String']['output'];
  status: Scalars['String']['output'];
  version: Scalars['String']['output'];
};

export type PluginRunOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more PluginRunSort objects to sort PluginRuns by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<PluginRunSort>>;
};

/** Fields to sort PluginRuns by. The order in which sorts are applied is not guaranteed when specifying many fields in one PluginRunSort object. */
export type PluginRunSort = {
  channelId?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  durationMs?: InputMaybe<SortDirection>;
  eventType?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  message?: InputMaybe<SortDirection>;
  pluginId?: InputMaybe<SortDirection>;
  scope?: InputMaybe<SortDirection>;
  status?: InputMaybe<SortDirection>;
  version?: InputMaybe<SortDirection>;
};

export type PluginRunSubscriptionWhere = {
  AND?: InputMaybe<Array<PluginRunSubscriptionWhere>>;
  NOT?: InputMaybe<PluginRunSubscriptionWhere>;
  OR?: InputMaybe<Array<PluginRunSubscriptionWhere>>;
  channelId?: InputMaybe<Scalars['String']['input']>;
  channelId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  durationMs?: InputMaybe<Scalars['Int']['input']>;
  durationMs_GT?: InputMaybe<Scalars['Int']['input']>;
  durationMs_GTE?: InputMaybe<Scalars['Int']['input']>;
  durationMs_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  durationMs_LT?: InputMaybe<Scalars['Int']['input']>;
  durationMs_LTE?: InputMaybe<Scalars['Int']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  eventType_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  eventType_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  eventType_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  eventType_MATCHES?: InputMaybe<Scalars['String']['input']>;
  eventType_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  message_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  message_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  message_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  message_MATCHES?: InputMaybe<Scalars['String']['input']>;
  message_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  pluginId?: InputMaybe<Scalars['String']['input']>;
  pluginId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  pluginId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  pluginId_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  pluginId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  pluginId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  scope?: InputMaybe<Scalars['String']['input']>;
  scope_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  scope_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  scope_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  scope_MATCHES?: InputMaybe<Scalars['String']['input']>;
  scope_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  status_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  status_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  status_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  status_MATCHES?: InputMaybe<Scalars['String']['input']>;
  status_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
  version_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  version_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  version_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  version_MATCHES?: InputMaybe<Scalars['String']['input']>;
  version_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type PluginRunUpdateInput = {
  channelId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  durationMs?: InputMaybe<Scalars['Int']['input']>;
  durationMs_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  durationMs_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  pluginId?: InputMaybe<Scalars['String']['input']>;
  scope?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type PluginRunUpdatedEvent = {
  __typename?: 'PluginRunUpdatedEvent';
  event: EventType;
  previousState: PluginRunEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedPluginRun: PluginRunEventPayload;
};

export type PluginRunWhere = {
  AND?: InputMaybe<Array<PluginRunWhere>>;
  NOT?: InputMaybe<PluginRunWhere>;
  OR?: InputMaybe<Array<PluginRunWhere>>;
  channelId?: InputMaybe<Scalars['String']['input']>;
  channelId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  durationMs?: InputMaybe<Scalars['Int']['input']>;
  durationMs_GT?: InputMaybe<Scalars['Int']['input']>;
  durationMs_GTE?: InputMaybe<Scalars['Int']['input']>;
  durationMs_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  durationMs_LT?: InputMaybe<Scalars['Int']['input']>;
  durationMs_LTE?: InputMaybe<Scalars['Int']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  eventType_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  eventType_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  eventType_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  eventType_MATCHES?: InputMaybe<Scalars['String']['input']>;
  eventType_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  message_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  message_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  message_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  message_MATCHES?: InputMaybe<Scalars['String']['input']>;
  message_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  pluginId?: InputMaybe<Scalars['String']['input']>;
  pluginId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  pluginId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  pluginId_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  pluginId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  pluginId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  scope?: InputMaybe<Scalars['String']['input']>;
  scope_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  scope_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  scope_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  scope_MATCHES?: InputMaybe<Scalars['String']['input']>;
  scope_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  status_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  status_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  status_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  status_MATCHES?: InputMaybe<Scalars['String']['input']>;
  status_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
  version_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  version_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  version_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  version_MATCHES?: InputMaybe<Scalars['String']['input']>;
  version_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type PluginRunsConnection = {
  __typename?: 'PluginRunsConnection';
  edges: Array<PluginRunEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** Fields to sort Plugins by. The order in which sorts are applied is not guaranteed when specifying many fields in one PluginSort object. */
export type PluginSort = {
  id?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export type PluginSubscriptionWhere = {
  AND?: InputMaybe<Array<PluginSubscriptionWhere>>;
  NOT?: InputMaybe<PluginSubscriptionWhere>;
  OR?: InputMaybe<Array<PluginSubscriptionWhere>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type PluginUpdateInput = {
  Versions?: InputMaybe<Array<PluginVersionsUpdateFieldInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type PluginUpdatedEvent = {
  __typename?: 'PluginUpdatedEvent';
  event: EventType;
  previousState: PluginEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedPlugin: PluginEventPayload;
};

export type PluginVersion = {
  __typename?: 'PluginVersion';
  Plugin: Plugin;
  PluginAggregate?: Maybe<PluginVersionPluginPluginAggregationSelection>;
  PluginConnection: PluginVersionPluginConnection;
  entryPath: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  repoUrl: Scalars['String']['output'];
  version: Scalars['String']['output'];
};


export type PluginVersionPluginArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<PluginOptions>;
  where?: InputMaybe<PluginWhere>;
};


export type PluginVersionPluginAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<PluginWhere>;
};


export type PluginVersionPluginConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<PluginVersionPluginConnectionSort>>;
  where?: InputMaybe<PluginVersionPluginConnectionWhere>;
};

export type PluginVersionAggregateSelection = {
  __typename?: 'PluginVersionAggregateSelection';
  count: Scalars['Int']['output'];
  entryPath: StringAggregateSelection;
  id: IdAggregateSelection;
  repoUrl: StringAggregateSelection;
  version: StringAggregateSelection;
};

export type PluginVersionConnectInput = {
  Plugin?: InputMaybe<PluginVersionPluginConnectFieldInput>;
};

export type PluginVersionConnectWhere = {
  node: PluginVersionWhere;
};

export type PluginVersionConnectedRelationships = {
  __typename?: 'PluginVersionConnectedRelationships';
  Plugin?: Maybe<PluginVersionPluginConnectedRelationship>;
};

export type PluginVersionCreateInput = {
  Plugin?: InputMaybe<PluginVersionPluginFieldInput>;
  entryPath: Scalars['String']['input'];
  repoUrl: Scalars['String']['input'];
  version: Scalars['String']['input'];
};

export type PluginVersionCreatedEvent = {
  __typename?: 'PluginVersionCreatedEvent';
  createdPluginVersion: PluginVersionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type PluginVersionDeleteInput = {
  Plugin?: InputMaybe<PluginVersionPluginDeleteFieldInput>;
};

export type PluginVersionDeletedEvent = {
  __typename?: 'PluginVersionDeletedEvent';
  deletedPluginVersion: PluginVersionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type PluginVersionDisconnectInput = {
  Plugin?: InputMaybe<PluginVersionPluginDisconnectFieldInput>;
};

export type PluginVersionEdge = {
  __typename?: 'PluginVersionEdge';
  cursor: Scalars['String']['output'];
  node: PluginVersion;
};

export type PluginVersionEventPayload = {
  __typename?: 'PluginVersionEventPayload';
  entryPath: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  repoUrl: Scalars['String']['output'];
  version: Scalars['String']['output'];
};

export type PluginVersionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more PluginVersionSort objects to sort PluginVersions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<PluginVersionSort>>;
};

export type PluginVersionPluginAggregateInput = {
  AND?: InputMaybe<Array<PluginVersionPluginAggregateInput>>;
  NOT?: InputMaybe<PluginVersionPluginAggregateInput>;
  OR?: InputMaybe<Array<PluginVersionPluginAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<PluginVersionPluginNodeAggregationWhereInput>;
};

export type PluginVersionPluginConnectFieldInput = {
  connect?: InputMaybe<PluginConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<PluginConnectWhere>;
};

export type PluginVersionPluginConnectedRelationship = {
  __typename?: 'PluginVersionPluginConnectedRelationship';
  node: PluginEventPayload;
};

export type PluginVersionPluginConnection = {
  __typename?: 'PluginVersionPluginConnection';
  edges: Array<PluginVersionPluginRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type PluginVersionPluginConnectionSort = {
  node?: InputMaybe<PluginSort>;
};

export type PluginVersionPluginConnectionWhere = {
  AND?: InputMaybe<Array<PluginVersionPluginConnectionWhere>>;
  NOT?: InputMaybe<PluginVersionPluginConnectionWhere>;
  OR?: InputMaybe<Array<PluginVersionPluginConnectionWhere>>;
  node?: InputMaybe<PluginWhere>;
};

export type PluginVersionPluginCreateFieldInput = {
  node: PluginCreateInput;
};

export type PluginVersionPluginDeleteFieldInput = {
  delete?: InputMaybe<PluginDeleteInput>;
  where?: InputMaybe<PluginVersionPluginConnectionWhere>;
};

export type PluginVersionPluginDisconnectFieldInput = {
  disconnect?: InputMaybe<PluginDisconnectInput>;
  where?: InputMaybe<PluginVersionPluginConnectionWhere>;
};

export type PluginVersionPluginFieldInput = {
  connect?: InputMaybe<PluginVersionPluginConnectFieldInput>;
  create?: InputMaybe<PluginVersionPluginCreateFieldInput>;
};

export type PluginVersionPluginNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<PluginVersionPluginNodeAggregationWhereInput>>;
  NOT?: InputMaybe<PluginVersionPluginNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<PluginVersionPluginNodeAggregationWhereInput>>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type PluginVersionPluginPluginAggregationSelection = {
  __typename?: 'PluginVersionPluginPluginAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<PluginVersionPluginPluginNodeAggregateSelection>;
};

export type PluginVersionPluginPluginNodeAggregateSelection = {
  __typename?: 'PluginVersionPluginPluginNodeAggregateSelection';
  id: IdAggregateSelection;
  name: StringAggregateSelection;
};

export type PluginVersionPluginRelationship = {
  __typename?: 'PluginVersionPluginRelationship';
  cursor: Scalars['String']['output'];
  node: Plugin;
};

export type PluginVersionPluginRelationshipSubscriptionWhere = {
  node?: InputMaybe<PluginSubscriptionWhere>;
};

export type PluginVersionPluginUpdateConnectionInput = {
  node?: InputMaybe<PluginUpdateInput>;
};

export type PluginVersionPluginUpdateFieldInput = {
  connect?: InputMaybe<PluginVersionPluginConnectFieldInput>;
  create?: InputMaybe<PluginVersionPluginCreateFieldInput>;
  delete?: InputMaybe<PluginVersionPluginDeleteFieldInput>;
  disconnect?: InputMaybe<PluginVersionPluginDisconnectFieldInput>;
  update?: InputMaybe<PluginVersionPluginUpdateConnectionInput>;
  where?: InputMaybe<PluginVersionPluginConnectionWhere>;
};

export type PluginVersionRelationInput = {
  Plugin?: InputMaybe<PluginVersionPluginCreateFieldInput>;
};

export type PluginVersionRelationshipCreatedEvent = {
  __typename?: 'PluginVersionRelationshipCreatedEvent';
  createdRelationship: PluginVersionConnectedRelationships;
  event: EventType;
  pluginVersion: PluginVersionEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type PluginVersionRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<PluginVersionRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<PluginVersionRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<PluginVersionRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<PluginVersionRelationshipsSubscriptionWhere>;
  pluginVersion?: InputMaybe<PluginVersionSubscriptionWhere>;
};

export type PluginVersionRelationshipDeletedEvent = {
  __typename?: 'PluginVersionRelationshipDeletedEvent';
  deletedRelationship: PluginVersionConnectedRelationships;
  event: EventType;
  pluginVersion: PluginVersionEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type PluginVersionRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<PluginVersionRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<PluginVersionRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<PluginVersionRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<PluginVersionRelationshipsSubscriptionWhere>;
  pluginVersion?: InputMaybe<PluginVersionSubscriptionWhere>;
};

export type PluginVersionRelationshipsSubscriptionWhere = {
  Plugin?: InputMaybe<PluginVersionPluginRelationshipSubscriptionWhere>;
};

/** Fields to sort PluginVersions by. The order in which sorts are applied is not guaranteed when specifying many fields in one PluginVersionSort object. */
export type PluginVersionSort = {
  entryPath?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  repoUrl?: InputMaybe<SortDirection>;
  version?: InputMaybe<SortDirection>;
};

export type PluginVersionSubscriptionWhere = {
  AND?: InputMaybe<Array<PluginVersionSubscriptionWhere>>;
  NOT?: InputMaybe<PluginVersionSubscriptionWhere>;
  OR?: InputMaybe<Array<PluginVersionSubscriptionWhere>>;
  entryPath?: InputMaybe<Scalars['String']['input']>;
  entryPath_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  entryPath_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  entryPath_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  entryPath_MATCHES?: InputMaybe<Scalars['String']['input']>;
  entryPath_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  repoUrl?: InputMaybe<Scalars['String']['input']>;
  repoUrl_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  repoUrl_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  repoUrl_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  repoUrl_MATCHES?: InputMaybe<Scalars['String']['input']>;
  repoUrl_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
  version_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  version_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  version_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  version_MATCHES?: InputMaybe<Scalars['String']['input']>;
  version_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type PluginVersionUpdateInput = {
  Plugin?: InputMaybe<PluginVersionPluginUpdateFieldInput>;
  entryPath?: InputMaybe<Scalars['String']['input']>;
  repoUrl?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type PluginVersionUpdatedEvent = {
  __typename?: 'PluginVersionUpdatedEvent';
  event: EventType;
  previousState: PluginVersionEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedPluginVersion: PluginVersionEventPayload;
};

export type PluginVersionWhere = {
  AND?: InputMaybe<Array<PluginVersionWhere>>;
  NOT?: InputMaybe<PluginVersionWhere>;
  OR?: InputMaybe<Array<PluginVersionWhere>>;
  Plugin?: InputMaybe<PluginWhere>;
  PluginAggregate?: InputMaybe<PluginVersionPluginAggregateInput>;
  PluginConnection?: InputMaybe<PluginVersionPluginConnectionWhere>;
  PluginConnection_NOT?: InputMaybe<PluginVersionPluginConnectionWhere>;
  Plugin_NOT?: InputMaybe<PluginWhere>;
  entryPath?: InputMaybe<Scalars['String']['input']>;
  entryPath_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  entryPath_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  entryPath_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  entryPath_MATCHES?: InputMaybe<Scalars['String']['input']>;
  entryPath_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  repoUrl?: InputMaybe<Scalars['String']['input']>;
  repoUrl_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  repoUrl_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  repoUrl_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  repoUrl_MATCHES?: InputMaybe<Scalars['String']['input']>;
  repoUrl_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
  version_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  version_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  version_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  version_MATCHES?: InputMaybe<Scalars['String']['input']>;
  version_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type PluginVersionsAggregateInput = {
  AND?: InputMaybe<Array<PluginVersionsAggregateInput>>;
  NOT?: InputMaybe<PluginVersionsAggregateInput>;
  OR?: InputMaybe<Array<PluginVersionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<PluginVersionsNodeAggregationWhereInput>;
};

export type PluginVersionsConnectFieldInput = {
  connect?: InputMaybe<Array<PluginVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<PluginVersionConnectWhere>;
};

export type PluginVersionsConnectedRelationship = {
  __typename?: 'PluginVersionsConnectedRelationship';
  node: PluginVersionEventPayload;
};

export type PluginVersionsConnection = {
  __typename?: 'PluginVersionsConnection';
  edges: Array<PluginVersionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type PluginVersionsConnectionSort = {
  node?: InputMaybe<PluginVersionSort>;
};

export type PluginVersionsConnectionWhere = {
  AND?: InputMaybe<Array<PluginVersionsConnectionWhere>>;
  NOT?: InputMaybe<PluginVersionsConnectionWhere>;
  OR?: InputMaybe<Array<PluginVersionsConnectionWhere>>;
  node?: InputMaybe<PluginVersionWhere>;
};

export type PluginVersionsCreateFieldInput = {
  node: PluginVersionCreateInput;
};

export type PluginVersionsDeleteFieldInput = {
  delete?: InputMaybe<PluginVersionDeleteInput>;
  where?: InputMaybe<PluginVersionsConnectionWhere>;
};

export type PluginVersionsDisconnectFieldInput = {
  disconnect?: InputMaybe<PluginVersionDisconnectInput>;
  where?: InputMaybe<PluginVersionsConnectionWhere>;
};

export type PluginVersionsFieldInput = {
  connect?: InputMaybe<Array<PluginVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<PluginVersionsCreateFieldInput>>;
};

export type PluginVersionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<PluginVersionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<PluginVersionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<PluginVersionsNodeAggregationWhereInput>>;
  entryPath_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  entryPath_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  version_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  version_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type PluginVersionsRelationship = {
  __typename?: 'PluginVersionsRelationship';
  cursor: Scalars['String']['output'];
  node: PluginVersion;
};

export type PluginVersionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<PluginVersionSubscriptionWhere>;
};

export type PluginVersionsUpdateConnectionInput = {
  node?: InputMaybe<PluginVersionUpdateInput>;
};

export type PluginVersionsUpdateFieldInput = {
  connect?: InputMaybe<Array<PluginVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<PluginVersionsCreateFieldInput>>;
  delete?: InputMaybe<Array<PluginVersionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<PluginVersionsDisconnectFieldInput>>;
  update?: InputMaybe<PluginVersionsUpdateConnectionInput>;
  where?: InputMaybe<PluginVersionsConnectionWhere>;
};

export type PluginWhere = {
  AND?: InputMaybe<Array<PluginWhere>>;
  NOT?: InputMaybe<PluginWhere>;
  OR?: InputMaybe<Array<PluginWhere>>;
  VersionsAggregate?: InputMaybe<PluginVersionsAggregateInput>;
  /** Return Plugins where all of the related PluginVersionsConnections match this filter */
  VersionsConnection_ALL?: InputMaybe<PluginVersionsConnectionWhere>;
  /** Return Plugins where none of the related PluginVersionsConnections match this filter */
  VersionsConnection_NONE?: InputMaybe<PluginVersionsConnectionWhere>;
  /** Return Plugins where one of the related PluginVersionsConnections match this filter */
  VersionsConnection_SINGLE?: InputMaybe<PluginVersionsConnectionWhere>;
  /** Return Plugins where some of the related PluginVersionsConnections match this filter */
  VersionsConnection_SOME?: InputMaybe<PluginVersionsConnectionWhere>;
  /** Return Plugins where all of the related PluginVersions match this filter */
  Versions_ALL?: InputMaybe<PluginVersionWhere>;
  /** Return Plugins where none of the related PluginVersions match this filter */
  Versions_NONE?: InputMaybe<PluginVersionWhere>;
  /** Return Plugins where one of the related PluginVersions match this filter */
  Versions_SINGLE?: InputMaybe<PluginVersionWhere>;
  /** Return Plugins where some of the related PluginVersions match this filter */
  Versions_SOME?: InputMaybe<PluginVersionWhere>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type PluginsConnection = {
  __typename?: 'PluginsConnection';
  edges: Array<PluginEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** A point in a coordinate system. For more information, see https://neo4j.com/docs/graphql/4/type-definitions/types/spatial/#point */
export type Point = {
  __typename?: 'Point';
  crs: Scalars['String']['output'];
  height?: Maybe<Scalars['Float']['output']>;
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
  srid: Scalars['Int']['output'];
};

/** Input type for a point with a distance */
export type PointDistance = {
  /** The distance in metres to be used when comparing two points */
  distance: Scalars['Float']['input'];
  point: PointInput;
};

/** Input type for a point */
export type PointInput = {
  height?: InputMaybe<Scalars['Float']['input']>;
  latitude: Scalars['Float']['input'];
  longitude: Scalars['Float']['input'];
};

export enum PriceModel {
  Fixed = 'FIXED',
  Free = 'FREE',
  NameYourPrice = 'NAME_YOUR_PRICE',
  Subscription = 'SUBSCRIPTION',
  Temporary = 'TEMPORARY'
}

/** Single checkout / acquisition (free or paid) */
export type Purchase = {
  __typename?: 'Purchase';
  buyer: User;
  buyerAggregate?: Maybe<PurchaseUserBuyerAggregationSelection>;
  buyerConnection: PurchaseBuyerConnection;
  createdAt: Scalars['DateTime']['output'];
  file: DownloadableFile;
  fileAggregate?: Maybe<PurchaseDownloadableFileFileAggregationSelection>;
  fileConnection: PurchaseFileConnection;
  id: Scalars['ID']['output'];
  priceCents?: Maybe<Scalars['Int']['output']>;
  priceCurrency?: Maybe<Scalars['String']['output']>;
};


/** Single checkout / acquisition (free or paid) */
export type PurchaseBuyerArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


/** Single checkout / acquisition (free or paid) */
export type PurchaseBuyerAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


/** Single checkout / acquisition (free or paid) */
export type PurchaseBuyerConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<PurchaseBuyerConnectionSort>>;
  where?: InputMaybe<PurchaseBuyerConnectionWhere>;
};


/** Single checkout / acquisition (free or paid) */
export type PurchaseFileArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DownloadableFileOptions>;
  where?: InputMaybe<DownloadableFileWhere>;
};


/** Single checkout / acquisition (free or paid) */
export type PurchaseFileAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DownloadableFileWhere>;
};


/** Single checkout / acquisition (free or paid) */
export type PurchaseFileConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<PurchaseFileConnectionSort>>;
  where?: InputMaybe<PurchaseFileConnectionWhere>;
};

export type PurchaseAggregateSelection = {
  __typename?: 'PurchaseAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  priceCents: IntAggregateSelection;
  priceCurrency: StringAggregateSelection;
};

export type PurchaseBuyerAggregateInput = {
  AND?: InputMaybe<Array<PurchaseBuyerAggregateInput>>;
  NOT?: InputMaybe<PurchaseBuyerAggregateInput>;
  OR?: InputMaybe<Array<PurchaseBuyerAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<PurchaseBuyerNodeAggregationWhereInput>;
};

export type PurchaseBuyerConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type PurchaseBuyerConnectOrCreateFieldInput = {
  onCreate: PurchaseBuyerConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type PurchaseBuyerConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type PurchaseBuyerConnectedRelationship = {
  __typename?: 'PurchaseBuyerConnectedRelationship';
  node: UserEventPayload;
};

export type PurchaseBuyerConnection = {
  __typename?: 'PurchaseBuyerConnection';
  edges: Array<PurchaseBuyerRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type PurchaseBuyerConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type PurchaseBuyerConnectionWhere = {
  AND?: InputMaybe<Array<PurchaseBuyerConnectionWhere>>;
  NOT?: InputMaybe<PurchaseBuyerConnectionWhere>;
  OR?: InputMaybe<Array<PurchaseBuyerConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type PurchaseBuyerCreateFieldInput = {
  node: UserCreateInput;
};

export type PurchaseBuyerDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<PurchaseBuyerConnectionWhere>;
};

export type PurchaseBuyerDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<PurchaseBuyerConnectionWhere>;
};

export type PurchaseBuyerFieldInput = {
  connect?: InputMaybe<PurchaseBuyerConnectFieldInput>;
  connectOrCreate?: InputMaybe<PurchaseBuyerConnectOrCreateFieldInput>;
  create?: InputMaybe<PurchaseBuyerCreateFieldInput>;
};

export type PurchaseBuyerNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<PurchaseBuyerNodeAggregationWhereInput>>;
  NOT?: InputMaybe<PurchaseBuyerNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<PurchaseBuyerNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type PurchaseBuyerRelationship = {
  __typename?: 'PurchaseBuyerRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type PurchaseBuyerRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type PurchaseBuyerUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type PurchaseBuyerUpdateFieldInput = {
  connect?: InputMaybe<PurchaseBuyerConnectFieldInput>;
  connectOrCreate?: InputMaybe<PurchaseBuyerConnectOrCreateFieldInput>;
  create?: InputMaybe<PurchaseBuyerCreateFieldInput>;
  delete?: InputMaybe<PurchaseBuyerDeleteFieldInput>;
  disconnect?: InputMaybe<PurchaseBuyerDisconnectFieldInput>;
  update?: InputMaybe<PurchaseBuyerUpdateConnectionInput>;
  where?: InputMaybe<PurchaseBuyerConnectionWhere>;
};

export type PurchaseConnectInput = {
  buyer?: InputMaybe<PurchaseBuyerConnectFieldInput>;
  file?: InputMaybe<PurchaseFileConnectFieldInput>;
};

export type PurchaseConnectOrCreateInput = {
  buyer?: InputMaybe<PurchaseBuyerConnectOrCreateFieldInput>;
};

export type PurchaseConnectWhere = {
  node: PurchaseWhere;
};

export type PurchaseConnectedRelationships = {
  __typename?: 'PurchaseConnectedRelationships';
  buyer?: Maybe<PurchaseBuyerConnectedRelationship>;
  file?: Maybe<PurchaseFileConnectedRelationship>;
};

export type PurchaseCreateInput = {
  buyer?: InputMaybe<PurchaseBuyerFieldInput>;
  file?: InputMaybe<PurchaseFileFieldInput>;
  priceCents?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency?: InputMaybe<Scalars['String']['input']>;
};

export type PurchaseCreatedEvent = {
  __typename?: 'PurchaseCreatedEvent';
  createdPurchase: PurchaseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type PurchaseDeleteInput = {
  buyer?: InputMaybe<PurchaseBuyerDeleteFieldInput>;
  file?: InputMaybe<PurchaseFileDeleteFieldInput>;
};

export type PurchaseDeletedEvent = {
  __typename?: 'PurchaseDeletedEvent';
  deletedPurchase: PurchaseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type PurchaseDisconnectInput = {
  buyer?: InputMaybe<PurchaseBuyerDisconnectFieldInput>;
  file?: InputMaybe<PurchaseFileDisconnectFieldInput>;
};

export type PurchaseDownloadableFileFileAggregationSelection = {
  __typename?: 'PurchaseDownloadableFileFileAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<PurchaseDownloadableFileFileNodeAggregateSelection>;
};

export type PurchaseDownloadableFileFileNodeAggregateSelection = {
  __typename?: 'PurchaseDownloadableFileFileNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  downloadCountTotal: IntAggregateSelection;
  downloadCountUnique: IntAggregateSelection;
  fileName: StringAggregateSelection;
  id: IdAggregateSelection;
  paywallExpiresAt: DateTimeAggregateSelection;
  priceCents: IntAggregateSelection;
  priceCurrency: StringAggregateSelection;
  scanCheckedAt: DateTimeAggregateSelection;
  size: IntAggregateSelection;
  stripePriceId: StringAggregateSelection;
  stripeProductId: StringAggregateSelection;
  url: StringAggregateSelection;
};

export type PurchaseEdge = {
  __typename?: 'PurchaseEdge';
  cursor: Scalars['String']['output'];
  node: Purchase;
};

export type PurchaseEventPayload = {
  __typename?: 'PurchaseEventPayload';
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  priceCents?: Maybe<Scalars['Int']['output']>;
  priceCurrency?: Maybe<Scalars['String']['output']>;
};

export type PurchaseFileAggregateInput = {
  AND?: InputMaybe<Array<PurchaseFileAggregateInput>>;
  NOT?: InputMaybe<PurchaseFileAggregateInput>;
  OR?: InputMaybe<Array<PurchaseFileAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<PurchaseFileNodeAggregationWhereInput>;
};

export type PurchaseFileConnectFieldInput = {
  connect?: InputMaybe<DownloadableFileConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DownloadableFileConnectWhere>;
};

export type PurchaseFileConnectedRelationship = {
  __typename?: 'PurchaseFileConnectedRelationship';
  node: DownloadableFileEventPayload;
};

export type PurchaseFileConnection = {
  __typename?: 'PurchaseFileConnection';
  edges: Array<PurchaseFileRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type PurchaseFileConnectionSort = {
  node?: InputMaybe<DownloadableFileSort>;
};

export type PurchaseFileConnectionWhere = {
  AND?: InputMaybe<Array<PurchaseFileConnectionWhere>>;
  NOT?: InputMaybe<PurchaseFileConnectionWhere>;
  OR?: InputMaybe<Array<PurchaseFileConnectionWhere>>;
  node?: InputMaybe<DownloadableFileWhere>;
};

export type PurchaseFileCreateFieldInput = {
  node: DownloadableFileCreateInput;
};

export type PurchaseFileDeleteFieldInput = {
  delete?: InputMaybe<DownloadableFileDeleteInput>;
  where?: InputMaybe<PurchaseFileConnectionWhere>;
};

export type PurchaseFileDisconnectFieldInput = {
  disconnect?: InputMaybe<DownloadableFileDisconnectInput>;
  where?: InputMaybe<PurchaseFileConnectionWhere>;
};

export type PurchaseFileFieldInput = {
  connect?: InputMaybe<PurchaseFileConnectFieldInput>;
  create?: InputMaybe<PurchaseFileCreateFieldInput>;
};

export type PurchaseFileNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<PurchaseFileNodeAggregationWhereInput>>;
  NOT?: InputMaybe<PurchaseFileNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<PurchaseFileNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  downloadCountTotal_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  paywallExpiresAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  scanCheckedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  size_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  size_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type PurchaseFileRelationship = {
  __typename?: 'PurchaseFileRelationship';
  cursor: Scalars['String']['output'];
  node: DownloadableFile;
};

export type PurchaseFileRelationshipSubscriptionWhere = {
  node?: InputMaybe<DownloadableFileSubscriptionWhere>;
};

export type PurchaseFileUpdateConnectionInput = {
  node?: InputMaybe<DownloadableFileUpdateInput>;
};

export type PurchaseFileUpdateFieldInput = {
  connect?: InputMaybe<PurchaseFileConnectFieldInput>;
  create?: InputMaybe<PurchaseFileCreateFieldInput>;
  delete?: InputMaybe<PurchaseFileDeleteFieldInput>;
  disconnect?: InputMaybe<PurchaseFileDisconnectFieldInput>;
  update?: InputMaybe<PurchaseFileUpdateConnectionInput>;
  where?: InputMaybe<PurchaseFileConnectionWhere>;
};

export type PurchaseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more PurchaseSort objects to sort Purchases by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<PurchaseSort>>;
};

export type PurchaseRelationInput = {
  buyer?: InputMaybe<PurchaseBuyerCreateFieldInput>;
  file?: InputMaybe<PurchaseFileCreateFieldInput>;
};

export type PurchaseRelationshipCreatedEvent = {
  __typename?: 'PurchaseRelationshipCreatedEvent';
  createdRelationship: PurchaseConnectedRelationships;
  event: EventType;
  purchase: PurchaseEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type PurchaseRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<PurchaseRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<PurchaseRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<PurchaseRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<PurchaseRelationshipsSubscriptionWhere>;
  purchase?: InputMaybe<PurchaseSubscriptionWhere>;
};

export type PurchaseRelationshipDeletedEvent = {
  __typename?: 'PurchaseRelationshipDeletedEvent';
  deletedRelationship: PurchaseConnectedRelationships;
  event: EventType;
  purchase: PurchaseEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type PurchaseRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<PurchaseRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<PurchaseRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<PurchaseRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<PurchaseRelationshipsSubscriptionWhere>;
  purchase?: InputMaybe<PurchaseSubscriptionWhere>;
};

export type PurchaseRelationshipsSubscriptionWhere = {
  buyer?: InputMaybe<PurchaseBuyerRelationshipSubscriptionWhere>;
  file?: InputMaybe<PurchaseFileRelationshipSubscriptionWhere>;
};

/** Fields to sort Purchases by. The order in which sorts are applied is not guaranteed when specifying many fields in one PurchaseSort object. */
export type PurchaseSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  priceCents?: InputMaybe<SortDirection>;
  priceCurrency?: InputMaybe<SortDirection>;
};

export type PurchaseSubscriptionWhere = {
  AND?: InputMaybe<Array<PurchaseSubscriptionWhere>>;
  NOT?: InputMaybe<PurchaseSubscriptionWhere>;
  OR?: InputMaybe<Array<PurchaseSubscriptionWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  priceCents?: InputMaybe<Scalars['Int']['input']>;
  priceCents_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  priceCents_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  priceCurrency_MATCHES?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type PurchaseUpdateInput = {
  buyer?: InputMaybe<PurchaseBuyerUpdateFieldInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  file?: InputMaybe<PurchaseFileUpdateFieldInput>;
  priceCents?: InputMaybe<Scalars['Int']['input']>;
  priceCents_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency?: InputMaybe<Scalars['String']['input']>;
};

export type PurchaseUpdatedEvent = {
  __typename?: 'PurchaseUpdatedEvent';
  event: EventType;
  previousState: PurchaseEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedPurchase: PurchaseEventPayload;
};

export type PurchaseUserBuyerAggregationSelection = {
  __typename?: 'PurchaseUserBuyerAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<PurchaseUserBuyerNodeAggregateSelection>;
};

export type PurchaseUserBuyerNodeAggregateSelection = {
  __typename?: 'PurchaseUserBuyerNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type PurchaseWhere = {
  AND?: InputMaybe<Array<PurchaseWhere>>;
  NOT?: InputMaybe<PurchaseWhere>;
  OR?: InputMaybe<Array<PurchaseWhere>>;
  buyer?: InputMaybe<UserWhere>;
  buyerAggregate?: InputMaybe<PurchaseBuyerAggregateInput>;
  buyerConnection?: InputMaybe<PurchaseBuyerConnectionWhere>;
  buyerConnection_NOT?: InputMaybe<PurchaseBuyerConnectionWhere>;
  buyer_NOT?: InputMaybe<UserWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  file?: InputMaybe<DownloadableFileWhere>;
  fileAggregate?: InputMaybe<PurchaseFileAggregateInput>;
  fileConnection?: InputMaybe<PurchaseFileConnectionWhere>;
  fileConnection_NOT?: InputMaybe<PurchaseFileConnectionWhere>;
  file_NOT?: InputMaybe<DownloadableFileWhere>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  priceCents?: InputMaybe<Scalars['Int']['input']>;
  priceCents_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  priceCents_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  priceCurrency_MATCHES?: InputMaybe<Scalars['String']['input']>;
  priceCurrency_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type PurchasesConnection = {
  __typename?: 'PurchasesConnection';
  edges: Array<PurchaseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Query = {
  __typename?: 'Query';
  activities: Array<Activity>;
  activitiesAggregate: ActivityAggregateSelection;
  activitiesConnection: ActivitiesConnection;
  albums: Array<Album>;
  albumsAggregate: AlbumAggregateSelection;
  albumsConnection: AlbumsConnection;
  channelInfos: Array<ChannelInfo>;
  channelInfosAggregate: ChannelInfoAggregateSelection;
  channelInfosConnection: ChannelInfosConnection;
  channelRoles: Array<ChannelRole>;
  channelRolesAggregate: ChannelRoleAggregateSelection;
  channelRolesConnection: ChannelRolesConnection;
  channels: Array<Channel>;
  channelsAggregate: ChannelAggregateSelection;
  channelsConnection: ChannelsConnection;
  collectables: Array<Collectable>;
  collections: Array<Collection>;
  collectionsAggregate: CollectionAggregateSelection;
  collectionsConnection: CollectionsConnection;
  commentAuthors: Array<CommentAuthor>;
  commentInfos: Array<CommentInfo>;
  commentInfosAggregate: CommentInfoAggregateSelection;
  commentInfosConnection: CommentInfosConnection;
  commentRepliesFormats: Array<CommentRepliesFormat>;
  commentRepliesFormatsAggregate: CommentRepliesFormatAggregateSelection;
  commentRepliesFormatsConnection: CommentRepliesFormatsConnection;
  commentSectionFormats: Array<CommentSectionFormat>;
  commentSectionFormatsAggregate: CommentSectionFormatAggregateSelection;
  commentSectionFormatsConnection: CommentSectionFormatsConnection;
  comments: Array<Comment>;
  commentsAggregate: CommentAggregateSelection;
  commentsConnection: CommentsConnection;
  contacts: Array<Contact>;
  contactsAggregate: ContactAggregateSelection;
  contactsConnection: ContactsConnection;
  dayData: Array<DayData>;
  dayDataAggregate: DayDataAggregateSelection;
  dayDataConnection: DayDataConnection;
  discussionChannelInfos: Array<DiscussionChannelInfo>;
  discussionChannelInfosAggregate: DiscussionChannelInfoAggregateSelection;
  discussionChannelInfosConnection: DiscussionChannelInfosConnection;
  discussionChannelListFormats: Array<DiscussionChannelListFormat>;
  discussionChannelListFormatsAggregate: DiscussionChannelListFormatAggregateSelection;
  discussionChannelListFormatsConnection: DiscussionChannelListFormatsConnection;
  discussionChannels: Array<DiscussionChannel>;
  discussionChannelsAggregate: DiscussionChannelAggregateSelection;
  discussionChannelsConnection: DiscussionChannelsConnection;
  discussionInfos: Array<DiscussionInfo>;
  discussionInfosAggregate: DiscussionInfoAggregateSelection;
  discussionInfosConnection: DiscussionInfosConnection;
  discussions: Array<Discussion>;
  discussionsAggregate: DiscussionAggregateSelection;
  discussionsConnection: DiscussionsConnection;
  downloadableFiles: Array<DownloadableFile>;
  downloadableFilesAggregate: DownloadableFileAggregateSelection;
  downloadableFilesConnection: DownloadableFilesConnection;
  dropDataResponses: Array<DropDataResponse>;
  dropDataResponsesAggregate: DropDataResponseAggregateSelection;
  dropDataResponsesConnection: DropDataResponsesConnection;
  emails: Array<Email>;
  emailsAggregate: EmailAggregateSelection;
  emailsConnection: EmailsConnection;
  emojis: Array<Emoji>;
  emojisAggregate: EmojiAggregateSelection;
  emojisConnection: EmojisConnection;
  environmentInfos: Array<EnvironmentInfo>;
  environmentInfosAggregate: EnvironmentInfoAggregateSelection;
  environmentInfosConnection: EnvironmentInfosConnection;
  eventChannelInfos: Array<EventChannelInfo>;
  eventChannelInfosAggregate: EventChannelInfoAggregateSelection;
  eventChannelInfosConnection: EventChannelInfosConnection;
  eventChannels: Array<EventChannel>;
  eventChannelsAggregate: EventChannelAggregateSelection;
  eventChannelsConnection: EventChannelsConnection;
  eventCommentsFormats: Array<EventCommentsFormat>;
  eventCommentsFormatsAggregate: EventCommentsFormatAggregateSelection;
  eventCommentsFormatsConnection: EventCommentsFormatsConnection;
  eventInfos: Array<EventInfo>;
  eventInfosAggregate: EventInfoAggregateSelection;
  eventInfosConnection: EventInfosConnection;
  events: Array<Event>;
  eventsAggregate: EventAggregateSelection;
  eventsConnection: EventsConnection;
  feeds: Array<Feed>;
  feedsAggregate: FeedAggregateSelection;
  feedsConnection: FeedsConnection;
  fileVersions: Array<FileVersion>;
  fileVersionsAggregate: FileVersionAggregateSelection;
  fileVersionsConnection: FileVersionsConnection;
  filterGroups: Array<FilterGroup>;
  filterGroupsAggregate: FilterGroupAggregateSelection;
  filterGroupsConnection: FilterGroupsConnection;
  filterOptions: Array<FilterOption>;
  filterOptionsAggregate: FilterOptionAggregateSelection;
  filterOptionsConnection: FilterOptionsConnection;
  getCommentReplies?: Maybe<CommentRepliesFormat>;
  getCommentSection?: Maybe<CommentSectionFormat>;
  getDiscussionsInChannel?: Maybe<DiscussionChannelListFormat>;
  getEventComments?: Maybe<EventCommentsFormat>;
  getSiteWideDiscussionList?: Maybe<SiteWideDiscussionListFormat>;
  getSortedChannels?: Maybe<GetSortedChannelsResponse>;
  getSortedChannelsResponses: Array<GetSortedChannelsResponse>;
  getSortedChannelsResponsesAggregate: GetSortedChannelsResponseAggregateSelection;
  getSortedChannelsResponsesConnection: GetSortedChannelsResponsesConnection;
  getUserContributions: Array<DayData>;
  images: Array<Image>;
  imagesAggregate: ImageAggregateSelection;
  imagesConnection: ImagesConnection;
  isOriginalPosterSuspended?: Maybe<Scalars['Boolean']['output']>;
  issueAuthors: Array<IssueAuthor>;
  issueCommentAuthors: Array<IssueCommentAuthor>;
  issues: Array<Issue>;
  issuesAggregate: IssueAggregateSelection;
  issuesConnection: IssuesConnection;
  licenses: Array<License>;
  licensesAggregate: LicenseAggregateSelection;
  licensesConnection: LicensesConnection;
  linkFlairs: Array<LinkFlair>;
  linkFlairsAggregate: LinkFlairAggregateSelection;
  linkFlairsConnection: LinkFlairsConnection;
  messages: Array<Message>;
  messagesAggregate: MessageAggregateSelection;
  messagesConnection: MessagesConnection;
  modChannelRoles: Array<ModChannelRole>;
  modChannelRolesAggregate: ModChannelRoleAggregateSelection;
  modChannelRolesConnection: ModChannelRolesConnection;
  modServerRoles: Array<ModServerRole>;
  modServerRolesAggregate: ModServerRoleAggregateSelection;
  modServerRolesConnection: ModServerRolesConnection;
  moderationActions: Array<ModerationAction>;
  moderationActionsAggregate: ModerationActionAggregateSelection;
  moderationActionsConnection: ModerationActionsConnection;
  moderationProfiles: Array<ModerationProfile>;
  moderationProfilesAggregate: ModerationProfileAggregateSelection;
  moderationProfilesConnection: ModerationProfilesConnection;
  notifications: Array<Notification>;
  notificationsAggregate: NotificationAggregateSelection;
  notificationsConnection: NotificationsConnection;
  pluginRuns: Array<PluginRun>;
  pluginRunsAggregate: PluginRunAggregateSelection;
  pluginRunsConnection: PluginRunsConnection;
  pluginVersions: Array<PluginVersion>;
  pluginVersionsAggregate: PluginVersionAggregateSelection;
  pluginVersionsConnection: PluginVersionsConnection;
  plugins: Array<Plugin>;
  pluginsAggregate: PluginAggregateSelection;
  pluginsConnection: PluginsConnection;
  purchases: Array<Purchase>;
  purchasesAggregate: PurchaseAggregateSelection;
  purchasesConnection: PurchasesConnection;
  recurringEvents: Array<RecurringEvent>;
  recurringEventsAggregate: RecurringEventAggregateSelection;
  recurringEventsConnection: RecurringEventsConnection;
  repeatEnds: Array<RepeatEnds>;
  repeatEndsAggregate: RepeatEndsAggregateSelection;
  repeatEndsConnection: RepeatEndsConnection;
  repeatEveries: Array<RepeatEvery>;
  repeatEveriesAggregate: RepeatEveryAggregateSelection;
  repeatEveriesConnection: RepeatEveriesConnection;
  safetyCheck?: Maybe<SafetyCheckResponse>;
  safetyCheckResponses: Array<SafetyCheckResponse>;
  safetyCheckResponsesAggregate: SafetyCheckResponseAggregateSelection;
  safetyCheckResponsesConnection: SafetyCheckResponsesConnection;
  seedDataResponses: Array<SeedDataResponse>;
  seedDataResponsesAggregate: SeedDataResponseAggregateSelection;
  seedDataResponsesConnection: SeedDataResponsesConnection;
  serverConfigs: Array<ServerConfig>;
  serverConfigsAggregate: ServerConfigAggregateSelection;
  serverConfigsConnection: ServerConfigsConnection;
  serverRoles: Array<ServerRole>;
  serverRolesAggregate: ServerRoleAggregateSelection;
  serverRolesConnection: ServerRolesConnection;
  serverSecrets: Array<ServerSecret>;
  serverSecretsAggregate: ServerSecretAggregateSelection;
  serverSecretsConnection: ServerSecretsConnection;
  signedUrls: Array<SignedUrl>;
  signedUrlsAggregate: SignedUrlAggregateSelection;
  signedUrlsConnection: SignedUrlsConnection;
  siteWideDiscussionListFormats: Array<SiteWideDiscussionListFormat>;
  siteWideDiscussionListFormatsAggregate: SiteWideDiscussionListFormatAggregateSelection;
  siteWideDiscussionListFormatsConnection: SiteWideDiscussionListFormatsConnection;
  suspensions: Array<Suspension>;
  suspensionsAggregate: SuspensionAggregateSelection;
  suspensionsConnection: SuspensionsConnection;
  tags: Array<Tag>;
  tagsAggregate: TagAggregateSelection;
  tagsConnection: TagsConnection;
  textVersions: Array<TextVersion>;
  textVersionsAggregate: TextVersionAggregateSelection;
  textVersionsConnection: TextVersionsConnection;
  users: Array<User>;
  usersAggregate: UserAggregateSelection;
  usersConnection: UsersConnection;
  wikiPages: Array<WikiPage>;
  wikiPagesAggregate: WikiPageAggregateSelection;
  wikiPagesConnection: WikiPagesConnection;
};


export type QueryActivitiesArgs = {
  options?: InputMaybe<ActivityOptions>;
  where?: InputMaybe<ActivityWhere>;
};


export type QueryActivitiesAggregateArgs = {
  where?: InputMaybe<ActivityWhere>;
};


export type QueryActivitiesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ActivitySort>>>;
  where?: InputMaybe<ActivityWhere>;
};


export type QueryAlbumsArgs = {
  options?: InputMaybe<AlbumOptions>;
  where?: InputMaybe<AlbumWhere>;
};


export type QueryAlbumsAggregateArgs = {
  where?: InputMaybe<AlbumWhere>;
};


export type QueryAlbumsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<AlbumSort>>>;
  where?: InputMaybe<AlbumWhere>;
};


export type QueryChannelInfosArgs = {
  options?: InputMaybe<ChannelInfoOptions>;
  where?: InputMaybe<ChannelInfoWhere>;
};


export type QueryChannelInfosAggregateArgs = {
  where?: InputMaybe<ChannelInfoWhere>;
};


export type QueryChannelInfosConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ChannelInfoSort>>>;
  where?: InputMaybe<ChannelInfoWhere>;
};


export type QueryChannelRolesArgs = {
  options?: InputMaybe<ChannelRoleOptions>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type QueryChannelRolesAggregateArgs = {
  where?: InputMaybe<ChannelRoleWhere>;
};


export type QueryChannelRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ChannelRoleSort>>>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type QueryChannelsArgs = {
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type QueryChannelsAggregateArgs = {
  where?: InputMaybe<ChannelWhere>;
};


export type QueryChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ChannelSort>>>;
  where?: InputMaybe<ChannelWhere>;
};


export type QueryCollectablesArgs = {
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<CollectableWhere>;
};


export type QueryCollectionsArgs = {
  options?: InputMaybe<CollectionOptions>;
  where?: InputMaybe<CollectionWhere>;
};


export type QueryCollectionsAggregateArgs = {
  where?: InputMaybe<CollectionWhere>;
};


export type QueryCollectionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<CollectionSort>>>;
  where?: InputMaybe<CollectionWhere>;
};


export type QueryCommentAuthorsArgs = {
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<CommentAuthorWhere>;
};


export type QueryCommentInfosArgs = {
  options?: InputMaybe<CommentInfoOptions>;
  where?: InputMaybe<CommentInfoWhere>;
};


export type QueryCommentInfosAggregateArgs = {
  where?: InputMaybe<CommentInfoWhere>;
};


export type QueryCommentInfosConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<CommentInfoSort>>>;
  where?: InputMaybe<CommentInfoWhere>;
};


export type QueryCommentRepliesFormatsArgs = {
  options?: InputMaybe<CommentRepliesFormatOptions>;
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type QueryCommentRepliesFormatsAggregateArgs = {
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type QueryCommentRepliesFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<CommentRepliesFormatSort>>>;
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type QueryCommentSectionFormatsArgs = {
  options?: InputMaybe<CommentSectionFormatOptions>;
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type QueryCommentSectionFormatsAggregateArgs = {
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type QueryCommentSectionFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type QueryCommentsArgs = {
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type QueryCommentsAggregateArgs = {
  where?: InputMaybe<CommentWhere>;
};


export type QueryCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<CommentSort>>>;
  where?: InputMaybe<CommentWhere>;
};


export type QueryContactsArgs = {
  options?: InputMaybe<ContactOptions>;
  where?: InputMaybe<ContactWhere>;
};


export type QueryContactsAggregateArgs = {
  where?: InputMaybe<ContactWhere>;
};


export type QueryContactsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ContactSort>>>;
  where?: InputMaybe<ContactWhere>;
};


export type QueryDayDataArgs = {
  options?: InputMaybe<DayDataOptions>;
  where?: InputMaybe<DayDataWhere>;
};


export type QueryDayDataAggregateArgs = {
  where?: InputMaybe<DayDataWhere>;
};


export type QueryDayDataConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DayDataSort>>>;
  where?: InputMaybe<DayDataWhere>;
};


export type QueryDiscussionChannelInfosArgs = {
  options?: InputMaybe<DiscussionChannelInfoOptions>;
  where?: InputMaybe<DiscussionChannelInfoWhere>;
};


export type QueryDiscussionChannelInfosAggregateArgs = {
  where?: InputMaybe<DiscussionChannelInfoWhere>;
};


export type QueryDiscussionChannelInfosConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DiscussionChannelInfoSort>>>;
  where?: InputMaybe<DiscussionChannelInfoWhere>;
};


export type QueryDiscussionChannelListFormatsArgs = {
  options?: InputMaybe<DiscussionChannelListFormatOptions>;
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type QueryDiscussionChannelListFormatsAggregateArgs = {
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type QueryDiscussionChannelListFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DiscussionChannelListFormatSort>>>;
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type QueryDiscussionChannelsArgs = {
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type QueryDiscussionChannelsAggregateArgs = {
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type QueryDiscussionChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DiscussionChannelSort>>>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type QueryDiscussionInfosArgs = {
  options?: InputMaybe<DiscussionInfoOptions>;
  where?: InputMaybe<DiscussionInfoWhere>;
};


export type QueryDiscussionInfosAggregateArgs = {
  where?: InputMaybe<DiscussionInfoWhere>;
};


export type QueryDiscussionInfosConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DiscussionInfoSort>>>;
  where?: InputMaybe<DiscussionInfoWhere>;
};


export type QueryDiscussionsArgs = {
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type QueryDiscussionsAggregateArgs = {
  where?: InputMaybe<DiscussionWhere>;
};


export type QueryDiscussionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DiscussionSort>>>;
  where?: InputMaybe<DiscussionWhere>;
};


export type QueryDownloadableFilesArgs = {
  options?: InputMaybe<DownloadableFileOptions>;
  where?: InputMaybe<DownloadableFileWhere>;
};


export type QueryDownloadableFilesAggregateArgs = {
  where?: InputMaybe<DownloadableFileWhere>;
};


export type QueryDownloadableFilesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DownloadableFileSort>>>;
  where?: InputMaybe<DownloadableFileWhere>;
};


export type QueryDropDataResponsesArgs = {
  options?: InputMaybe<DropDataResponseOptions>;
  where?: InputMaybe<DropDataResponseWhere>;
};


export type QueryDropDataResponsesAggregateArgs = {
  where?: InputMaybe<DropDataResponseWhere>;
};


export type QueryDropDataResponsesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DropDataResponseSort>>>;
  where?: InputMaybe<DropDataResponseWhere>;
};


export type QueryEmailsArgs = {
  options?: InputMaybe<EmailOptions>;
  where?: InputMaybe<EmailWhere>;
};


export type QueryEmailsAggregateArgs = {
  where?: InputMaybe<EmailWhere>;
};


export type QueryEmailsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EmailSort>>>;
  where?: InputMaybe<EmailWhere>;
};


export type QueryEmojisArgs = {
  options?: InputMaybe<EmojiOptions>;
  where?: InputMaybe<EmojiWhere>;
};


export type QueryEmojisAggregateArgs = {
  where?: InputMaybe<EmojiWhere>;
};


export type QueryEmojisConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EmojiSort>>>;
  where?: InputMaybe<EmojiWhere>;
};


export type QueryEnvironmentInfosArgs = {
  options?: InputMaybe<EnvironmentInfoOptions>;
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type QueryEnvironmentInfosAggregateArgs = {
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type QueryEnvironmentInfosConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EnvironmentInfoSort>>>;
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type QueryEventChannelInfosArgs = {
  options?: InputMaybe<EventChannelInfoOptions>;
  where?: InputMaybe<EventChannelInfoWhere>;
};


export type QueryEventChannelInfosAggregateArgs = {
  where?: InputMaybe<EventChannelInfoWhere>;
};


export type QueryEventChannelInfosConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EventChannelInfoSort>>>;
  where?: InputMaybe<EventChannelInfoWhere>;
};


export type QueryEventChannelsArgs = {
  options?: InputMaybe<EventChannelOptions>;
  where?: InputMaybe<EventChannelWhere>;
};


export type QueryEventChannelsAggregateArgs = {
  where?: InputMaybe<EventChannelWhere>;
};


export type QueryEventChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EventChannelSort>>>;
  where?: InputMaybe<EventChannelWhere>;
};


export type QueryEventCommentsFormatsArgs = {
  options?: InputMaybe<EventCommentsFormatOptions>;
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type QueryEventCommentsFormatsAggregateArgs = {
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type QueryEventCommentsFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type QueryEventInfosArgs = {
  options?: InputMaybe<EventInfoOptions>;
  where?: InputMaybe<EventInfoWhere>;
};


export type QueryEventInfosAggregateArgs = {
  where?: InputMaybe<EventInfoWhere>;
};


export type QueryEventInfosConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EventInfoSort>>>;
  where?: InputMaybe<EventInfoWhere>;
};


export type QueryEventsArgs = {
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type QueryEventsAggregateArgs = {
  where?: InputMaybe<EventWhere>;
};


export type QueryEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EventSort>>>;
  where?: InputMaybe<EventWhere>;
};


export type QueryFeedsArgs = {
  options?: InputMaybe<FeedOptions>;
  where?: InputMaybe<FeedWhere>;
};


export type QueryFeedsAggregateArgs = {
  where?: InputMaybe<FeedWhere>;
};


export type QueryFeedsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<FeedSort>>>;
  where?: InputMaybe<FeedWhere>;
};


export type QueryFileVersionsArgs = {
  options?: InputMaybe<FileVersionOptions>;
  where?: InputMaybe<FileVersionWhere>;
};


export type QueryFileVersionsAggregateArgs = {
  where?: InputMaybe<FileVersionWhere>;
};


export type QueryFileVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<FileVersionSort>>>;
  where?: InputMaybe<FileVersionWhere>;
};


export type QueryFilterGroupsArgs = {
  options?: InputMaybe<FilterGroupOptions>;
  where?: InputMaybe<FilterGroupWhere>;
};


export type QueryFilterGroupsAggregateArgs = {
  where?: InputMaybe<FilterGroupWhere>;
};


export type QueryFilterGroupsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<FilterGroupSort>>>;
  where?: InputMaybe<FilterGroupWhere>;
};


export type QueryFilterOptionsArgs = {
  options?: InputMaybe<FilterOptionOptions>;
  where?: InputMaybe<FilterOptionWhere>;
};


export type QueryFilterOptionsAggregateArgs = {
  where?: InputMaybe<FilterOptionWhere>;
};


export type QueryFilterOptionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<FilterOptionSort>>>;
  where?: InputMaybe<FilterOptionWhere>;
};


export type QueryGetCommentRepliesArgs = {
  commentId: Scalars['ID']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  modName?: InputMaybe<Scalars['String']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<SortType>;
};


export type QueryGetCommentSectionArgs = {
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  modName?: InputMaybe<Scalars['String']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetDiscussionsInChannelArgs = {
  channelUniqueName: Scalars['String']['input'];
  hasDownload?: InputMaybe<Scalars['Boolean']['input']>;
  labelFilters?: InputMaybe<Array<LabelFilterInput>>;
  options?: InputMaybe<DiscussionListOptions>;
  searchInput?: InputMaybe<Scalars['String']['input']>;
  selectedTags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  showArchived?: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryGetEventCommentsArgs = {
  eventId: Scalars['ID']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<SortType>;
};


export type QueryGetSiteWideDiscussionListArgs = {
  hasDownload?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionListOptions>;
  searchInput?: InputMaybe<Scalars['String']['input']>;
  selectedChannels?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  selectedTags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  showArchived?: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryGetSortedChannelsArgs = {
  countDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  searchInput?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryGetSortedChannelsResponsesArgs = {
  options?: InputMaybe<GetSortedChannelsResponseOptions>;
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type QueryGetSortedChannelsResponsesAggregateArgs = {
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type QueryGetSortedChannelsResponsesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<GetSortedChannelsResponseSort>>>;
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type QueryGetUserContributionsArgs = {
  endDate?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['String']['input']>;
  username: Scalars['String']['input'];
  year?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryImagesArgs = {
  options?: InputMaybe<ImageOptions>;
  where?: InputMaybe<ImageWhere>;
};


export type QueryImagesAggregateArgs = {
  where?: InputMaybe<ImageWhere>;
};


export type QueryImagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ImageSort>>>;
  where?: InputMaybe<ImageWhere>;
};


export type QueryIsOriginalPosterSuspendedArgs = {
  issueId: Scalars['String']['input'];
};


export type QueryIssueAuthorsArgs = {
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<IssueAuthorWhere>;
};


export type QueryIssueCommentAuthorsArgs = {
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<IssueCommentAuthorWhere>;
};


export type QueryIssuesArgs = {
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type QueryIssuesAggregateArgs = {
  where?: InputMaybe<IssueWhere>;
};


export type QueryIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<IssueSort>>>;
  where?: InputMaybe<IssueWhere>;
};


export type QueryLicensesArgs = {
  options?: InputMaybe<LicenseOptions>;
  where?: InputMaybe<LicenseWhere>;
};


export type QueryLicensesAggregateArgs = {
  where?: InputMaybe<LicenseWhere>;
};


export type QueryLicensesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<LicenseSort>>>;
  where?: InputMaybe<LicenseWhere>;
};


export type QueryLinkFlairsArgs = {
  options?: InputMaybe<LinkFlairOptions>;
  where?: InputMaybe<LinkFlairWhere>;
};


export type QueryLinkFlairsAggregateArgs = {
  where?: InputMaybe<LinkFlairWhere>;
};


export type QueryLinkFlairsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<LinkFlairSort>>>;
  where?: InputMaybe<LinkFlairWhere>;
};


export type QueryMessagesArgs = {
  options?: InputMaybe<MessageOptions>;
  where?: InputMaybe<MessageWhere>;
};


export type QueryMessagesAggregateArgs = {
  where?: InputMaybe<MessageWhere>;
};


export type QueryMessagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<MessageSort>>>;
  where?: InputMaybe<MessageWhere>;
};


export type QueryModChannelRolesArgs = {
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type QueryModChannelRolesAggregateArgs = {
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type QueryModChannelRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ModChannelRoleSort>>>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type QueryModServerRolesArgs = {
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type QueryModServerRolesAggregateArgs = {
  where?: InputMaybe<ModServerRoleWhere>;
};


export type QueryModServerRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ModServerRoleSort>>>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type QueryModerationActionsArgs = {
  options?: InputMaybe<ModerationActionOptions>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type QueryModerationActionsAggregateArgs = {
  where?: InputMaybe<ModerationActionWhere>;
};


export type QueryModerationActionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ModerationActionSort>>>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type QueryModerationProfilesArgs = {
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type QueryModerationProfilesAggregateArgs = {
  where?: InputMaybe<ModerationProfileWhere>;
};


export type QueryModerationProfilesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ModerationProfileSort>>>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type QueryNotificationsArgs = {
  options?: InputMaybe<NotificationOptions>;
  where?: InputMaybe<NotificationWhere>;
};


export type QueryNotificationsAggregateArgs = {
  where?: InputMaybe<NotificationWhere>;
};


export type QueryNotificationsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<NotificationSort>>>;
  where?: InputMaybe<NotificationWhere>;
};


export type QueryPluginRunsArgs = {
  options?: InputMaybe<PluginRunOptions>;
  where?: InputMaybe<PluginRunWhere>;
};


export type QueryPluginRunsAggregateArgs = {
  where?: InputMaybe<PluginRunWhere>;
};


export type QueryPluginRunsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<PluginRunSort>>>;
  where?: InputMaybe<PluginRunWhere>;
};


export type QueryPluginVersionsArgs = {
  options?: InputMaybe<PluginVersionOptions>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type QueryPluginVersionsAggregateArgs = {
  where?: InputMaybe<PluginVersionWhere>;
};


export type QueryPluginVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<PluginVersionSort>>>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type QueryPluginsArgs = {
  options?: InputMaybe<PluginOptions>;
  where?: InputMaybe<PluginWhere>;
};


export type QueryPluginsAggregateArgs = {
  where?: InputMaybe<PluginWhere>;
};


export type QueryPluginsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<PluginSort>>>;
  where?: InputMaybe<PluginWhere>;
};


export type QueryPurchasesArgs = {
  options?: InputMaybe<PurchaseOptions>;
  where?: InputMaybe<PurchaseWhere>;
};


export type QueryPurchasesAggregateArgs = {
  where?: InputMaybe<PurchaseWhere>;
};


export type QueryPurchasesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<PurchaseSort>>>;
  where?: InputMaybe<PurchaseWhere>;
};


export type QueryRecurringEventsArgs = {
  options?: InputMaybe<RecurringEventOptions>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type QueryRecurringEventsAggregateArgs = {
  where?: InputMaybe<RecurringEventWhere>;
};


export type QueryRecurringEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<RecurringEventSort>>>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type QueryRepeatEndsArgs = {
  options?: InputMaybe<RepeatEndsOptions>;
  where?: InputMaybe<RepeatEndsWhere>;
};


export type QueryRepeatEndsAggregateArgs = {
  where?: InputMaybe<RepeatEndsWhere>;
};


export type QueryRepeatEndsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<RepeatEndsSort>>>;
  where?: InputMaybe<RepeatEndsWhere>;
};


export type QueryRepeatEveriesArgs = {
  options?: InputMaybe<RepeatEveryOptions>;
  where?: InputMaybe<RepeatEveryWhere>;
};


export type QueryRepeatEveriesAggregateArgs = {
  where?: InputMaybe<RepeatEveryWhere>;
};


export type QueryRepeatEveriesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<RepeatEverySort>>>;
  where?: InputMaybe<RepeatEveryWhere>;
};


export type QuerySafetyCheckResponsesArgs = {
  options?: InputMaybe<SafetyCheckResponseOptions>;
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type QuerySafetyCheckResponsesAggregateArgs = {
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type QuerySafetyCheckResponsesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type QuerySeedDataResponsesArgs = {
  options?: InputMaybe<SeedDataResponseOptions>;
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type QuerySeedDataResponsesAggregateArgs = {
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type QuerySeedDataResponsesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<SeedDataResponseSort>>>;
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type QueryServerConfigsArgs = {
  options?: InputMaybe<ServerConfigOptions>;
  where?: InputMaybe<ServerConfigWhere>;
};


export type QueryServerConfigsAggregateArgs = {
  where?: InputMaybe<ServerConfigWhere>;
};


export type QueryServerConfigsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ServerConfigSort>>>;
  where?: InputMaybe<ServerConfigWhere>;
};


export type QueryServerRolesArgs = {
  options?: InputMaybe<ServerRoleOptions>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type QueryServerRolesAggregateArgs = {
  where?: InputMaybe<ServerRoleWhere>;
};


export type QueryServerRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ServerRoleSort>>>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type QueryServerSecretsArgs = {
  options?: InputMaybe<ServerSecretOptions>;
  where?: InputMaybe<ServerSecretWhere>;
};


export type QueryServerSecretsAggregateArgs = {
  where?: InputMaybe<ServerSecretWhere>;
};


export type QueryServerSecretsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ServerSecretSort>>>;
  where?: InputMaybe<ServerSecretWhere>;
};


export type QuerySignedUrlsArgs = {
  options?: InputMaybe<SignedUrlOptions>;
  where?: InputMaybe<SignedUrlWhere>;
};


export type QuerySignedUrlsAggregateArgs = {
  where?: InputMaybe<SignedUrlWhere>;
};


export type QuerySignedUrlsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<SignedUrlSort>>>;
  where?: InputMaybe<SignedUrlWhere>;
};


export type QuerySiteWideDiscussionListFormatsArgs = {
  options?: InputMaybe<SiteWideDiscussionListFormatOptions>;
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type QuerySiteWideDiscussionListFormatsAggregateArgs = {
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type QuerySiteWideDiscussionListFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<SiteWideDiscussionListFormatSort>>>;
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type QuerySuspensionsArgs = {
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type QuerySuspensionsAggregateArgs = {
  where?: InputMaybe<SuspensionWhere>;
};


export type QuerySuspensionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<SuspensionSort>>>;
  where?: InputMaybe<SuspensionWhere>;
};


export type QueryTagsArgs = {
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type QueryTagsAggregateArgs = {
  where?: InputMaybe<TagWhere>;
};


export type QueryTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<TagSort>>>;
  where?: InputMaybe<TagWhere>;
};


export type QueryTextVersionsArgs = {
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type QueryTextVersionsAggregateArgs = {
  where?: InputMaybe<TextVersionWhere>;
};


export type QueryTextVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<TextVersionSort>>>;
  where?: InputMaybe<TextVersionWhere>;
};


export type QueryUsersArgs = {
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type QueryUsersAggregateArgs = {
  where?: InputMaybe<UserWhere>;
};


export type QueryUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<UserSort>>>;
  where?: InputMaybe<UserWhere>;
};


export type QueryWikiPagesArgs = {
  options?: InputMaybe<WikiPageOptions>;
  where?: InputMaybe<WikiPageWhere>;
};


export type QueryWikiPagesAggregateArgs = {
  where?: InputMaybe<WikiPageWhere>;
};


export type QueryWikiPagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<WikiPageSort>>>;
  where?: InputMaybe<WikiPageWhere>;
};

/** Input type for options that can be specified on a query operation. */
export type QueryOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type RecurringEvent = {
  __typename?: 'RecurringEvent';
  Events: Array<Event>;
  EventsAggregate?: Maybe<RecurringEventEventEventsAggregationSelection>;
  EventsConnection: RecurringEventEventsConnection;
  id: Scalars['ID']['output'];
  repeatEnds?: Maybe<RepeatEnds>;
  repeatEvery?: Maybe<RepeatEvery>;
};


export type RecurringEventEventsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type RecurringEventEventsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type RecurringEventEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<RecurringEventEventsConnectionSort>>;
  where?: InputMaybe<RecurringEventEventsConnectionWhere>;
};

export type RecurringEventAggregateSelection = {
  __typename?: 'RecurringEventAggregateSelection';
  count: Scalars['Int']['output'];
  id: IdAggregateSelection;
};

export type RecurringEventConnectInput = {
  Events?: InputMaybe<Array<RecurringEventEventsConnectFieldInput>>;
};

export type RecurringEventConnectWhere = {
  node: RecurringEventWhere;
};

export type RecurringEventConnectedRelationships = {
  __typename?: 'RecurringEventConnectedRelationships';
  Events?: Maybe<RecurringEventEventsConnectedRelationship>;
};

export type RecurringEventCreateInput = {
  Events?: InputMaybe<RecurringEventEventsFieldInput>;
};

export type RecurringEventCreatedEvent = {
  __typename?: 'RecurringEventCreatedEvent';
  createdRecurringEvent: RecurringEventEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type RecurringEventDeleteInput = {
  Events?: InputMaybe<Array<RecurringEventEventsDeleteFieldInput>>;
};

export type RecurringEventDeletedEvent = {
  __typename?: 'RecurringEventDeletedEvent';
  deletedRecurringEvent: RecurringEventEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type RecurringEventDisconnectInput = {
  Events?: InputMaybe<Array<RecurringEventEventsDisconnectFieldInput>>;
};

export type RecurringEventEdge = {
  __typename?: 'RecurringEventEdge';
  cursor: Scalars['String']['output'];
  node: RecurringEvent;
};

export type RecurringEventEventEventsAggregationSelection = {
  __typename?: 'RecurringEventEventEventsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<RecurringEventEventEventsNodeAggregateSelection>;
};

export type RecurringEventEventEventsNodeAggregateSelection = {
  __typename?: 'RecurringEventEventEventsNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type RecurringEventEventPayload = {
  __typename?: 'RecurringEventEventPayload';
  id: Scalars['ID']['output'];
};

export type RecurringEventEventsAggregateInput = {
  AND?: InputMaybe<Array<RecurringEventEventsAggregateInput>>;
  NOT?: InputMaybe<RecurringEventEventsAggregateInput>;
  OR?: InputMaybe<Array<RecurringEventEventsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<RecurringEventEventsNodeAggregationWhereInput>;
};

export type RecurringEventEventsConnectFieldInput = {
  connect?: InputMaybe<Array<EventConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type RecurringEventEventsConnectedRelationship = {
  __typename?: 'RecurringEventEventsConnectedRelationship';
  node: EventEventPayload;
};

export type RecurringEventEventsConnection = {
  __typename?: 'RecurringEventEventsConnection';
  edges: Array<RecurringEventEventsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type RecurringEventEventsConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type RecurringEventEventsConnectionWhere = {
  AND?: InputMaybe<Array<RecurringEventEventsConnectionWhere>>;
  NOT?: InputMaybe<RecurringEventEventsConnectionWhere>;
  OR?: InputMaybe<Array<RecurringEventEventsConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type RecurringEventEventsCreateFieldInput = {
  node: EventCreateInput;
};

export type RecurringEventEventsDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<RecurringEventEventsConnectionWhere>;
};

export type RecurringEventEventsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<RecurringEventEventsConnectionWhere>;
};

export type RecurringEventEventsFieldInput = {
  connect?: InputMaybe<Array<RecurringEventEventsConnectFieldInput>>;
  create?: InputMaybe<Array<RecurringEventEventsCreateFieldInput>>;
};

export type RecurringEventEventsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<RecurringEventEventsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<RecurringEventEventsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<RecurringEventEventsNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type RecurringEventEventsRelationship = {
  __typename?: 'RecurringEventEventsRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type RecurringEventEventsRelationshipSubscriptionWhere = {
  node?: InputMaybe<EventSubscriptionWhere>;
};

export type RecurringEventEventsUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type RecurringEventEventsUpdateFieldInput = {
  connect?: InputMaybe<Array<RecurringEventEventsConnectFieldInput>>;
  create?: InputMaybe<Array<RecurringEventEventsCreateFieldInput>>;
  delete?: InputMaybe<Array<RecurringEventEventsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<RecurringEventEventsDisconnectFieldInput>>;
  update?: InputMaybe<RecurringEventEventsUpdateConnectionInput>;
  where?: InputMaybe<RecurringEventEventsConnectionWhere>;
};

export type RecurringEventOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more RecurringEventSort objects to sort RecurringEvents by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<RecurringEventSort>>;
};

export type RecurringEventRelationInput = {
  Events?: InputMaybe<Array<RecurringEventEventsCreateFieldInput>>;
};

export type RecurringEventRelationshipCreatedEvent = {
  __typename?: 'RecurringEventRelationshipCreatedEvent';
  createdRelationship: RecurringEventConnectedRelationships;
  event: EventType;
  recurringEvent: RecurringEventEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type RecurringEventRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<RecurringEventRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<RecurringEventRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<RecurringEventRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<RecurringEventRelationshipsSubscriptionWhere>;
  recurringEvent?: InputMaybe<RecurringEventSubscriptionWhere>;
};

export type RecurringEventRelationshipDeletedEvent = {
  __typename?: 'RecurringEventRelationshipDeletedEvent';
  deletedRelationship: RecurringEventConnectedRelationships;
  event: EventType;
  recurringEvent: RecurringEventEventPayload;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type RecurringEventRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<RecurringEventRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<RecurringEventRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<RecurringEventRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<RecurringEventRelationshipsSubscriptionWhere>;
  recurringEvent?: InputMaybe<RecurringEventSubscriptionWhere>;
};

export type RecurringEventRelationshipsSubscriptionWhere = {
  Events?: InputMaybe<RecurringEventEventsRelationshipSubscriptionWhere>;
};

/** Fields to sort RecurringEvents by. The order in which sorts are applied is not guaranteed when specifying many fields in one RecurringEventSort object. */
export type RecurringEventSort = {
  id?: InputMaybe<SortDirection>;
};

export type RecurringEventSubscriptionWhere = {
  AND?: InputMaybe<Array<RecurringEventSubscriptionWhere>>;
  NOT?: InputMaybe<RecurringEventSubscriptionWhere>;
  OR?: InputMaybe<Array<RecurringEventSubscriptionWhere>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type RecurringEventUpdateInput = {
  Events?: InputMaybe<Array<RecurringEventEventsUpdateFieldInput>>;
};

export type RecurringEventUpdatedEvent = {
  __typename?: 'RecurringEventUpdatedEvent';
  event: EventType;
  previousState: RecurringEventEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedRecurringEvent: RecurringEventEventPayload;
};

export type RecurringEventWhere = {
  AND?: InputMaybe<Array<RecurringEventWhere>>;
  EventsAggregate?: InputMaybe<RecurringEventEventsAggregateInput>;
  /** Return RecurringEvents where all of the related RecurringEventEventsConnections match this filter */
  EventsConnection_ALL?: InputMaybe<RecurringEventEventsConnectionWhere>;
  /** Return RecurringEvents where none of the related RecurringEventEventsConnections match this filter */
  EventsConnection_NONE?: InputMaybe<RecurringEventEventsConnectionWhere>;
  /** Return RecurringEvents where one of the related RecurringEventEventsConnections match this filter */
  EventsConnection_SINGLE?: InputMaybe<RecurringEventEventsConnectionWhere>;
  /** Return RecurringEvents where some of the related RecurringEventEventsConnections match this filter */
  EventsConnection_SOME?: InputMaybe<RecurringEventEventsConnectionWhere>;
  /** Return RecurringEvents where all of the related Events match this filter */
  Events_ALL?: InputMaybe<EventWhere>;
  /** Return RecurringEvents where none of the related Events match this filter */
  Events_NONE?: InputMaybe<EventWhere>;
  /** Return RecurringEvents where one of the related Events match this filter */
  Events_SINGLE?: InputMaybe<EventWhere>;
  /** Return RecurringEvents where some of the related Events match this filter */
  Events_SOME?: InputMaybe<EventWhere>;
  NOT?: InputMaybe<RecurringEventWhere>;
  OR?: InputMaybe<Array<RecurringEventWhere>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type RecurringEventsConnection = {
  __typename?: 'RecurringEventsConnection';
  edges: Array<RecurringEventEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type RepeatEnds = {
  __typename?: 'RepeatEnds';
  count?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  unit?: Maybe<RepeatUnit>;
  until?: Maybe<Scalars['DateTime']['output']>;
};

export type RepeatEndsAggregateSelection = {
  __typename?: 'RepeatEndsAggregateSelection';
  count: IntAggregateSelection;
  type: StringAggregateSelection;
  until: DateTimeAggregateSelection;
};

export type RepeatEndsConnection = {
  __typename?: 'RepeatEndsConnection';
  edges: Array<RepeatEndsEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type RepeatEndsCreateInput = {
  count?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  until?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RepeatEndsCreatedEvent = {
  __typename?: 'RepeatEndsCreatedEvent';
  createdRepeatEnds: RepeatEndsEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type RepeatEndsDeletedEvent = {
  __typename?: 'RepeatEndsDeletedEvent';
  deletedRepeatEnds: RepeatEndsEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type RepeatEndsEdge = {
  __typename?: 'RepeatEndsEdge';
  cursor: Scalars['String']['output'];
  node: RepeatEnds;
};

export type RepeatEndsEventPayload = {
  __typename?: 'RepeatEndsEventPayload';
  count?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  unit?: Maybe<RepeatUnit>;
  until?: Maybe<Scalars['DateTime']['output']>;
};

export type RepeatEndsOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more RepeatEndsSort objects to sort RepeatEnds by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<RepeatEndsSort>>;
};

/** Fields to sort RepeatEnds by. The order in which sorts are applied is not guaranteed when specifying many fields in one RepeatEndsSort object. */
export type RepeatEndsSort = {
  count?: InputMaybe<SortDirection>;
  type?: InputMaybe<SortDirection>;
  unit?: InputMaybe<SortDirection>;
  until?: InputMaybe<SortDirection>;
};

export type RepeatEndsSubscriptionWhere = {
  AND?: InputMaybe<Array<RepeatEndsSubscriptionWhere>>;
  NOT?: InputMaybe<RepeatEndsSubscriptionWhere>;
  OR?: InputMaybe<Array<RepeatEndsSubscriptionWhere>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  type_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  type_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  type_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type_MATCHES?: InputMaybe<Scalars['String']['input']>;
  type_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  unit_IN?: InputMaybe<Array<InputMaybe<RepeatUnit>>>;
  until?: InputMaybe<Scalars['DateTime']['input']>;
  until_GT?: InputMaybe<Scalars['DateTime']['input']>;
  until_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  until_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  until_LT?: InputMaybe<Scalars['DateTime']['input']>;
  until_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RepeatEndsUpdateInput = {
  count?: InputMaybe<Scalars['Int']['input']>;
  count_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  count_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  until?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RepeatEndsUpdatedEvent = {
  __typename?: 'RepeatEndsUpdatedEvent';
  event: EventType;
  previousState: RepeatEndsEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedRepeatEnds: RepeatEndsEventPayload;
};

export type RepeatEndsWhere = {
  AND?: InputMaybe<Array<RepeatEndsWhere>>;
  NOT?: InputMaybe<RepeatEndsWhere>;
  OR?: InputMaybe<Array<RepeatEndsWhere>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  type_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  type_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  type_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type_MATCHES?: InputMaybe<Scalars['String']['input']>;
  type_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  unit_IN?: InputMaybe<Array<InputMaybe<RepeatUnit>>>;
  until?: InputMaybe<Scalars['DateTime']['input']>;
  until_GT?: InputMaybe<Scalars['DateTime']['input']>;
  until_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  until_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  until_LT?: InputMaybe<Scalars['DateTime']['input']>;
  until_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RepeatEveriesConnection = {
  __typename?: 'RepeatEveriesConnection';
  edges: Array<RepeatEveryEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type RepeatEvery = {
  __typename?: 'RepeatEvery';
  count?: Maybe<Scalars['Int']['output']>;
  unit?: Maybe<RepeatUnit>;
};

export type RepeatEveryAggregateSelection = {
  __typename?: 'RepeatEveryAggregateSelection';
  count: IntAggregateSelection;
};

export type RepeatEveryCreateInput = {
  count?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<RepeatUnit>;
};

export type RepeatEveryCreatedEvent = {
  __typename?: 'RepeatEveryCreatedEvent';
  createdRepeatEvery: RepeatEveryEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type RepeatEveryDeletedEvent = {
  __typename?: 'RepeatEveryDeletedEvent';
  deletedRepeatEvery: RepeatEveryEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type RepeatEveryEdge = {
  __typename?: 'RepeatEveryEdge';
  cursor: Scalars['String']['output'];
  node: RepeatEvery;
};

export type RepeatEveryEventPayload = {
  __typename?: 'RepeatEveryEventPayload';
  count?: Maybe<Scalars['Int']['output']>;
  unit?: Maybe<RepeatUnit>;
};

export type RepeatEveryOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more RepeatEverySort objects to sort RepeatEveries by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<RepeatEverySort>>;
};

/** Fields to sort RepeatEveries by. The order in which sorts are applied is not guaranteed when specifying many fields in one RepeatEverySort object. */
export type RepeatEverySort = {
  count?: InputMaybe<SortDirection>;
  unit?: InputMaybe<SortDirection>;
};

export type RepeatEverySubscriptionWhere = {
  AND?: InputMaybe<Array<RepeatEverySubscriptionWhere>>;
  NOT?: InputMaybe<RepeatEverySubscriptionWhere>;
  OR?: InputMaybe<Array<RepeatEverySubscriptionWhere>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  unit_IN?: InputMaybe<Array<InputMaybe<RepeatUnit>>>;
};

export type RepeatEveryUpdateInput = {
  count?: InputMaybe<Scalars['Int']['input']>;
  count_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  count_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<RepeatUnit>;
};

export type RepeatEveryUpdatedEvent = {
  __typename?: 'RepeatEveryUpdatedEvent';
  event: EventType;
  previousState: RepeatEveryEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedRepeatEvery: RepeatEveryEventPayload;
};

export type RepeatEveryWhere = {
  AND?: InputMaybe<Array<RepeatEveryWhere>>;
  NOT?: InputMaybe<RepeatEveryWhere>;
  OR?: InputMaybe<Array<RepeatEveryWhere>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  unit_IN?: InputMaybe<Array<InputMaybe<RepeatUnit>>>;
};

export enum RepeatUnit {
  Day = 'DAY',
  Month = 'MONTH',
  Week = 'WEEK',
  Year = 'YEAR'
}

export type SafetyCheckResponse = {
  __typename?: 'SafetyCheckResponse';
  environment?: Maybe<EnvironmentInfo>;
};

export type SafetyCheckResponseAggregateSelection = {
  __typename?: 'SafetyCheckResponseAggregateSelection';
  count: Scalars['Int']['output'];
};

export type SafetyCheckResponseCreateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SafetyCheckResponseCreatedEvent = {
  __typename?: 'SafetyCheckResponseCreatedEvent';
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SafetyCheckResponseDeletedEvent = {
  __typename?: 'SafetyCheckResponseDeletedEvent';
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SafetyCheckResponseEdge = {
  __typename?: 'SafetyCheckResponseEdge';
  cursor: Scalars['String']['output'];
  node: SafetyCheckResponse;
};

export type SafetyCheckResponseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type SafetyCheckResponseUpdateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SafetyCheckResponseUpdatedEvent = {
  __typename?: 'SafetyCheckResponseUpdatedEvent';
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SafetyCheckResponseWhere = {
  AND?: InputMaybe<Array<SafetyCheckResponseWhere>>;
  NOT?: InputMaybe<SafetyCheckResponseWhere>;
  OR?: InputMaybe<Array<SafetyCheckResponseWhere>>;
};

export type SafetyCheckResponsesConnection = {
  __typename?: 'SafetyCheckResponsesConnection';
  edges: Array<SafetyCheckResponseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export enum ScanStatus {
  Clean = 'CLEAN',
  Failed = 'FAILED',
  Infected = 'INFECTED',
  Pending = 'PENDING',
  Suspicious = 'SUSPICIOUS'
}

export type SeedDataResponse = {
  __typename?: 'SeedDataResponse';
  message?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type SeedDataResponseAggregateSelection = {
  __typename?: 'SeedDataResponseAggregateSelection';
  count: Scalars['Int']['output'];
  message: StringAggregateSelection;
};

export type SeedDataResponseCreateInput = {
  message?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SeedDataResponseCreatedEvent = {
  __typename?: 'SeedDataResponseCreatedEvent';
  createdSeedDataResponse: SeedDataResponseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SeedDataResponseDeletedEvent = {
  __typename?: 'SeedDataResponseDeletedEvent';
  deletedSeedDataResponse: SeedDataResponseEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SeedDataResponseEdge = {
  __typename?: 'SeedDataResponseEdge';
  cursor: Scalars['String']['output'];
  node: SeedDataResponse;
};

export type SeedDataResponseEventPayload = {
  __typename?: 'SeedDataResponseEventPayload';
  message?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type SeedDataResponseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more SeedDataResponseSort objects to sort SeedDataResponses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SeedDataResponseSort>>;
};

/** Fields to sort SeedDataResponses by. The order in which sorts are applied is not guaranteed when specifying many fields in one SeedDataResponseSort object. */
export type SeedDataResponseSort = {
  message?: InputMaybe<SortDirection>;
  success?: InputMaybe<SortDirection>;
};

export type SeedDataResponseSubscriptionWhere = {
  AND?: InputMaybe<Array<SeedDataResponseSubscriptionWhere>>;
  NOT?: InputMaybe<SeedDataResponseSubscriptionWhere>;
  OR?: InputMaybe<Array<SeedDataResponseSubscriptionWhere>>;
  message?: InputMaybe<Scalars['String']['input']>;
  message_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  message_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  message_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  message_MATCHES?: InputMaybe<Scalars['String']['input']>;
  message_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SeedDataResponseUpdateInput = {
  message?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SeedDataResponseUpdatedEvent = {
  __typename?: 'SeedDataResponseUpdatedEvent';
  event: EventType;
  previousState: SeedDataResponseEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedSeedDataResponse: SeedDataResponseEventPayload;
};

export type SeedDataResponseWhere = {
  AND?: InputMaybe<Array<SeedDataResponseWhere>>;
  NOT?: InputMaybe<SeedDataResponseWhere>;
  OR?: InputMaybe<Array<SeedDataResponseWhere>>;
  message?: InputMaybe<Scalars['String']['input']>;
  message_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  message_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  message_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  message_MATCHES?: InputMaybe<Scalars['String']['input']>;
  message_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SeedDataResponsesConnection = {
  __typename?: 'SeedDataResponsesConnection';
  edges: Array<SeedDataResponseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfig = {
  __typename?: 'ServerConfig';
  AllowedPlugins: Array<Plugin>;
  AllowedPluginsAggregate?: Maybe<ServerConfigPluginAllowedPluginsAggregationSelection>;
  AllowedPluginsConnection: ServerConfigAllowedPluginsConnection;
  DefaultElevatedModRole?: Maybe<ModServerRole>;
  DefaultElevatedModRoleAggregate?: Maybe<ServerConfigModServerRoleDefaultElevatedModRoleAggregationSelection>;
  DefaultElevatedModRoleConnection: ServerConfigDefaultElevatedModRoleConnection;
  DefaultModRole?: Maybe<ModServerRole>;
  DefaultModRoleAggregate?: Maybe<ServerConfigModServerRoleDefaultModRoleAggregationSelection>;
  DefaultModRoleConnection: ServerConfigDefaultModRoleConnection;
  DefaultServerRole?: Maybe<ServerRole>;
  DefaultServerRoleAggregate?: Maybe<ServerConfigServerRoleDefaultServerRoleAggregationSelection>;
  DefaultServerRoleConnection: ServerConfigDefaultServerRoleConnection;
  DefaultSuspendedModRole?: Maybe<ModServerRole>;
  DefaultSuspendedModRoleAggregate?: Maybe<ServerConfigModServerRoleDefaultSuspendedModRoleAggregationSelection>;
  DefaultSuspendedModRoleConnection: ServerConfigDefaultSuspendedModRoleConnection;
  DefaultSuspendedRole?: Maybe<ServerRole>;
  DefaultSuspendedRoleAggregate?: Maybe<ServerConfigServerRoleDefaultSuspendedRoleAggregationSelection>;
  DefaultSuspendedRoleConnection: ServerConfigDefaultSuspendedRoleConnection;
  InstalledVersions: Array<PluginVersion>;
  InstalledVersionsAggregate?: Maybe<ServerConfigPluginVersionInstalledVersionsAggregationSelection>;
  InstalledVersionsConnection: ServerConfigInstalledVersionsConnection;
  allowedFileTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  enableDownloads?: Maybe<Scalars['Boolean']['output']>;
  enableEvents?: Maybe<Scalars['Boolean']['output']>;
  pluginRegistries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  rules?: Maybe<Scalars['JSON']['output']>;
  serverDescription?: Maybe<Scalars['String']['output']>;
  serverIconURL?: Maybe<Scalars['String']['output']>;
  serverName?: Maybe<Scalars['String']['output']>;
};


export type ServerConfigAllowedPluginsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<PluginOptions>;
  where?: InputMaybe<PluginWhere>;
};


export type ServerConfigAllowedPluginsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<PluginWhere>;
};


export type ServerConfigAllowedPluginsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigAllowedPluginsConnectionSort>>;
  where?: InputMaybe<ServerConfigAllowedPluginsConnectionWhere>;
};


export type ServerConfigDefaultElevatedModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultElevatedModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultElevatedModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
};


export type ServerConfigDefaultModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultModRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
};


export type ServerConfigDefaultServerRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ServerRoleOptions>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type ServerConfigDefaultServerRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type ServerConfigDefaultServerRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultServerRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
};


export type ServerConfigDefaultSuspendedModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultSuspendedModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultSuspendedModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
};


export type ServerConfigDefaultSuspendedRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ServerRoleOptions>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type ServerConfigDefaultSuspendedRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type ServerConfigDefaultSuspendedRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
};


export type ServerConfigInstalledVersionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<PluginVersionOptions>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type ServerConfigInstalledVersionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<PluginVersionWhere>;
};


export type ServerConfigInstalledVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigInstalledVersionsConnectionSort>>;
  where?: InputMaybe<ServerConfigInstalledVersionsConnectionWhere>;
};

export type ServerConfigAggregateSelection = {
  __typename?: 'ServerConfigAggregateSelection';
  count: Scalars['Int']['output'];
  serverDescription: StringAggregateSelection;
  serverIconURL: StringAggregateSelection;
  serverName: StringAggregateSelection;
};

export type ServerConfigAllowedPluginsAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigAllowedPluginsAggregateInput>>;
  NOT?: InputMaybe<ServerConfigAllowedPluginsAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigAllowedPluginsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigAllowedPluginsNodeAggregationWhereInput>;
};

export type ServerConfigAllowedPluginsConnectFieldInput = {
  connect?: InputMaybe<Array<PluginConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<PluginConnectWhere>;
};

export type ServerConfigAllowedPluginsConnectedRelationship = {
  __typename?: 'ServerConfigAllowedPluginsConnectedRelationship';
  node: PluginEventPayload;
};

export type ServerConfigAllowedPluginsConnection = {
  __typename?: 'ServerConfigAllowedPluginsConnection';
  edges: Array<ServerConfigAllowedPluginsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigAllowedPluginsConnectionSort = {
  node?: InputMaybe<PluginSort>;
};

export type ServerConfigAllowedPluginsConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigAllowedPluginsConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigAllowedPluginsConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigAllowedPluginsConnectionWhere>>;
  node?: InputMaybe<PluginWhere>;
};

export type ServerConfigAllowedPluginsCreateFieldInput = {
  node: PluginCreateInput;
};

export type ServerConfigAllowedPluginsDeleteFieldInput = {
  delete?: InputMaybe<PluginDeleteInput>;
  where?: InputMaybe<ServerConfigAllowedPluginsConnectionWhere>;
};

export type ServerConfigAllowedPluginsDisconnectFieldInput = {
  disconnect?: InputMaybe<PluginDisconnectInput>;
  where?: InputMaybe<ServerConfigAllowedPluginsConnectionWhere>;
};

export type ServerConfigAllowedPluginsFieldInput = {
  connect?: InputMaybe<Array<ServerConfigAllowedPluginsConnectFieldInput>>;
  create?: InputMaybe<Array<ServerConfigAllowedPluginsCreateFieldInput>>;
};

export type ServerConfigAllowedPluginsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigAllowedPluginsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigAllowedPluginsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigAllowedPluginsNodeAggregationWhereInput>>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigAllowedPluginsRelationship = {
  __typename?: 'ServerConfigAllowedPluginsRelationship';
  cursor: Scalars['String']['output'];
  node: Plugin;
};

export type ServerConfigAllowedPluginsRelationshipSubscriptionWhere = {
  node?: InputMaybe<PluginSubscriptionWhere>;
};

export type ServerConfigAllowedPluginsUpdateConnectionInput = {
  node?: InputMaybe<PluginUpdateInput>;
};

export type ServerConfigAllowedPluginsUpdateFieldInput = {
  connect?: InputMaybe<Array<ServerConfigAllowedPluginsConnectFieldInput>>;
  create?: InputMaybe<Array<ServerConfigAllowedPluginsCreateFieldInput>>;
  delete?: InputMaybe<Array<ServerConfigAllowedPluginsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ServerConfigAllowedPluginsDisconnectFieldInput>>;
  update?: InputMaybe<ServerConfigAllowedPluginsUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigAllowedPluginsConnectionWhere>;
};

export type ServerConfigConnectInput = {
  AllowedPlugins?: InputMaybe<Array<ServerConfigAllowedPluginsConnectFieldInput>>;
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleConnectFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleConnectFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectFieldInput>;
  InstalledVersions?: InputMaybe<Array<ServerConfigInstalledVersionsConnectFieldInput>>;
};

export type ServerConfigConnectOrCreateInput = {
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleConnectOrCreateFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleConnectOrCreateFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInput>;
};

export type ServerConfigConnectedRelationships = {
  __typename?: 'ServerConfigConnectedRelationships';
  AllowedPlugins?: Maybe<ServerConfigAllowedPluginsConnectedRelationship>;
  DefaultElevatedModRole?: Maybe<ServerConfigDefaultElevatedModRoleConnectedRelationship>;
  DefaultModRole?: Maybe<ServerConfigDefaultModRoleConnectedRelationship>;
  DefaultServerRole?: Maybe<ServerConfigDefaultServerRoleConnectedRelationship>;
  DefaultSuspendedModRole?: Maybe<ServerConfigDefaultSuspendedModRoleConnectedRelationship>;
  DefaultSuspendedRole?: Maybe<ServerConfigDefaultSuspendedRoleConnectedRelationship>;
  InstalledVersions?: Maybe<ServerConfigInstalledVersionsConnectedRelationship>;
};

export type ServerConfigCreateInput = {
  AllowedPlugins?: InputMaybe<ServerConfigAllowedPluginsFieldInput>;
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleFieldInput>;
  InstalledVersions?: InputMaybe<ServerConfigInstalledVersionsFieldInput>;
  allowedFileTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  enableDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  enableEvents?: InputMaybe<Scalars['Boolean']['input']>;
  pluginRegistries?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  serverDescription?: InputMaybe<Scalars['String']['input']>;
  serverIconURL?: InputMaybe<Scalars['String']['input']>;
  serverName?: InputMaybe<Scalars['String']['input']>;
};

export type ServerConfigCreatedEvent = {
  __typename?: 'ServerConfigCreatedEvent';
  createdServerConfig: ServerConfigEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ServerConfigDefaultElevatedModRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultElevatedModRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultElevatedModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModServerRoleConnectWhere>;
};

export type ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInputOnCreate;
  where: ModServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModServerRoleOnCreateInput;
};

export type ServerConfigDefaultElevatedModRoleConnectedRelationship = {
  __typename?: 'ServerConfigDefaultElevatedModRoleConnectedRelationship';
  node: ModServerRoleEventPayload;
};

export type ServerConfigDefaultElevatedModRoleConnection = {
  __typename?: 'ServerConfigDefaultElevatedModRoleConnection';
  edges: Array<ServerConfigDefaultElevatedModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultElevatedModRoleConnectionSort = {
  node?: InputMaybe<ModServerRoleSort>;
};

export type ServerConfigDefaultElevatedModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleConnectionWhere>>;
  node?: InputMaybe<ModServerRoleWhere>;
};

export type ServerConfigDefaultElevatedModRoleCreateFieldInput = {
  node: ModServerRoleCreateInput;
};

export type ServerConfigDefaultElevatedModRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
};

export type ServerConfigDefaultElevatedModRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
};

export type ServerConfigDefaultElevatedModRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultElevatedModRoleCreateFieldInput>;
};

export type ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultElevatedModRoleRelationship = {
  __typename?: 'ServerConfigDefaultElevatedModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ServerConfigDefaultElevatedModRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModServerRoleSubscriptionWhere>;
};

export type ServerConfigDefaultElevatedModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModServerRoleUpdateInput>;
};

export type ServerConfigDefaultElevatedModRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultElevatedModRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultElevatedModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultElevatedModRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultElevatedModRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
};

export type ServerConfigDefaultModRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultModRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultModRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultModRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModServerRoleConnectWhere>;
};

export type ServerConfigDefaultModRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultModRoleConnectOrCreateFieldInputOnCreate;
  where: ModServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModServerRoleOnCreateInput;
};

export type ServerConfigDefaultModRoleConnectedRelationship = {
  __typename?: 'ServerConfigDefaultModRoleConnectedRelationship';
  node: ModServerRoleEventPayload;
};

export type ServerConfigDefaultModRoleConnection = {
  __typename?: 'ServerConfigDefaultModRoleConnection';
  edges: Array<ServerConfigDefaultModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultModRoleConnectionSort = {
  node?: InputMaybe<ModServerRoleSort>;
};

export type ServerConfigDefaultModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultModRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultModRoleConnectionWhere>>;
  node?: InputMaybe<ModServerRoleWhere>;
};

export type ServerConfigDefaultModRoleCreateFieldInput = {
  node: ModServerRoleCreateInput;
};

export type ServerConfigDefaultModRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
};

export type ServerConfigDefaultModRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
};

export type ServerConfigDefaultModRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultModRoleCreateFieldInput>;
};

export type ServerConfigDefaultModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultModRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultModRoleRelationship = {
  __typename?: 'ServerConfigDefaultModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ServerConfigDefaultModRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModServerRoleSubscriptionWhere>;
};

export type ServerConfigDefaultModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModServerRoleUpdateInput>;
};

export type ServerConfigDefaultModRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultModRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultModRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultModRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
};

export type ServerConfigDefaultServerRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultServerRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultServerRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultServerRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultServerRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultServerRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ServerRoleConnectWhere>;
};

export type ServerConfigDefaultServerRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultServerRoleConnectOrCreateFieldInputOnCreate;
  where: ServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultServerRoleConnectOrCreateFieldInputOnCreate = {
  node: ServerRoleOnCreateInput;
};

export type ServerConfigDefaultServerRoleConnectedRelationship = {
  __typename?: 'ServerConfigDefaultServerRoleConnectedRelationship';
  node: ServerRoleEventPayload;
};

export type ServerConfigDefaultServerRoleConnection = {
  __typename?: 'ServerConfigDefaultServerRoleConnection';
  edges: Array<ServerConfigDefaultServerRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultServerRoleConnectionSort = {
  node?: InputMaybe<ServerRoleSort>;
};

export type ServerConfigDefaultServerRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultServerRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultServerRoleConnectionWhere>>;
  node?: InputMaybe<ServerRoleWhere>;
};

export type ServerConfigDefaultServerRoleCreateFieldInput = {
  node: ServerRoleCreateInput;
};

export type ServerConfigDefaultServerRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
};

export type ServerConfigDefaultServerRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
};

export type ServerConfigDefaultServerRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultServerRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultServerRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultServerRoleCreateFieldInput>;
};

export type ServerConfigDefaultServerRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultServerRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultServerRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultServerRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultServerRoleRelationship = {
  __typename?: 'ServerConfigDefaultServerRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ServerRole;
};

export type ServerConfigDefaultServerRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ServerRoleSubscriptionWhere>;
};

export type ServerConfigDefaultServerRoleUpdateConnectionInput = {
  node?: InputMaybe<ServerRoleUpdateInput>;
};

export type ServerConfigDefaultServerRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultServerRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultServerRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultServerRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultServerRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultServerRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultServerRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedModRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedModRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultSuspendedModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModServerRoleConnectWhere>;
};

export type ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInputOnCreate;
  where: ModServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModServerRoleOnCreateInput;
};

export type ServerConfigDefaultSuspendedModRoleConnectedRelationship = {
  __typename?: 'ServerConfigDefaultSuspendedModRoleConnectedRelationship';
  node: ModServerRoleEventPayload;
};

export type ServerConfigDefaultSuspendedModRoleConnection = {
  __typename?: 'ServerConfigDefaultSuspendedModRoleConnection';
  edges: Array<ServerConfigDefaultSuspendedModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultSuspendedModRoleConnectionSort = {
  node?: InputMaybe<ModServerRoleSort>;
};

export type ServerConfigDefaultSuspendedModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleConnectionWhere>>;
  node?: InputMaybe<ModServerRoleWhere>;
};

export type ServerConfigDefaultSuspendedModRoleCreateFieldInput = {
  node: ModServerRoleCreateInput;
};

export type ServerConfigDefaultSuspendedModRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedModRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedModRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultSuspendedModRoleCreateFieldInput>;
};

export type ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultSuspendedModRoleRelationship = {
  __typename?: 'ServerConfigDefaultSuspendedModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ServerConfigDefaultSuspendedModRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModServerRoleSubscriptionWhere>;
};

export type ServerConfigDefaultSuspendedModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModServerRoleUpdateInput>;
};

export type ServerConfigDefaultSuspendedModRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultSuspendedModRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultSuspendedModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultSuspendedModRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultSuspendedModRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultSuspendedRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ServerRoleConnectWhere>;
};

export type ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInputOnCreate;
  where: ServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInputOnCreate = {
  node: ServerRoleOnCreateInput;
};

export type ServerConfigDefaultSuspendedRoleConnectedRelationship = {
  __typename?: 'ServerConfigDefaultSuspendedRoleConnectedRelationship';
  node: ServerRoleEventPayload;
};

export type ServerConfigDefaultSuspendedRoleConnection = {
  __typename?: 'ServerConfigDefaultSuspendedRoleConnection';
  edges: Array<ServerConfigDefaultSuspendedRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultSuspendedRoleConnectionSort = {
  node?: InputMaybe<ServerRoleSort>;
};

export type ServerConfigDefaultSuspendedRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleConnectionWhere>>;
  node?: InputMaybe<ServerRoleWhere>;
};

export type ServerConfigDefaultSuspendedRoleCreateFieldInput = {
  node: ServerRoleCreateInput;
};

export type ServerConfigDefaultSuspendedRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultSuspendedRoleCreateFieldInput>;
};

export type ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultSuspendedRoleRelationship = {
  __typename?: 'ServerConfigDefaultSuspendedRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ServerRole;
};

export type ServerConfigDefaultSuspendedRoleRelationshipSubscriptionWhere = {
  node?: InputMaybe<ServerRoleSubscriptionWhere>;
};

export type ServerConfigDefaultSuspendedRoleUpdateConnectionInput = {
  node?: InputMaybe<ServerRoleUpdateInput>;
};

export type ServerConfigDefaultSuspendedRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultSuspendedRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultSuspendedRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultSuspendedRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultSuspendedRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
};

export type ServerConfigDeleteInput = {
  AllowedPlugins?: InputMaybe<Array<ServerConfigAllowedPluginsDeleteFieldInput>>;
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleDeleteFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleDeleteFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleDeleteFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleDeleteFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleDeleteFieldInput>;
  InstalledVersions?: InputMaybe<Array<ServerConfigInstalledVersionsDeleteFieldInput>>;
};

export type ServerConfigDeletedEvent = {
  __typename?: 'ServerConfigDeletedEvent';
  deletedServerConfig: ServerConfigEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ServerConfigDisconnectInput = {
  AllowedPlugins?: InputMaybe<Array<ServerConfigAllowedPluginsDisconnectFieldInput>>;
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleDisconnectFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleDisconnectFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleDisconnectFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleDisconnectFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleDisconnectFieldInput>;
  InstalledVersions?: InputMaybe<Array<ServerConfigInstalledVersionsDisconnectFieldInput>>;
};

export type ServerConfigEdge = {
  __typename?: 'ServerConfigEdge';
  cursor: Scalars['String']['output'];
  node: ServerConfig;
};

export type ServerConfigEventPayload = {
  __typename?: 'ServerConfigEventPayload';
  allowedFileTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  enableDownloads?: Maybe<Scalars['Boolean']['output']>;
  enableEvents?: Maybe<Scalars['Boolean']['output']>;
  pluginRegistries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  rules?: Maybe<Scalars['JSON']['output']>;
  serverDescription?: Maybe<Scalars['String']['output']>;
  serverIconURL?: Maybe<Scalars['String']['output']>;
  serverName?: Maybe<Scalars['String']['output']>;
};

export type ServerConfigInstalledVersionsAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigInstalledVersionsAggregateInput>>;
  NOT?: InputMaybe<ServerConfigInstalledVersionsAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigInstalledVersionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigInstalledVersionsNodeAggregationWhereInput>;
};

export type ServerConfigInstalledVersionsConnectFieldInput = {
  connect?: InputMaybe<Array<PluginVersionConnectInput>>;
  edge: InstallationPropertiesCreateInput;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<PluginVersionConnectWhere>;
};

export type ServerConfigInstalledVersionsConnectedRelationship = {
  __typename?: 'ServerConfigInstalledVersionsConnectedRelationship';
  enabled: Scalars['Boolean']['output'];
  node: PluginVersionEventPayload;
  settingsJson?: Maybe<Scalars['JSON']['output']>;
};

export type ServerConfigInstalledVersionsConnection = {
  __typename?: 'ServerConfigInstalledVersionsConnection';
  edges: Array<ServerConfigInstalledVersionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigInstalledVersionsConnectionSort = {
  edge?: InputMaybe<InstallationPropertiesSort>;
  node?: InputMaybe<PluginVersionSort>;
};

export type ServerConfigInstalledVersionsConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigInstalledVersionsConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigInstalledVersionsConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigInstalledVersionsConnectionWhere>>;
  edge?: InputMaybe<InstallationPropertiesWhere>;
  node?: InputMaybe<PluginVersionWhere>;
};

export type ServerConfigInstalledVersionsCreateFieldInput = {
  edge: InstallationPropertiesCreateInput;
  node: PluginVersionCreateInput;
};

export type ServerConfigInstalledVersionsDeleteFieldInput = {
  delete?: InputMaybe<PluginVersionDeleteInput>;
  where?: InputMaybe<ServerConfigInstalledVersionsConnectionWhere>;
};

export type ServerConfigInstalledVersionsDisconnectFieldInput = {
  disconnect?: InputMaybe<PluginVersionDisconnectInput>;
  where?: InputMaybe<ServerConfigInstalledVersionsConnectionWhere>;
};

export type ServerConfigInstalledVersionsFieldInput = {
  connect?: InputMaybe<Array<ServerConfigInstalledVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<ServerConfigInstalledVersionsCreateFieldInput>>;
};

export type ServerConfigInstalledVersionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigInstalledVersionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigInstalledVersionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigInstalledVersionsNodeAggregationWhereInput>>;
  entryPath_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  entryPath_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  entryPath_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  entryPath_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  repoUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  repoUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  version_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  version_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  version_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  version_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  version_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigInstalledVersionsRelationship = {
  __typename?: 'ServerConfigInstalledVersionsRelationship';
  cursor: Scalars['String']['output'];
  node: PluginVersion;
  properties: InstallationProperties;
};

export type ServerConfigInstalledVersionsRelationshipSubscriptionWhere = {
  edge?: InputMaybe<InstallationPropertiesSubscriptionWhere>;
  node?: InputMaybe<PluginVersionSubscriptionWhere>;
};

export type ServerConfigInstalledVersionsUpdateConnectionInput = {
  edge?: InputMaybe<InstallationPropertiesUpdateInput>;
  node?: InputMaybe<PluginVersionUpdateInput>;
};

export type ServerConfigInstalledVersionsUpdateFieldInput = {
  connect?: InputMaybe<Array<ServerConfigInstalledVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<ServerConfigInstalledVersionsCreateFieldInput>>;
  delete?: InputMaybe<Array<ServerConfigInstalledVersionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ServerConfigInstalledVersionsDisconnectFieldInput>>;
  update?: InputMaybe<ServerConfigInstalledVersionsUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigInstalledVersionsConnectionWhere>;
};

export type ServerConfigModServerRoleDefaultElevatedModRoleAggregationSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultElevatedModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigModServerRoleDefaultElevatedModRoleNodeAggregateSelection>;
};

export type ServerConfigModServerRoleDefaultElevatedModRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultElevatedModRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerConfigModServerRoleDefaultModRoleAggregationSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigModServerRoleDefaultModRoleNodeAggregateSelection>;
};

export type ServerConfigModServerRoleDefaultModRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultModRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerConfigModServerRoleDefaultSuspendedModRoleAggregationSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultSuspendedModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigModServerRoleDefaultSuspendedModRoleNodeAggregateSelection>;
};

export type ServerConfigModServerRoleDefaultSuspendedModRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultSuspendedModRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerConfigOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ServerConfigSort objects to sort ServerConfigs by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ServerConfigSort>>;
};

export type ServerConfigPluginAllowedPluginsAggregationSelection = {
  __typename?: 'ServerConfigPluginAllowedPluginsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigPluginAllowedPluginsNodeAggregateSelection>;
};

export type ServerConfigPluginAllowedPluginsNodeAggregateSelection = {
  __typename?: 'ServerConfigPluginAllowedPluginsNodeAggregateSelection';
  id: IdAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerConfigPluginVersionInstalledVersionsAggregationSelection = {
  __typename?: 'ServerConfigPluginVersionInstalledVersionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigPluginVersionInstalledVersionsNodeAggregateSelection>;
};

export type ServerConfigPluginVersionInstalledVersionsNodeAggregateSelection = {
  __typename?: 'ServerConfigPluginVersionInstalledVersionsNodeAggregateSelection';
  entryPath: StringAggregateSelection;
  id: IdAggregateSelection;
  repoUrl: StringAggregateSelection;
  version: StringAggregateSelection;
};

export type ServerConfigRelationInput = {
  AllowedPlugins?: InputMaybe<Array<ServerConfigAllowedPluginsCreateFieldInput>>;
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleCreateFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleCreateFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleCreateFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleCreateFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleCreateFieldInput>;
  InstalledVersions?: InputMaybe<Array<ServerConfigInstalledVersionsCreateFieldInput>>;
};

export type ServerConfigRelationshipCreatedEvent = {
  __typename?: 'ServerConfigRelationshipCreatedEvent';
  createdRelationship: ServerConfigConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  serverConfig: ServerConfigEventPayload;
  timestamp: Scalars['Float']['output'];
};

export type ServerConfigRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<ServerConfigRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<ServerConfigRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<ServerConfigRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<ServerConfigRelationshipsSubscriptionWhere>;
  serverConfig?: InputMaybe<ServerConfigSubscriptionWhere>;
};

export type ServerConfigRelationshipDeletedEvent = {
  __typename?: 'ServerConfigRelationshipDeletedEvent';
  deletedRelationship: ServerConfigConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  serverConfig: ServerConfigEventPayload;
  timestamp: Scalars['Float']['output'];
};

export type ServerConfigRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<ServerConfigRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<ServerConfigRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<ServerConfigRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<ServerConfigRelationshipsSubscriptionWhere>;
  serverConfig?: InputMaybe<ServerConfigSubscriptionWhere>;
};

export type ServerConfigRelationshipsSubscriptionWhere = {
  AllowedPlugins?: InputMaybe<ServerConfigAllowedPluginsRelationshipSubscriptionWhere>;
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleRelationshipSubscriptionWhere>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleRelationshipSubscriptionWhere>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleRelationshipSubscriptionWhere>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleRelationshipSubscriptionWhere>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleRelationshipSubscriptionWhere>;
  InstalledVersions?: InputMaybe<ServerConfigInstalledVersionsRelationshipSubscriptionWhere>;
};

export type ServerConfigServerRoleDefaultServerRoleAggregationSelection = {
  __typename?: 'ServerConfigServerRoleDefaultServerRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigServerRoleDefaultServerRoleNodeAggregateSelection>;
};

export type ServerConfigServerRoleDefaultServerRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigServerRoleDefaultServerRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerConfigServerRoleDefaultSuspendedRoleAggregationSelection = {
  __typename?: 'ServerConfigServerRoleDefaultSuspendedRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigServerRoleDefaultSuspendedRoleNodeAggregateSelection>;
};

export type ServerConfigServerRoleDefaultSuspendedRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigServerRoleDefaultSuspendedRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

/** Fields to sort ServerConfigs by. The order in which sorts are applied is not guaranteed when specifying many fields in one ServerConfigSort object. */
export type ServerConfigSort = {
  enableDownloads?: InputMaybe<SortDirection>;
  enableEvents?: InputMaybe<SortDirection>;
  rules?: InputMaybe<SortDirection>;
  serverDescription?: InputMaybe<SortDirection>;
  serverIconURL?: InputMaybe<SortDirection>;
  serverName?: InputMaybe<SortDirection>;
};

export type ServerConfigSubscriptionWhere = {
  AND?: InputMaybe<Array<ServerConfigSubscriptionWhere>>;
  NOT?: InputMaybe<ServerConfigSubscriptionWhere>;
  OR?: InputMaybe<Array<ServerConfigSubscriptionWhere>>;
  allowedFileTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  allowedFileTypes_INCLUDES?: InputMaybe<Scalars['String']['input']>;
  enableDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  enableEvents?: InputMaybe<Scalars['Boolean']['input']>;
  pluginRegistries?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  pluginRegistries_INCLUDES?: InputMaybe<Scalars['String']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  rules_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  serverDescription?: InputMaybe<Scalars['String']['input']>;
  serverDescription_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  serverDescription_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverDescription_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  serverDescription_MATCHES?: InputMaybe<Scalars['String']['input']>;
  serverDescription_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverIconURL?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  serverIconURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverName?: InputMaybe<Scalars['String']['input']>;
  serverName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  serverName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  serverName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  serverName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ServerConfigUpdateInput = {
  AllowedPlugins?: InputMaybe<Array<ServerConfigAllowedPluginsUpdateFieldInput>>;
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleUpdateFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleUpdateFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleUpdateFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleUpdateFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleUpdateFieldInput>;
  InstalledVersions?: InputMaybe<Array<ServerConfigInstalledVersionsUpdateFieldInput>>;
  allowedFileTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  allowedFileTypes_POP?: InputMaybe<Scalars['Int']['input']>;
  allowedFileTypes_PUSH?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  enableDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  enableEvents?: InputMaybe<Scalars['Boolean']['input']>;
  pluginRegistries?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  pluginRegistries_POP?: InputMaybe<Scalars['Int']['input']>;
  pluginRegistries_PUSH?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  serverDescription?: InputMaybe<Scalars['String']['input']>;
  serverIconURL?: InputMaybe<Scalars['String']['input']>;
  serverName?: InputMaybe<Scalars['String']['input']>;
};

export type ServerConfigUpdatedEvent = {
  __typename?: 'ServerConfigUpdatedEvent';
  event: EventType;
  previousState: ServerConfigEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedServerConfig: ServerConfigEventPayload;
};

export type ServerConfigWhere = {
  AND?: InputMaybe<Array<ServerConfigWhere>>;
  AllowedPluginsAggregate?: InputMaybe<ServerConfigAllowedPluginsAggregateInput>;
  /** Return ServerConfigs where all of the related ServerConfigAllowedPluginsConnections match this filter */
  AllowedPluginsConnection_ALL?: InputMaybe<ServerConfigAllowedPluginsConnectionWhere>;
  /** Return ServerConfigs where none of the related ServerConfigAllowedPluginsConnections match this filter */
  AllowedPluginsConnection_NONE?: InputMaybe<ServerConfigAllowedPluginsConnectionWhere>;
  /** Return ServerConfigs where one of the related ServerConfigAllowedPluginsConnections match this filter */
  AllowedPluginsConnection_SINGLE?: InputMaybe<ServerConfigAllowedPluginsConnectionWhere>;
  /** Return ServerConfigs where some of the related ServerConfigAllowedPluginsConnections match this filter */
  AllowedPluginsConnection_SOME?: InputMaybe<ServerConfigAllowedPluginsConnectionWhere>;
  /** Return ServerConfigs where all of the related Plugins match this filter */
  AllowedPlugins_ALL?: InputMaybe<PluginWhere>;
  /** Return ServerConfigs where none of the related Plugins match this filter */
  AllowedPlugins_NONE?: InputMaybe<PluginWhere>;
  /** Return ServerConfigs where one of the related Plugins match this filter */
  AllowedPlugins_SINGLE?: InputMaybe<PluginWhere>;
  /** Return ServerConfigs where some of the related Plugins match this filter */
  AllowedPlugins_SOME?: InputMaybe<PluginWhere>;
  DefaultElevatedModRole?: InputMaybe<ModServerRoleWhere>;
  DefaultElevatedModRoleAggregate?: InputMaybe<ServerConfigDefaultElevatedModRoleAggregateInput>;
  DefaultElevatedModRoleConnection?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
  DefaultElevatedModRoleConnection_NOT?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
  DefaultElevatedModRole_NOT?: InputMaybe<ModServerRoleWhere>;
  DefaultModRole?: InputMaybe<ModServerRoleWhere>;
  DefaultModRoleAggregate?: InputMaybe<ServerConfigDefaultModRoleAggregateInput>;
  DefaultModRoleConnection?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
  DefaultModRoleConnection_NOT?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
  DefaultModRole_NOT?: InputMaybe<ModServerRoleWhere>;
  DefaultServerRole?: InputMaybe<ServerRoleWhere>;
  DefaultServerRoleAggregate?: InputMaybe<ServerConfigDefaultServerRoleAggregateInput>;
  DefaultServerRoleConnection?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
  DefaultServerRoleConnection_NOT?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
  DefaultServerRole_NOT?: InputMaybe<ServerRoleWhere>;
  DefaultSuspendedModRole?: InputMaybe<ModServerRoleWhere>;
  DefaultSuspendedModRoleAggregate?: InputMaybe<ServerConfigDefaultSuspendedModRoleAggregateInput>;
  DefaultSuspendedModRoleConnection?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
  DefaultSuspendedModRoleConnection_NOT?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
  DefaultSuspendedModRole_NOT?: InputMaybe<ModServerRoleWhere>;
  DefaultSuspendedRole?: InputMaybe<ServerRoleWhere>;
  DefaultSuspendedRoleAggregate?: InputMaybe<ServerConfigDefaultSuspendedRoleAggregateInput>;
  DefaultSuspendedRoleConnection?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
  DefaultSuspendedRoleConnection_NOT?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
  DefaultSuspendedRole_NOT?: InputMaybe<ServerRoleWhere>;
  InstalledVersionsAggregate?: InputMaybe<ServerConfigInstalledVersionsAggregateInput>;
  /** Return ServerConfigs where all of the related ServerConfigInstalledVersionsConnections match this filter */
  InstalledVersionsConnection_ALL?: InputMaybe<ServerConfigInstalledVersionsConnectionWhere>;
  /** Return ServerConfigs where none of the related ServerConfigInstalledVersionsConnections match this filter */
  InstalledVersionsConnection_NONE?: InputMaybe<ServerConfigInstalledVersionsConnectionWhere>;
  /** Return ServerConfigs where one of the related ServerConfigInstalledVersionsConnections match this filter */
  InstalledVersionsConnection_SINGLE?: InputMaybe<ServerConfigInstalledVersionsConnectionWhere>;
  /** Return ServerConfigs where some of the related ServerConfigInstalledVersionsConnections match this filter */
  InstalledVersionsConnection_SOME?: InputMaybe<ServerConfigInstalledVersionsConnectionWhere>;
  /** Return ServerConfigs where all of the related PluginVersions match this filter */
  InstalledVersions_ALL?: InputMaybe<PluginVersionWhere>;
  /** Return ServerConfigs where none of the related PluginVersions match this filter */
  InstalledVersions_NONE?: InputMaybe<PluginVersionWhere>;
  /** Return ServerConfigs where one of the related PluginVersions match this filter */
  InstalledVersions_SINGLE?: InputMaybe<PluginVersionWhere>;
  /** Return ServerConfigs where some of the related PluginVersions match this filter */
  InstalledVersions_SOME?: InputMaybe<PluginVersionWhere>;
  NOT?: InputMaybe<ServerConfigWhere>;
  OR?: InputMaybe<Array<ServerConfigWhere>>;
  allowedFileTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  allowedFileTypes_INCLUDES?: InputMaybe<Scalars['String']['input']>;
  enableDownloads?: InputMaybe<Scalars['Boolean']['input']>;
  enableEvents?: InputMaybe<Scalars['Boolean']['input']>;
  pluginRegistries?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  pluginRegistries_INCLUDES?: InputMaybe<Scalars['String']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  rules_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  serverDescription?: InputMaybe<Scalars['String']['input']>;
  serverDescription_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  serverDescription_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverDescription_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  serverDescription_MATCHES?: InputMaybe<Scalars['String']['input']>;
  serverDescription_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverIconURL?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  serverIconURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverName?: InputMaybe<Scalars['String']['input']>;
  serverName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  serverName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  serverName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  serverName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ServerConfigsConnection = {
  __typename?: 'ServerConfigsConnection';
  edges: Array<ServerConfigEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerRole = {
  __typename?: 'ServerRole';
  canCreateChannel?: Maybe<Scalars['Boolean']['output']>;
  canCreateComment?: Maybe<Scalars['Boolean']['output']>;
  canCreateDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canCreateEvent?: Maybe<Scalars['Boolean']['output']>;
  canGiveFeedback?: Maybe<Scalars['Boolean']['output']>;
  canUploadFile?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteComment?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteDiscussion?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  showAdminTag?: Maybe<Scalars['Boolean']['output']>;
};

export type ServerRoleAggregateSelection = {
  __typename?: 'ServerRoleAggregateSelection';
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerRoleConnectOrCreateWhere = {
  node: ServerRoleUniqueWhere;
};

export type ServerRoleConnectWhere = {
  node: ServerRoleWhere;
};

export type ServerRoleCreateInput = {
  canCreateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showAdminTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServerRoleCreatedEvent = {
  __typename?: 'ServerRoleCreatedEvent';
  createdServerRole: ServerRoleEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ServerRoleDeletedEvent = {
  __typename?: 'ServerRoleDeletedEvent';
  deletedServerRole: ServerRoleEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ServerRoleEdge = {
  __typename?: 'ServerRoleEdge';
  cursor: Scalars['String']['output'];
  node: ServerRole;
};

export type ServerRoleEventPayload = {
  __typename?: 'ServerRoleEventPayload';
  canCreateChannel?: Maybe<Scalars['Boolean']['output']>;
  canCreateComment?: Maybe<Scalars['Boolean']['output']>;
  canCreateDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canCreateEvent?: Maybe<Scalars['Boolean']['output']>;
  canGiveFeedback?: Maybe<Scalars['Boolean']['output']>;
  canUploadFile?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteComment?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteDiscussion?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  showAdminTag?: Maybe<Scalars['Boolean']['output']>;
};

export type ServerRoleOnCreateInput = {
  canCreateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showAdminTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServerRoleOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ServerRoleSort objects to sort ServerRoles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ServerRoleSort>>;
};

/** Fields to sort ServerRoles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ServerRoleSort object. */
export type ServerRoleSort = {
  canCreateChannel?: InputMaybe<SortDirection>;
  canCreateComment?: InputMaybe<SortDirection>;
  canCreateDiscussion?: InputMaybe<SortDirection>;
  canCreateEvent?: InputMaybe<SortDirection>;
  canGiveFeedback?: InputMaybe<SortDirection>;
  canUploadFile?: InputMaybe<SortDirection>;
  canUpvoteComment?: InputMaybe<SortDirection>;
  canUpvoteDiscussion?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  showAdminTag?: InputMaybe<SortDirection>;
};

export type ServerRoleSubscriptionWhere = {
  AND?: InputMaybe<Array<ServerRoleSubscriptionWhere>>;
  NOT?: InputMaybe<ServerRoleSubscriptionWhere>;
  OR?: InputMaybe<Array<ServerRoleSubscriptionWhere>>;
  canCreateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  showAdminTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServerRoleUniqueWhere = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ServerRoleUpdateInput = {
  canCreateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showAdminTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServerRoleUpdatedEvent = {
  __typename?: 'ServerRoleUpdatedEvent';
  event: EventType;
  previousState: ServerRoleEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedServerRole: ServerRoleEventPayload;
};

export type ServerRoleWhere = {
  AND?: InputMaybe<Array<ServerRoleWhere>>;
  NOT?: InputMaybe<ServerRoleWhere>;
  OR?: InputMaybe<Array<ServerRoleWhere>>;
  canCreateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  showAdminTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServerRolesConnection = {
  __typename?: 'ServerRolesConnection';
  edges: Array<ServerRoleEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerSecret = {
  __typename?: 'ServerSecret';
  ciphertext: Scalars['String']['output'];
  key: Scalars['String']['output'];
  pluginId: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
};

export type ServerSecretAggregateSelection = {
  __typename?: 'ServerSecretAggregateSelection';
  ciphertext: StringAggregateSelection;
  count: Scalars['Int']['output'];
  key: StringAggregateSelection;
  pluginId: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type ServerSecretCreateInput = {
  ciphertext: Scalars['String']['input'];
  key: Scalars['String']['input'];
  pluginId: Scalars['String']['input'];
  updatedAt: Scalars['DateTime']['input'];
};

export type ServerSecretCreatedEvent = {
  __typename?: 'ServerSecretCreatedEvent';
  createdServerSecret: ServerSecretEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ServerSecretDeletedEvent = {
  __typename?: 'ServerSecretDeletedEvent';
  deletedServerSecret: ServerSecretEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type ServerSecretEdge = {
  __typename?: 'ServerSecretEdge';
  cursor: Scalars['String']['output'];
  node: ServerSecret;
};

export type ServerSecretEventPayload = {
  __typename?: 'ServerSecretEventPayload';
  ciphertext: Scalars['String']['output'];
  key: Scalars['String']['output'];
  pluginId: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
};

export type ServerSecretOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ServerSecretSort objects to sort ServerSecrets by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ServerSecretSort>>;
};

/** Fields to sort ServerSecrets by. The order in which sorts are applied is not guaranteed when specifying many fields in one ServerSecretSort object. */
export type ServerSecretSort = {
  ciphertext?: InputMaybe<SortDirection>;
  key?: InputMaybe<SortDirection>;
  pluginId?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type ServerSecretSubscriptionWhere = {
  AND?: InputMaybe<Array<ServerSecretSubscriptionWhere>>;
  NOT?: InputMaybe<ServerSecretSubscriptionWhere>;
  OR?: InputMaybe<Array<ServerSecretSubscriptionWhere>>;
  ciphertext?: InputMaybe<Scalars['String']['input']>;
  ciphertext_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  ciphertext_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  ciphertext_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  ciphertext_MATCHES?: InputMaybe<Scalars['String']['input']>;
  ciphertext_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  key_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  key_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  key_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  key_MATCHES?: InputMaybe<Scalars['String']['input']>;
  key_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  pluginId?: InputMaybe<Scalars['String']['input']>;
  pluginId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  pluginId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  pluginId_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  pluginId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  pluginId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ServerSecretUpdateInput = {
  ciphertext?: InputMaybe<Scalars['String']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  pluginId?: InputMaybe<Scalars['String']['input']>;
};

export type ServerSecretUpdatedEvent = {
  __typename?: 'ServerSecretUpdatedEvent';
  event: EventType;
  previousState: ServerSecretEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedServerSecret: ServerSecretEventPayload;
};

export type ServerSecretWhere = {
  AND?: InputMaybe<Array<ServerSecretWhere>>;
  NOT?: InputMaybe<ServerSecretWhere>;
  OR?: InputMaybe<Array<ServerSecretWhere>>;
  ciphertext?: InputMaybe<Scalars['String']['input']>;
  ciphertext_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  ciphertext_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  ciphertext_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  ciphertext_MATCHES?: InputMaybe<Scalars['String']['input']>;
  ciphertext_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  key_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  key_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  key_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  key_MATCHES?: InputMaybe<Scalars['String']['input']>;
  key_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  pluginId?: InputMaybe<Scalars['String']['input']>;
  pluginId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  pluginId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  pluginId_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  pluginId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  pluginId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ServerSecretsConnection = {
  __typename?: 'ServerSecretsConnection';
  edges: Array<ServerSecretEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SignedUrl = {
  __typename?: 'SignedURL';
  url?: Maybe<Scalars['String']['output']>;
};

export type SignedUrlAggregateSelection = {
  __typename?: 'SignedURLAggregateSelection';
  count: Scalars['Int']['output'];
  url: StringAggregateSelection;
};

export type SignedUrlCreateInput = {
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SignedUrlEdge = {
  __typename?: 'SignedURLEdge';
  cursor: Scalars['String']['output'];
  node: SignedUrl;
};

export type SignedUrlEventPayload = {
  __typename?: 'SignedURLEventPayload';
  url?: Maybe<Scalars['String']['output']>;
};

export type SignedUrlOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more SignedURLSort objects to sort SignedUrls by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SignedUrlSort>>;
};

/** Fields to sort SignedUrls by. The order in which sorts are applied is not guaranteed when specifying many fields in one SignedURLSort object. */
export type SignedUrlSort = {
  url?: InputMaybe<SortDirection>;
};

export type SignedUrlSubscriptionWhere = {
  AND?: InputMaybe<Array<SignedUrlSubscriptionWhere>>;
  NOT?: InputMaybe<SignedUrlSubscriptionWhere>;
  OR?: InputMaybe<Array<SignedUrlSubscriptionWhere>>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type SignedUrlUpdateInput = {
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SignedUrlWhere = {
  AND?: InputMaybe<Array<SignedUrlWhere>>;
  NOT?: InputMaybe<SignedUrlWhere>;
  OR?: InputMaybe<Array<SignedUrlWhere>>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type SignedUrlCreatedEvent = {
  __typename?: 'SignedUrlCreatedEvent';
  createdSignedUrl: SignedUrlEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SignedUrlDeletedEvent = {
  __typename?: 'SignedUrlDeletedEvent';
  deletedSignedUrl: SignedUrlEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SignedUrlUpdatedEvent = {
  __typename?: 'SignedUrlUpdatedEvent';
  event: EventType;
  previousState: SignedUrlEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedSignedUrl: SignedUrlEventPayload;
};

export type SignedUrlsConnection = {
  __typename?: 'SignedUrlsConnection';
  edges: Array<SignedUrlEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SiteWideDiscussionListFormat = {
  __typename?: 'SiteWideDiscussionListFormat';
  aggregateDiscussionCount: Scalars['Int']['output'];
  discussions: Array<Discussion>;
};

export type SiteWideDiscussionListFormatAggregateSelection = {
  __typename?: 'SiteWideDiscussionListFormatAggregateSelection';
  aggregateDiscussionCount: IntAggregateSelection;
  count: Scalars['Int']['output'];
};

export type SiteWideDiscussionListFormatCreateInput = {
  aggregateDiscussionCount: Scalars['Int']['input'];
};

export type SiteWideDiscussionListFormatCreatedEvent = {
  __typename?: 'SiteWideDiscussionListFormatCreatedEvent';
  createdSiteWideDiscussionListFormat: SiteWideDiscussionListFormatEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SiteWideDiscussionListFormatDeletedEvent = {
  __typename?: 'SiteWideDiscussionListFormatDeletedEvent';
  deletedSiteWideDiscussionListFormat: SiteWideDiscussionListFormatEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SiteWideDiscussionListFormatEdge = {
  __typename?: 'SiteWideDiscussionListFormatEdge';
  cursor: Scalars['String']['output'];
  node: SiteWideDiscussionListFormat;
};

export type SiteWideDiscussionListFormatEventPayload = {
  __typename?: 'SiteWideDiscussionListFormatEventPayload';
  aggregateDiscussionCount: Scalars['Int']['output'];
};

export type SiteWideDiscussionListFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more SiteWideDiscussionListFormatSort objects to sort SiteWideDiscussionListFormats by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SiteWideDiscussionListFormatSort>>;
};

/** Fields to sort SiteWideDiscussionListFormats by. The order in which sorts are applied is not guaranteed when specifying many fields in one SiteWideDiscussionListFormatSort object. */
export type SiteWideDiscussionListFormatSort = {
  aggregateDiscussionCount?: InputMaybe<SortDirection>;
};

export type SiteWideDiscussionListFormatSubscriptionWhere = {
  AND?: InputMaybe<Array<SiteWideDiscussionListFormatSubscriptionWhere>>;
  NOT?: InputMaybe<SiteWideDiscussionListFormatSubscriptionWhere>;
  OR?: InputMaybe<Array<SiteWideDiscussionListFormatSubscriptionWhere>>;
  aggregateDiscussionCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  aggregateDiscussionCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type SiteWideDiscussionListFormatUpdateInput = {
  aggregateDiscussionCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
};

export type SiteWideDiscussionListFormatUpdatedEvent = {
  __typename?: 'SiteWideDiscussionListFormatUpdatedEvent';
  event: EventType;
  previousState: SiteWideDiscussionListFormatEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedSiteWideDiscussionListFormat: SiteWideDiscussionListFormatEventPayload;
};

export type SiteWideDiscussionListFormatWhere = {
  AND?: InputMaybe<Array<SiteWideDiscussionListFormatWhere>>;
  NOT?: InputMaybe<SiteWideDiscussionListFormatWhere>;
  OR?: InputMaybe<Array<SiteWideDiscussionListFormatWhere>>;
  aggregateDiscussionCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  aggregateDiscussionCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type SiteWideDiscussionListFormatsConnection = {
  __typename?: 'SiteWideDiscussionListFormatsConnection';
  edges: Array<SiteWideDiscussionListFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An enum for sorting in either ascending or descending order. */
export enum SortDirection {
  /** Sort by field values in ascending order. */
  Asc = 'ASC',
  /** Sort by field values in descending order. */
  Desc = 'DESC'
}

export enum SortType {
  Hot = 'hot',
  New = 'new',
  Top = 'top'
}

export type StringAggregateSelection = {
  __typename?: 'StringAggregateSelection';
  longest?: Maybe<Scalars['String']['output']>;
  shortest?: Maybe<Scalars['String']['output']>;
};

export type Subscription = {
  __typename?: 'Subscription';
  activityCreated: ActivityCreatedEvent;
  activityDeleted: ActivityDeletedEvent;
  activityUpdated: ActivityUpdatedEvent;
  albumCreated: AlbumCreatedEvent;
  albumDeleted: AlbumDeletedEvent;
  albumRelationshipCreated: AlbumRelationshipCreatedEvent;
  albumRelationshipDeleted: AlbumRelationshipDeletedEvent;
  albumUpdated: AlbumUpdatedEvent;
  channelCreated: ChannelCreatedEvent;
  channelDeleted: ChannelDeletedEvent;
  channelInfoCreated: ChannelInfoCreatedEvent;
  channelInfoDeleted: ChannelInfoDeletedEvent;
  channelInfoUpdated: ChannelInfoUpdatedEvent;
  channelRelationshipCreated: ChannelRelationshipCreatedEvent;
  channelRelationshipDeleted: ChannelRelationshipDeletedEvent;
  channelRoleCreated: ChannelRoleCreatedEvent;
  channelRoleDeleted: ChannelRoleDeletedEvent;
  channelRoleUpdated: ChannelRoleUpdatedEvent;
  channelUpdated: ChannelUpdatedEvent;
  collectionCreated: CollectionCreatedEvent;
  collectionDeleted: CollectionDeletedEvent;
  collectionRelationshipCreated: CollectionRelationshipCreatedEvent;
  collectionRelationshipDeleted: CollectionRelationshipDeletedEvent;
  collectionUpdated: CollectionUpdatedEvent;
  commentCreated: CommentCreatedEvent;
  commentDeleted: CommentDeletedEvent;
  commentInfoCreated: CommentInfoCreatedEvent;
  commentInfoDeleted: CommentInfoDeletedEvent;
  commentInfoUpdated: CommentInfoUpdatedEvent;
  commentRelationshipCreated: CommentRelationshipCreatedEvent;
  commentRelationshipDeleted: CommentRelationshipDeletedEvent;
  commentRepliesFormatCreated: CommentRepliesFormatCreatedEvent;
  commentRepliesFormatDeleted: CommentRepliesFormatDeletedEvent;
  commentRepliesFormatUpdated: CommentRepliesFormatUpdatedEvent;
  commentSectionFormatCreated: CommentSectionFormatCreatedEvent;
  commentSectionFormatDeleted: CommentSectionFormatDeletedEvent;
  commentSectionFormatUpdated: CommentSectionFormatUpdatedEvent;
  commentUpdated: CommentUpdatedEvent;
  contactCreated: ContactCreatedEvent;
  contactDeleted: ContactDeletedEvent;
  contactRelationshipCreated: ContactRelationshipCreatedEvent;
  contactRelationshipDeleted: ContactRelationshipDeletedEvent;
  contactUpdated: ContactUpdatedEvent;
  dayDataCreated: DayDataCreatedEvent;
  dayDataDeleted: DayDataDeletedEvent;
  dayDataUpdated: DayDataUpdatedEvent;
  discussionChannelCreated: DiscussionChannelCreatedEvent;
  discussionChannelDeleted: DiscussionChannelDeletedEvent;
  discussionChannelInfoCreated: DiscussionChannelInfoCreatedEvent;
  discussionChannelInfoDeleted: DiscussionChannelInfoDeletedEvent;
  discussionChannelInfoUpdated: DiscussionChannelInfoUpdatedEvent;
  discussionChannelListFormatCreated: DiscussionChannelListFormatCreatedEvent;
  discussionChannelListFormatDeleted: DiscussionChannelListFormatDeletedEvent;
  discussionChannelListFormatUpdated: DiscussionChannelListFormatUpdatedEvent;
  discussionChannelRelationshipCreated: DiscussionChannelRelationshipCreatedEvent;
  discussionChannelRelationshipDeleted: DiscussionChannelRelationshipDeletedEvent;
  discussionChannelUpdated: DiscussionChannelUpdatedEvent;
  discussionCreated: DiscussionCreatedEvent;
  discussionDeleted: DiscussionDeletedEvent;
  discussionInfoCreated: DiscussionInfoCreatedEvent;
  discussionInfoDeleted: DiscussionInfoDeletedEvent;
  discussionInfoUpdated: DiscussionInfoUpdatedEvent;
  discussionRelationshipCreated: DiscussionRelationshipCreatedEvent;
  discussionRelationshipDeleted: DiscussionRelationshipDeletedEvent;
  discussionUpdated: DiscussionUpdatedEvent;
  downloadableFileCreated: DownloadableFileCreatedEvent;
  downloadableFileDeleted: DownloadableFileDeletedEvent;
  downloadableFileRelationshipCreated: DownloadableFileRelationshipCreatedEvent;
  downloadableFileRelationshipDeleted: DownloadableFileRelationshipDeletedEvent;
  downloadableFileUpdated: DownloadableFileUpdatedEvent;
  dropDataResponseCreated: DropDataResponseCreatedEvent;
  dropDataResponseDeleted: DropDataResponseDeletedEvent;
  dropDataResponseUpdated: DropDataResponseUpdatedEvent;
  emailCreated: EmailCreatedEvent;
  emailDeleted: EmailDeletedEvent;
  emailRelationshipCreated: EmailRelationshipCreatedEvent;
  emailRelationshipDeleted: EmailRelationshipDeletedEvent;
  emailUpdated: EmailUpdatedEvent;
  emojiCreated: EmojiCreatedEvent;
  emojiDeleted: EmojiDeletedEvent;
  emojiRelationshipCreated: EmojiRelationshipCreatedEvent;
  emojiRelationshipDeleted: EmojiRelationshipDeletedEvent;
  emojiUpdated: EmojiUpdatedEvent;
  environmentInfoCreated: EnvironmentInfoCreatedEvent;
  environmentInfoDeleted: EnvironmentInfoDeletedEvent;
  environmentInfoUpdated: EnvironmentInfoUpdatedEvent;
  eventChannelCreated: EventChannelCreatedEvent;
  eventChannelDeleted: EventChannelDeletedEvent;
  eventChannelInfoCreated: EventChannelInfoCreatedEvent;
  eventChannelInfoDeleted: EventChannelInfoDeletedEvent;
  eventChannelInfoUpdated: EventChannelInfoUpdatedEvent;
  eventChannelRelationshipCreated: EventChannelRelationshipCreatedEvent;
  eventChannelRelationshipDeleted: EventChannelRelationshipDeletedEvent;
  eventChannelUpdated: EventChannelUpdatedEvent;
  eventCommentsFormatCreated: EventCommentsFormatCreatedEvent;
  eventCommentsFormatDeleted: EventCommentsFormatDeletedEvent;
  eventCommentsFormatUpdated: EventCommentsFormatUpdatedEvent;
  eventCreated: EventCreatedEvent;
  eventDeleted: EventDeletedEvent;
  eventInfoCreated: EventInfoCreatedEvent;
  eventInfoDeleted: EventInfoDeletedEvent;
  eventInfoUpdated: EventInfoUpdatedEvent;
  eventRelationshipCreated: EventRelationshipCreatedEvent;
  eventRelationshipDeleted: EventRelationshipDeletedEvent;
  eventUpdated: EventUpdatedEvent;
  feedCreated: FeedCreatedEvent;
  feedDeleted: FeedDeletedEvent;
  feedRelationshipCreated: FeedRelationshipCreatedEvent;
  feedRelationshipDeleted: FeedRelationshipDeletedEvent;
  feedUpdated: FeedUpdatedEvent;
  fileVersionCreated: FileVersionCreatedEvent;
  fileVersionDeleted: FileVersionDeletedEvent;
  fileVersionRelationshipCreated: FileVersionRelationshipCreatedEvent;
  fileVersionRelationshipDeleted: FileVersionRelationshipDeletedEvent;
  fileVersionUpdated: FileVersionUpdatedEvent;
  filterGroupCreated: FilterGroupCreatedEvent;
  filterGroupDeleted: FilterGroupDeletedEvent;
  filterGroupRelationshipCreated: FilterGroupRelationshipCreatedEvent;
  filterGroupRelationshipDeleted: FilterGroupRelationshipDeletedEvent;
  filterGroupUpdated: FilterGroupUpdatedEvent;
  filterOptionCreated: FilterOptionCreatedEvent;
  filterOptionDeleted: FilterOptionDeletedEvent;
  filterOptionRelationshipCreated: FilterOptionRelationshipCreatedEvent;
  filterOptionRelationshipDeleted: FilterOptionRelationshipDeletedEvent;
  filterOptionUpdated: FilterOptionUpdatedEvent;
  getSortedChannelsResponseCreated: GetSortedChannelsResponseCreatedEvent;
  getSortedChannelsResponseDeleted: GetSortedChannelsResponseDeletedEvent;
  getSortedChannelsResponseUpdated: GetSortedChannelsResponseUpdatedEvent;
  imageCreated: ImageCreatedEvent;
  imageDeleted: ImageDeletedEvent;
  imageRelationshipCreated: ImageRelationshipCreatedEvent;
  imageRelationshipDeleted: ImageRelationshipDeletedEvent;
  imageUpdated: ImageUpdatedEvent;
  issueCreated: IssueCreatedEvent;
  issueDeleted: IssueDeletedEvent;
  issueRelationshipCreated: IssueRelationshipCreatedEvent;
  issueRelationshipDeleted: IssueRelationshipDeletedEvent;
  issueUpdated: IssueUpdatedEvent;
  licenseCreated: LicenseCreatedEvent;
  licenseDeleted: LicenseDeletedEvent;
  licenseUpdated: LicenseUpdatedEvent;
  linkFlairCreated: LinkFlairCreatedEvent;
  linkFlairDeleted: LinkFlairDeletedEvent;
  linkFlairUpdated: LinkFlairUpdatedEvent;
  messageCreated: MessageCreatedEvent;
  messageDeleted: MessageDeletedEvent;
  messageRelationshipCreated: MessageRelationshipCreatedEvent;
  messageRelationshipDeleted: MessageRelationshipDeletedEvent;
  messageUpdated: MessageUpdatedEvent;
  modChannelRoleCreated: ModChannelRoleCreatedEvent;
  modChannelRoleDeleted: ModChannelRoleDeletedEvent;
  modChannelRoleUpdated: ModChannelRoleUpdatedEvent;
  modServerRoleCreated: ModServerRoleCreatedEvent;
  modServerRoleDeleted: ModServerRoleDeletedEvent;
  modServerRoleUpdated: ModServerRoleUpdatedEvent;
  moderationActionCreated: ModerationActionCreatedEvent;
  moderationActionDeleted: ModerationActionDeletedEvent;
  moderationActionRelationshipCreated: ModerationActionRelationshipCreatedEvent;
  moderationActionRelationshipDeleted: ModerationActionRelationshipDeletedEvent;
  moderationActionUpdated: ModerationActionUpdatedEvent;
  moderationProfileCreated: ModerationProfileCreatedEvent;
  moderationProfileDeleted: ModerationProfileDeletedEvent;
  moderationProfileRelationshipCreated: ModerationProfileRelationshipCreatedEvent;
  moderationProfileRelationshipDeleted: ModerationProfileRelationshipDeletedEvent;
  moderationProfileUpdated: ModerationProfileUpdatedEvent;
  notificationCreated: NotificationCreatedEvent;
  notificationDeleted: NotificationDeletedEvent;
  notificationUpdated: NotificationUpdatedEvent;
  pluginCreated: PluginCreatedEvent;
  pluginDeleted: PluginDeletedEvent;
  pluginRelationshipCreated: PluginRelationshipCreatedEvent;
  pluginRelationshipDeleted: PluginRelationshipDeletedEvent;
  pluginRunCreated: PluginRunCreatedEvent;
  pluginRunDeleted: PluginRunDeletedEvent;
  pluginRunUpdated: PluginRunUpdatedEvent;
  pluginUpdated: PluginUpdatedEvent;
  pluginVersionCreated: PluginVersionCreatedEvent;
  pluginVersionDeleted: PluginVersionDeletedEvent;
  pluginVersionRelationshipCreated: PluginVersionRelationshipCreatedEvent;
  pluginVersionRelationshipDeleted: PluginVersionRelationshipDeletedEvent;
  pluginVersionUpdated: PluginVersionUpdatedEvent;
  purchaseCreated: PurchaseCreatedEvent;
  purchaseDeleted: PurchaseDeletedEvent;
  purchaseRelationshipCreated: PurchaseRelationshipCreatedEvent;
  purchaseRelationshipDeleted: PurchaseRelationshipDeletedEvent;
  purchaseUpdated: PurchaseUpdatedEvent;
  recurringEventCreated: RecurringEventCreatedEvent;
  recurringEventDeleted: RecurringEventDeletedEvent;
  recurringEventRelationshipCreated: RecurringEventRelationshipCreatedEvent;
  recurringEventRelationshipDeleted: RecurringEventRelationshipDeletedEvent;
  recurringEventUpdated: RecurringEventUpdatedEvent;
  repeatEndsCreated: RepeatEndsCreatedEvent;
  repeatEndsDeleted: RepeatEndsDeletedEvent;
  repeatEndsUpdated: RepeatEndsUpdatedEvent;
  repeatEveryCreated: RepeatEveryCreatedEvent;
  repeatEveryDeleted: RepeatEveryDeletedEvent;
  repeatEveryUpdated: RepeatEveryUpdatedEvent;
  safetyCheckResponseCreated: SafetyCheckResponseCreatedEvent;
  safetyCheckResponseDeleted: SafetyCheckResponseDeletedEvent;
  safetyCheckResponseUpdated: SafetyCheckResponseUpdatedEvent;
  seedDataResponseCreated: SeedDataResponseCreatedEvent;
  seedDataResponseDeleted: SeedDataResponseDeletedEvent;
  seedDataResponseUpdated: SeedDataResponseUpdatedEvent;
  serverConfigCreated: ServerConfigCreatedEvent;
  serverConfigDeleted: ServerConfigDeletedEvent;
  serverConfigRelationshipCreated: ServerConfigRelationshipCreatedEvent;
  serverConfigRelationshipDeleted: ServerConfigRelationshipDeletedEvent;
  serverConfigUpdated: ServerConfigUpdatedEvent;
  serverRoleCreated: ServerRoleCreatedEvent;
  serverRoleDeleted: ServerRoleDeletedEvent;
  serverRoleUpdated: ServerRoleUpdatedEvent;
  serverSecretCreated: ServerSecretCreatedEvent;
  serverSecretDeleted: ServerSecretDeletedEvent;
  serverSecretUpdated: ServerSecretUpdatedEvent;
  signedUrlCreated: SignedUrlCreatedEvent;
  signedUrlDeleted: SignedUrlDeletedEvent;
  signedUrlUpdated: SignedUrlUpdatedEvent;
  siteWideDiscussionListFormatCreated: SiteWideDiscussionListFormatCreatedEvent;
  siteWideDiscussionListFormatDeleted: SiteWideDiscussionListFormatDeletedEvent;
  siteWideDiscussionListFormatUpdated: SiteWideDiscussionListFormatUpdatedEvent;
  suspensionCreated: SuspensionCreatedEvent;
  suspensionDeleted: SuspensionDeletedEvent;
  suspensionRelationshipCreated: SuspensionRelationshipCreatedEvent;
  suspensionRelationshipDeleted: SuspensionRelationshipDeletedEvent;
  suspensionUpdated: SuspensionUpdatedEvent;
  tagCreated: TagCreatedEvent;
  tagDeleted: TagDeletedEvent;
  tagRelationshipCreated: TagRelationshipCreatedEvent;
  tagRelationshipDeleted: TagRelationshipDeletedEvent;
  tagUpdated: TagUpdatedEvent;
  textVersionCreated: TextVersionCreatedEvent;
  textVersionDeleted: TextVersionDeletedEvent;
  textVersionRelationshipCreated: TextVersionRelationshipCreatedEvent;
  textVersionRelationshipDeleted: TextVersionRelationshipDeletedEvent;
  textVersionUpdated: TextVersionUpdatedEvent;
  userCreated: UserCreatedEvent;
  userDeleted: UserDeletedEvent;
  userRelationshipCreated: UserRelationshipCreatedEvent;
  userRelationshipDeleted: UserRelationshipDeletedEvent;
  userUpdated: UserUpdatedEvent;
  wikiPageCreated: WikiPageCreatedEvent;
  wikiPageDeleted: WikiPageDeletedEvent;
  wikiPageRelationshipCreated: WikiPageRelationshipCreatedEvent;
  wikiPageRelationshipDeleted: WikiPageRelationshipDeletedEvent;
  wikiPageUpdated: WikiPageUpdatedEvent;
};


export type SubscriptionActivityCreatedArgs = {
  where?: InputMaybe<ActivitySubscriptionWhere>;
};


export type SubscriptionActivityDeletedArgs = {
  where?: InputMaybe<ActivitySubscriptionWhere>;
};


export type SubscriptionActivityUpdatedArgs = {
  where?: InputMaybe<ActivitySubscriptionWhere>;
};


export type SubscriptionAlbumCreatedArgs = {
  where?: InputMaybe<AlbumSubscriptionWhere>;
};


export type SubscriptionAlbumDeletedArgs = {
  where?: InputMaybe<AlbumSubscriptionWhere>;
};


export type SubscriptionAlbumRelationshipCreatedArgs = {
  where?: InputMaybe<AlbumRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionAlbumRelationshipDeletedArgs = {
  where?: InputMaybe<AlbumRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionAlbumUpdatedArgs = {
  where?: InputMaybe<AlbumSubscriptionWhere>;
};


export type SubscriptionChannelCreatedArgs = {
  where?: InputMaybe<ChannelSubscriptionWhere>;
};


export type SubscriptionChannelDeletedArgs = {
  where?: InputMaybe<ChannelSubscriptionWhere>;
};


export type SubscriptionChannelInfoCreatedArgs = {
  where?: InputMaybe<ChannelInfoSubscriptionWhere>;
};


export type SubscriptionChannelInfoDeletedArgs = {
  where?: InputMaybe<ChannelInfoSubscriptionWhere>;
};


export type SubscriptionChannelInfoUpdatedArgs = {
  where?: InputMaybe<ChannelInfoSubscriptionWhere>;
};


export type SubscriptionChannelRelationshipCreatedArgs = {
  where?: InputMaybe<ChannelRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionChannelRelationshipDeletedArgs = {
  where?: InputMaybe<ChannelRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionChannelRoleCreatedArgs = {
  where?: InputMaybe<ChannelRoleSubscriptionWhere>;
};


export type SubscriptionChannelRoleDeletedArgs = {
  where?: InputMaybe<ChannelRoleSubscriptionWhere>;
};


export type SubscriptionChannelRoleUpdatedArgs = {
  where?: InputMaybe<ChannelRoleSubscriptionWhere>;
};


export type SubscriptionChannelUpdatedArgs = {
  where?: InputMaybe<ChannelSubscriptionWhere>;
};


export type SubscriptionCollectionCreatedArgs = {
  where?: InputMaybe<CollectionSubscriptionWhere>;
};


export type SubscriptionCollectionDeletedArgs = {
  where?: InputMaybe<CollectionSubscriptionWhere>;
};


export type SubscriptionCollectionRelationshipCreatedArgs = {
  where?: InputMaybe<CollectionRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionCollectionRelationshipDeletedArgs = {
  where?: InputMaybe<CollectionRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionCollectionUpdatedArgs = {
  where?: InputMaybe<CollectionSubscriptionWhere>;
};


export type SubscriptionCommentCreatedArgs = {
  where?: InputMaybe<CommentSubscriptionWhere>;
};


export type SubscriptionCommentDeletedArgs = {
  where?: InputMaybe<CommentSubscriptionWhere>;
};


export type SubscriptionCommentInfoCreatedArgs = {
  where?: InputMaybe<CommentInfoSubscriptionWhere>;
};


export type SubscriptionCommentInfoDeletedArgs = {
  where?: InputMaybe<CommentInfoSubscriptionWhere>;
};


export type SubscriptionCommentInfoUpdatedArgs = {
  where?: InputMaybe<CommentInfoSubscriptionWhere>;
};


export type SubscriptionCommentRelationshipCreatedArgs = {
  where?: InputMaybe<CommentRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionCommentRelationshipDeletedArgs = {
  where?: InputMaybe<CommentRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionCommentRepliesFormatCreatedArgs = {
  where?: InputMaybe<CommentRepliesFormatSubscriptionWhere>;
};


export type SubscriptionCommentRepliesFormatDeletedArgs = {
  where?: InputMaybe<CommentRepliesFormatSubscriptionWhere>;
};


export type SubscriptionCommentRepliesFormatUpdatedArgs = {
  where?: InputMaybe<CommentRepliesFormatSubscriptionWhere>;
};


export type SubscriptionCommentUpdatedArgs = {
  where?: InputMaybe<CommentSubscriptionWhere>;
};


export type SubscriptionContactCreatedArgs = {
  where?: InputMaybe<ContactSubscriptionWhere>;
};


export type SubscriptionContactDeletedArgs = {
  where?: InputMaybe<ContactSubscriptionWhere>;
};


export type SubscriptionContactRelationshipCreatedArgs = {
  where?: InputMaybe<ContactRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionContactRelationshipDeletedArgs = {
  where?: InputMaybe<ContactRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionContactUpdatedArgs = {
  where?: InputMaybe<ContactSubscriptionWhere>;
};


export type SubscriptionDayDataCreatedArgs = {
  where?: InputMaybe<DayDataSubscriptionWhere>;
};


export type SubscriptionDayDataDeletedArgs = {
  where?: InputMaybe<DayDataSubscriptionWhere>;
};


export type SubscriptionDayDataUpdatedArgs = {
  where?: InputMaybe<DayDataSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelCreatedArgs = {
  where?: InputMaybe<DiscussionChannelSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelDeletedArgs = {
  where?: InputMaybe<DiscussionChannelSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelInfoCreatedArgs = {
  where?: InputMaybe<DiscussionChannelInfoSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelInfoDeletedArgs = {
  where?: InputMaybe<DiscussionChannelInfoSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelInfoUpdatedArgs = {
  where?: InputMaybe<DiscussionChannelInfoSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelListFormatCreatedArgs = {
  where?: InputMaybe<DiscussionChannelListFormatSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelListFormatDeletedArgs = {
  where?: InputMaybe<DiscussionChannelListFormatSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelListFormatUpdatedArgs = {
  where?: InputMaybe<DiscussionChannelListFormatSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelRelationshipCreatedArgs = {
  where?: InputMaybe<DiscussionChannelRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelRelationshipDeletedArgs = {
  where?: InputMaybe<DiscussionChannelRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionDiscussionChannelUpdatedArgs = {
  where?: InputMaybe<DiscussionChannelSubscriptionWhere>;
};


export type SubscriptionDiscussionCreatedArgs = {
  where?: InputMaybe<DiscussionSubscriptionWhere>;
};


export type SubscriptionDiscussionDeletedArgs = {
  where?: InputMaybe<DiscussionSubscriptionWhere>;
};


export type SubscriptionDiscussionInfoCreatedArgs = {
  where?: InputMaybe<DiscussionInfoSubscriptionWhere>;
};


export type SubscriptionDiscussionInfoDeletedArgs = {
  where?: InputMaybe<DiscussionInfoSubscriptionWhere>;
};


export type SubscriptionDiscussionInfoUpdatedArgs = {
  where?: InputMaybe<DiscussionInfoSubscriptionWhere>;
};


export type SubscriptionDiscussionRelationshipCreatedArgs = {
  where?: InputMaybe<DiscussionRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionDiscussionRelationshipDeletedArgs = {
  where?: InputMaybe<DiscussionRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionDiscussionUpdatedArgs = {
  where?: InputMaybe<DiscussionSubscriptionWhere>;
};


export type SubscriptionDownloadableFileCreatedArgs = {
  where?: InputMaybe<DownloadableFileSubscriptionWhere>;
};


export type SubscriptionDownloadableFileDeletedArgs = {
  where?: InputMaybe<DownloadableFileSubscriptionWhere>;
};


export type SubscriptionDownloadableFileRelationshipCreatedArgs = {
  where?: InputMaybe<DownloadableFileRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionDownloadableFileRelationshipDeletedArgs = {
  where?: InputMaybe<DownloadableFileRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionDownloadableFileUpdatedArgs = {
  where?: InputMaybe<DownloadableFileSubscriptionWhere>;
};


export type SubscriptionDropDataResponseCreatedArgs = {
  where?: InputMaybe<DropDataResponseSubscriptionWhere>;
};


export type SubscriptionDropDataResponseDeletedArgs = {
  where?: InputMaybe<DropDataResponseSubscriptionWhere>;
};


export type SubscriptionDropDataResponseUpdatedArgs = {
  where?: InputMaybe<DropDataResponseSubscriptionWhere>;
};


export type SubscriptionEmailCreatedArgs = {
  where?: InputMaybe<EmailSubscriptionWhere>;
};


export type SubscriptionEmailDeletedArgs = {
  where?: InputMaybe<EmailSubscriptionWhere>;
};


export type SubscriptionEmailRelationshipCreatedArgs = {
  where?: InputMaybe<EmailRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionEmailRelationshipDeletedArgs = {
  where?: InputMaybe<EmailRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionEmailUpdatedArgs = {
  where?: InputMaybe<EmailSubscriptionWhere>;
};


export type SubscriptionEmojiCreatedArgs = {
  where?: InputMaybe<EmojiSubscriptionWhere>;
};


export type SubscriptionEmojiDeletedArgs = {
  where?: InputMaybe<EmojiSubscriptionWhere>;
};


export type SubscriptionEmojiRelationshipCreatedArgs = {
  where?: InputMaybe<EmojiRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionEmojiRelationshipDeletedArgs = {
  where?: InputMaybe<EmojiRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionEmojiUpdatedArgs = {
  where?: InputMaybe<EmojiSubscriptionWhere>;
};


export type SubscriptionEnvironmentInfoCreatedArgs = {
  where?: InputMaybe<EnvironmentInfoSubscriptionWhere>;
};


export type SubscriptionEnvironmentInfoDeletedArgs = {
  where?: InputMaybe<EnvironmentInfoSubscriptionWhere>;
};


export type SubscriptionEnvironmentInfoUpdatedArgs = {
  where?: InputMaybe<EnvironmentInfoSubscriptionWhere>;
};


export type SubscriptionEventChannelCreatedArgs = {
  where?: InputMaybe<EventChannelSubscriptionWhere>;
};


export type SubscriptionEventChannelDeletedArgs = {
  where?: InputMaybe<EventChannelSubscriptionWhere>;
};


export type SubscriptionEventChannelInfoCreatedArgs = {
  where?: InputMaybe<EventChannelInfoSubscriptionWhere>;
};


export type SubscriptionEventChannelInfoDeletedArgs = {
  where?: InputMaybe<EventChannelInfoSubscriptionWhere>;
};


export type SubscriptionEventChannelInfoUpdatedArgs = {
  where?: InputMaybe<EventChannelInfoSubscriptionWhere>;
};


export type SubscriptionEventChannelRelationshipCreatedArgs = {
  where?: InputMaybe<EventChannelRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionEventChannelRelationshipDeletedArgs = {
  where?: InputMaybe<EventChannelRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionEventChannelUpdatedArgs = {
  where?: InputMaybe<EventChannelSubscriptionWhere>;
};


export type SubscriptionEventCreatedArgs = {
  where?: InputMaybe<EventSubscriptionWhere>;
};


export type SubscriptionEventDeletedArgs = {
  where?: InputMaybe<EventSubscriptionWhere>;
};


export type SubscriptionEventInfoCreatedArgs = {
  where?: InputMaybe<EventInfoSubscriptionWhere>;
};


export type SubscriptionEventInfoDeletedArgs = {
  where?: InputMaybe<EventInfoSubscriptionWhere>;
};


export type SubscriptionEventInfoUpdatedArgs = {
  where?: InputMaybe<EventInfoSubscriptionWhere>;
};


export type SubscriptionEventRelationshipCreatedArgs = {
  where?: InputMaybe<EventRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionEventRelationshipDeletedArgs = {
  where?: InputMaybe<EventRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionEventUpdatedArgs = {
  where?: InputMaybe<EventSubscriptionWhere>;
};


export type SubscriptionFeedCreatedArgs = {
  where?: InputMaybe<FeedSubscriptionWhere>;
};


export type SubscriptionFeedDeletedArgs = {
  where?: InputMaybe<FeedSubscriptionWhere>;
};


export type SubscriptionFeedRelationshipCreatedArgs = {
  where?: InputMaybe<FeedRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionFeedRelationshipDeletedArgs = {
  where?: InputMaybe<FeedRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionFeedUpdatedArgs = {
  where?: InputMaybe<FeedSubscriptionWhere>;
};


export type SubscriptionFileVersionCreatedArgs = {
  where?: InputMaybe<FileVersionSubscriptionWhere>;
};


export type SubscriptionFileVersionDeletedArgs = {
  where?: InputMaybe<FileVersionSubscriptionWhere>;
};


export type SubscriptionFileVersionRelationshipCreatedArgs = {
  where?: InputMaybe<FileVersionRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionFileVersionRelationshipDeletedArgs = {
  where?: InputMaybe<FileVersionRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionFileVersionUpdatedArgs = {
  where?: InputMaybe<FileVersionSubscriptionWhere>;
};


export type SubscriptionFilterGroupCreatedArgs = {
  where?: InputMaybe<FilterGroupSubscriptionWhere>;
};


export type SubscriptionFilterGroupDeletedArgs = {
  where?: InputMaybe<FilterGroupSubscriptionWhere>;
};


export type SubscriptionFilterGroupRelationshipCreatedArgs = {
  where?: InputMaybe<FilterGroupRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionFilterGroupRelationshipDeletedArgs = {
  where?: InputMaybe<FilterGroupRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionFilterGroupUpdatedArgs = {
  where?: InputMaybe<FilterGroupSubscriptionWhere>;
};


export type SubscriptionFilterOptionCreatedArgs = {
  where?: InputMaybe<FilterOptionSubscriptionWhere>;
};


export type SubscriptionFilterOptionDeletedArgs = {
  where?: InputMaybe<FilterOptionSubscriptionWhere>;
};


export type SubscriptionFilterOptionRelationshipCreatedArgs = {
  where?: InputMaybe<FilterOptionRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionFilterOptionRelationshipDeletedArgs = {
  where?: InputMaybe<FilterOptionRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionFilterOptionUpdatedArgs = {
  where?: InputMaybe<FilterOptionSubscriptionWhere>;
};


export type SubscriptionGetSortedChannelsResponseCreatedArgs = {
  where?: InputMaybe<GetSortedChannelsResponseSubscriptionWhere>;
};


export type SubscriptionGetSortedChannelsResponseDeletedArgs = {
  where?: InputMaybe<GetSortedChannelsResponseSubscriptionWhere>;
};


export type SubscriptionGetSortedChannelsResponseUpdatedArgs = {
  where?: InputMaybe<GetSortedChannelsResponseSubscriptionWhere>;
};


export type SubscriptionImageCreatedArgs = {
  where?: InputMaybe<ImageSubscriptionWhere>;
};


export type SubscriptionImageDeletedArgs = {
  where?: InputMaybe<ImageSubscriptionWhere>;
};


export type SubscriptionImageRelationshipCreatedArgs = {
  where?: InputMaybe<ImageRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionImageRelationshipDeletedArgs = {
  where?: InputMaybe<ImageRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionImageUpdatedArgs = {
  where?: InputMaybe<ImageSubscriptionWhere>;
};


export type SubscriptionIssueCreatedArgs = {
  where?: InputMaybe<IssueSubscriptionWhere>;
};


export type SubscriptionIssueDeletedArgs = {
  where?: InputMaybe<IssueSubscriptionWhere>;
};


export type SubscriptionIssueRelationshipCreatedArgs = {
  where?: InputMaybe<IssueRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionIssueRelationshipDeletedArgs = {
  where?: InputMaybe<IssueRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionIssueUpdatedArgs = {
  where?: InputMaybe<IssueSubscriptionWhere>;
};


export type SubscriptionLicenseCreatedArgs = {
  where?: InputMaybe<LicenseSubscriptionWhere>;
};


export type SubscriptionLicenseDeletedArgs = {
  where?: InputMaybe<LicenseSubscriptionWhere>;
};


export type SubscriptionLicenseUpdatedArgs = {
  where?: InputMaybe<LicenseSubscriptionWhere>;
};


export type SubscriptionLinkFlairCreatedArgs = {
  where?: InputMaybe<LinkFlairSubscriptionWhere>;
};


export type SubscriptionLinkFlairDeletedArgs = {
  where?: InputMaybe<LinkFlairSubscriptionWhere>;
};


export type SubscriptionLinkFlairUpdatedArgs = {
  where?: InputMaybe<LinkFlairSubscriptionWhere>;
};


export type SubscriptionMessageCreatedArgs = {
  where?: InputMaybe<MessageSubscriptionWhere>;
};


export type SubscriptionMessageDeletedArgs = {
  where?: InputMaybe<MessageSubscriptionWhere>;
};


export type SubscriptionMessageRelationshipCreatedArgs = {
  where?: InputMaybe<MessageRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionMessageRelationshipDeletedArgs = {
  where?: InputMaybe<MessageRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionMessageUpdatedArgs = {
  where?: InputMaybe<MessageSubscriptionWhere>;
};


export type SubscriptionModChannelRoleCreatedArgs = {
  where?: InputMaybe<ModChannelRoleSubscriptionWhere>;
};


export type SubscriptionModChannelRoleDeletedArgs = {
  where?: InputMaybe<ModChannelRoleSubscriptionWhere>;
};


export type SubscriptionModChannelRoleUpdatedArgs = {
  where?: InputMaybe<ModChannelRoleSubscriptionWhere>;
};


export type SubscriptionModServerRoleCreatedArgs = {
  where?: InputMaybe<ModServerRoleSubscriptionWhere>;
};


export type SubscriptionModServerRoleDeletedArgs = {
  where?: InputMaybe<ModServerRoleSubscriptionWhere>;
};


export type SubscriptionModServerRoleUpdatedArgs = {
  where?: InputMaybe<ModServerRoleSubscriptionWhere>;
};


export type SubscriptionModerationActionCreatedArgs = {
  where?: InputMaybe<ModerationActionSubscriptionWhere>;
};


export type SubscriptionModerationActionDeletedArgs = {
  where?: InputMaybe<ModerationActionSubscriptionWhere>;
};


export type SubscriptionModerationActionRelationshipCreatedArgs = {
  where?: InputMaybe<ModerationActionRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionModerationActionRelationshipDeletedArgs = {
  where?: InputMaybe<ModerationActionRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionModerationActionUpdatedArgs = {
  where?: InputMaybe<ModerationActionSubscriptionWhere>;
};


export type SubscriptionModerationProfileCreatedArgs = {
  where?: InputMaybe<ModerationProfileSubscriptionWhere>;
};


export type SubscriptionModerationProfileDeletedArgs = {
  where?: InputMaybe<ModerationProfileSubscriptionWhere>;
};


export type SubscriptionModerationProfileRelationshipCreatedArgs = {
  where?: InputMaybe<ModerationProfileRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionModerationProfileRelationshipDeletedArgs = {
  where?: InputMaybe<ModerationProfileRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionModerationProfileUpdatedArgs = {
  where?: InputMaybe<ModerationProfileSubscriptionWhere>;
};


export type SubscriptionNotificationCreatedArgs = {
  where?: InputMaybe<NotificationSubscriptionWhere>;
};


export type SubscriptionNotificationDeletedArgs = {
  where?: InputMaybe<NotificationSubscriptionWhere>;
};


export type SubscriptionNotificationUpdatedArgs = {
  where?: InputMaybe<NotificationSubscriptionWhere>;
};


export type SubscriptionPluginCreatedArgs = {
  where?: InputMaybe<PluginSubscriptionWhere>;
};


export type SubscriptionPluginDeletedArgs = {
  where?: InputMaybe<PluginSubscriptionWhere>;
};


export type SubscriptionPluginRelationshipCreatedArgs = {
  where?: InputMaybe<PluginRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionPluginRelationshipDeletedArgs = {
  where?: InputMaybe<PluginRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionPluginRunCreatedArgs = {
  where?: InputMaybe<PluginRunSubscriptionWhere>;
};


export type SubscriptionPluginRunDeletedArgs = {
  where?: InputMaybe<PluginRunSubscriptionWhere>;
};


export type SubscriptionPluginRunUpdatedArgs = {
  where?: InputMaybe<PluginRunSubscriptionWhere>;
};


export type SubscriptionPluginUpdatedArgs = {
  where?: InputMaybe<PluginSubscriptionWhere>;
};


export type SubscriptionPluginVersionCreatedArgs = {
  where?: InputMaybe<PluginVersionSubscriptionWhere>;
};


export type SubscriptionPluginVersionDeletedArgs = {
  where?: InputMaybe<PluginVersionSubscriptionWhere>;
};


export type SubscriptionPluginVersionRelationshipCreatedArgs = {
  where?: InputMaybe<PluginVersionRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionPluginVersionRelationshipDeletedArgs = {
  where?: InputMaybe<PluginVersionRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionPluginVersionUpdatedArgs = {
  where?: InputMaybe<PluginVersionSubscriptionWhere>;
};


export type SubscriptionPurchaseCreatedArgs = {
  where?: InputMaybe<PurchaseSubscriptionWhere>;
};


export type SubscriptionPurchaseDeletedArgs = {
  where?: InputMaybe<PurchaseSubscriptionWhere>;
};


export type SubscriptionPurchaseRelationshipCreatedArgs = {
  where?: InputMaybe<PurchaseRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionPurchaseRelationshipDeletedArgs = {
  where?: InputMaybe<PurchaseRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionPurchaseUpdatedArgs = {
  where?: InputMaybe<PurchaseSubscriptionWhere>;
};


export type SubscriptionRecurringEventCreatedArgs = {
  where?: InputMaybe<RecurringEventSubscriptionWhere>;
};


export type SubscriptionRecurringEventDeletedArgs = {
  where?: InputMaybe<RecurringEventSubscriptionWhere>;
};


export type SubscriptionRecurringEventRelationshipCreatedArgs = {
  where?: InputMaybe<RecurringEventRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionRecurringEventRelationshipDeletedArgs = {
  where?: InputMaybe<RecurringEventRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionRecurringEventUpdatedArgs = {
  where?: InputMaybe<RecurringEventSubscriptionWhere>;
};


export type SubscriptionRepeatEndsCreatedArgs = {
  where?: InputMaybe<RepeatEndsSubscriptionWhere>;
};


export type SubscriptionRepeatEndsDeletedArgs = {
  where?: InputMaybe<RepeatEndsSubscriptionWhere>;
};


export type SubscriptionRepeatEndsUpdatedArgs = {
  where?: InputMaybe<RepeatEndsSubscriptionWhere>;
};


export type SubscriptionRepeatEveryCreatedArgs = {
  where?: InputMaybe<RepeatEverySubscriptionWhere>;
};


export type SubscriptionRepeatEveryDeletedArgs = {
  where?: InputMaybe<RepeatEverySubscriptionWhere>;
};


export type SubscriptionRepeatEveryUpdatedArgs = {
  where?: InputMaybe<RepeatEverySubscriptionWhere>;
};


export type SubscriptionSeedDataResponseCreatedArgs = {
  where?: InputMaybe<SeedDataResponseSubscriptionWhere>;
};


export type SubscriptionSeedDataResponseDeletedArgs = {
  where?: InputMaybe<SeedDataResponseSubscriptionWhere>;
};


export type SubscriptionSeedDataResponseUpdatedArgs = {
  where?: InputMaybe<SeedDataResponseSubscriptionWhere>;
};


export type SubscriptionServerConfigCreatedArgs = {
  where?: InputMaybe<ServerConfigSubscriptionWhere>;
};


export type SubscriptionServerConfigDeletedArgs = {
  where?: InputMaybe<ServerConfigSubscriptionWhere>;
};


export type SubscriptionServerConfigRelationshipCreatedArgs = {
  where?: InputMaybe<ServerConfigRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionServerConfigRelationshipDeletedArgs = {
  where?: InputMaybe<ServerConfigRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionServerConfigUpdatedArgs = {
  where?: InputMaybe<ServerConfigSubscriptionWhere>;
};


export type SubscriptionServerRoleCreatedArgs = {
  where?: InputMaybe<ServerRoleSubscriptionWhere>;
};


export type SubscriptionServerRoleDeletedArgs = {
  where?: InputMaybe<ServerRoleSubscriptionWhere>;
};


export type SubscriptionServerRoleUpdatedArgs = {
  where?: InputMaybe<ServerRoleSubscriptionWhere>;
};


export type SubscriptionServerSecretCreatedArgs = {
  where?: InputMaybe<ServerSecretSubscriptionWhere>;
};


export type SubscriptionServerSecretDeletedArgs = {
  where?: InputMaybe<ServerSecretSubscriptionWhere>;
};


export type SubscriptionServerSecretUpdatedArgs = {
  where?: InputMaybe<ServerSecretSubscriptionWhere>;
};


export type SubscriptionSignedUrlCreatedArgs = {
  where?: InputMaybe<SignedUrlSubscriptionWhere>;
};


export type SubscriptionSignedUrlDeletedArgs = {
  where?: InputMaybe<SignedUrlSubscriptionWhere>;
};


export type SubscriptionSignedUrlUpdatedArgs = {
  where?: InputMaybe<SignedUrlSubscriptionWhere>;
};


export type SubscriptionSiteWideDiscussionListFormatCreatedArgs = {
  where?: InputMaybe<SiteWideDiscussionListFormatSubscriptionWhere>;
};


export type SubscriptionSiteWideDiscussionListFormatDeletedArgs = {
  where?: InputMaybe<SiteWideDiscussionListFormatSubscriptionWhere>;
};


export type SubscriptionSiteWideDiscussionListFormatUpdatedArgs = {
  where?: InputMaybe<SiteWideDiscussionListFormatSubscriptionWhere>;
};


export type SubscriptionSuspensionCreatedArgs = {
  where?: InputMaybe<SuspensionSubscriptionWhere>;
};


export type SubscriptionSuspensionDeletedArgs = {
  where?: InputMaybe<SuspensionSubscriptionWhere>;
};


export type SubscriptionSuspensionRelationshipCreatedArgs = {
  where?: InputMaybe<SuspensionRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionSuspensionRelationshipDeletedArgs = {
  where?: InputMaybe<SuspensionRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionSuspensionUpdatedArgs = {
  where?: InputMaybe<SuspensionSubscriptionWhere>;
};


export type SubscriptionTagCreatedArgs = {
  where?: InputMaybe<TagSubscriptionWhere>;
};


export type SubscriptionTagDeletedArgs = {
  where?: InputMaybe<TagSubscriptionWhere>;
};


export type SubscriptionTagRelationshipCreatedArgs = {
  where?: InputMaybe<TagRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionTagRelationshipDeletedArgs = {
  where?: InputMaybe<TagRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionTagUpdatedArgs = {
  where?: InputMaybe<TagSubscriptionWhere>;
};


export type SubscriptionTextVersionCreatedArgs = {
  where?: InputMaybe<TextVersionSubscriptionWhere>;
};


export type SubscriptionTextVersionDeletedArgs = {
  where?: InputMaybe<TextVersionSubscriptionWhere>;
};


export type SubscriptionTextVersionRelationshipCreatedArgs = {
  where?: InputMaybe<TextVersionRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionTextVersionRelationshipDeletedArgs = {
  where?: InputMaybe<TextVersionRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionTextVersionUpdatedArgs = {
  where?: InputMaybe<TextVersionSubscriptionWhere>;
};


export type SubscriptionUserCreatedArgs = {
  where?: InputMaybe<UserSubscriptionWhere>;
};


export type SubscriptionUserDeletedArgs = {
  where?: InputMaybe<UserSubscriptionWhere>;
};


export type SubscriptionUserRelationshipCreatedArgs = {
  where?: InputMaybe<UserRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionUserRelationshipDeletedArgs = {
  where?: InputMaybe<UserRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionUserUpdatedArgs = {
  where?: InputMaybe<UserSubscriptionWhere>;
};


export type SubscriptionWikiPageCreatedArgs = {
  where?: InputMaybe<WikiPageSubscriptionWhere>;
};


export type SubscriptionWikiPageDeletedArgs = {
  where?: InputMaybe<WikiPageSubscriptionWhere>;
};


export type SubscriptionWikiPageRelationshipCreatedArgs = {
  where?: InputMaybe<WikiPageRelationshipCreatedSubscriptionWhere>;
};


export type SubscriptionWikiPageRelationshipDeletedArgs = {
  where?: InputMaybe<WikiPageRelationshipDeletedSubscriptionWhere>;
};


export type SubscriptionWikiPageUpdatedArgs = {
  where?: InputMaybe<WikiPageSubscriptionWhere>;
};

export type Suspension = {
  __typename?: 'Suspension';
  RelatedIssue?: Maybe<Issue>;
  RelatedIssueAggregate?: Maybe<SuspensionIssueRelatedIssueAggregationSelection>;
  RelatedIssueConnection: SuspensionRelatedIssueConnection;
  SuspendedMod?: Maybe<ModerationProfile>;
  SuspendedModAggregate?: Maybe<SuspensionModerationProfileSuspendedModAggregationSelection>;
  SuspendedModConnection: SuspensionSuspendedModConnection;
  SuspendedUser?: Maybe<User>;
  SuspendedUserAggregate?: Maybe<SuspensionUserSuspendedUserAggregationSelection>;
  SuspendedUserConnection: SuspensionSuspendedUserConnection;
  channelUniqueName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  modProfileName?: Maybe<Scalars['String']['output']>;
  suspendedIndefinitely?: Maybe<Scalars['Boolean']['output']>;
  suspendedUntil?: Maybe<Scalars['DateTime']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};


export type SuspensionRelatedIssueArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type SuspensionRelatedIssueAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type SuspensionRelatedIssueConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<SuspensionRelatedIssueConnectionSort>>;
  where?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
};


export type SuspensionSuspendedModArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type SuspensionSuspendedModAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type SuspensionSuspendedModConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<SuspensionSuspendedModConnectionSort>>;
  where?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
};


export type SuspensionSuspendedUserArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type SuspensionSuspendedUserAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type SuspensionSuspendedUserConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<SuspensionSuspendedUserConnectionSort>>;
  where?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
};

export type SuspensionAggregateSelection = {
  __typename?: 'SuspensionAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type SuspensionConnectInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueConnectFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModConnectFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserConnectFieldInput>;
};

export type SuspensionConnectOrCreateInput = {
  SuspendedMod?: InputMaybe<SuspensionSuspendedModConnectOrCreateFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserConnectOrCreateFieldInput>;
};

export type SuspensionConnectWhere = {
  node: SuspensionWhere;
};

export type SuspensionConnectedRelationships = {
  __typename?: 'SuspensionConnectedRelationships';
  RelatedIssue?: Maybe<SuspensionRelatedIssueConnectedRelationship>;
  SuspendedMod?: Maybe<SuspensionSuspendedModConnectedRelationship>;
  SuspendedUser?: Maybe<SuspensionSuspendedUserConnectedRelationship>;
};

export type SuspensionCreateInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserFieldInput>;
  channelUniqueName: Scalars['String']['input'];
  modProfileName?: InputMaybe<Scalars['String']['input']>;
  suspendedIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedUntil?: InputMaybe<Scalars['DateTime']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

export type SuspensionCreatedEvent = {
  __typename?: 'SuspensionCreatedEvent';
  createdSuspension: SuspensionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SuspensionDeleteInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueDeleteFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModDeleteFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserDeleteFieldInput>;
};

export type SuspensionDeletedEvent = {
  __typename?: 'SuspensionDeletedEvent';
  deletedSuspension: SuspensionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type SuspensionDisconnectInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueDisconnectFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModDisconnectFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserDisconnectFieldInput>;
};

export type SuspensionEdge = {
  __typename?: 'SuspensionEdge';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type SuspensionEventPayload = {
  __typename?: 'SuspensionEventPayload';
  channelUniqueName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  modProfileName?: Maybe<Scalars['String']['output']>;
  suspendedIndefinitely?: Maybe<Scalars['Boolean']['output']>;
  suspendedUntil?: Maybe<Scalars['DateTime']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};

export type SuspensionIssueRelatedIssueAggregationSelection = {
  __typename?: 'SuspensionIssueRelatedIssueAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<SuspensionIssueRelatedIssueNodeAggregateSelection>;
};

export type SuspensionIssueRelatedIssueNodeAggregateSelection = {
  __typename?: 'SuspensionIssueRelatedIssueNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type SuspensionModerationProfileSuspendedModAggregationSelection = {
  __typename?: 'SuspensionModerationProfileSuspendedModAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<SuspensionModerationProfileSuspendedModNodeAggregateSelection>;
};

export type SuspensionModerationProfileSuspendedModNodeAggregateSelection = {
  __typename?: 'SuspensionModerationProfileSuspendedModNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type SuspensionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more SuspensionSort objects to sort Suspensions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuspensionSort>>;
};

export type SuspensionRelatedIssueAggregateInput = {
  AND?: InputMaybe<Array<SuspensionRelatedIssueAggregateInput>>;
  NOT?: InputMaybe<SuspensionRelatedIssueAggregateInput>;
  OR?: InputMaybe<Array<SuspensionRelatedIssueAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<SuspensionRelatedIssueNodeAggregationWhereInput>;
};

export type SuspensionRelatedIssueConnectFieldInput = {
  connect?: InputMaybe<IssueConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type SuspensionRelatedIssueConnectedRelationship = {
  __typename?: 'SuspensionRelatedIssueConnectedRelationship';
  node: IssueEventPayload;
};

export type SuspensionRelatedIssueConnection = {
  __typename?: 'SuspensionRelatedIssueConnection';
  edges: Array<SuspensionRelatedIssueRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SuspensionRelatedIssueConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type SuspensionRelatedIssueConnectionWhere = {
  AND?: InputMaybe<Array<SuspensionRelatedIssueConnectionWhere>>;
  NOT?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
  OR?: InputMaybe<Array<SuspensionRelatedIssueConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type SuspensionRelatedIssueCreateFieldInput = {
  node: IssueCreateInput;
};

export type SuspensionRelatedIssueDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
};

export type SuspensionRelatedIssueDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
};

export type SuspensionRelatedIssueFieldInput = {
  connect?: InputMaybe<SuspensionRelatedIssueConnectFieldInput>;
  create?: InputMaybe<SuspensionRelatedIssueCreateFieldInput>;
};

export type SuspensionRelatedIssueNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuspensionRelatedIssueNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuspensionRelatedIssueNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuspensionRelatedIssueNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SuspensionRelatedIssueRelationship = {
  __typename?: 'SuspensionRelatedIssueRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type SuspensionRelatedIssueRelationshipSubscriptionWhere = {
  node?: InputMaybe<IssueSubscriptionWhere>;
};

export type SuspensionRelatedIssueUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type SuspensionRelatedIssueUpdateFieldInput = {
  connect?: InputMaybe<SuspensionRelatedIssueConnectFieldInput>;
  create?: InputMaybe<SuspensionRelatedIssueCreateFieldInput>;
  delete?: InputMaybe<SuspensionRelatedIssueDeleteFieldInput>;
  disconnect?: InputMaybe<SuspensionRelatedIssueDisconnectFieldInput>;
  update?: InputMaybe<SuspensionRelatedIssueUpdateConnectionInput>;
  where?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
};

export type SuspensionRelationInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueCreateFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModCreateFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserCreateFieldInput>;
};

export type SuspensionRelationshipCreatedEvent = {
  __typename?: 'SuspensionRelationshipCreatedEvent';
  createdRelationship: SuspensionConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  suspension: SuspensionEventPayload;
  timestamp: Scalars['Float']['output'];
};

export type SuspensionRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<SuspensionRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<SuspensionRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<SuspensionRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<SuspensionRelationshipsSubscriptionWhere>;
  suspension?: InputMaybe<SuspensionSubscriptionWhere>;
};

export type SuspensionRelationshipDeletedEvent = {
  __typename?: 'SuspensionRelationshipDeletedEvent';
  deletedRelationship: SuspensionConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  suspension: SuspensionEventPayload;
  timestamp: Scalars['Float']['output'];
};

export type SuspensionRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<SuspensionRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<SuspensionRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<SuspensionRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<SuspensionRelationshipsSubscriptionWhere>;
  suspension?: InputMaybe<SuspensionSubscriptionWhere>;
};

export type SuspensionRelationshipsSubscriptionWhere = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueRelationshipSubscriptionWhere>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModRelationshipSubscriptionWhere>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserRelationshipSubscriptionWhere>;
};

/** Fields to sort Suspensions by. The order in which sorts are applied is not guaranteed when specifying many fields in one SuspensionSort object. */
export type SuspensionSort = {
  channelUniqueName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  modProfileName?: InputMaybe<SortDirection>;
  suspendedIndefinitely?: InputMaybe<SortDirection>;
  suspendedUntil?: InputMaybe<SortDirection>;
  username?: InputMaybe<SortDirection>;
};

export type SuspensionSubscriptionWhere = {
  AND?: InputMaybe<Array<SuspensionSubscriptionWhere>>;
  NOT?: InputMaybe<SuspensionSubscriptionWhere>;
  OR?: InputMaybe<Array<SuspensionSubscriptionWhere>>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  modProfileName?: InputMaybe<Scalars['String']['input']>;
  modProfileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  modProfileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  modProfileName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  modProfileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  modProfileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  suspendedIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedUntil?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  suspendedUntil_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
  username_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  username_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  username_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username_MATCHES?: InputMaybe<Scalars['String']['input']>;
  username_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type SuspensionSuspendedModAggregateInput = {
  AND?: InputMaybe<Array<SuspensionSuspendedModAggregateInput>>;
  NOT?: InputMaybe<SuspensionSuspendedModAggregateInput>;
  OR?: InputMaybe<Array<SuspensionSuspendedModAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<SuspensionSuspendedModNodeAggregationWhereInput>;
};

export type SuspensionSuspendedModConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type SuspensionSuspendedModConnectOrCreateFieldInput = {
  onCreate: SuspensionSuspendedModConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type SuspensionSuspendedModConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type SuspensionSuspendedModConnectedRelationship = {
  __typename?: 'SuspensionSuspendedModConnectedRelationship';
  node: ModerationProfileEventPayload;
};

export type SuspensionSuspendedModConnection = {
  __typename?: 'SuspensionSuspendedModConnection';
  edges: Array<SuspensionSuspendedModRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SuspensionSuspendedModConnectionSort = {
  node?: InputMaybe<ModerationProfileSort>;
};

export type SuspensionSuspendedModConnectionWhere = {
  AND?: InputMaybe<Array<SuspensionSuspendedModConnectionWhere>>;
  NOT?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
  OR?: InputMaybe<Array<SuspensionSuspendedModConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type SuspensionSuspendedModCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type SuspensionSuspendedModDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
};

export type SuspensionSuspendedModDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
};

export type SuspensionSuspendedModFieldInput = {
  connect?: InputMaybe<SuspensionSuspendedModConnectFieldInput>;
  connectOrCreate?: InputMaybe<SuspensionSuspendedModConnectOrCreateFieldInput>;
  create?: InputMaybe<SuspensionSuspendedModCreateFieldInput>;
};

export type SuspensionSuspendedModNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuspensionSuspendedModNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuspensionSuspendedModNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuspensionSuspendedModNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type SuspensionSuspendedModRelationship = {
  __typename?: 'SuspensionSuspendedModRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type SuspensionSuspendedModRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModerationProfileSubscriptionWhere>;
};

export type SuspensionSuspendedModUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type SuspensionSuspendedModUpdateFieldInput = {
  connect?: InputMaybe<SuspensionSuspendedModConnectFieldInput>;
  connectOrCreate?: InputMaybe<SuspensionSuspendedModConnectOrCreateFieldInput>;
  create?: InputMaybe<SuspensionSuspendedModCreateFieldInput>;
  delete?: InputMaybe<SuspensionSuspendedModDeleteFieldInput>;
  disconnect?: InputMaybe<SuspensionSuspendedModDisconnectFieldInput>;
  update?: InputMaybe<SuspensionSuspendedModUpdateConnectionInput>;
  where?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
};

export type SuspensionSuspendedUserAggregateInput = {
  AND?: InputMaybe<Array<SuspensionSuspendedUserAggregateInput>>;
  NOT?: InputMaybe<SuspensionSuspendedUserAggregateInput>;
  OR?: InputMaybe<Array<SuspensionSuspendedUserAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<SuspensionSuspendedUserNodeAggregationWhereInput>;
};

export type SuspensionSuspendedUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type SuspensionSuspendedUserConnectOrCreateFieldInput = {
  onCreate: SuspensionSuspendedUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type SuspensionSuspendedUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type SuspensionSuspendedUserConnectedRelationship = {
  __typename?: 'SuspensionSuspendedUserConnectedRelationship';
  node: UserEventPayload;
};

export type SuspensionSuspendedUserConnection = {
  __typename?: 'SuspensionSuspendedUserConnection';
  edges: Array<SuspensionSuspendedUserRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SuspensionSuspendedUserConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type SuspensionSuspendedUserConnectionWhere = {
  AND?: InputMaybe<Array<SuspensionSuspendedUserConnectionWhere>>;
  NOT?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
  OR?: InputMaybe<Array<SuspensionSuspendedUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type SuspensionSuspendedUserCreateFieldInput = {
  node: UserCreateInput;
};

export type SuspensionSuspendedUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
};

export type SuspensionSuspendedUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
};

export type SuspensionSuspendedUserFieldInput = {
  connect?: InputMaybe<SuspensionSuspendedUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<SuspensionSuspendedUserConnectOrCreateFieldInput>;
  create?: InputMaybe<SuspensionSuspendedUserCreateFieldInput>;
};

export type SuspensionSuspendedUserNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuspensionSuspendedUserNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuspensionSuspendedUserNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuspensionSuspendedUserNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type SuspensionSuspendedUserRelationship = {
  __typename?: 'SuspensionSuspendedUserRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type SuspensionSuspendedUserRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type SuspensionSuspendedUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type SuspensionSuspendedUserUpdateFieldInput = {
  connect?: InputMaybe<SuspensionSuspendedUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<SuspensionSuspendedUserConnectOrCreateFieldInput>;
  create?: InputMaybe<SuspensionSuspendedUserCreateFieldInput>;
  delete?: InputMaybe<SuspensionSuspendedUserDeleteFieldInput>;
  disconnect?: InputMaybe<SuspensionSuspendedUserDisconnectFieldInput>;
  update?: InputMaybe<SuspensionSuspendedUserUpdateConnectionInput>;
  where?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
};

export type SuspensionUpdateInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueUpdateFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModUpdateFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserUpdateFieldInput>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName?: InputMaybe<Scalars['String']['input']>;
  suspendedIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedUntil?: InputMaybe<Scalars['DateTime']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

export type SuspensionUpdatedEvent = {
  __typename?: 'SuspensionUpdatedEvent';
  event: EventType;
  previousState: SuspensionEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedSuspension: SuspensionEventPayload;
};

export type SuspensionUserSuspendedUserAggregationSelection = {
  __typename?: 'SuspensionUserSuspendedUserAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<SuspensionUserSuspendedUserNodeAggregateSelection>;
};

export type SuspensionUserSuspendedUserNodeAggregateSelection = {
  __typename?: 'SuspensionUserSuspendedUserNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type SuspensionWhere = {
  AND?: InputMaybe<Array<SuspensionWhere>>;
  NOT?: InputMaybe<SuspensionWhere>;
  OR?: InputMaybe<Array<SuspensionWhere>>;
  RelatedIssue?: InputMaybe<IssueWhere>;
  RelatedIssueAggregate?: InputMaybe<SuspensionRelatedIssueAggregateInput>;
  RelatedIssueConnection?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
  RelatedIssueConnection_NOT?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
  RelatedIssue_NOT?: InputMaybe<IssueWhere>;
  SuspendedMod?: InputMaybe<ModerationProfileWhere>;
  SuspendedModAggregate?: InputMaybe<SuspensionSuspendedModAggregateInput>;
  SuspendedModConnection?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
  SuspendedModConnection_NOT?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
  SuspendedMod_NOT?: InputMaybe<ModerationProfileWhere>;
  SuspendedUser?: InputMaybe<UserWhere>;
  SuspendedUserAggregate?: InputMaybe<SuspensionSuspendedUserAggregateInput>;
  SuspendedUserConnection?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
  SuspendedUserConnection_NOT?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
  SuspendedUser_NOT?: InputMaybe<UserWhere>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  modProfileName?: InputMaybe<Scalars['String']['input']>;
  modProfileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  modProfileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  modProfileName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  modProfileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  modProfileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  suspendedIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedUntil?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  suspendedUntil_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
  username_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  username_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  username_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username_MATCHES?: InputMaybe<Scalars['String']['input']>;
  username_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type SuspensionsConnection = {
  __typename?: 'SuspensionsConnection';
  edges: Array<SuspensionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Tag = {
  __typename?: 'Tag';
  Channels: Array<Channel>;
  ChannelsAggregate?: Maybe<TagChannelChannelsAggregationSelection>;
  ChannelsConnection: TagChannelsConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<TagCommentCommentsAggregationSelection>;
  CommentsConnection: TagCommentsConnection;
  Discussions: Array<Discussion>;
  DiscussionsAggregate?: Maybe<TagDiscussionDiscussionsAggregationSelection>;
  DiscussionsConnection: TagDiscussionsConnection;
  Events: Array<Event>;
  EventsAggregate?: Maybe<TagEventEventsAggregationSelection>;
  EventsConnection: TagEventsConnection;
  text: Scalars['String']['output'];
};


export type TagChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type TagChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type TagChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TagChannelsConnectionSort>>;
  where?: InputMaybe<TagChannelsConnectionWhere>;
};


export type TagCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type TagCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type TagCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TagCommentsConnectionSort>>;
  where?: InputMaybe<TagCommentsConnectionWhere>;
};


export type TagDiscussionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type TagDiscussionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type TagDiscussionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TagDiscussionsConnectionSort>>;
  where?: InputMaybe<TagDiscussionsConnectionWhere>;
};


export type TagEventsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type TagEventsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type TagEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TagEventsConnectionSort>>;
  where?: InputMaybe<TagEventsConnectionWhere>;
};

export type TagAggregateSelection = {
  __typename?: 'TagAggregateSelection';
  count: Scalars['Int']['output'];
  text: StringAggregateSelection;
};

export type TagChannelChannelsAggregationSelection = {
  __typename?: 'TagChannelChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TagChannelChannelsNodeAggregateSelection>;
};

export type TagChannelChannelsNodeAggregateSelection = {
  __typename?: 'TagChannelChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type TagChannelsAggregateInput = {
  AND?: InputMaybe<Array<TagChannelsAggregateInput>>;
  NOT?: InputMaybe<TagChannelsAggregateInput>;
  OR?: InputMaybe<Array<TagChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TagChannelsNodeAggregationWhereInput>;
};

export type TagChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type TagChannelsConnectOrCreateFieldInput = {
  onCreate: TagChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type TagChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type TagChannelsConnectedRelationship = {
  __typename?: 'TagChannelsConnectedRelationship';
  node: ChannelEventPayload;
};

export type TagChannelsConnection = {
  __typename?: 'TagChannelsConnection';
  edges: Array<TagChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TagChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type TagChannelsConnectionWhere = {
  AND?: InputMaybe<Array<TagChannelsConnectionWhere>>;
  NOT?: InputMaybe<TagChannelsConnectionWhere>;
  OR?: InputMaybe<Array<TagChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type TagChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type TagChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<TagChannelsConnectionWhere>;
};

export type TagChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<TagChannelsConnectionWhere>;
};

export type TagChannelsFieldInput = {
  connect?: InputMaybe<Array<TagChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TagChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TagChannelsCreateFieldInput>>;
};

export type TagChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TagChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TagChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TagChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type TagChannelsRelationship = {
  __typename?: 'TagChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type TagChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type TagChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type TagChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<TagChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TagChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TagChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<TagChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TagChannelsDisconnectFieldInput>>;
  update?: InputMaybe<TagChannelsUpdateConnectionInput>;
  where?: InputMaybe<TagChannelsConnectionWhere>;
};

export type TagCommentCommentsAggregationSelection = {
  __typename?: 'TagCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TagCommentCommentsNodeAggregateSelection>;
};

export type TagCommentCommentsNodeAggregateSelection = {
  __typename?: 'TagCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type TagCommentsAggregateInput = {
  AND?: InputMaybe<Array<TagCommentsAggregateInput>>;
  NOT?: InputMaybe<TagCommentsAggregateInput>;
  OR?: InputMaybe<Array<TagCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TagCommentsNodeAggregationWhereInput>;
};

export type TagCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type TagCommentsConnectedRelationship = {
  __typename?: 'TagCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type TagCommentsConnection = {
  __typename?: 'TagCommentsConnection';
  edges: Array<TagCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TagCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type TagCommentsConnectionWhere = {
  AND?: InputMaybe<Array<TagCommentsConnectionWhere>>;
  NOT?: InputMaybe<TagCommentsConnectionWhere>;
  OR?: InputMaybe<Array<TagCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type TagCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type TagCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<TagCommentsConnectionWhere>;
};

export type TagCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<TagCommentsConnectionWhere>;
};

export type TagCommentsFieldInput = {
  connect?: InputMaybe<Array<TagCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<TagCommentsCreateFieldInput>>;
};

export type TagCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TagCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TagCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TagCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type TagCommentsRelationship = {
  __typename?: 'TagCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type TagCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type TagCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type TagCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<TagCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<TagCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<TagCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TagCommentsDisconnectFieldInput>>;
  update?: InputMaybe<TagCommentsUpdateConnectionInput>;
  where?: InputMaybe<TagCommentsConnectionWhere>;
};

export type TagConnectInput = {
  Channels?: InputMaybe<Array<TagChannelsConnectFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsConnectFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsConnectFieldInput>>;
  Events?: InputMaybe<Array<TagEventsConnectFieldInput>>;
};

export type TagConnectOrCreateInput = {
  Channels?: InputMaybe<Array<TagChannelsConnectOrCreateFieldInput>>;
};

export type TagConnectOrCreateWhere = {
  node: TagUniqueWhere;
};

export type TagConnectWhere = {
  node: TagWhere;
};

export type TagConnectedRelationships = {
  __typename?: 'TagConnectedRelationships';
  Channels?: Maybe<TagChannelsConnectedRelationship>;
  Comments?: Maybe<TagCommentsConnectedRelationship>;
  Discussions?: Maybe<TagDiscussionsConnectedRelationship>;
  Events?: Maybe<TagEventsConnectedRelationship>;
};

export type TagCreateInput = {
  Channels?: InputMaybe<TagChannelsFieldInput>;
  Comments?: InputMaybe<TagCommentsFieldInput>;
  Discussions?: InputMaybe<TagDiscussionsFieldInput>;
  Events?: InputMaybe<TagEventsFieldInput>;
  text: Scalars['String']['input'];
};

export type TagCreatedEvent = {
  __typename?: 'TagCreatedEvent';
  createdTag: TagEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type TagDeleteInput = {
  Channels?: InputMaybe<Array<TagChannelsDeleteFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsDeleteFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsDeleteFieldInput>>;
  Events?: InputMaybe<Array<TagEventsDeleteFieldInput>>;
};

export type TagDeletedEvent = {
  __typename?: 'TagDeletedEvent';
  deletedTag: TagEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type TagDisconnectInput = {
  Channels?: InputMaybe<Array<TagChannelsDisconnectFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsDisconnectFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsDisconnectFieldInput>>;
  Events?: InputMaybe<Array<TagEventsDisconnectFieldInput>>;
};

export type TagDiscussionDiscussionsAggregationSelection = {
  __typename?: 'TagDiscussionDiscussionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TagDiscussionDiscussionsNodeAggregateSelection>;
};

export type TagDiscussionDiscussionsNodeAggregateSelection = {
  __typename?: 'TagDiscussionDiscussionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type TagDiscussionsAggregateInput = {
  AND?: InputMaybe<Array<TagDiscussionsAggregateInput>>;
  NOT?: InputMaybe<TagDiscussionsAggregateInput>;
  OR?: InputMaybe<Array<TagDiscussionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TagDiscussionsNodeAggregationWhereInput>;
};

export type TagDiscussionsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type TagDiscussionsConnectedRelationship = {
  __typename?: 'TagDiscussionsConnectedRelationship';
  node: DiscussionEventPayload;
};

export type TagDiscussionsConnection = {
  __typename?: 'TagDiscussionsConnection';
  edges: Array<TagDiscussionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TagDiscussionsConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type TagDiscussionsConnectionWhere = {
  AND?: InputMaybe<Array<TagDiscussionsConnectionWhere>>;
  NOT?: InputMaybe<TagDiscussionsConnectionWhere>;
  OR?: InputMaybe<Array<TagDiscussionsConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type TagDiscussionsCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type TagDiscussionsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<TagDiscussionsConnectionWhere>;
};

export type TagDiscussionsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<TagDiscussionsConnectionWhere>;
};

export type TagDiscussionsFieldInput = {
  connect?: InputMaybe<Array<TagDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<TagDiscussionsCreateFieldInput>>;
};

export type TagDiscussionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TagDiscussionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TagDiscussionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TagDiscussionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TagDiscussionsRelationship = {
  __typename?: 'TagDiscussionsRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type TagDiscussionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<DiscussionSubscriptionWhere>;
};

export type TagDiscussionsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type TagDiscussionsUpdateFieldInput = {
  connect?: InputMaybe<Array<TagDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<TagDiscussionsCreateFieldInput>>;
  delete?: InputMaybe<Array<TagDiscussionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TagDiscussionsDisconnectFieldInput>>;
  update?: InputMaybe<TagDiscussionsUpdateConnectionInput>;
  where?: InputMaybe<TagDiscussionsConnectionWhere>;
};

export type TagEdge = {
  __typename?: 'TagEdge';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type TagEventEventsAggregationSelection = {
  __typename?: 'TagEventEventsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TagEventEventsNodeAggregateSelection>;
};

export type TagEventEventsNodeAggregateSelection = {
  __typename?: 'TagEventEventsNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type TagEventPayload = {
  __typename?: 'TagEventPayload';
  text: Scalars['String']['output'];
};

export type TagEventsAggregateInput = {
  AND?: InputMaybe<Array<TagEventsAggregateInput>>;
  NOT?: InputMaybe<TagEventsAggregateInput>;
  OR?: InputMaybe<Array<TagEventsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TagEventsNodeAggregationWhereInput>;
};

export type TagEventsConnectFieldInput = {
  connect?: InputMaybe<Array<EventConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type TagEventsConnectedRelationship = {
  __typename?: 'TagEventsConnectedRelationship';
  node: EventEventPayload;
};

export type TagEventsConnection = {
  __typename?: 'TagEventsConnection';
  edges: Array<TagEventsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TagEventsConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type TagEventsConnectionWhere = {
  AND?: InputMaybe<Array<TagEventsConnectionWhere>>;
  NOT?: InputMaybe<TagEventsConnectionWhere>;
  OR?: InputMaybe<Array<TagEventsConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type TagEventsCreateFieldInput = {
  node: EventCreateInput;
};

export type TagEventsDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<TagEventsConnectionWhere>;
};

export type TagEventsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<TagEventsConnectionWhere>;
};

export type TagEventsFieldInput = {
  connect?: InputMaybe<Array<TagEventsConnectFieldInput>>;
  create?: InputMaybe<Array<TagEventsCreateFieldInput>>;
};

export type TagEventsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TagEventsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TagEventsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TagEventsNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type TagEventsRelationship = {
  __typename?: 'TagEventsRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type TagEventsRelationshipSubscriptionWhere = {
  node?: InputMaybe<EventSubscriptionWhere>;
};

export type TagEventsUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type TagEventsUpdateFieldInput = {
  connect?: InputMaybe<Array<TagEventsConnectFieldInput>>;
  create?: InputMaybe<Array<TagEventsCreateFieldInput>>;
  delete?: InputMaybe<Array<TagEventsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TagEventsDisconnectFieldInput>>;
  update?: InputMaybe<TagEventsUpdateConnectionInput>;
  where?: InputMaybe<TagEventsConnectionWhere>;
};

export type TagOnCreateInput = {
  text: Scalars['String']['input'];
};

export type TagOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more TagSort objects to sort Tags by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<TagSort>>;
};

export type TagRelationInput = {
  Channels?: InputMaybe<Array<TagChannelsCreateFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsCreateFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsCreateFieldInput>>;
  Events?: InputMaybe<Array<TagEventsCreateFieldInput>>;
};

export type TagRelationshipCreatedEvent = {
  __typename?: 'TagRelationshipCreatedEvent';
  createdRelationship: TagConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  tag: TagEventPayload;
  timestamp: Scalars['Float']['output'];
};

export type TagRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<TagRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<TagRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<TagRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<TagRelationshipsSubscriptionWhere>;
  tag?: InputMaybe<TagSubscriptionWhere>;
};

export type TagRelationshipDeletedEvent = {
  __typename?: 'TagRelationshipDeletedEvent';
  deletedRelationship: TagConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  tag: TagEventPayload;
  timestamp: Scalars['Float']['output'];
};

export type TagRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<TagRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<TagRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<TagRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<TagRelationshipsSubscriptionWhere>;
  tag?: InputMaybe<TagSubscriptionWhere>;
};

export type TagRelationshipsSubscriptionWhere = {
  Channels?: InputMaybe<TagChannelsRelationshipSubscriptionWhere>;
  Comments?: InputMaybe<TagCommentsRelationshipSubscriptionWhere>;
  Discussions?: InputMaybe<TagDiscussionsRelationshipSubscriptionWhere>;
  Events?: InputMaybe<TagEventsRelationshipSubscriptionWhere>;
};

/** Fields to sort Tags by. The order in which sorts are applied is not guaranteed when specifying many fields in one TagSort object. */
export type TagSort = {
  text?: InputMaybe<SortDirection>;
};

export type TagSubscriptionWhere = {
  AND?: InputMaybe<Array<TagSubscriptionWhere>>;
  NOT?: InputMaybe<TagSubscriptionWhere>;
  OR?: InputMaybe<Array<TagSubscriptionWhere>>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type TagUniqueWhere = {
  text?: InputMaybe<Scalars['String']['input']>;
};

export type TagUpdateInput = {
  Channels?: InputMaybe<Array<TagChannelsUpdateFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsUpdateFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsUpdateFieldInput>>;
  Events?: InputMaybe<Array<TagEventsUpdateFieldInput>>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type TagUpdatedEvent = {
  __typename?: 'TagUpdatedEvent';
  event: EventType;
  previousState: TagEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedTag: TagEventPayload;
};

export type TagWhere = {
  AND?: InputMaybe<Array<TagWhere>>;
  ChannelsAggregate?: InputMaybe<TagChannelsAggregateInput>;
  /** Return Tags where all of the related TagChannelsConnections match this filter */
  ChannelsConnection_ALL?: InputMaybe<TagChannelsConnectionWhere>;
  /** Return Tags where none of the related TagChannelsConnections match this filter */
  ChannelsConnection_NONE?: InputMaybe<TagChannelsConnectionWhere>;
  /** Return Tags where one of the related TagChannelsConnections match this filter */
  ChannelsConnection_SINGLE?: InputMaybe<TagChannelsConnectionWhere>;
  /** Return Tags where some of the related TagChannelsConnections match this filter */
  ChannelsConnection_SOME?: InputMaybe<TagChannelsConnectionWhere>;
  /** Return Tags where all of the related Channels match this filter */
  Channels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Tags where none of the related Channels match this filter */
  Channels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Tags where one of the related Channels match this filter */
  Channels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Tags where some of the related Channels match this filter */
  Channels_SOME?: InputMaybe<ChannelWhere>;
  CommentsAggregate?: InputMaybe<TagCommentsAggregateInput>;
  /** Return Tags where all of the related TagCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<TagCommentsConnectionWhere>;
  /** Return Tags where none of the related TagCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<TagCommentsConnectionWhere>;
  /** Return Tags where one of the related TagCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<TagCommentsConnectionWhere>;
  /** Return Tags where some of the related TagCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<TagCommentsConnectionWhere>;
  /** Return Tags where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return Tags where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return Tags where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Tags where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  DiscussionsAggregate?: InputMaybe<TagDiscussionsAggregateInput>;
  /** Return Tags where all of the related TagDiscussionsConnections match this filter */
  DiscussionsConnection_ALL?: InputMaybe<TagDiscussionsConnectionWhere>;
  /** Return Tags where none of the related TagDiscussionsConnections match this filter */
  DiscussionsConnection_NONE?: InputMaybe<TagDiscussionsConnectionWhere>;
  /** Return Tags where one of the related TagDiscussionsConnections match this filter */
  DiscussionsConnection_SINGLE?: InputMaybe<TagDiscussionsConnectionWhere>;
  /** Return Tags where some of the related TagDiscussionsConnections match this filter */
  DiscussionsConnection_SOME?: InputMaybe<TagDiscussionsConnectionWhere>;
  /** Return Tags where all of the related Discussions match this filter */
  Discussions_ALL?: InputMaybe<DiscussionWhere>;
  /** Return Tags where none of the related Discussions match this filter */
  Discussions_NONE?: InputMaybe<DiscussionWhere>;
  /** Return Tags where one of the related Discussions match this filter */
  Discussions_SINGLE?: InputMaybe<DiscussionWhere>;
  /** Return Tags where some of the related Discussions match this filter */
  Discussions_SOME?: InputMaybe<DiscussionWhere>;
  EventsAggregate?: InputMaybe<TagEventsAggregateInput>;
  /** Return Tags where all of the related TagEventsConnections match this filter */
  EventsConnection_ALL?: InputMaybe<TagEventsConnectionWhere>;
  /** Return Tags where none of the related TagEventsConnections match this filter */
  EventsConnection_NONE?: InputMaybe<TagEventsConnectionWhere>;
  /** Return Tags where one of the related TagEventsConnections match this filter */
  EventsConnection_SINGLE?: InputMaybe<TagEventsConnectionWhere>;
  /** Return Tags where some of the related TagEventsConnections match this filter */
  EventsConnection_SOME?: InputMaybe<TagEventsConnectionWhere>;
  /** Return Tags where all of the related Events match this filter */
  Events_ALL?: InputMaybe<EventWhere>;
  /** Return Tags where none of the related Events match this filter */
  Events_NONE?: InputMaybe<EventWhere>;
  /** Return Tags where one of the related Events match this filter */
  Events_SINGLE?: InputMaybe<EventWhere>;
  /** Return Tags where some of the related Events match this filter */
  Events_SOME?: InputMaybe<EventWhere>;
  NOT?: InputMaybe<TagWhere>;
  OR?: InputMaybe<Array<TagWhere>>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type TagsConnection = {
  __typename?: 'TagsConnection';
  edges: Array<TagEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TextVersion = {
  __typename?: 'TextVersion';
  Author?: Maybe<User>;
  AuthorAggregate?: Maybe<TextVersionUserAuthorAggregationSelection>;
  AuthorConnection: TextVersionAuthorConnection;
  body?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type TextVersionAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type TextVersionAuthorAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type TextVersionAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TextVersionAuthorConnectionSort>>;
  where?: InputMaybe<TextVersionAuthorConnectionWhere>;
};

export type TextVersionAggregateSelection = {
  __typename?: 'TextVersionAggregateSelection';
  body: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type TextVersionAuthorAggregateInput = {
  AND?: InputMaybe<Array<TextVersionAuthorAggregateInput>>;
  NOT?: InputMaybe<TextVersionAuthorAggregateInput>;
  OR?: InputMaybe<Array<TextVersionAuthorAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TextVersionAuthorNodeAggregationWhereInput>;
};

export type TextVersionAuthorConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type TextVersionAuthorConnectOrCreateFieldInput = {
  onCreate: TextVersionAuthorConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type TextVersionAuthorConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type TextVersionAuthorConnectedRelationship = {
  __typename?: 'TextVersionAuthorConnectedRelationship';
  node: UserEventPayload;
};

export type TextVersionAuthorConnection = {
  __typename?: 'TextVersionAuthorConnection';
  edges: Array<TextVersionAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TextVersionAuthorConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type TextVersionAuthorConnectionWhere = {
  AND?: InputMaybe<Array<TextVersionAuthorConnectionWhere>>;
  NOT?: InputMaybe<TextVersionAuthorConnectionWhere>;
  OR?: InputMaybe<Array<TextVersionAuthorConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type TextVersionAuthorCreateFieldInput = {
  node: UserCreateInput;
};

export type TextVersionAuthorDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<TextVersionAuthorConnectionWhere>;
};

export type TextVersionAuthorDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<TextVersionAuthorConnectionWhere>;
};

export type TextVersionAuthorFieldInput = {
  connect?: InputMaybe<TextVersionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<TextVersionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<TextVersionAuthorCreateFieldInput>;
};

export type TextVersionAuthorNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TextVersionAuthorNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TextVersionAuthorNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TextVersionAuthorNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type TextVersionAuthorRelationship = {
  __typename?: 'TextVersionAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type TextVersionAuthorRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type TextVersionAuthorUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type TextVersionAuthorUpdateFieldInput = {
  connect?: InputMaybe<TextVersionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<TextVersionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<TextVersionAuthorCreateFieldInput>;
  delete?: InputMaybe<TextVersionAuthorDeleteFieldInput>;
  disconnect?: InputMaybe<TextVersionAuthorDisconnectFieldInput>;
  update?: InputMaybe<TextVersionAuthorUpdateConnectionInput>;
  where?: InputMaybe<TextVersionAuthorConnectionWhere>;
};

export type TextVersionConnectInput = {
  Author?: InputMaybe<TextVersionAuthorConnectFieldInput>;
};

export type TextVersionConnectOrCreateInput = {
  Author?: InputMaybe<TextVersionAuthorConnectOrCreateFieldInput>;
};

export type TextVersionConnectWhere = {
  node: TextVersionWhere;
};

export type TextVersionConnectedRelationships = {
  __typename?: 'TextVersionConnectedRelationships';
  Author?: Maybe<TextVersionAuthorConnectedRelationship>;
};

export type TextVersionCreateInput = {
  Author?: InputMaybe<TextVersionAuthorFieldInput>;
  body?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TextVersionCreatedEvent = {
  __typename?: 'TextVersionCreatedEvent';
  createdTextVersion: TextVersionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type TextVersionDeleteInput = {
  Author?: InputMaybe<TextVersionAuthorDeleteFieldInput>;
};

export type TextVersionDeletedEvent = {
  __typename?: 'TextVersionDeletedEvent';
  deletedTextVersion: TextVersionEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type TextVersionDisconnectInput = {
  Author?: InputMaybe<TextVersionAuthorDisconnectFieldInput>;
};

export type TextVersionEdge = {
  __typename?: 'TextVersionEdge';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type TextVersionEventPayload = {
  __typename?: 'TextVersionEventPayload';
  body?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type TextVersionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more TextVersionSort objects to sort TextVersions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<TextVersionSort>>;
};

export type TextVersionRelationInput = {
  Author?: InputMaybe<TextVersionAuthorCreateFieldInput>;
};

export type TextVersionRelationshipCreatedEvent = {
  __typename?: 'TextVersionRelationshipCreatedEvent';
  createdRelationship: TextVersionConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  textVersion: TextVersionEventPayload;
  timestamp: Scalars['Float']['output'];
};

export type TextVersionRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<TextVersionRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<TextVersionRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<TextVersionRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<TextVersionRelationshipsSubscriptionWhere>;
  textVersion?: InputMaybe<TextVersionSubscriptionWhere>;
};

export type TextVersionRelationshipDeletedEvent = {
  __typename?: 'TextVersionRelationshipDeletedEvent';
  deletedRelationship: TextVersionConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  textVersion: TextVersionEventPayload;
  timestamp: Scalars['Float']['output'];
};

export type TextVersionRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<TextVersionRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<TextVersionRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<TextVersionRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<TextVersionRelationshipsSubscriptionWhere>;
  textVersion?: InputMaybe<TextVersionSubscriptionWhere>;
};

export type TextVersionRelationshipsSubscriptionWhere = {
  Author?: InputMaybe<TextVersionAuthorRelationshipSubscriptionWhere>;
};

/** Fields to sort TextVersions by. The order in which sorts are applied is not guaranteed when specifying many fields in one TextVersionSort object. */
export type TextVersionSort = {
  body?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type TextVersionSubscriptionWhere = {
  AND?: InputMaybe<Array<TextVersionSubscriptionWhere>>;
  NOT?: InputMaybe<TextVersionSubscriptionWhere>;
  OR?: InputMaybe<Array<TextVersionSubscriptionWhere>>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TextVersionUpdateInput = {
  Author?: InputMaybe<TextVersionAuthorUpdateFieldInput>;
  body?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TextVersionUpdatedEvent = {
  __typename?: 'TextVersionUpdatedEvent';
  event: EventType;
  previousState: TextVersionEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedTextVersion: TextVersionEventPayload;
};

export type TextVersionUserAuthorAggregationSelection = {
  __typename?: 'TextVersionUserAuthorAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TextVersionUserAuthorNodeAggregateSelection>;
};

export type TextVersionUserAuthorNodeAggregateSelection = {
  __typename?: 'TextVersionUserAuthorNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type TextVersionWhere = {
  AND?: InputMaybe<Array<TextVersionWhere>>;
  Author?: InputMaybe<UserWhere>;
  AuthorAggregate?: InputMaybe<TextVersionAuthorAggregateInput>;
  AuthorConnection?: InputMaybe<TextVersionAuthorConnectionWhere>;
  AuthorConnection_NOT?: InputMaybe<TextVersionAuthorConnectionWhere>;
  Author_NOT?: InputMaybe<UserWhere>;
  NOT?: InputMaybe<TextVersionWhere>;
  OR?: InputMaybe<Array<TextVersionWhere>>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TextVersionsConnection = {
  __typename?: 'TextVersionsConnection';
  edges: Array<TextVersionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export enum TimeFrame {
  All = 'all',
  Day = 'day',
  Month = 'month',
  Week = 'week',
  Year = 'year'
}

export type UpdateActivitiesMutationResponse = {
  __typename?: 'UpdateActivitiesMutationResponse';
  activities: Array<Activity>;
  info: UpdateInfo;
};

export type UpdateAlbumsMutationResponse = {
  __typename?: 'UpdateAlbumsMutationResponse';
  albums: Array<Album>;
  info: UpdateInfo;
};

export type UpdateChannelInfosMutationResponse = {
  __typename?: 'UpdateChannelInfosMutationResponse';
  channelInfos: Array<ChannelInfo>;
  info: UpdateInfo;
};

export type UpdateChannelRolesMutationResponse = {
  __typename?: 'UpdateChannelRolesMutationResponse';
  channelRoles: Array<ChannelRole>;
  info: UpdateInfo;
};

export type UpdateChannelsMutationResponse = {
  __typename?: 'UpdateChannelsMutationResponse';
  channels: Array<Channel>;
  info: UpdateInfo;
};

export type UpdateCollectionsMutationResponse = {
  __typename?: 'UpdateCollectionsMutationResponse';
  collections: Array<Collection>;
  info: UpdateInfo;
};

export type UpdateCommentInfosMutationResponse = {
  __typename?: 'UpdateCommentInfosMutationResponse';
  commentInfos: Array<CommentInfo>;
  info: UpdateInfo;
};

export type UpdateCommentRepliesFormatsMutationResponse = {
  __typename?: 'UpdateCommentRepliesFormatsMutationResponse';
  commentRepliesFormats: Array<CommentRepliesFormat>;
  info: UpdateInfo;
};

export type UpdateCommentSectionFormatsMutationResponse = {
  __typename?: 'UpdateCommentSectionFormatsMutationResponse';
  commentSectionFormats: Array<CommentSectionFormat>;
  info: UpdateInfo;
};

export type UpdateCommentsMutationResponse = {
  __typename?: 'UpdateCommentsMutationResponse';
  comments: Array<Comment>;
  info: UpdateInfo;
};

export type UpdateContactsMutationResponse = {
  __typename?: 'UpdateContactsMutationResponse';
  contacts: Array<Contact>;
  info: UpdateInfo;
};

export type UpdateDayDataMutationResponse = {
  __typename?: 'UpdateDayDataMutationResponse';
  dayData: Array<DayData>;
  info: UpdateInfo;
};

export type UpdateDiscussionChannelInfosMutationResponse = {
  __typename?: 'UpdateDiscussionChannelInfosMutationResponse';
  discussionChannelInfos: Array<DiscussionChannelInfo>;
  info: UpdateInfo;
};

export type UpdateDiscussionChannelListFormatsMutationResponse = {
  __typename?: 'UpdateDiscussionChannelListFormatsMutationResponse';
  discussionChannelListFormats: Array<DiscussionChannelListFormat>;
  info: UpdateInfo;
};

export type UpdateDiscussionChannelsMutationResponse = {
  __typename?: 'UpdateDiscussionChannelsMutationResponse';
  discussionChannels: Array<DiscussionChannel>;
  info: UpdateInfo;
};

export type UpdateDiscussionInfosMutationResponse = {
  __typename?: 'UpdateDiscussionInfosMutationResponse';
  discussionInfos: Array<DiscussionInfo>;
  info: UpdateInfo;
};

export type UpdateDiscussionsMutationResponse = {
  __typename?: 'UpdateDiscussionsMutationResponse';
  discussions: Array<Discussion>;
  info: UpdateInfo;
};

export type UpdateDownloadableFilesMutationResponse = {
  __typename?: 'UpdateDownloadableFilesMutationResponse';
  downloadableFiles: Array<DownloadableFile>;
  info: UpdateInfo;
};

export type UpdateDropDataResponsesMutationResponse = {
  __typename?: 'UpdateDropDataResponsesMutationResponse';
  dropDataResponses: Array<DropDataResponse>;
  info: UpdateInfo;
};

export type UpdateEmailsMutationResponse = {
  __typename?: 'UpdateEmailsMutationResponse';
  emails: Array<Email>;
  info: UpdateInfo;
};

export type UpdateEmojisMutationResponse = {
  __typename?: 'UpdateEmojisMutationResponse';
  emojis: Array<Emoji>;
  info: UpdateInfo;
};

export type UpdateEnvironmentInfosMutationResponse = {
  __typename?: 'UpdateEnvironmentInfosMutationResponse';
  environmentInfos: Array<EnvironmentInfo>;
  info: UpdateInfo;
};

export type UpdateEventChannelInfosMutationResponse = {
  __typename?: 'UpdateEventChannelInfosMutationResponse';
  eventChannelInfos: Array<EventChannelInfo>;
  info: UpdateInfo;
};

export type UpdateEventChannelsMutationResponse = {
  __typename?: 'UpdateEventChannelsMutationResponse';
  eventChannels: Array<EventChannel>;
  info: UpdateInfo;
};

export type UpdateEventCommentsFormatsMutationResponse = {
  __typename?: 'UpdateEventCommentsFormatsMutationResponse';
  eventCommentsFormats: Array<EventCommentsFormat>;
  info: UpdateInfo;
};

export type UpdateEventInfosMutationResponse = {
  __typename?: 'UpdateEventInfosMutationResponse';
  eventInfos: Array<EventInfo>;
  info: UpdateInfo;
};

export type UpdateEventsMutationResponse = {
  __typename?: 'UpdateEventsMutationResponse';
  events: Array<Event>;
  info: UpdateInfo;
};

export type UpdateFeedsMutationResponse = {
  __typename?: 'UpdateFeedsMutationResponse';
  feeds: Array<Feed>;
  info: UpdateInfo;
};

export type UpdateFileVersionsMutationResponse = {
  __typename?: 'UpdateFileVersionsMutationResponse';
  fileVersions: Array<FileVersion>;
  info: UpdateInfo;
};

export type UpdateFilterGroupsMutationResponse = {
  __typename?: 'UpdateFilterGroupsMutationResponse';
  filterGroups: Array<FilterGroup>;
  info: UpdateInfo;
};

export type UpdateFilterOptionsMutationResponse = {
  __typename?: 'UpdateFilterOptionsMutationResponse';
  filterOptions: Array<FilterOption>;
  info: UpdateInfo;
};

export type UpdateGetSortedChannelsResponsesMutationResponse = {
  __typename?: 'UpdateGetSortedChannelsResponsesMutationResponse';
  getSortedChannelsResponses: Array<GetSortedChannelsResponse>;
  info: UpdateInfo;
};

export type UpdateImagesMutationResponse = {
  __typename?: 'UpdateImagesMutationResponse';
  images: Array<Image>;
  info: UpdateInfo;
};

/** Information about the number of nodes and relationships created and deleted during an update mutation */
export type UpdateInfo = {
  __typename?: 'UpdateInfo';
  /** @deprecated This field has been deprecated because bookmarks are now handled by the driver. */
  bookmark?: Maybe<Scalars['String']['output']>;
  nodesCreated: Scalars['Int']['output'];
  nodesDeleted: Scalars['Int']['output'];
  relationshipsCreated: Scalars['Int']['output'];
  relationshipsDeleted: Scalars['Int']['output'];
};

export type UpdateIssuesMutationResponse = {
  __typename?: 'UpdateIssuesMutationResponse';
  info: UpdateInfo;
  issues: Array<Issue>;
};

export type UpdateLicensesMutationResponse = {
  __typename?: 'UpdateLicensesMutationResponse';
  info: UpdateInfo;
  licenses: Array<License>;
};

export type UpdateLinkFlairsMutationResponse = {
  __typename?: 'UpdateLinkFlairsMutationResponse';
  info: UpdateInfo;
  linkFlairs: Array<LinkFlair>;
};

export type UpdateMessagesMutationResponse = {
  __typename?: 'UpdateMessagesMutationResponse';
  info: UpdateInfo;
  messages: Array<Message>;
};

export type UpdateModChannelRolesMutationResponse = {
  __typename?: 'UpdateModChannelRolesMutationResponse';
  info: UpdateInfo;
  modChannelRoles: Array<ModChannelRole>;
};

export type UpdateModServerRolesMutationResponse = {
  __typename?: 'UpdateModServerRolesMutationResponse';
  info: UpdateInfo;
  modServerRoles: Array<ModServerRole>;
};

export type UpdateModerationActionsMutationResponse = {
  __typename?: 'UpdateModerationActionsMutationResponse';
  info: UpdateInfo;
  moderationActions: Array<ModerationAction>;
};

export type UpdateModerationProfilesMutationResponse = {
  __typename?: 'UpdateModerationProfilesMutationResponse';
  info: UpdateInfo;
  moderationProfiles: Array<ModerationProfile>;
};

export type UpdateNotificationsMutationResponse = {
  __typename?: 'UpdateNotificationsMutationResponse';
  info: UpdateInfo;
  notifications: Array<Notification>;
};

export type UpdatePluginRunsMutationResponse = {
  __typename?: 'UpdatePluginRunsMutationResponse';
  info: UpdateInfo;
  pluginRuns: Array<PluginRun>;
};

export type UpdatePluginVersionsMutationResponse = {
  __typename?: 'UpdatePluginVersionsMutationResponse';
  info: UpdateInfo;
  pluginVersions: Array<PluginVersion>;
};

export type UpdatePluginsMutationResponse = {
  __typename?: 'UpdatePluginsMutationResponse';
  info: UpdateInfo;
  plugins: Array<Plugin>;
};

export type UpdatePurchasesMutationResponse = {
  __typename?: 'UpdatePurchasesMutationResponse';
  info: UpdateInfo;
  purchases: Array<Purchase>;
};

export type UpdateRecurringEventsMutationResponse = {
  __typename?: 'UpdateRecurringEventsMutationResponse';
  info: UpdateInfo;
  recurringEvents: Array<RecurringEvent>;
};

export type UpdateRepeatEndsMutationResponse = {
  __typename?: 'UpdateRepeatEndsMutationResponse';
  info: UpdateInfo;
  repeatEnds: Array<RepeatEnds>;
};

export type UpdateRepeatEveriesMutationResponse = {
  __typename?: 'UpdateRepeatEveriesMutationResponse';
  info: UpdateInfo;
  repeatEveries: Array<RepeatEvery>;
};

export type UpdateSafetyCheckResponsesMutationResponse = {
  __typename?: 'UpdateSafetyCheckResponsesMutationResponse';
  info: UpdateInfo;
  safetyCheckResponses: Array<SafetyCheckResponse>;
};

export type UpdateSeedDataResponsesMutationResponse = {
  __typename?: 'UpdateSeedDataResponsesMutationResponse';
  info: UpdateInfo;
  seedDataResponses: Array<SeedDataResponse>;
};

export type UpdateServerConfigsMutationResponse = {
  __typename?: 'UpdateServerConfigsMutationResponse';
  info: UpdateInfo;
  serverConfigs: Array<ServerConfig>;
};

export type UpdateServerRolesMutationResponse = {
  __typename?: 'UpdateServerRolesMutationResponse';
  info: UpdateInfo;
  serverRoles: Array<ServerRole>;
};

export type UpdateServerSecretsMutationResponse = {
  __typename?: 'UpdateServerSecretsMutationResponse';
  info: UpdateInfo;
  serverSecrets: Array<ServerSecret>;
};

export type UpdateSignedUrlsMutationResponse = {
  __typename?: 'UpdateSignedUrlsMutationResponse';
  info: UpdateInfo;
  signedUrls: Array<SignedUrl>;
};

export type UpdateSiteWideDiscussionListFormatsMutationResponse = {
  __typename?: 'UpdateSiteWideDiscussionListFormatsMutationResponse';
  info: UpdateInfo;
  siteWideDiscussionListFormats: Array<SiteWideDiscussionListFormat>;
};

export type UpdateSuspensionsMutationResponse = {
  __typename?: 'UpdateSuspensionsMutationResponse';
  info: UpdateInfo;
  suspensions: Array<Suspension>;
};

export type UpdateTagsMutationResponse = {
  __typename?: 'UpdateTagsMutationResponse';
  info: UpdateInfo;
  tags: Array<Tag>;
};

export type UpdateTextVersionsMutationResponse = {
  __typename?: 'UpdateTextVersionsMutationResponse';
  info: UpdateInfo;
  textVersions: Array<TextVersion>;
};

export type UpdateUsersMutationResponse = {
  __typename?: 'UpdateUsersMutationResponse';
  info: UpdateInfo;
  users: Array<User>;
};

export type UpdateWikiPagesMutationResponse = {
  __typename?: 'UpdateWikiPagesMutationResponse';
  info: UpdateInfo;
  wikiPages: Array<WikiPage>;
};

export type User = {
  __typename?: 'User';
  AdminOfChannels: Array<Channel>;
  AdminOfChannelsAggregate?: Maybe<UserChannelAdminOfChannelsAggregationSelection>;
  AdminOfChannelsConnection: UserAdminOfChannelsConnection;
  Albums: Array<Album>;
  AlbumsAggregate?: Maybe<UserAlbumAlbumsAggregationSelection>;
  AlbumsConnection: UserAlbumsConnection;
  AuthoredWikiPageVersions: Array<TextVersion>;
  AuthoredWikiPageVersionsAggregate?: Maybe<UserTextVersionAuthoredWikiPageVersionsAggregationSelection>;
  AuthoredWikiPageVersionsConnection: UserAuthoredWikiPageVersionsConnection;
  AuthoredWikiPages: Array<WikiPage>;
  AuthoredWikiPagesAggregate?: Maybe<UserWikiPageAuthoredWikiPagesAggregationSelection>;
  AuthoredWikiPagesConnection: UserAuthoredWikiPagesConnection;
  ChannelRoles: Array<ChannelRole>;
  ChannelRolesAggregate?: Maybe<UserChannelRoleChannelRolesAggregationSelection>;
  ChannelRolesConnection: UserChannelRolesConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<UserCommentCommentsAggregationSelection>;
  CommentsConnection: UserCommentsConnection;
  Discussions: Array<Discussion>;
  DiscussionsAggregate?: Maybe<UserDiscussionDiscussionsAggregationSelection>;
  DiscussionsConnection: UserDiscussionsConnection;
  Email?: Maybe<Email>;
  EmailAggregate?: Maybe<UserEmailEmailAggregationSelection>;
  EmailConnection: UserEmailConnection;
  Events: Array<Event>;
  EventsAggregate?: Maybe<UserEventEventsAggregationSelection>;
  EventsConnection: UserEventsConnection;
  FavoriteChannels: Array<Channel>;
  FavoriteChannelsAggregate?: Maybe<UserChannelFavoriteChannelsAggregationSelection>;
  FavoriteChannelsConnection: UserFavoriteChannelsConnection;
  Images: Array<Image>;
  ImagesAggregate?: Maybe<UserImageImagesAggregationSelection>;
  ImagesConnection: UserImagesConnection;
  ModOfChannels: Array<Channel>;
  ModOfChannelsAggregate?: Maybe<UserChannelModOfChannelsAggregationSelection>;
  ModOfChannelsConnection: UserModOfChannelsConnection;
  ModerationProfile?: Maybe<ModerationProfile>;
  ModerationProfileAggregate?: Maybe<UserModerationProfileModerationProfileAggregationSelection>;
  ModerationProfileConnection: UserModerationProfileConnection;
  Notifications: Array<Notification>;
  NotificationsAggregate?: Maybe<UserNotificationNotificationsAggregationSelection>;
  NotificationsConnection: UserNotificationsConnection;
  PendingModInvites: Array<Channel>;
  PendingModInvitesAggregate?: Maybe<UserChannelPendingModInvitesAggregationSelection>;
  PendingModInvitesConnection: UserPendingModInvitesConnection;
  PendingOwnerInvites: Array<Channel>;
  PendingOwnerInvitesAggregate?: Maybe<UserChannelPendingOwnerInvitesAggregationSelection>;
  PendingOwnerInvitesConnection: UserPendingOwnerInvitesConnection;
  RecentlyVisitedChannels: Array<Channel>;
  RecentlyVisitedChannelsAggregate?: Maybe<UserChannelRecentlyVisitedChannelsAggregationSelection>;
  RecentlyVisitedChannelsConnection: UserRecentlyVisitedChannelsConnection;
  ServerRoles: Array<ServerRole>;
  ServerRolesAggregate?: Maybe<UserServerRoleServerRolesAggregationSelection>;
  ServerRolesConnection: UserServerRolesConnection;
  Suspensions: Array<Suspension>;
  SuspensionsAggregate?: Maybe<UserSuspensionSuspensionsAggregationSelection>;
  SuspensionsConnection: UserSuspensionsConnection;
  UpvotedComments: Array<Comment>;
  UpvotedCommentsAggregate?: Maybe<UserCommentUpvotedCommentsAggregationSelection>;
  UpvotedCommentsConnection: UserUpvotedCommentsConnection;
  UpvotedDiscussionChannels: Array<DiscussionChannel>;
  UpvotedDiscussionChannelsAggregate?: Maybe<UserDiscussionChannelUpvotedDiscussionChannelsAggregationSelection>;
  UpvotedDiscussionChannelsConnection: UserUpvotedDiscussionChannelsConnection;
  bio?: Maybe<Scalars['String']['output']>;
  collections: Array<Collection>;
  collectionsAggregate?: Maybe<UserCollectionCollectionsAggregationSelection>;
  collectionsConnection: UserCollectionsConnection;
  commentKarma?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['DateTime']['output'];
  defaultEmojiSkinTone?: Maybe<Scalars['String']['output']>;
  defaultLicense?: Maybe<License>;
  defaultLicenseAggregate?: Maybe<UserLicenseDefaultLicenseAggregationSelection>;
  defaultLicenseConnection: UserDefaultLicenseConnection;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  discussionKarma?: Maybe<Scalars['Int']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  enableSensitiveContentByDefault?: Maybe<Scalars['Boolean']['output']>;
  library: Array<DownloadableFile>;
  libraryAggregate?: Maybe<UserDownloadableFileLibraryAggregationSelection>;
  libraryConnection: UserLibraryConnection;
  location?: Maybe<Scalars['String']['output']>;
  notificationBundleContent?: Maybe<Scalars['String']['output']>;
  notificationBundleEnabled?: Maybe<Scalars['Boolean']['output']>;
  notificationBundleInterval?: Maybe<Scalars['String']['output']>;
  notifyOnFeedback?: Maybe<Scalars['Boolean']['output']>;
  notifyOnReplyToCommentByDefault?: Maybe<Scalars['Boolean']['output']>;
  notifyOnReplyToDiscussionByDefault?: Maybe<Scalars['Boolean']['output']>;
  notifyOnReplyToEventByDefault?: Maybe<Scalars['Boolean']['output']>;
  notifyWhenTagged?: Maybe<Scalars['Boolean']['output']>;
  preferredTimeZone?: Maybe<Scalars['String']['output']>;
  profilePicURL?: Maybe<Scalars['String']['output']>;
  pronouns?: Maybe<Scalars['String']['output']>;
  purchases: Array<Purchase>;
  purchasesAggregate?: Maybe<UserPurchasePurchasesAggregationSelection>;
  purchasesConnection: UserPurchasesConnection;
  stripeAccountId?: Maybe<Scalars['String']['output']>;
  username: Scalars['String']['output'];
};


export type UserAdminOfChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserAdminOfChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserAdminOfChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserAdminOfChannelsConnectionSort>>;
  where?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
};


export type UserAlbumsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<AlbumOptions>;
  where?: InputMaybe<AlbumWhere>;
};


export type UserAlbumsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<AlbumWhere>;
};


export type UserAlbumsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserAlbumsConnectionSort>>;
  where?: InputMaybe<UserAlbumsConnectionWhere>;
};


export type UserAuthoredWikiPageVersionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type UserAuthoredWikiPageVersionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TextVersionWhere>;
};


export type UserAuthoredWikiPageVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserAuthoredWikiPageVersionsConnectionSort>>;
  where?: InputMaybe<UserAuthoredWikiPageVersionsConnectionWhere>;
};


export type UserAuthoredWikiPagesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<WikiPageOptions>;
  where?: InputMaybe<WikiPageWhere>;
};


export type UserAuthoredWikiPagesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<WikiPageWhere>;
};


export type UserAuthoredWikiPagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserAuthoredWikiPagesConnectionSort>>;
  where?: InputMaybe<UserAuthoredWikiPagesConnectionWhere>;
};


export type UserChannelRolesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelRoleOptions>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type UserChannelRolesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type UserChannelRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserChannelRolesConnectionSort>>;
  where?: InputMaybe<UserChannelRolesConnectionWhere>;
};


export type UserCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type UserCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type UserCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserCommentsConnectionSort>>;
  where?: InputMaybe<UserCommentsConnectionWhere>;
};


export type UserDiscussionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type UserDiscussionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type UserDiscussionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserDiscussionsConnectionSort>>;
  where?: InputMaybe<UserDiscussionsConnectionWhere>;
};


export type UserEmailArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EmailOptions>;
  where?: InputMaybe<EmailWhere>;
};


export type UserEmailAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EmailWhere>;
};


export type UserEmailConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserEmailConnectionSort>>;
  where?: InputMaybe<UserEmailConnectionWhere>;
};


export type UserEventsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type UserEventsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type UserEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserEventsConnectionSort>>;
  where?: InputMaybe<UserEventsConnectionWhere>;
};


export type UserFavoriteChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserFavoriteChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserFavoriteChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserFavoriteChannelsConnectionSort>>;
  where?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
};


export type UserImagesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ImageOptions>;
  where?: InputMaybe<ImageWhere>;
};


export type UserImagesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ImageWhere>;
};


export type UserImagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserImagesConnectionSort>>;
  where?: InputMaybe<UserImagesConnectionWhere>;
};


export type UserModOfChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserModOfChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserModOfChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserModOfChannelsConnectionSort>>;
  where?: InputMaybe<UserModOfChannelsConnectionWhere>;
};


export type UserModerationProfileArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type UserModerationProfileAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type UserModerationProfileConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserModerationProfileConnectionSort>>;
  where?: InputMaybe<UserModerationProfileConnectionWhere>;
};


export type UserNotificationsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<NotificationOptions>;
  where?: InputMaybe<NotificationWhere>;
};


export type UserNotificationsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<NotificationWhere>;
};


export type UserNotificationsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserNotificationsConnectionSort>>;
  where?: InputMaybe<UserNotificationsConnectionWhere>;
};


export type UserPendingModInvitesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserPendingModInvitesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserPendingModInvitesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserPendingModInvitesConnectionSort>>;
  where?: InputMaybe<UserPendingModInvitesConnectionWhere>;
};


export type UserPendingOwnerInvitesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserPendingOwnerInvitesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserPendingOwnerInvitesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserPendingOwnerInvitesConnectionSort>>;
  where?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
};


export type UserRecentlyVisitedChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserRecentlyVisitedChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserRecentlyVisitedChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectionSort>>;
  where?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
};


export type UserServerRolesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ServerRoleOptions>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type UserServerRolesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type UserServerRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserServerRolesConnectionSort>>;
  where?: InputMaybe<UserServerRolesConnectionWhere>;
};


export type UserSuspensionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type UserSuspensionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<SuspensionWhere>;
};


export type UserSuspensionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserSuspensionsConnectionSort>>;
  where?: InputMaybe<UserSuspensionsConnectionWhere>;
};


export type UserUpvotedCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type UserUpvotedCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type UserUpvotedCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserUpvotedCommentsConnectionSort>>;
  where?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
};


export type UserUpvotedDiscussionChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type UserUpvotedDiscussionChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type UserUpvotedDiscussionChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectionSort>>;
  where?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
};


export type UserCollectionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CollectionOptions>;
  where?: InputMaybe<CollectionWhere>;
};


export type UserCollectionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CollectionWhere>;
};


export type UserCollectionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserCollectionsConnectionSort>>;
  where?: InputMaybe<UserCollectionsConnectionWhere>;
};


export type UserDefaultLicenseArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<LicenseOptions>;
  where?: InputMaybe<LicenseWhere>;
};


export type UserDefaultLicenseAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<LicenseWhere>;
};


export type UserDefaultLicenseConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserDefaultLicenseConnectionSort>>;
  where?: InputMaybe<UserDefaultLicenseConnectionWhere>;
};


export type UserLibraryArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DownloadableFileOptions>;
  where?: InputMaybe<DownloadableFileWhere>;
};


export type UserLibraryAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DownloadableFileWhere>;
};


export type UserLibraryConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserLibraryConnectionSort>>;
  where?: InputMaybe<UserLibraryConnectionWhere>;
};


export type UserPurchasesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<PurchaseOptions>;
  where?: InputMaybe<PurchaseWhere>;
};


export type UserPurchasesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<PurchaseWhere>;
};


export type UserPurchasesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserPurchasesConnectionSort>>;
  where?: InputMaybe<UserPurchasesConnectionWhere>;
};

export type UserAdminOfChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserAdminOfChannelsAggregateInput>>;
  NOT?: InputMaybe<UserAdminOfChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserAdminOfChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserAdminOfChannelsNodeAggregationWhereInput>;
};

export type UserAdminOfChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserAdminOfChannelsConnectOrCreateFieldInput = {
  onCreate: UserAdminOfChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserAdminOfChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserAdminOfChannelsConnectedRelationship = {
  __typename?: 'UserAdminOfChannelsConnectedRelationship';
  node: ChannelEventPayload;
};

export type UserAdminOfChannelsConnection = {
  __typename?: 'UserAdminOfChannelsConnection';
  edges: Array<UserAdminOfChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserAdminOfChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserAdminOfChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserAdminOfChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserAdminOfChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserAdminOfChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserAdminOfChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
};

export type UserAdminOfChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
};

export type UserAdminOfChannelsFieldInput = {
  connect?: InputMaybe<Array<UserAdminOfChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserAdminOfChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserAdminOfChannelsCreateFieldInput>>;
};

export type UserAdminOfChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserAdminOfChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserAdminOfChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserAdminOfChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserAdminOfChannelsRelationship = {
  __typename?: 'UserAdminOfChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserAdminOfChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type UserAdminOfChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserAdminOfChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserAdminOfChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserAdminOfChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserAdminOfChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserAdminOfChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserAdminOfChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserAdminOfChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
};

export type UserAggregateSelection = {
  __typename?: 'UserAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type UserAlbumAlbumsAggregationSelection = {
  __typename?: 'UserAlbumAlbumsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserAlbumAlbumsNodeAggregateSelection>;
};

export type UserAlbumAlbumsNodeAggregateSelection = {
  __typename?: 'UserAlbumAlbumsNodeAggregateSelection';
  id: IdAggregateSelection;
};

export type UserAlbumsAggregateInput = {
  AND?: InputMaybe<Array<UserAlbumsAggregateInput>>;
  NOT?: InputMaybe<UserAlbumsAggregateInput>;
  OR?: InputMaybe<Array<UserAlbumsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserAlbumsNodeAggregationWhereInput>;
};

export type UserAlbumsConnectFieldInput = {
  connect?: InputMaybe<Array<AlbumConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<AlbumConnectWhere>;
};

export type UserAlbumsConnectedRelationship = {
  __typename?: 'UserAlbumsConnectedRelationship';
  node: AlbumEventPayload;
};

export type UserAlbumsConnection = {
  __typename?: 'UserAlbumsConnection';
  edges: Array<UserAlbumsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserAlbumsConnectionSort = {
  node?: InputMaybe<AlbumSort>;
};

export type UserAlbumsConnectionWhere = {
  AND?: InputMaybe<Array<UserAlbumsConnectionWhere>>;
  NOT?: InputMaybe<UserAlbumsConnectionWhere>;
  OR?: InputMaybe<Array<UserAlbumsConnectionWhere>>;
  node?: InputMaybe<AlbumWhere>;
};

export type UserAlbumsCreateFieldInput = {
  node: AlbumCreateInput;
};

export type UserAlbumsDeleteFieldInput = {
  delete?: InputMaybe<AlbumDeleteInput>;
  where?: InputMaybe<UserAlbumsConnectionWhere>;
};

export type UserAlbumsDisconnectFieldInput = {
  disconnect?: InputMaybe<AlbumDisconnectInput>;
  where?: InputMaybe<UserAlbumsConnectionWhere>;
};

export type UserAlbumsFieldInput = {
  connect?: InputMaybe<Array<UserAlbumsConnectFieldInput>>;
  create?: InputMaybe<Array<UserAlbumsCreateFieldInput>>;
};

export type UserAlbumsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserAlbumsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserAlbumsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserAlbumsNodeAggregationWhereInput>>;
};

export type UserAlbumsRelationship = {
  __typename?: 'UserAlbumsRelationship';
  cursor: Scalars['String']['output'];
  node: Album;
};

export type UserAlbumsRelationshipSubscriptionWhere = {
  node?: InputMaybe<AlbumSubscriptionWhere>;
};

export type UserAlbumsUpdateConnectionInput = {
  node?: InputMaybe<AlbumUpdateInput>;
};

export type UserAlbumsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserAlbumsConnectFieldInput>>;
  create?: InputMaybe<Array<UserAlbumsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserAlbumsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserAlbumsDisconnectFieldInput>>;
  update?: InputMaybe<UserAlbumsUpdateConnectionInput>;
  where?: InputMaybe<UserAlbumsConnectionWhere>;
};

export type UserAuthoredWikiPageVersionsAggregateInput = {
  AND?: InputMaybe<Array<UserAuthoredWikiPageVersionsAggregateInput>>;
  NOT?: InputMaybe<UserAuthoredWikiPageVersionsAggregateInput>;
  OR?: InputMaybe<Array<UserAuthoredWikiPageVersionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserAuthoredWikiPageVersionsNodeAggregationWhereInput>;
};

export type UserAuthoredWikiPageVersionsConnectFieldInput = {
  connect?: InputMaybe<Array<TextVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TextVersionConnectWhere>;
};

export type UserAuthoredWikiPageVersionsConnectedRelationship = {
  __typename?: 'UserAuthoredWikiPageVersionsConnectedRelationship';
  node: TextVersionEventPayload;
};

export type UserAuthoredWikiPageVersionsConnection = {
  __typename?: 'UserAuthoredWikiPageVersionsConnection';
  edges: Array<UserAuthoredWikiPageVersionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserAuthoredWikiPageVersionsConnectionSort = {
  node?: InputMaybe<TextVersionSort>;
};

export type UserAuthoredWikiPageVersionsConnectionWhere = {
  AND?: InputMaybe<Array<UserAuthoredWikiPageVersionsConnectionWhere>>;
  NOT?: InputMaybe<UserAuthoredWikiPageVersionsConnectionWhere>;
  OR?: InputMaybe<Array<UserAuthoredWikiPageVersionsConnectionWhere>>;
  node?: InputMaybe<TextVersionWhere>;
};

export type UserAuthoredWikiPageVersionsCreateFieldInput = {
  node: TextVersionCreateInput;
};

export type UserAuthoredWikiPageVersionsDeleteFieldInput = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<UserAuthoredWikiPageVersionsConnectionWhere>;
};

export type UserAuthoredWikiPageVersionsDisconnectFieldInput = {
  disconnect?: InputMaybe<TextVersionDisconnectInput>;
  where?: InputMaybe<UserAuthoredWikiPageVersionsConnectionWhere>;
};

export type UserAuthoredWikiPageVersionsFieldInput = {
  connect?: InputMaybe<Array<UserAuthoredWikiPageVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserAuthoredWikiPageVersionsCreateFieldInput>>;
};

export type UserAuthoredWikiPageVersionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserAuthoredWikiPageVersionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserAuthoredWikiPageVersionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserAuthoredWikiPageVersionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type UserAuthoredWikiPageVersionsRelationship = {
  __typename?: 'UserAuthoredWikiPageVersionsRelationship';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type UserAuthoredWikiPageVersionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TextVersionSubscriptionWhere>;
};

export type UserAuthoredWikiPageVersionsUpdateConnectionInput = {
  node?: InputMaybe<TextVersionUpdateInput>;
};

export type UserAuthoredWikiPageVersionsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserAuthoredWikiPageVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserAuthoredWikiPageVersionsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserAuthoredWikiPageVersionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserAuthoredWikiPageVersionsDisconnectFieldInput>>;
  update?: InputMaybe<UserAuthoredWikiPageVersionsUpdateConnectionInput>;
  where?: InputMaybe<UserAuthoredWikiPageVersionsConnectionWhere>;
};

export type UserAuthoredWikiPagesAggregateInput = {
  AND?: InputMaybe<Array<UserAuthoredWikiPagesAggregateInput>>;
  NOT?: InputMaybe<UserAuthoredWikiPagesAggregateInput>;
  OR?: InputMaybe<Array<UserAuthoredWikiPagesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserAuthoredWikiPagesNodeAggregationWhereInput>;
};

export type UserAuthoredWikiPagesConnectFieldInput = {
  connect?: InputMaybe<Array<WikiPageConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<WikiPageConnectWhere>;
};

export type UserAuthoredWikiPagesConnectedRelationship = {
  __typename?: 'UserAuthoredWikiPagesConnectedRelationship';
  node: WikiPageEventPayload;
};

export type UserAuthoredWikiPagesConnection = {
  __typename?: 'UserAuthoredWikiPagesConnection';
  edges: Array<UserAuthoredWikiPagesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserAuthoredWikiPagesConnectionSort = {
  node?: InputMaybe<WikiPageSort>;
};

export type UserAuthoredWikiPagesConnectionWhere = {
  AND?: InputMaybe<Array<UserAuthoredWikiPagesConnectionWhere>>;
  NOT?: InputMaybe<UserAuthoredWikiPagesConnectionWhere>;
  OR?: InputMaybe<Array<UserAuthoredWikiPagesConnectionWhere>>;
  node?: InputMaybe<WikiPageWhere>;
};

export type UserAuthoredWikiPagesCreateFieldInput = {
  node: WikiPageCreateInput;
};

export type UserAuthoredWikiPagesDeleteFieldInput = {
  delete?: InputMaybe<WikiPageDeleteInput>;
  where?: InputMaybe<UserAuthoredWikiPagesConnectionWhere>;
};

export type UserAuthoredWikiPagesDisconnectFieldInput = {
  disconnect?: InputMaybe<WikiPageDisconnectInput>;
  where?: InputMaybe<UserAuthoredWikiPagesConnectionWhere>;
};

export type UserAuthoredWikiPagesFieldInput = {
  connect?: InputMaybe<Array<UserAuthoredWikiPagesConnectFieldInput>>;
  create?: InputMaybe<Array<UserAuthoredWikiPagesCreateFieldInput>>;
};

export type UserAuthoredWikiPagesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserAuthoredWikiPagesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserAuthoredWikiPagesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserAuthoredWikiPagesNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  slug_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  slug_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type UserAuthoredWikiPagesRelationship = {
  __typename?: 'UserAuthoredWikiPagesRelationship';
  cursor: Scalars['String']['output'];
  node: WikiPage;
};

export type UserAuthoredWikiPagesRelationshipSubscriptionWhere = {
  node?: InputMaybe<WikiPageSubscriptionWhere>;
};

export type UserAuthoredWikiPagesUpdateConnectionInput = {
  node?: InputMaybe<WikiPageUpdateInput>;
};

export type UserAuthoredWikiPagesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserAuthoredWikiPagesConnectFieldInput>>;
  create?: InputMaybe<Array<UserAuthoredWikiPagesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserAuthoredWikiPagesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserAuthoredWikiPagesDisconnectFieldInput>>;
  update?: InputMaybe<UserAuthoredWikiPagesUpdateConnectionInput>;
  where?: InputMaybe<UserAuthoredWikiPagesConnectionWhere>;
};

export type UserChannelAdminOfChannelsAggregationSelection = {
  __typename?: 'UserChannelAdminOfChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelAdminOfChannelsNodeAggregateSelection>;
};

export type UserChannelAdminOfChannelsNodeAggregateSelection = {
  __typename?: 'UserChannelAdminOfChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelFavoriteChannelsAggregationSelection = {
  __typename?: 'UserChannelFavoriteChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelFavoriteChannelsNodeAggregateSelection>;
};

export type UserChannelFavoriteChannelsNodeAggregateSelection = {
  __typename?: 'UserChannelFavoriteChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelModOfChannelsAggregationSelection = {
  __typename?: 'UserChannelModOfChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelModOfChannelsNodeAggregateSelection>;
};

export type UserChannelModOfChannelsNodeAggregateSelection = {
  __typename?: 'UserChannelModOfChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelPendingModInvitesAggregationSelection = {
  __typename?: 'UserChannelPendingModInvitesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelPendingModInvitesNodeAggregateSelection>;
};

export type UserChannelPendingModInvitesNodeAggregateSelection = {
  __typename?: 'UserChannelPendingModInvitesNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelPendingOwnerInvitesAggregationSelection = {
  __typename?: 'UserChannelPendingOwnerInvitesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelPendingOwnerInvitesNodeAggregateSelection>;
};

export type UserChannelPendingOwnerInvitesNodeAggregateSelection = {
  __typename?: 'UserChannelPendingOwnerInvitesNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelRecentlyVisitedChannelsAggregationSelection = {
  __typename?: 'UserChannelRecentlyVisitedChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelRecentlyVisitedChannelsNodeAggregateSelection>;
};

export type UserChannelRecentlyVisitedChannelsNodeAggregateSelection = {
  __typename?: 'UserChannelRecentlyVisitedChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  payoutPercent: IntAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelRoleChannelRolesAggregationSelection = {
  __typename?: 'UserChannelRoleChannelRolesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelRoleChannelRolesNodeAggregateSelection>;
};

export type UserChannelRoleChannelRolesNodeAggregateSelection = {
  __typename?: 'UserChannelRoleChannelRolesNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type UserChannelRolesAggregateInput = {
  AND?: InputMaybe<Array<UserChannelRolesAggregateInput>>;
  NOT?: InputMaybe<UserChannelRolesAggregateInput>;
  OR?: InputMaybe<Array<UserChannelRolesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserChannelRolesNodeAggregationWhereInput>;
};

export type UserChannelRolesConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelRoleConnectWhere>;
};

export type UserChannelRolesConnectOrCreateFieldInput = {
  onCreate: UserChannelRolesConnectOrCreateFieldInputOnCreate;
  where: ChannelRoleConnectOrCreateWhere;
};

export type UserChannelRolesConnectOrCreateFieldInputOnCreate = {
  node: ChannelRoleOnCreateInput;
};

export type UserChannelRolesConnectedRelationship = {
  __typename?: 'UserChannelRolesConnectedRelationship';
  node: ChannelRoleEventPayload;
};

export type UserChannelRolesConnection = {
  __typename?: 'UserChannelRolesConnection';
  edges: Array<UserChannelRolesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserChannelRolesConnectionSort = {
  node?: InputMaybe<ChannelRoleSort>;
};

export type UserChannelRolesConnectionWhere = {
  AND?: InputMaybe<Array<UserChannelRolesConnectionWhere>>;
  NOT?: InputMaybe<UserChannelRolesConnectionWhere>;
  OR?: InputMaybe<Array<UserChannelRolesConnectionWhere>>;
  node?: InputMaybe<ChannelRoleWhere>;
};

export type UserChannelRolesCreateFieldInput = {
  node: ChannelRoleCreateInput;
};

export type UserChannelRolesDeleteFieldInput = {
  where?: InputMaybe<UserChannelRolesConnectionWhere>;
};

export type UserChannelRolesDisconnectFieldInput = {
  where?: InputMaybe<UserChannelRolesConnectionWhere>;
};

export type UserChannelRolesFieldInput = {
  connect?: InputMaybe<Array<UserChannelRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserChannelRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserChannelRolesCreateFieldInput>>;
};

export type UserChannelRolesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserChannelRolesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserChannelRolesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserChannelRolesNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserChannelRolesRelationship = {
  __typename?: 'UserChannelRolesRelationship';
  cursor: Scalars['String']['output'];
  node: ChannelRole;
};

export type UserChannelRolesRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelRoleSubscriptionWhere>;
};

export type UserChannelRolesUpdateConnectionInput = {
  node?: InputMaybe<ChannelRoleUpdateInput>;
};

export type UserChannelRolesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserChannelRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserChannelRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserChannelRolesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserChannelRolesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserChannelRolesDisconnectFieldInput>>;
  update?: InputMaybe<UserChannelRolesUpdateConnectionInput>;
  where?: InputMaybe<UserChannelRolesConnectionWhere>;
};

export type UserCollectionCollectionsAggregationSelection = {
  __typename?: 'UserCollectionCollectionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserCollectionCollectionsNodeAggregateSelection>;
};

export type UserCollectionCollectionsNodeAggregateSelection = {
  __typename?: 'UserCollectionCollectionsNodeAggregateSelection';
  description: StringAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type UserCollectionsAggregateInput = {
  AND?: InputMaybe<Array<UserCollectionsAggregateInput>>;
  NOT?: InputMaybe<UserCollectionsAggregateInput>;
  OR?: InputMaybe<Array<UserCollectionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserCollectionsNodeAggregationWhereInput>;
};

export type UserCollectionsConnectFieldInput = {
  connect?: InputMaybe<Array<CollectionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CollectionConnectWhere>;
};

export type UserCollectionsConnectedRelationship = {
  __typename?: 'UserCollectionsConnectedRelationship';
  node: CollectionEventPayload;
};

export type UserCollectionsConnection = {
  __typename?: 'UserCollectionsConnection';
  edges: Array<UserCollectionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserCollectionsConnectionSort = {
  node?: InputMaybe<CollectionSort>;
};

export type UserCollectionsConnectionWhere = {
  AND?: InputMaybe<Array<UserCollectionsConnectionWhere>>;
  NOT?: InputMaybe<UserCollectionsConnectionWhere>;
  OR?: InputMaybe<Array<UserCollectionsConnectionWhere>>;
  node?: InputMaybe<CollectionWhere>;
};

export type UserCollectionsCreateFieldInput = {
  node: CollectionCreateInput;
};

export type UserCollectionsDeleteFieldInput = {
  delete?: InputMaybe<CollectionDeleteInput>;
  where?: InputMaybe<UserCollectionsConnectionWhere>;
};

export type UserCollectionsDisconnectFieldInput = {
  disconnect?: InputMaybe<CollectionDisconnectInput>;
  where?: InputMaybe<UserCollectionsConnectionWhere>;
};

export type UserCollectionsFieldInput = {
  connect?: InputMaybe<Array<UserCollectionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserCollectionsCreateFieldInput>>;
};

export type UserCollectionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserCollectionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserCollectionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserCollectionsNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserCollectionsRelationship = {
  __typename?: 'UserCollectionsRelationship';
  cursor: Scalars['String']['output'];
  node: Collection;
};

export type UserCollectionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CollectionSubscriptionWhere>;
};

export type UserCollectionsUpdateConnectionInput = {
  node?: InputMaybe<CollectionUpdateInput>;
};

export type UserCollectionsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserCollectionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserCollectionsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserCollectionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserCollectionsDisconnectFieldInput>>;
  update?: InputMaybe<UserCollectionsUpdateConnectionInput>;
  where?: InputMaybe<UserCollectionsConnectionWhere>;
};

export type UserCommentCommentsAggregationSelection = {
  __typename?: 'UserCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserCommentCommentsNodeAggregateSelection>;
};

export type UserCommentCommentsNodeAggregateSelection = {
  __typename?: 'UserCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type UserCommentUpvotedCommentsAggregationSelection = {
  __typename?: 'UserCommentUpvotedCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserCommentUpvotedCommentsNodeAggregateSelection>;
};

export type UserCommentUpvotedCommentsNodeAggregateSelection = {
  __typename?: 'UserCommentUpvotedCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type UserCommentsAggregateInput = {
  AND?: InputMaybe<Array<UserCommentsAggregateInput>>;
  NOT?: InputMaybe<UserCommentsAggregateInput>;
  OR?: InputMaybe<Array<UserCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserCommentsNodeAggregationWhereInput>;
};

export type UserCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type UserCommentsConnectedRelationship = {
  __typename?: 'UserCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type UserCommentsConnection = {
  __typename?: 'UserCommentsConnection';
  edges: Array<UserCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type UserCommentsConnectionWhere = {
  AND?: InputMaybe<Array<UserCommentsConnectionWhere>>;
  NOT?: InputMaybe<UserCommentsConnectionWhere>;
  OR?: InputMaybe<Array<UserCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type UserCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type UserCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<UserCommentsConnectionWhere>;
};

export type UserCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<UserCommentsConnectionWhere>;
};

export type UserCommentsFieldInput = {
  connect?: InputMaybe<Array<UserCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserCommentsCreateFieldInput>>;
};

export type UserCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type UserCommentsRelationship = {
  __typename?: 'UserCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type UserCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type UserCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type UserCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserCommentsDisconnectFieldInput>>;
  update?: InputMaybe<UserCommentsUpdateConnectionInput>;
  where?: InputMaybe<UserCommentsConnectionWhere>;
};

export type UserConnectInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsConnectFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsConnectFieldInput>>;
  AuthoredWikiPageVersions?: InputMaybe<Array<UserAuthoredWikiPageVersionsConnectFieldInput>>;
  AuthoredWikiPages?: InputMaybe<Array<UserAuthoredWikiPagesConnectFieldInput>>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesConnectFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsConnectFieldInput>>;
  Discussions?: InputMaybe<Array<UserDiscussionsConnectFieldInput>>;
  Email?: InputMaybe<UserEmailConnectFieldInput>;
  Events?: InputMaybe<Array<UserEventsConnectFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsConnectFieldInput>>;
  Images?: InputMaybe<Array<UserImagesConnectFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsConnectFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileConnectFieldInput>;
  Notifications?: InputMaybe<Array<UserNotificationsConnectFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesConnectFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesConnectFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesConnectFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsConnectFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsConnectFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectFieldInput>>;
  collections?: InputMaybe<Array<UserCollectionsConnectFieldInput>>;
  defaultLicense?: InputMaybe<UserDefaultLicenseConnectFieldInput>;
  library?: InputMaybe<Array<UserLibraryConnectFieldInput>>;
  purchases?: InputMaybe<Array<UserPurchasesConnectFieldInput>>;
};

export type UserConnectOrCreateInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsConnectOrCreateFieldInput>>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesConnectOrCreateFieldInput>>;
  Email?: InputMaybe<UserEmailConnectOrCreateFieldInput>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsConnectOrCreateFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsConnectOrCreateFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileConnectOrCreateFieldInput>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesConnectOrCreateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesConnectOrCreateFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectOrCreateFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesConnectOrCreateFieldInput>>;
};

export type UserConnectOrCreateWhere = {
  node: UserUniqueWhere;
};

export type UserConnectWhere = {
  node: UserWhere;
};

export type UserConnectedRelationships = {
  __typename?: 'UserConnectedRelationships';
  AdminOfChannels?: Maybe<UserAdminOfChannelsConnectedRelationship>;
  Albums?: Maybe<UserAlbumsConnectedRelationship>;
  AuthoredWikiPageVersions?: Maybe<UserAuthoredWikiPageVersionsConnectedRelationship>;
  AuthoredWikiPages?: Maybe<UserAuthoredWikiPagesConnectedRelationship>;
  ChannelRoles?: Maybe<UserChannelRolesConnectedRelationship>;
  Comments?: Maybe<UserCommentsConnectedRelationship>;
  Discussions?: Maybe<UserDiscussionsConnectedRelationship>;
  Email?: Maybe<UserEmailConnectedRelationship>;
  Events?: Maybe<UserEventsConnectedRelationship>;
  FavoriteChannels?: Maybe<UserFavoriteChannelsConnectedRelationship>;
  Images?: Maybe<UserImagesConnectedRelationship>;
  ModOfChannels?: Maybe<UserModOfChannelsConnectedRelationship>;
  ModerationProfile?: Maybe<UserModerationProfileConnectedRelationship>;
  Notifications?: Maybe<UserNotificationsConnectedRelationship>;
  PendingModInvites?: Maybe<UserPendingModInvitesConnectedRelationship>;
  PendingOwnerInvites?: Maybe<UserPendingOwnerInvitesConnectedRelationship>;
  RecentlyVisitedChannels?: Maybe<UserRecentlyVisitedChannelsConnectedRelationship>;
  ServerRoles?: Maybe<UserServerRolesConnectedRelationship>;
  Suspensions?: Maybe<UserSuspensionsConnectedRelationship>;
  UpvotedComments?: Maybe<UserUpvotedCommentsConnectedRelationship>;
  UpvotedDiscussionChannels?: Maybe<UserUpvotedDiscussionChannelsConnectedRelationship>;
  collections?: Maybe<UserCollectionsConnectedRelationship>;
  defaultLicense?: Maybe<UserDefaultLicenseConnectedRelationship>;
  library?: Maybe<UserLibraryConnectedRelationship>;
  purchases?: Maybe<UserPurchasesConnectedRelationship>;
};

export type UserCreateInput = {
  AdminOfChannels?: InputMaybe<UserAdminOfChannelsFieldInput>;
  Albums?: InputMaybe<UserAlbumsFieldInput>;
  AuthoredWikiPageVersions?: InputMaybe<UserAuthoredWikiPageVersionsFieldInput>;
  AuthoredWikiPages?: InputMaybe<UserAuthoredWikiPagesFieldInput>;
  ChannelRoles?: InputMaybe<UserChannelRolesFieldInput>;
  Comments?: InputMaybe<UserCommentsFieldInput>;
  Discussions?: InputMaybe<UserDiscussionsFieldInput>;
  Email?: InputMaybe<UserEmailFieldInput>;
  Events?: InputMaybe<UserEventsFieldInput>;
  FavoriteChannels?: InputMaybe<UserFavoriteChannelsFieldInput>;
  Images?: InputMaybe<UserImagesFieldInput>;
  ModOfChannels?: InputMaybe<UserModOfChannelsFieldInput>;
  ModerationProfile?: InputMaybe<UserModerationProfileFieldInput>;
  Notifications?: InputMaybe<UserNotificationsFieldInput>;
  PendingModInvites?: InputMaybe<UserPendingModInvitesFieldInput>;
  PendingOwnerInvites?: InputMaybe<UserPendingOwnerInvitesFieldInput>;
  RecentlyVisitedChannels?: InputMaybe<UserRecentlyVisitedChannelsFieldInput>;
  ServerRoles?: InputMaybe<UserServerRolesFieldInput>;
  Suspensions?: InputMaybe<UserSuspensionsFieldInput>;
  UpvotedComments?: InputMaybe<UserUpvotedCommentsFieldInput>;
  UpvotedDiscussionChannels?: InputMaybe<UserUpvotedDiscussionChannelsFieldInput>;
  bio?: InputMaybe<Scalars['String']['input']>;
  collections?: InputMaybe<UserCollectionsFieldInput>;
  commentKarma?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone?: InputMaybe<Scalars['String']['input']>;
  defaultLicense?: InputMaybe<UserDefaultLicenseFieldInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discussionKarma?: InputMaybe<Scalars['Int']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  enableSensitiveContentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  library?: InputMaybe<UserLibraryFieldInput>;
  location?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent?: InputMaybe<Scalars['String']['input']>;
  notificationBundleEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  notificationBundleInterval?: InputMaybe<Scalars['String']['input']>;
  notifyOnFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToCommentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToDiscussionByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToEventByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyWhenTagged?: InputMaybe<Scalars['Boolean']['input']>;
  preferredTimeZone?: InputMaybe<Scalars['String']['input']>;
  profilePicURL?: InputMaybe<Scalars['String']['input']>;
  pronouns?: InputMaybe<Scalars['String']['input']>;
  purchases?: InputMaybe<UserPurchasesFieldInput>;
  stripeAccountId?: InputMaybe<Scalars['String']['input']>;
  username: Scalars['String']['input'];
};

export type UserCreatedEvent = {
  __typename?: 'UserCreatedEvent';
  createdUser: UserEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type UserDefaultLicenseAggregateInput = {
  AND?: InputMaybe<Array<UserDefaultLicenseAggregateInput>>;
  NOT?: InputMaybe<UserDefaultLicenseAggregateInput>;
  OR?: InputMaybe<Array<UserDefaultLicenseAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserDefaultLicenseNodeAggregationWhereInput>;
};

export type UserDefaultLicenseConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<LicenseConnectWhere>;
};

export type UserDefaultLicenseConnectedRelationship = {
  __typename?: 'UserDefaultLicenseConnectedRelationship';
  node: LicenseEventPayload;
};

export type UserDefaultLicenseConnection = {
  __typename?: 'UserDefaultLicenseConnection';
  edges: Array<UserDefaultLicenseRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserDefaultLicenseConnectionSort = {
  node?: InputMaybe<LicenseSort>;
};

export type UserDefaultLicenseConnectionWhere = {
  AND?: InputMaybe<Array<UserDefaultLicenseConnectionWhere>>;
  NOT?: InputMaybe<UserDefaultLicenseConnectionWhere>;
  OR?: InputMaybe<Array<UserDefaultLicenseConnectionWhere>>;
  node?: InputMaybe<LicenseWhere>;
};

export type UserDefaultLicenseCreateFieldInput = {
  node: LicenseCreateInput;
};

export type UserDefaultLicenseDeleteFieldInput = {
  where?: InputMaybe<UserDefaultLicenseConnectionWhere>;
};

export type UserDefaultLicenseDisconnectFieldInput = {
  where?: InputMaybe<UserDefaultLicenseConnectionWhere>;
};

export type UserDefaultLicenseFieldInput = {
  connect?: InputMaybe<UserDefaultLicenseConnectFieldInput>;
  create?: InputMaybe<UserDefaultLicenseCreateFieldInput>;
};

export type UserDefaultLicenseNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserDefaultLicenseNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserDefaultLicenseNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserDefaultLicenseNodeAggregationWhereInput>>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  shortName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  shortName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  shortName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  shortName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  shortName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  shortName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  shortName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  shortName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  shortName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  shortName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  shortName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserDefaultLicenseRelationship = {
  __typename?: 'UserDefaultLicenseRelationship';
  cursor: Scalars['String']['output'];
  node: License;
};

export type UserDefaultLicenseRelationshipSubscriptionWhere = {
  node?: InputMaybe<LicenseSubscriptionWhere>;
};

export type UserDefaultLicenseUpdateConnectionInput = {
  node?: InputMaybe<LicenseUpdateInput>;
};

export type UserDefaultLicenseUpdateFieldInput = {
  connect?: InputMaybe<UserDefaultLicenseConnectFieldInput>;
  create?: InputMaybe<UserDefaultLicenseCreateFieldInput>;
  delete?: InputMaybe<UserDefaultLicenseDeleteFieldInput>;
  disconnect?: InputMaybe<UserDefaultLicenseDisconnectFieldInput>;
  update?: InputMaybe<UserDefaultLicenseUpdateConnectionInput>;
  where?: InputMaybe<UserDefaultLicenseConnectionWhere>;
};

export type UserDeleteInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsDeleteFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsDeleteFieldInput>>;
  AuthoredWikiPageVersions?: InputMaybe<Array<UserAuthoredWikiPageVersionsDeleteFieldInput>>;
  AuthoredWikiPages?: InputMaybe<Array<UserAuthoredWikiPagesDeleteFieldInput>>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesDeleteFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsDeleteFieldInput>>;
  Discussions?: InputMaybe<Array<UserDiscussionsDeleteFieldInput>>;
  Email?: InputMaybe<UserEmailDeleteFieldInput>;
  Events?: InputMaybe<Array<UserEventsDeleteFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsDeleteFieldInput>>;
  Images?: InputMaybe<Array<UserImagesDeleteFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsDeleteFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileDeleteFieldInput>;
  Notifications?: InputMaybe<Array<UserNotificationsDeleteFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesDeleteFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesDeleteFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsDeleteFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesDeleteFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsDeleteFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsDeleteFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsDeleteFieldInput>>;
  collections?: InputMaybe<Array<UserCollectionsDeleteFieldInput>>;
  defaultLicense?: InputMaybe<UserDefaultLicenseDeleteFieldInput>;
  library?: InputMaybe<Array<UserLibraryDeleteFieldInput>>;
  purchases?: InputMaybe<Array<UserPurchasesDeleteFieldInput>>;
};

export type UserDeletedEvent = {
  __typename?: 'UserDeletedEvent';
  deletedUser: UserEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type UserDisconnectInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsDisconnectFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsDisconnectFieldInput>>;
  AuthoredWikiPageVersions?: InputMaybe<Array<UserAuthoredWikiPageVersionsDisconnectFieldInput>>;
  AuthoredWikiPages?: InputMaybe<Array<UserAuthoredWikiPagesDisconnectFieldInput>>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesDisconnectFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsDisconnectFieldInput>>;
  Discussions?: InputMaybe<Array<UserDiscussionsDisconnectFieldInput>>;
  Email?: InputMaybe<UserEmailDisconnectFieldInput>;
  Events?: InputMaybe<Array<UserEventsDisconnectFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsDisconnectFieldInput>>;
  Images?: InputMaybe<Array<UserImagesDisconnectFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsDisconnectFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileDisconnectFieldInput>;
  Notifications?: InputMaybe<Array<UserNotificationsDisconnectFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesDisconnectFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesDisconnectFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsDisconnectFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesDisconnectFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsDisconnectFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsDisconnectFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsDisconnectFieldInput>>;
  collections?: InputMaybe<Array<UserCollectionsDisconnectFieldInput>>;
  defaultLicense?: InputMaybe<UserDefaultLicenseDisconnectFieldInput>;
  library?: InputMaybe<Array<UserLibraryDisconnectFieldInput>>;
  purchases?: InputMaybe<Array<UserPurchasesDisconnectFieldInput>>;
};

export type UserDiscussionChannelUpvotedDiscussionChannelsAggregationSelection = {
  __typename?: 'UserDiscussionChannelUpvotedDiscussionChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserDiscussionChannelUpvotedDiscussionChannelsNodeAggregateSelection>;
};

export type UserDiscussionChannelUpvotedDiscussionChannelsNodeAggregateSelection = {
  __typename?: 'UserDiscussionChannelUpvotedDiscussionChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type UserDiscussionDiscussionsAggregationSelection = {
  __typename?: 'UserDiscussionDiscussionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserDiscussionDiscussionsNodeAggregateSelection>;
};

export type UserDiscussionDiscussionsNodeAggregateSelection = {
  __typename?: 'UserDiscussionDiscussionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type UserDiscussionsAggregateInput = {
  AND?: InputMaybe<Array<UserDiscussionsAggregateInput>>;
  NOT?: InputMaybe<UserDiscussionsAggregateInput>;
  OR?: InputMaybe<Array<UserDiscussionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserDiscussionsNodeAggregationWhereInput>;
};

export type UserDiscussionsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type UserDiscussionsConnectedRelationship = {
  __typename?: 'UserDiscussionsConnectedRelationship';
  node: DiscussionEventPayload;
};

export type UserDiscussionsConnection = {
  __typename?: 'UserDiscussionsConnection';
  edges: Array<UserDiscussionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserDiscussionsConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type UserDiscussionsConnectionWhere = {
  AND?: InputMaybe<Array<UserDiscussionsConnectionWhere>>;
  NOT?: InputMaybe<UserDiscussionsConnectionWhere>;
  OR?: InputMaybe<Array<UserDiscussionsConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type UserDiscussionsCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type UserDiscussionsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<UserDiscussionsConnectionWhere>;
};

export type UserDiscussionsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<UserDiscussionsConnectionWhere>;
};

export type UserDiscussionsFieldInput = {
  connect?: InputMaybe<Array<UserDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserDiscussionsCreateFieldInput>>;
};

export type UserDiscussionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserDiscussionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserDiscussionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserDiscussionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type UserDiscussionsRelationship = {
  __typename?: 'UserDiscussionsRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type UserDiscussionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<DiscussionSubscriptionWhere>;
};

export type UserDiscussionsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type UserDiscussionsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserDiscussionsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserDiscussionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserDiscussionsDisconnectFieldInput>>;
  update?: InputMaybe<UserDiscussionsUpdateConnectionInput>;
  where?: InputMaybe<UserDiscussionsConnectionWhere>;
};

export type UserDownloadableFileLibraryAggregationSelection = {
  __typename?: 'UserDownloadableFileLibraryAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserDownloadableFileLibraryNodeAggregateSelection>;
};

export type UserDownloadableFileLibraryNodeAggregateSelection = {
  __typename?: 'UserDownloadableFileLibraryNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  downloadCountTotal: IntAggregateSelection;
  downloadCountUnique: IntAggregateSelection;
  fileName: StringAggregateSelection;
  id: IdAggregateSelection;
  paywallExpiresAt: DateTimeAggregateSelection;
  priceCents: IntAggregateSelection;
  priceCurrency: StringAggregateSelection;
  scanCheckedAt: DateTimeAggregateSelection;
  size: IntAggregateSelection;
  stripePriceId: StringAggregateSelection;
  stripeProductId: StringAggregateSelection;
  url: StringAggregateSelection;
};

export type UserEdge = {
  __typename?: 'UserEdge';
  cursor: Scalars['String']['output'];
  node: User;
};

export type UserEmailAggregateInput = {
  AND?: InputMaybe<Array<UserEmailAggregateInput>>;
  NOT?: InputMaybe<UserEmailAggregateInput>;
  OR?: InputMaybe<Array<UserEmailAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserEmailNodeAggregationWhereInput>;
};

export type UserEmailConnectFieldInput = {
  connect?: InputMaybe<EmailConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EmailConnectWhere>;
};

export type UserEmailConnectOrCreateFieldInput = {
  onCreate: UserEmailConnectOrCreateFieldInputOnCreate;
  where: EmailConnectOrCreateWhere;
};

export type UserEmailConnectOrCreateFieldInputOnCreate = {
  node: EmailOnCreateInput;
};

export type UserEmailConnectedRelationship = {
  __typename?: 'UserEmailConnectedRelationship';
  node: EmailEventPayload;
};

export type UserEmailConnection = {
  __typename?: 'UserEmailConnection';
  edges: Array<UserEmailRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserEmailConnectionSort = {
  node?: InputMaybe<EmailSort>;
};

export type UserEmailConnectionWhere = {
  AND?: InputMaybe<Array<UserEmailConnectionWhere>>;
  NOT?: InputMaybe<UserEmailConnectionWhere>;
  OR?: InputMaybe<Array<UserEmailConnectionWhere>>;
  node?: InputMaybe<EmailWhere>;
};

export type UserEmailCreateFieldInput = {
  node: EmailCreateInput;
};

export type UserEmailDeleteFieldInput = {
  delete?: InputMaybe<EmailDeleteInput>;
  where?: InputMaybe<UserEmailConnectionWhere>;
};

export type UserEmailDisconnectFieldInput = {
  disconnect?: InputMaybe<EmailDisconnectInput>;
  where?: InputMaybe<UserEmailConnectionWhere>;
};

export type UserEmailEmailAggregationSelection = {
  __typename?: 'UserEmailEmailAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserEmailEmailNodeAggregateSelection>;
};

export type UserEmailEmailNodeAggregateSelection = {
  __typename?: 'UserEmailEmailNodeAggregateSelection';
  address: StringAggregateSelection;
};

export type UserEmailFieldInput = {
  connect?: InputMaybe<UserEmailConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserEmailConnectOrCreateFieldInput>;
  create?: InputMaybe<UserEmailCreateFieldInput>;
};

export type UserEmailNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserEmailNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserEmailNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserEmailNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserEmailRelationship = {
  __typename?: 'UserEmailRelationship';
  cursor: Scalars['String']['output'];
  node: Email;
};

export type UserEmailRelationshipSubscriptionWhere = {
  node?: InputMaybe<EmailSubscriptionWhere>;
};

export type UserEmailUpdateConnectionInput = {
  node?: InputMaybe<EmailUpdateInput>;
};

export type UserEmailUpdateFieldInput = {
  connect?: InputMaybe<UserEmailConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserEmailConnectOrCreateFieldInput>;
  create?: InputMaybe<UserEmailCreateFieldInput>;
  delete?: InputMaybe<UserEmailDeleteFieldInput>;
  disconnect?: InputMaybe<UserEmailDisconnectFieldInput>;
  update?: InputMaybe<UserEmailUpdateConnectionInput>;
  where?: InputMaybe<UserEmailConnectionWhere>;
};

export type UserEventEventsAggregationSelection = {
  __typename?: 'UserEventEventsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserEventEventsNodeAggregateSelection>;
};

export type UserEventEventsNodeAggregateSelection = {
  __typename?: 'UserEventEventsNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type UserEventPayload = {
  __typename?: 'UserEventPayload';
  bio?: Maybe<Scalars['String']['output']>;
  commentKarma?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['DateTime']['output'];
  defaultEmojiSkinTone?: Maybe<Scalars['String']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  discussionKarma?: Maybe<Scalars['Int']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  enableSensitiveContentByDefault?: Maybe<Scalars['Boolean']['output']>;
  location?: Maybe<Scalars['String']['output']>;
  notificationBundleContent?: Maybe<Scalars['String']['output']>;
  notificationBundleEnabled?: Maybe<Scalars['Boolean']['output']>;
  notificationBundleInterval?: Maybe<Scalars['String']['output']>;
  notifyOnFeedback?: Maybe<Scalars['Boolean']['output']>;
  notifyOnReplyToCommentByDefault?: Maybe<Scalars['Boolean']['output']>;
  notifyOnReplyToDiscussionByDefault?: Maybe<Scalars['Boolean']['output']>;
  notifyOnReplyToEventByDefault?: Maybe<Scalars['Boolean']['output']>;
  notifyWhenTagged?: Maybe<Scalars['Boolean']['output']>;
  preferredTimeZone?: Maybe<Scalars['String']['output']>;
  profilePicURL?: Maybe<Scalars['String']['output']>;
  pronouns?: Maybe<Scalars['String']['output']>;
  stripeAccountId?: Maybe<Scalars['String']['output']>;
  username: Scalars['String']['output'];
};

export type UserEventsAggregateInput = {
  AND?: InputMaybe<Array<UserEventsAggregateInput>>;
  NOT?: InputMaybe<UserEventsAggregateInput>;
  OR?: InputMaybe<Array<UserEventsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserEventsNodeAggregationWhereInput>;
};

export type UserEventsConnectFieldInput = {
  connect?: InputMaybe<Array<EventConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type UserEventsConnectedRelationship = {
  __typename?: 'UserEventsConnectedRelationship';
  node: EventEventPayload;
};

export type UserEventsConnection = {
  __typename?: 'UserEventsConnection';
  edges: Array<UserEventsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserEventsConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type UserEventsConnectionWhere = {
  AND?: InputMaybe<Array<UserEventsConnectionWhere>>;
  NOT?: InputMaybe<UserEventsConnectionWhere>;
  OR?: InputMaybe<Array<UserEventsConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type UserEventsCreateFieldInput = {
  node: EventCreateInput;
};

export type UserEventsDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<UserEventsConnectionWhere>;
};

export type UserEventsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<UserEventsConnectionWhere>;
};

export type UserEventsFieldInput = {
  connect?: InputMaybe<Array<UserEventsConnectFieldInput>>;
  create?: InputMaybe<Array<UserEventsCreateFieldInput>>;
};

export type UserEventsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserEventsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserEventsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserEventsNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserEventsRelationship = {
  __typename?: 'UserEventsRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type UserEventsRelationshipSubscriptionWhere = {
  node?: InputMaybe<EventSubscriptionWhere>;
};

export type UserEventsUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type UserEventsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserEventsConnectFieldInput>>;
  create?: InputMaybe<Array<UserEventsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserEventsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserEventsDisconnectFieldInput>>;
  update?: InputMaybe<UserEventsUpdateConnectionInput>;
  where?: InputMaybe<UserEventsConnectionWhere>;
};

export type UserFavoriteChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserFavoriteChannelsAggregateInput>>;
  NOT?: InputMaybe<UserFavoriteChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserFavoriteChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserFavoriteChannelsNodeAggregationWhereInput>;
};

export type UserFavoriteChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserFavoriteChannelsConnectOrCreateFieldInput = {
  onCreate: UserFavoriteChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserFavoriteChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserFavoriteChannelsConnectedRelationship = {
  __typename?: 'UserFavoriteChannelsConnectedRelationship';
  node: ChannelEventPayload;
};

export type UserFavoriteChannelsConnection = {
  __typename?: 'UserFavoriteChannelsConnection';
  edges: Array<UserFavoriteChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserFavoriteChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserFavoriteChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserFavoriteChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserFavoriteChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserFavoriteChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserFavoriteChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
};

export type UserFavoriteChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
};

export type UserFavoriteChannelsFieldInput = {
  connect?: InputMaybe<Array<UserFavoriteChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserFavoriteChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserFavoriteChannelsCreateFieldInput>>;
};

export type UserFavoriteChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserFavoriteChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserFavoriteChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserFavoriteChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserFavoriteChannelsRelationship = {
  __typename?: 'UserFavoriteChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserFavoriteChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type UserFavoriteChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserFavoriteChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserFavoriteChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserFavoriteChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserFavoriteChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserFavoriteChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserFavoriteChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserFavoriteChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
};

export type UserImageImagesAggregationSelection = {
  __typename?: 'UserImageImagesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserImageImagesNodeAggregateSelection>;
};

export type UserImageImagesNodeAggregateSelection = {
  __typename?: 'UserImageImagesNodeAggregateSelection';
  alt: StringAggregateSelection;
  caption: StringAggregateSelection;
  copyright: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  longDescription: StringAggregateSelection;
  scanCheckedAt: DateTimeAggregateSelection;
  url: StringAggregateSelection;
};

export type UserImagesAggregateInput = {
  AND?: InputMaybe<Array<UserImagesAggregateInput>>;
  NOT?: InputMaybe<UserImagesAggregateInput>;
  OR?: InputMaybe<Array<UserImagesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserImagesNodeAggregationWhereInput>;
};

export type UserImagesConnectFieldInput = {
  connect?: InputMaybe<Array<ImageConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ImageConnectWhere>;
};

export type UserImagesConnectedRelationship = {
  __typename?: 'UserImagesConnectedRelationship';
  node: ImageEventPayload;
};

export type UserImagesConnection = {
  __typename?: 'UserImagesConnection';
  edges: Array<UserImagesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserImagesConnectionSort = {
  node?: InputMaybe<ImageSort>;
};

export type UserImagesConnectionWhere = {
  AND?: InputMaybe<Array<UserImagesConnectionWhere>>;
  NOT?: InputMaybe<UserImagesConnectionWhere>;
  OR?: InputMaybe<Array<UserImagesConnectionWhere>>;
  node?: InputMaybe<ImageWhere>;
};

export type UserImagesCreateFieldInput = {
  node: ImageCreateInput;
};

export type UserImagesDeleteFieldInput = {
  delete?: InputMaybe<ImageDeleteInput>;
  where?: InputMaybe<UserImagesConnectionWhere>;
};

export type UserImagesDisconnectFieldInput = {
  disconnect?: InputMaybe<ImageDisconnectInput>;
  where?: InputMaybe<UserImagesConnectionWhere>;
};

export type UserImagesFieldInput = {
  connect?: InputMaybe<Array<UserImagesConnectFieldInput>>;
  create?: InputMaybe<Array<UserImagesCreateFieldInput>>;
};

export type UserImagesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserImagesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserImagesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserImagesNodeAggregationWhereInput>>;
  alt_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  alt_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  caption_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  caption_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  copyright_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  longDescription_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  longDescription_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  longDescription_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  longDescription_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  longDescription_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  longDescription_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  longDescription_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  longDescription_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  longDescription_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  longDescription_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  longDescription_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  scanCheckedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserImagesRelationship = {
  __typename?: 'UserImagesRelationship';
  cursor: Scalars['String']['output'];
  node: Image;
};

export type UserImagesRelationshipSubscriptionWhere = {
  node?: InputMaybe<ImageSubscriptionWhere>;
};

export type UserImagesUpdateConnectionInput = {
  node?: InputMaybe<ImageUpdateInput>;
};

export type UserImagesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserImagesConnectFieldInput>>;
  create?: InputMaybe<Array<UserImagesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserImagesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserImagesDisconnectFieldInput>>;
  update?: InputMaybe<UserImagesUpdateConnectionInput>;
  where?: InputMaybe<UserImagesConnectionWhere>;
};

export type UserLibraryAggregateInput = {
  AND?: InputMaybe<Array<UserLibraryAggregateInput>>;
  NOT?: InputMaybe<UserLibraryAggregateInput>;
  OR?: InputMaybe<Array<UserLibraryAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserLibraryNodeAggregationWhereInput>;
};

export type UserLibraryConnectFieldInput = {
  connect?: InputMaybe<Array<DownloadableFileConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DownloadableFileConnectWhere>;
};

export type UserLibraryConnectedRelationship = {
  __typename?: 'UserLibraryConnectedRelationship';
  node: DownloadableFileEventPayload;
};

export type UserLibraryConnection = {
  __typename?: 'UserLibraryConnection';
  edges: Array<UserLibraryRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserLibraryConnectionSort = {
  node?: InputMaybe<DownloadableFileSort>;
};

export type UserLibraryConnectionWhere = {
  AND?: InputMaybe<Array<UserLibraryConnectionWhere>>;
  NOT?: InputMaybe<UserLibraryConnectionWhere>;
  OR?: InputMaybe<Array<UserLibraryConnectionWhere>>;
  node?: InputMaybe<DownloadableFileWhere>;
};

export type UserLibraryCreateFieldInput = {
  node: DownloadableFileCreateInput;
};

export type UserLibraryDeleteFieldInput = {
  delete?: InputMaybe<DownloadableFileDeleteInput>;
  where?: InputMaybe<UserLibraryConnectionWhere>;
};

export type UserLibraryDisconnectFieldInput = {
  disconnect?: InputMaybe<DownloadableFileDisconnectInput>;
  where?: InputMaybe<UserLibraryConnectionWhere>;
};

export type UserLibraryFieldInput = {
  connect?: InputMaybe<Array<UserLibraryConnectFieldInput>>;
  create?: InputMaybe<Array<UserLibraryCreateFieldInput>>;
};

export type UserLibraryNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserLibraryNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserLibraryNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserLibraryNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  downloadCountTotal_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountTotal_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountTotal_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  downloadCountUnique_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  downloadCountUnique_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  fileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  fileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  fileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  paywallExpiresAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  paywallExpiresAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  scanCheckedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  scanCheckedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  size_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  size_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  size_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  size_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  size_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripePriceId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripePriceId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeProductId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeProductId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserLibraryRelationship = {
  __typename?: 'UserLibraryRelationship';
  cursor: Scalars['String']['output'];
  node: DownloadableFile;
};

export type UserLibraryRelationshipSubscriptionWhere = {
  node?: InputMaybe<DownloadableFileSubscriptionWhere>;
};

export type UserLibraryUpdateConnectionInput = {
  node?: InputMaybe<DownloadableFileUpdateInput>;
};

export type UserLibraryUpdateFieldInput = {
  connect?: InputMaybe<Array<UserLibraryConnectFieldInput>>;
  create?: InputMaybe<Array<UserLibraryCreateFieldInput>>;
  delete?: InputMaybe<Array<UserLibraryDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserLibraryDisconnectFieldInput>>;
  update?: InputMaybe<UserLibraryUpdateConnectionInput>;
  where?: InputMaybe<UserLibraryConnectionWhere>;
};

export type UserLicenseDefaultLicenseAggregationSelection = {
  __typename?: 'UserLicenseDefaultLicenseAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserLicenseDefaultLicenseNodeAggregateSelection>;
};

export type UserLicenseDefaultLicenseNodeAggregateSelection = {
  __typename?: 'UserLicenseDefaultLicenseNodeAggregateSelection';
  id: IdAggregateSelection;
  name: StringAggregateSelection;
  shortName: StringAggregateSelection;
  text: StringAggregateSelection;
  url: StringAggregateSelection;
};

export type UserModOfChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserModOfChannelsAggregateInput>>;
  NOT?: InputMaybe<UserModOfChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserModOfChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserModOfChannelsNodeAggregationWhereInput>;
};

export type UserModOfChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserModOfChannelsConnectOrCreateFieldInput = {
  onCreate: UserModOfChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserModOfChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserModOfChannelsConnectedRelationship = {
  __typename?: 'UserModOfChannelsConnectedRelationship';
  node: ChannelEventPayload;
};

export type UserModOfChannelsConnection = {
  __typename?: 'UserModOfChannelsConnection';
  edges: Array<UserModOfChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserModOfChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserModOfChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserModOfChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserModOfChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserModOfChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserModOfChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserModOfChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserModOfChannelsConnectionWhere>;
};

export type UserModOfChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserModOfChannelsConnectionWhere>;
};

export type UserModOfChannelsFieldInput = {
  connect?: InputMaybe<Array<UserModOfChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserModOfChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserModOfChannelsCreateFieldInput>>;
};

export type UserModOfChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserModOfChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserModOfChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserModOfChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserModOfChannelsRelationship = {
  __typename?: 'UserModOfChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserModOfChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type UserModOfChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserModOfChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserModOfChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserModOfChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserModOfChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserModOfChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserModOfChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserModOfChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserModOfChannelsConnectionWhere>;
};

export type UserModerationProfileAggregateInput = {
  AND?: InputMaybe<Array<UserModerationProfileAggregateInput>>;
  NOT?: InputMaybe<UserModerationProfileAggregateInput>;
  OR?: InputMaybe<Array<UserModerationProfileAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserModerationProfileNodeAggregationWhereInput>;
};

export type UserModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type UserModerationProfileConnectOrCreateFieldInput = {
  onCreate: UserModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type UserModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type UserModerationProfileConnectedRelationship = {
  __typename?: 'UserModerationProfileConnectedRelationship';
  node: ModerationProfileEventPayload;
};

export type UserModerationProfileConnection = {
  __typename?: 'UserModerationProfileConnection';
  edges: Array<UserModerationProfileRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserModerationProfileConnectionSort = {
  node?: InputMaybe<ModerationProfileSort>;
};

export type UserModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<UserModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<UserModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<UserModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type UserModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type UserModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<UserModerationProfileConnectionWhere>;
};

export type UserModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<UserModerationProfileConnectionWhere>;
};

export type UserModerationProfileFieldInput = {
  connect?: InputMaybe<UserModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<UserModerationProfileCreateFieldInput>;
};

export type UserModerationProfileModerationProfileAggregationSelection = {
  __typename?: 'UserModerationProfileModerationProfileAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserModerationProfileModerationProfileNodeAggregateSelection>;
};

export type UserModerationProfileModerationProfileNodeAggregateSelection = {
  __typename?: 'UserModerationProfileModerationProfileNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type UserModerationProfileNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserModerationProfileNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserModerationProfileNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserModerationProfileNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserModerationProfileRelationship = {
  __typename?: 'UserModerationProfileRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type UserModerationProfileRelationshipSubscriptionWhere = {
  node?: InputMaybe<ModerationProfileSubscriptionWhere>;
};

export type UserModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type UserModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<UserModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<UserModerationProfileCreateFieldInput>;
  delete?: InputMaybe<UserModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<UserModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<UserModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<UserModerationProfileConnectionWhere>;
};

export type UserNotificationNotificationsAggregationSelection = {
  __typename?: 'UserNotificationNotificationsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserNotificationNotificationsNodeAggregateSelection>;
};

export type UserNotificationNotificationsNodeAggregateSelection = {
  __typename?: 'UserNotificationNotificationsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
};

export type UserNotificationsAggregateInput = {
  AND?: InputMaybe<Array<UserNotificationsAggregateInput>>;
  NOT?: InputMaybe<UserNotificationsAggregateInput>;
  OR?: InputMaybe<Array<UserNotificationsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserNotificationsNodeAggregationWhereInput>;
};

export type UserNotificationsConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<NotificationConnectWhere>;
};

export type UserNotificationsConnectedRelationship = {
  __typename?: 'UserNotificationsConnectedRelationship';
  node: NotificationEventPayload;
};

export type UserNotificationsConnection = {
  __typename?: 'UserNotificationsConnection';
  edges: Array<UserNotificationsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserNotificationsConnectionSort = {
  node?: InputMaybe<NotificationSort>;
};

export type UserNotificationsConnectionWhere = {
  AND?: InputMaybe<Array<UserNotificationsConnectionWhere>>;
  NOT?: InputMaybe<UserNotificationsConnectionWhere>;
  OR?: InputMaybe<Array<UserNotificationsConnectionWhere>>;
  node?: InputMaybe<NotificationWhere>;
};

export type UserNotificationsCreateFieldInput = {
  node: NotificationCreateInput;
};

export type UserNotificationsDeleteFieldInput = {
  where?: InputMaybe<UserNotificationsConnectionWhere>;
};

export type UserNotificationsDisconnectFieldInput = {
  where?: InputMaybe<UserNotificationsConnectionWhere>;
};

export type UserNotificationsFieldInput = {
  connect?: InputMaybe<Array<UserNotificationsConnectFieldInput>>;
  create?: InputMaybe<Array<UserNotificationsCreateFieldInput>>;
};

export type UserNotificationsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserNotificationsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserNotificationsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserNotificationsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserNotificationsRelationship = {
  __typename?: 'UserNotificationsRelationship';
  cursor: Scalars['String']['output'];
  node: Notification;
};

export type UserNotificationsRelationshipSubscriptionWhere = {
  node?: InputMaybe<NotificationSubscriptionWhere>;
};

export type UserNotificationsUpdateConnectionInput = {
  node?: InputMaybe<NotificationUpdateInput>;
};

export type UserNotificationsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserNotificationsConnectFieldInput>>;
  create?: InputMaybe<Array<UserNotificationsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserNotificationsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserNotificationsDisconnectFieldInput>>;
  update?: InputMaybe<UserNotificationsUpdateConnectionInput>;
  where?: InputMaybe<UserNotificationsConnectionWhere>;
};

export type UserOnCreateInput = {
  bio?: InputMaybe<Scalars['String']['input']>;
  commentKarma?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discussionKarma?: InputMaybe<Scalars['Int']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  enableSensitiveContentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent?: InputMaybe<Scalars['String']['input']>;
  notificationBundleEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  notificationBundleInterval?: InputMaybe<Scalars['String']['input']>;
  notifyOnFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToCommentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToDiscussionByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToEventByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyWhenTagged?: InputMaybe<Scalars['Boolean']['input']>;
  preferredTimeZone?: InputMaybe<Scalars['String']['input']>;
  profilePicURL?: InputMaybe<Scalars['String']['input']>;
  pronouns?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId?: InputMaybe<Scalars['String']['input']>;
  username: Scalars['String']['input'];
};

export type UserOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more UserSort objects to sort Users by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<UserSort>>;
};

export type UserPendingModInvitesAggregateInput = {
  AND?: InputMaybe<Array<UserPendingModInvitesAggregateInput>>;
  NOT?: InputMaybe<UserPendingModInvitesAggregateInput>;
  OR?: InputMaybe<Array<UserPendingModInvitesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserPendingModInvitesNodeAggregationWhereInput>;
};

export type UserPendingModInvitesConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserPendingModInvitesConnectOrCreateFieldInput = {
  onCreate: UserPendingModInvitesConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserPendingModInvitesConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserPendingModInvitesConnectedRelationship = {
  __typename?: 'UserPendingModInvitesConnectedRelationship';
  node: ChannelEventPayload;
};

export type UserPendingModInvitesConnection = {
  __typename?: 'UserPendingModInvitesConnection';
  edges: Array<UserPendingModInvitesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserPendingModInvitesConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserPendingModInvitesConnectionWhere = {
  AND?: InputMaybe<Array<UserPendingModInvitesConnectionWhere>>;
  NOT?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  OR?: InputMaybe<Array<UserPendingModInvitesConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserPendingModInvitesCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserPendingModInvitesDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserPendingModInvitesConnectionWhere>;
};

export type UserPendingModInvitesDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserPendingModInvitesConnectionWhere>;
};

export type UserPendingModInvitesFieldInput = {
  connect?: InputMaybe<Array<UserPendingModInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserPendingModInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserPendingModInvitesCreateFieldInput>>;
};

export type UserPendingModInvitesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserPendingModInvitesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserPendingModInvitesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserPendingModInvitesNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserPendingModInvitesRelationship = {
  __typename?: 'UserPendingModInvitesRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserPendingModInvitesRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type UserPendingModInvitesUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserPendingModInvitesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserPendingModInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserPendingModInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserPendingModInvitesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserPendingModInvitesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserPendingModInvitesDisconnectFieldInput>>;
  update?: InputMaybe<UserPendingModInvitesUpdateConnectionInput>;
  where?: InputMaybe<UserPendingModInvitesConnectionWhere>;
};

export type UserPendingOwnerInvitesAggregateInput = {
  AND?: InputMaybe<Array<UserPendingOwnerInvitesAggregateInput>>;
  NOT?: InputMaybe<UserPendingOwnerInvitesAggregateInput>;
  OR?: InputMaybe<Array<UserPendingOwnerInvitesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserPendingOwnerInvitesNodeAggregationWhereInput>;
};

export type UserPendingOwnerInvitesConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserPendingOwnerInvitesConnectOrCreateFieldInput = {
  onCreate: UserPendingOwnerInvitesConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserPendingOwnerInvitesConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserPendingOwnerInvitesConnectedRelationship = {
  __typename?: 'UserPendingOwnerInvitesConnectedRelationship';
  node: ChannelEventPayload;
};

export type UserPendingOwnerInvitesConnection = {
  __typename?: 'UserPendingOwnerInvitesConnection';
  edges: Array<UserPendingOwnerInvitesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserPendingOwnerInvitesConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserPendingOwnerInvitesConnectionWhere = {
  AND?: InputMaybe<Array<UserPendingOwnerInvitesConnectionWhere>>;
  NOT?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  OR?: InputMaybe<Array<UserPendingOwnerInvitesConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserPendingOwnerInvitesCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserPendingOwnerInvitesDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
};

export type UserPendingOwnerInvitesDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
};

export type UserPendingOwnerInvitesFieldInput = {
  connect?: InputMaybe<Array<UserPendingOwnerInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserPendingOwnerInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserPendingOwnerInvitesCreateFieldInput>>;
};

export type UserPendingOwnerInvitesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserPendingOwnerInvitesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserPendingOwnerInvitesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserPendingOwnerInvitesNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserPendingOwnerInvitesRelationship = {
  __typename?: 'UserPendingOwnerInvitesRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserPendingOwnerInvitesRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type UserPendingOwnerInvitesUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserPendingOwnerInvitesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserPendingOwnerInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserPendingOwnerInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserPendingOwnerInvitesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserPendingOwnerInvitesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserPendingOwnerInvitesDisconnectFieldInput>>;
  update?: InputMaybe<UserPendingOwnerInvitesUpdateConnectionInput>;
  where?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
};

export type UserPurchasePurchasesAggregationSelection = {
  __typename?: 'UserPurchasePurchasesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserPurchasePurchasesNodeAggregateSelection>;
};

export type UserPurchasePurchasesNodeAggregateSelection = {
  __typename?: 'UserPurchasePurchasesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  priceCents: IntAggregateSelection;
  priceCurrency: StringAggregateSelection;
};

export type UserPurchasesAggregateInput = {
  AND?: InputMaybe<Array<UserPurchasesAggregateInput>>;
  NOT?: InputMaybe<UserPurchasesAggregateInput>;
  OR?: InputMaybe<Array<UserPurchasesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserPurchasesNodeAggregationWhereInput>;
};

export type UserPurchasesConnectFieldInput = {
  connect?: InputMaybe<Array<PurchaseConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<PurchaseConnectWhere>;
};

export type UserPurchasesConnectedRelationship = {
  __typename?: 'UserPurchasesConnectedRelationship';
  node: PurchaseEventPayload;
};

export type UserPurchasesConnection = {
  __typename?: 'UserPurchasesConnection';
  edges: Array<UserPurchasesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserPurchasesConnectionSort = {
  node?: InputMaybe<PurchaseSort>;
};

export type UserPurchasesConnectionWhere = {
  AND?: InputMaybe<Array<UserPurchasesConnectionWhere>>;
  NOT?: InputMaybe<UserPurchasesConnectionWhere>;
  OR?: InputMaybe<Array<UserPurchasesConnectionWhere>>;
  node?: InputMaybe<PurchaseWhere>;
};

export type UserPurchasesCreateFieldInput = {
  node: PurchaseCreateInput;
};

export type UserPurchasesDeleteFieldInput = {
  delete?: InputMaybe<PurchaseDeleteInput>;
  where?: InputMaybe<UserPurchasesConnectionWhere>;
};

export type UserPurchasesDisconnectFieldInput = {
  disconnect?: InputMaybe<PurchaseDisconnectInput>;
  where?: InputMaybe<UserPurchasesConnectionWhere>;
};

export type UserPurchasesFieldInput = {
  connect?: InputMaybe<Array<UserPurchasesConnectFieldInput>>;
  create?: InputMaybe<Array<UserPurchasesCreateFieldInput>>;
};

export type UserPurchasesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserPurchasesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserPurchasesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserPurchasesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  priceCents_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCents_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCents_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCents_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  priceCurrency_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  priceCurrency_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserPurchasesRelationship = {
  __typename?: 'UserPurchasesRelationship';
  cursor: Scalars['String']['output'];
  node: Purchase;
};

export type UserPurchasesRelationshipSubscriptionWhere = {
  node?: InputMaybe<PurchaseSubscriptionWhere>;
};

export type UserPurchasesUpdateConnectionInput = {
  node?: InputMaybe<PurchaseUpdateInput>;
};

export type UserPurchasesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserPurchasesConnectFieldInput>>;
  create?: InputMaybe<Array<UserPurchasesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserPurchasesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserPurchasesDisconnectFieldInput>>;
  update?: InputMaybe<UserPurchasesUpdateConnectionInput>;
  where?: InputMaybe<UserPurchasesConnectionWhere>;
};

export type UserRecentlyVisitedChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserRecentlyVisitedChannelsAggregateInput>>;
  NOT?: InputMaybe<UserRecentlyVisitedChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserRecentlyVisitedChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserRecentlyVisitedChannelsNodeAggregationWhereInput>;
};

export type UserRecentlyVisitedChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserRecentlyVisitedChannelsConnectOrCreateFieldInput = {
  onCreate: UserRecentlyVisitedChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserRecentlyVisitedChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserRecentlyVisitedChannelsConnectedRelationship = {
  __typename?: 'UserRecentlyVisitedChannelsConnectedRelationship';
  node: ChannelEventPayload;
};

export type UserRecentlyVisitedChannelsConnection = {
  __typename?: 'UserRecentlyVisitedChannelsConnection';
  edges: Array<UserRecentlyVisitedChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserRecentlyVisitedChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserRecentlyVisitedChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserRecentlyVisitedChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserRecentlyVisitedChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
};

export type UserRecentlyVisitedChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
};

export type UserRecentlyVisitedChannelsFieldInput = {
  connect?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserRecentlyVisitedChannelsCreateFieldInput>>;
};

export type UserRecentlyVisitedChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserRecentlyVisitedChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserRecentlyVisitedChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserRecentlyVisitedChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  payoutPercent_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  payoutPercent_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserRecentlyVisitedChannelsRelationship = {
  __typename?: 'UserRecentlyVisitedChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserRecentlyVisitedChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<ChannelSubscriptionWhere>;
};

export type UserRecentlyVisitedChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserRecentlyVisitedChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserRecentlyVisitedChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserRecentlyVisitedChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserRecentlyVisitedChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserRecentlyVisitedChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
};

export type UserRelationInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsCreateFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsCreateFieldInput>>;
  AuthoredWikiPageVersions?: InputMaybe<Array<UserAuthoredWikiPageVersionsCreateFieldInput>>;
  AuthoredWikiPages?: InputMaybe<Array<UserAuthoredWikiPagesCreateFieldInput>>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesCreateFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsCreateFieldInput>>;
  Discussions?: InputMaybe<Array<UserDiscussionsCreateFieldInput>>;
  Email?: InputMaybe<UserEmailCreateFieldInput>;
  Events?: InputMaybe<Array<UserEventsCreateFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsCreateFieldInput>>;
  Images?: InputMaybe<Array<UserImagesCreateFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsCreateFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileCreateFieldInput>;
  Notifications?: InputMaybe<Array<UserNotificationsCreateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesCreateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesCreateFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsCreateFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesCreateFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsCreateFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsCreateFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsCreateFieldInput>>;
  collections?: InputMaybe<Array<UserCollectionsCreateFieldInput>>;
  defaultLicense?: InputMaybe<UserDefaultLicenseCreateFieldInput>;
  library?: InputMaybe<Array<UserLibraryCreateFieldInput>>;
  purchases?: InputMaybe<Array<UserPurchasesCreateFieldInput>>;
};

export type UserRelationshipCreatedEvent = {
  __typename?: 'UserRelationshipCreatedEvent';
  createdRelationship: UserConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
  user: UserEventPayload;
};

export type UserRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<UserRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<UserRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<UserRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<UserRelationshipsSubscriptionWhere>;
  user?: InputMaybe<UserSubscriptionWhere>;
};

export type UserRelationshipDeletedEvent = {
  __typename?: 'UserRelationshipDeletedEvent';
  deletedRelationship: UserConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
  user: UserEventPayload;
};

export type UserRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<UserRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<UserRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<UserRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<UserRelationshipsSubscriptionWhere>;
  user?: InputMaybe<UserSubscriptionWhere>;
};

export type UserRelationshipsSubscriptionWhere = {
  AdminOfChannels?: InputMaybe<UserAdminOfChannelsRelationshipSubscriptionWhere>;
  Albums?: InputMaybe<UserAlbumsRelationshipSubscriptionWhere>;
  AuthoredWikiPageVersions?: InputMaybe<UserAuthoredWikiPageVersionsRelationshipSubscriptionWhere>;
  AuthoredWikiPages?: InputMaybe<UserAuthoredWikiPagesRelationshipSubscriptionWhere>;
  ChannelRoles?: InputMaybe<UserChannelRolesRelationshipSubscriptionWhere>;
  Comments?: InputMaybe<UserCommentsRelationshipSubscriptionWhere>;
  Discussions?: InputMaybe<UserDiscussionsRelationshipSubscriptionWhere>;
  Email?: InputMaybe<UserEmailRelationshipSubscriptionWhere>;
  Events?: InputMaybe<UserEventsRelationshipSubscriptionWhere>;
  FavoriteChannels?: InputMaybe<UserFavoriteChannelsRelationshipSubscriptionWhere>;
  Images?: InputMaybe<UserImagesRelationshipSubscriptionWhere>;
  ModOfChannels?: InputMaybe<UserModOfChannelsRelationshipSubscriptionWhere>;
  ModerationProfile?: InputMaybe<UserModerationProfileRelationshipSubscriptionWhere>;
  Notifications?: InputMaybe<UserNotificationsRelationshipSubscriptionWhere>;
  PendingModInvites?: InputMaybe<UserPendingModInvitesRelationshipSubscriptionWhere>;
  PendingOwnerInvites?: InputMaybe<UserPendingOwnerInvitesRelationshipSubscriptionWhere>;
  RecentlyVisitedChannels?: InputMaybe<UserRecentlyVisitedChannelsRelationshipSubscriptionWhere>;
  ServerRoles?: InputMaybe<UserServerRolesRelationshipSubscriptionWhere>;
  Suspensions?: InputMaybe<UserSuspensionsRelationshipSubscriptionWhere>;
  UpvotedComments?: InputMaybe<UserUpvotedCommentsRelationshipSubscriptionWhere>;
  UpvotedDiscussionChannels?: InputMaybe<UserUpvotedDiscussionChannelsRelationshipSubscriptionWhere>;
  collections?: InputMaybe<UserCollectionsRelationshipSubscriptionWhere>;
  defaultLicense?: InputMaybe<UserDefaultLicenseRelationshipSubscriptionWhere>;
  library?: InputMaybe<UserLibraryRelationshipSubscriptionWhere>;
  purchases?: InputMaybe<UserPurchasesRelationshipSubscriptionWhere>;
};

export type UserServerRoleServerRolesAggregationSelection = {
  __typename?: 'UserServerRoleServerRolesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserServerRoleServerRolesNodeAggregateSelection>;
};

export type UserServerRoleServerRolesNodeAggregateSelection = {
  __typename?: 'UserServerRoleServerRolesNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type UserServerRolesAggregateInput = {
  AND?: InputMaybe<Array<UserServerRolesAggregateInput>>;
  NOT?: InputMaybe<UserServerRolesAggregateInput>;
  OR?: InputMaybe<Array<UserServerRolesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserServerRolesNodeAggregationWhereInput>;
};

export type UserServerRolesConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ServerRoleConnectWhere>;
};

export type UserServerRolesConnectOrCreateFieldInput = {
  onCreate: UserServerRolesConnectOrCreateFieldInputOnCreate;
  where: ServerRoleConnectOrCreateWhere;
};

export type UserServerRolesConnectOrCreateFieldInputOnCreate = {
  node: ServerRoleOnCreateInput;
};

export type UserServerRolesConnectedRelationship = {
  __typename?: 'UserServerRolesConnectedRelationship';
  node: ServerRoleEventPayload;
};

export type UserServerRolesConnection = {
  __typename?: 'UserServerRolesConnection';
  edges: Array<UserServerRolesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserServerRolesConnectionSort = {
  node?: InputMaybe<ServerRoleSort>;
};

export type UserServerRolesConnectionWhere = {
  AND?: InputMaybe<Array<UserServerRolesConnectionWhere>>;
  NOT?: InputMaybe<UserServerRolesConnectionWhere>;
  OR?: InputMaybe<Array<UserServerRolesConnectionWhere>>;
  node?: InputMaybe<ServerRoleWhere>;
};

export type UserServerRolesCreateFieldInput = {
  node: ServerRoleCreateInput;
};

export type UserServerRolesDeleteFieldInput = {
  where?: InputMaybe<UserServerRolesConnectionWhere>;
};

export type UserServerRolesDisconnectFieldInput = {
  where?: InputMaybe<UserServerRolesConnectionWhere>;
};

export type UserServerRolesFieldInput = {
  connect?: InputMaybe<Array<UserServerRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserServerRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserServerRolesCreateFieldInput>>;
};

export type UserServerRolesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserServerRolesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserServerRolesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserServerRolesNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserServerRolesRelationship = {
  __typename?: 'UserServerRolesRelationship';
  cursor: Scalars['String']['output'];
  node: ServerRole;
};

export type UserServerRolesRelationshipSubscriptionWhere = {
  node?: InputMaybe<ServerRoleSubscriptionWhere>;
};

export type UserServerRolesUpdateConnectionInput = {
  node?: InputMaybe<ServerRoleUpdateInput>;
};

export type UserServerRolesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserServerRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserServerRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserServerRolesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserServerRolesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserServerRolesDisconnectFieldInput>>;
  update?: InputMaybe<UserServerRolesUpdateConnectionInput>;
  where?: InputMaybe<UserServerRolesConnectionWhere>;
};

/** Fields to sort Users by. The order in which sorts are applied is not guaranteed when specifying many fields in one UserSort object. */
export type UserSort = {
  bio?: InputMaybe<SortDirection>;
  commentKarma?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  defaultEmojiSkinTone?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  discussionKarma?: InputMaybe<SortDirection>;
  displayName?: InputMaybe<SortDirection>;
  enableSensitiveContentByDefault?: InputMaybe<SortDirection>;
  location?: InputMaybe<SortDirection>;
  notificationBundleContent?: InputMaybe<SortDirection>;
  notificationBundleEnabled?: InputMaybe<SortDirection>;
  notificationBundleInterval?: InputMaybe<SortDirection>;
  notifyOnFeedback?: InputMaybe<SortDirection>;
  notifyOnReplyToCommentByDefault?: InputMaybe<SortDirection>;
  notifyOnReplyToDiscussionByDefault?: InputMaybe<SortDirection>;
  notifyOnReplyToEventByDefault?: InputMaybe<SortDirection>;
  notifyWhenTagged?: InputMaybe<SortDirection>;
  preferredTimeZone?: InputMaybe<SortDirection>;
  profilePicURL?: InputMaybe<SortDirection>;
  pronouns?: InputMaybe<SortDirection>;
  stripeAccountId?: InputMaybe<SortDirection>;
  username?: InputMaybe<SortDirection>;
};

export type UserSubscriptionWhere = {
  AND?: InputMaybe<Array<UserSubscriptionWhere>>;
  NOT?: InputMaybe<UserSubscriptionWhere>;
  OR?: InputMaybe<Array<UserSubscriptionWhere>>;
  bio?: InputMaybe<Scalars['String']['input']>;
  bio_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  bio_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  bio_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  bio_MATCHES?: InputMaybe<Scalars['String']['input']>;
  bio_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  commentKarma?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  commentKarma_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone?: InputMaybe<Scalars['String']['input']>;
  defaultEmojiSkinTone_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  defaultEmojiSkinTone_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  defaultEmojiSkinTone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  defaultEmojiSkinTone_MATCHES?: InputMaybe<Scalars['String']['input']>;
  defaultEmojiSkinTone_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discussionKarma?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  discussionKarma_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  enableSensitiveContentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  location_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  location_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  location_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  location_MATCHES?: InputMaybe<Scalars['String']['input']>;
  location_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  notificationBundleContent_MATCHES?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  notificationBundleEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  notificationBundleInterval?: InputMaybe<Scalars['String']['input']>;
  notificationBundleInterval_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  notificationBundleInterval_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  notificationBundleInterval_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  notificationBundleInterval_MATCHES?: InputMaybe<Scalars['String']['input']>;
  notificationBundleInterval_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  notifyOnFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToCommentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToDiscussionByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToEventByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyWhenTagged?: InputMaybe<Scalars['Boolean']['input']>;
  preferredTimeZone?: InputMaybe<Scalars['String']['input']>;
  preferredTimeZone_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  preferredTimeZone_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  preferredTimeZone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferredTimeZone_MATCHES?: InputMaybe<Scalars['String']['input']>;
  preferredTimeZone_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  profilePicURL?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  profilePicURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  pronouns?: InputMaybe<Scalars['String']['input']>;
  pronouns_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  pronouns_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  pronouns_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  pronouns_MATCHES?: InputMaybe<Scalars['String']['input']>;
  pronouns_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  stripeAccountId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
  username_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  username_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  username_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  username_MATCHES?: InputMaybe<Scalars['String']['input']>;
  username_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type UserSuspensionSuspensionsAggregationSelection = {
  __typename?: 'UserSuspensionSuspensionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserSuspensionSuspensionsNodeAggregateSelection>;
};

export type UserSuspensionSuspensionsNodeAggregateSelection = {
  __typename?: 'UserSuspensionSuspensionsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type UserSuspensionsAggregateInput = {
  AND?: InputMaybe<Array<UserSuspensionsAggregateInput>>;
  NOT?: InputMaybe<UserSuspensionsAggregateInput>;
  OR?: InputMaybe<Array<UserSuspensionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserSuspensionsNodeAggregationWhereInput>;
};

export type UserSuspensionsConnectFieldInput = {
  connect?: InputMaybe<Array<SuspensionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<SuspensionConnectWhere>;
};

export type UserSuspensionsConnectedRelationship = {
  __typename?: 'UserSuspensionsConnectedRelationship';
  node: SuspensionEventPayload;
};

export type UserSuspensionsConnection = {
  __typename?: 'UserSuspensionsConnection';
  edges: Array<UserSuspensionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserSuspensionsConnectionSort = {
  node?: InputMaybe<SuspensionSort>;
};

export type UserSuspensionsConnectionWhere = {
  AND?: InputMaybe<Array<UserSuspensionsConnectionWhere>>;
  NOT?: InputMaybe<UserSuspensionsConnectionWhere>;
  OR?: InputMaybe<Array<UserSuspensionsConnectionWhere>>;
  node?: InputMaybe<SuspensionWhere>;
};

export type UserSuspensionsCreateFieldInput = {
  node: SuspensionCreateInput;
};

export type UserSuspensionsDeleteFieldInput = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<UserSuspensionsConnectionWhere>;
};

export type UserSuspensionsDisconnectFieldInput = {
  disconnect?: InputMaybe<SuspensionDisconnectInput>;
  where?: InputMaybe<UserSuspensionsConnectionWhere>;
};

export type UserSuspensionsFieldInput = {
  connect?: InputMaybe<Array<UserSuspensionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserSuspensionsCreateFieldInput>>;
};

export type UserSuspensionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserSuspensionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserSuspensionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserSuspensionsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  suspendedUntil_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserSuspensionsRelationship = {
  __typename?: 'UserSuspensionsRelationship';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type UserSuspensionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<SuspensionSubscriptionWhere>;
};

export type UserSuspensionsUpdateConnectionInput = {
  node?: InputMaybe<SuspensionUpdateInput>;
};

export type UserSuspensionsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserSuspensionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserSuspensionsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserSuspensionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserSuspensionsDisconnectFieldInput>>;
  update?: InputMaybe<UserSuspensionsUpdateConnectionInput>;
  where?: InputMaybe<UserSuspensionsConnectionWhere>;
};

export type UserTextVersionAuthoredWikiPageVersionsAggregationSelection = {
  __typename?: 'UserTextVersionAuthoredWikiPageVersionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserTextVersionAuthoredWikiPageVersionsNodeAggregateSelection>;
};

export type UserTextVersionAuthoredWikiPageVersionsNodeAggregateSelection = {
  __typename?: 'UserTextVersionAuthoredWikiPageVersionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type UserUniqueWhere = {
  username?: InputMaybe<Scalars['String']['input']>;
};

export type UserUpdateInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsUpdateFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsUpdateFieldInput>>;
  AuthoredWikiPageVersions?: InputMaybe<Array<UserAuthoredWikiPageVersionsUpdateFieldInput>>;
  AuthoredWikiPages?: InputMaybe<Array<UserAuthoredWikiPagesUpdateFieldInput>>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesUpdateFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsUpdateFieldInput>>;
  Discussions?: InputMaybe<Array<UserDiscussionsUpdateFieldInput>>;
  Email?: InputMaybe<UserEmailUpdateFieldInput>;
  Events?: InputMaybe<Array<UserEventsUpdateFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsUpdateFieldInput>>;
  Images?: InputMaybe<Array<UserImagesUpdateFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsUpdateFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileUpdateFieldInput>;
  Notifications?: InputMaybe<Array<UserNotificationsUpdateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesUpdateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesUpdateFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsUpdateFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesUpdateFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsUpdateFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsUpdateFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsUpdateFieldInput>>;
  bio?: InputMaybe<Scalars['String']['input']>;
  collections?: InputMaybe<Array<UserCollectionsUpdateFieldInput>>;
  commentKarma?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone?: InputMaybe<Scalars['String']['input']>;
  defaultLicense?: InputMaybe<UserDefaultLicenseUpdateFieldInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discussionKarma?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  enableSensitiveContentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  library?: InputMaybe<Array<UserLibraryUpdateFieldInput>>;
  location?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent?: InputMaybe<Scalars['String']['input']>;
  notificationBundleEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  notificationBundleInterval?: InputMaybe<Scalars['String']['input']>;
  notifyOnFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToCommentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToDiscussionByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToEventByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyWhenTagged?: InputMaybe<Scalars['Boolean']['input']>;
  preferredTimeZone?: InputMaybe<Scalars['String']['input']>;
  profilePicURL?: InputMaybe<Scalars['String']['input']>;
  pronouns?: InputMaybe<Scalars['String']['input']>;
  purchases?: InputMaybe<Array<UserPurchasesUpdateFieldInput>>;
  stripeAccountId?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

export type UserUpdatedEvent = {
  __typename?: 'UserUpdatedEvent';
  event: EventType;
  previousState: UserEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedUser: UserEventPayload;
};

export type UserUpvotedCommentsAggregateInput = {
  AND?: InputMaybe<Array<UserUpvotedCommentsAggregateInput>>;
  NOT?: InputMaybe<UserUpvotedCommentsAggregateInput>;
  OR?: InputMaybe<Array<UserUpvotedCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserUpvotedCommentsNodeAggregationWhereInput>;
};

export type UserUpvotedCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type UserUpvotedCommentsConnectedRelationship = {
  __typename?: 'UserUpvotedCommentsConnectedRelationship';
  node: CommentEventPayload;
};

export type UserUpvotedCommentsConnection = {
  __typename?: 'UserUpvotedCommentsConnection';
  edges: Array<UserUpvotedCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserUpvotedCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type UserUpvotedCommentsConnectionWhere = {
  AND?: InputMaybe<Array<UserUpvotedCommentsConnectionWhere>>;
  NOT?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  OR?: InputMaybe<Array<UserUpvotedCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type UserUpvotedCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type UserUpvotedCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
};

export type UserUpvotedCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
};

export type UserUpvotedCommentsFieldInput = {
  connect?: InputMaybe<Array<UserUpvotedCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserUpvotedCommentsCreateFieldInput>>;
};

export type UserUpvotedCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserUpvotedCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserUpvotedCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserUpvotedCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type UserUpvotedCommentsRelationship = {
  __typename?: 'UserUpvotedCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type UserUpvotedCommentsRelationshipSubscriptionWhere = {
  node?: InputMaybe<CommentSubscriptionWhere>;
};

export type UserUpvotedCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type UserUpvotedCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserUpvotedCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserUpvotedCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserUpvotedCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserUpvotedCommentsDisconnectFieldInput>>;
  update?: InputMaybe<UserUpvotedCommentsUpdateConnectionInput>;
  where?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
};

export type UserUpvotedDiscussionChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserUpvotedDiscussionChannelsAggregateInput>>;
  NOT?: InputMaybe<UserUpvotedDiscussionChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserUpvotedDiscussionChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserUpvotedDiscussionChannelsNodeAggregationWhereInput>;
};

export type UserUpvotedDiscussionChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionChannelConnectWhere>;
};

export type UserUpvotedDiscussionChannelsConnectedRelationship = {
  __typename?: 'UserUpvotedDiscussionChannelsConnectedRelationship';
  node: DiscussionChannelEventPayload;
};

export type UserUpvotedDiscussionChannelsConnection = {
  __typename?: 'UserUpvotedDiscussionChannelsConnection';
  edges: Array<UserUpvotedDiscussionChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserUpvotedDiscussionChannelsConnectionSort = {
  node?: InputMaybe<DiscussionChannelSort>;
};

export type UserUpvotedDiscussionChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectionWhere>>;
  node?: InputMaybe<DiscussionChannelWhere>;
};

export type UserUpvotedDiscussionChannelsCreateFieldInput = {
  node: DiscussionChannelCreateInput;
};

export type UserUpvotedDiscussionChannelsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
};

export type UserUpvotedDiscussionChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionChannelDisconnectInput>;
  where?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
};

export type UserUpvotedDiscussionChannelsFieldInput = {
  connect?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<UserUpvotedDiscussionChannelsCreateFieldInput>>;
};

export type UserUpvotedDiscussionChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserUpvotedDiscussionChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserUpvotedDiscussionChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserUpvotedDiscussionChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type UserUpvotedDiscussionChannelsRelationship = {
  __typename?: 'UserUpvotedDiscussionChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type UserUpvotedDiscussionChannelsRelationshipSubscriptionWhere = {
  node?: InputMaybe<DiscussionChannelSubscriptionWhere>;
};

export type UserUpvotedDiscussionChannelsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionChannelUpdateInput>;
};

export type UserUpvotedDiscussionChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<UserUpvotedDiscussionChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserUpvotedDiscussionChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserUpvotedDiscussionChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserUpvotedDiscussionChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
};

export type UserWhere = {
  AND?: InputMaybe<Array<UserWhere>>;
  AdminOfChannelsAggregate?: InputMaybe<UserAdminOfChannelsAggregateInput>;
  /** Return Users where all of the related UserAdminOfChannelsConnections match this filter */
  AdminOfChannelsConnection_ALL?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  /** Return Users where none of the related UserAdminOfChannelsConnections match this filter */
  AdminOfChannelsConnection_NONE?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  /** Return Users where one of the related UserAdminOfChannelsConnections match this filter */
  AdminOfChannelsConnection_SINGLE?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  /** Return Users where some of the related UserAdminOfChannelsConnections match this filter */
  AdminOfChannelsConnection_SOME?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  AdminOfChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  AdminOfChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  AdminOfChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  AdminOfChannels_SOME?: InputMaybe<ChannelWhere>;
  AlbumsAggregate?: InputMaybe<UserAlbumsAggregateInput>;
  /** Return Users where all of the related UserAlbumsConnections match this filter */
  AlbumsConnection_ALL?: InputMaybe<UserAlbumsConnectionWhere>;
  /** Return Users where none of the related UserAlbumsConnections match this filter */
  AlbumsConnection_NONE?: InputMaybe<UserAlbumsConnectionWhere>;
  /** Return Users where one of the related UserAlbumsConnections match this filter */
  AlbumsConnection_SINGLE?: InputMaybe<UserAlbumsConnectionWhere>;
  /** Return Users where some of the related UserAlbumsConnections match this filter */
  AlbumsConnection_SOME?: InputMaybe<UserAlbumsConnectionWhere>;
  /** Return Users where all of the related Albums match this filter */
  Albums_ALL?: InputMaybe<AlbumWhere>;
  /** Return Users where none of the related Albums match this filter */
  Albums_NONE?: InputMaybe<AlbumWhere>;
  /** Return Users where one of the related Albums match this filter */
  Albums_SINGLE?: InputMaybe<AlbumWhere>;
  /** Return Users where some of the related Albums match this filter */
  Albums_SOME?: InputMaybe<AlbumWhere>;
  AuthoredWikiPageVersionsAggregate?: InputMaybe<UserAuthoredWikiPageVersionsAggregateInput>;
  /** Return Users where all of the related UserAuthoredWikiPageVersionsConnections match this filter */
  AuthoredWikiPageVersionsConnection_ALL?: InputMaybe<UserAuthoredWikiPageVersionsConnectionWhere>;
  /** Return Users where none of the related UserAuthoredWikiPageVersionsConnections match this filter */
  AuthoredWikiPageVersionsConnection_NONE?: InputMaybe<UserAuthoredWikiPageVersionsConnectionWhere>;
  /** Return Users where one of the related UserAuthoredWikiPageVersionsConnections match this filter */
  AuthoredWikiPageVersionsConnection_SINGLE?: InputMaybe<UserAuthoredWikiPageVersionsConnectionWhere>;
  /** Return Users where some of the related UserAuthoredWikiPageVersionsConnections match this filter */
  AuthoredWikiPageVersionsConnection_SOME?: InputMaybe<UserAuthoredWikiPageVersionsConnectionWhere>;
  /** Return Users where all of the related TextVersions match this filter */
  AuthoredWikiPageVersions_ALL?: InputMaybe<TextVersionWhere>;
  /** Return Users where none of the related TextVersions match this filter */
  AuthoredWikiPageVersions_NONE?: InputMaybe<TextVersionWhere>;
  /** Return Users where one of the related TextVersions match this filter */
  AuthoredWikiPageVersions_SINGLE?: InputMaybe<TextVersionWhere>;
  /** Return Users where some of the related TextVersions match this filter */
  AuthoredWikiPageVersions_SOME?: InputMaybe<TextVersionWhere>;
  AuthoredWikiPagesAggregate?: InputMaybe<UserAuthoredWikiPagesAggregateInput>;
  /** Return Users where all of the related UserAuthoredWikiPagesConnections match this filter */
  AuthoredWikiPagesConnection_ALL?: InputMaybe<UserAuthoredWikiPagesConnectionWhere>;
  /** Return Users where none of the related UserAuthoredWikiPagesConnections match this filter */
  AuthoredWikiPagesConnection_NONE?: InputMaybe<UserAuthoredWikiPagesConnectionWhere>;
  /** Return Users where one of the related UserAuthoredWikiPagesConnections match this filter */
  AuthoredWikiPagesConnection_SINGLE?: InputMaybe<UserAuthoredWikiPagesConnectionWhere>;
  /** Return Users where some of the related UserAuthoredWikiPagesConnections match this filter */
  AuthoredWikiPagesConnection_SOME?: InputMaybe<UserAuthoredWikiPagesConnectionWhere>;
  /** Return Users where all of the related WikiPages match this filter */
  AuthoredWikiPages_ALL?: InputMaybe<WikiPageWhere>;
  /** Return Users where none of the related WikiPages match this filter */
  AuthoredWikiPages_NONE?: InputMaybe<WikiPageWhere>;
  /** Return Users where one of the related WikiPages match this filter */
  AuthoredWikiPages_SINGLE?: InputMaybe<WikiPageWhere>;
  /** Return Users where some of the related WikiPages match this filter */
  AuthoredWikiPages_SOME?: InputMaybe<WikiPageWhere>;
  ChannelRolesAggregate?: InputMaybe<UserChannelRolesAggregateInput>;
  /** Return Users where all of the related UserChannelRolesConnections match this filter */
  ChannelRolesConnection_ALL?: InputMaybe<UserChannelRolesConnectionWhere>;
  /** Return Users where none of the related UserChannelRolesConnections match this filter */
  ChannelRolesConnection_NONE?: InputMaybe<UserChannelRolesConnectionWhere>;
  /** Return Users where one of the related UserChannelRolesConnections match this filter */
  ChannelRolesConnection_SINGLE?: InputMaybe<UserChannelRolesConnectionWhere>;
  /** Return Users where some of the related UserChannelRolesConnections match this filter */
  ChannelRolesConnection_SOME?: InputMaybe<UserChannelRolesConnectionWhere>;
  /** Return Users where all of the related ChannelRoles match this filter */
  ChannelRoles_ALL?: InputMaybe<ChannelRoleWhere>;
  /** Return Users where none of the related ChannelRoles match this filter */
  ChannelRoles_NONE?: InputMaybe<ChannelRoleWhere>;
  /** Return Users where one of the related ChannelRoles match this filter */
  ChannelRoles_SINGLE?: InputMaybe<ChannelRoleWhere>;
  /** Return Users where some of the related ChannelRoles match this filter */
  ChannelRoles_SOME?: InputMaybe<ChannelRoleWhere>;
  CommentsAggregate?: InputMaybe<UserCommentsAggregateInput>;
  /** Return Users where all of the related UserCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<UserCommentsConnectionWhere>;
  /** Return Users where none of the related UserCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<UserCommentsConnectionWhere>;
  /** Return Users where one of the related UserCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<UserCommentsConnectionWhere>;
  /** Return Users where some of the related UserCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<UserCommentsConnectionWhere>;
  /** Return Users where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return Users where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return Users where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Users where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  DiscussionsAggregate?: InputMaybe<UserDiscussionsAggregateInput>;
  /** Return Users where all of the related UserDiscussionsConnections match this filter */
  DiscussionsConnection_ALL?: InputMaybe<UserDiscussionsConnectionWhere>;
  /** Return Users where none of the related UserDiscussionsConnections match this filter */
  DiscussionsConnection_NONE?: InputMaybe<UserDiscussionsConnectionWhere>;
  /** Return Users where one of the related UserDiscussionsConnections match this filter */
  DiscussionsConnection_SINGLE?: InputMaybe<UserDiscussionsConnectionWhere>;
  /** Return Users where some of the related UserDiscussionsConnections match this filter */
  DiscussionsConnection_SOME?: InputMaybe<UserDiscussionsConnectionWhere>;
  /** Return Users where all of the related Discussions match this filter */
  Discussions_ALL?: InputMaybe<DiscussionWhere>;
  /** Return Users where none of the related Discussions match this filter */
  Discussions_NONE?: InputMaybe<DiscussionWhere>;
  /** Return Users where one of the related Discussions match this filter */
  Discussions_SINGLE?: InputMaybe<DiscussionWhere>;
  /** Return Users where some of the related Discussions match this filter */
  Discussions_SOME?: InputMaybe<DiscussionWhere>;
  Email?: InputMaybe<EmailWhere>;
  EmailAggregate?: InputMaybe<UserEmailAggregateInput>;
  EmailConnection?: InputMaybe<UserEmailConnectionWhere>;
  EmailConnection_NOT?: InputMaybe<UserEmailConnectionWhere>;
  Email_NOT?: InputMaybe<EmailWhere>;
  EventsAggregate?: InputMaybe<UserEventsAggregateInput>;
  /** Return Users where all of the related UserEventsConnections match this filter */
  EventsConnection_ALL?: InputMaybe<UserEventsConnectionWhere>;
  /** Return Users where none of the related UserEventsConnections match this filter */
  EventsConnection_NONE?: InputMaybe<UserEventsConnectionWhere>;
  /** Return Users where one of the related UserEventsConnections match this filter */
  EventsConnection_SINGLE?: InputMaybe<UserEventsConnectionWhere>;
  /** Return Users where some of the related UserEventsConnections match this filter */
  EventsConnection_SOME?: InputMaybe<UserEventsConnectionWhere>;
  /** Return Users where all of the related Events match this filter */
  Events_ALL?: InputMaybe<EventWhere>;
  /** Return Users where none of the related Events match this filter */
  Events_NONE?: InputMaybe<EventWhere>;
  /** Return Users where one of the related Events match this filter */
  Events_SINGLE?: InputMaybe<EventWhere>;
  /** Return Users where some of the related Events match this filter */
  Events_SOME?: InputMaybe<EventWhere>;
  FavoriteChannelsAggregate?: InputMaybe<UserFavoriteChannelsAggregateInput>;
  /** Return Users where all of the related UserFavoriteChannelsConnections match this filter */
  FavoriteChannelsConnection_ALL?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  /** Return Users where none of the related UserFavoriteChannelsConnections match this filter */
  FavoriteChannelsConnection_NONE?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  /** Return Users where one of the related UserFavoriteChannelsConnections match this filter */
  FavoriteChannelsConnection_SINGLE?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  /** Return Users where some of the related UserFavoriteChannelsConnections match this filter */
  FavoriteChannelsConnection_SOME?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  FavoriteChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  FavoriteChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  FavoriteChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  FavoriteChannels_SOME?: InputMaybe<ChannelWhere>;
  ImagesAggregate?: InputMaybe<UserImagesAggregateInput>;
  /** Return Users where all of the related UserImagesConnections match this filter */
  ImagesConnection_ALL?: InputMaybe<UserImagesConnectionWhere>;
  /** Return Users where none of the related UserImagesConnections match this filter */
  ImagesConnection_NONE?: InputMaybe<UserImagesConnectionWhere>;
  /** Return Users where one of the related UserImagesConnections match this filter */
  ImagesConnection_SINGLE?: InputMaybe<UserImagesConnectionWhere>;
  /** Return Users where some of the related UserImagesConnections match this filter */
  ImagesConnection_SOME?: InputMaybe<UserImagesConnectionWhere>;
  /** Return Users where all of the related Images match this filter */
  Images_ALL?: InputMaybe<ImageWhere>;
  /** Return Users where none of the related Images match this filter */
  Images_NONE?: InputMaybe<ImageWhere>;
  /** Return Users where one of the related Images match this filter */
  Images_SINGLE?: InputMaybe<ImageWhere>;
  /** Return Users where some of the related Images match this filter */
  Images_SOME?: InputMaybe<ImageWhere>;
  ModOfChannelsAggregate?: InputMaybe<UserModOfChannelsAggregateInput>;
  /** Return Users where all of the related UserModOfChannelsConnections match this filter */
  ModOfChannelsConnection_ALL?: InputMaybe<UserModOfChannelsConnectionWhere>;
  /** Return Users where none of the related UserModOfChannelsConnections match this filter */
  ModOfChannelsConnection_NONE?: InputMaybe<UserModOfChannelsConnectionWhere>;
  /** Return Users where one of the related UserModOfChannelsConnections match this filter */
  ModOfChannelsConnection_SINGLE?: InputMaybe<UserModOfChannelsConnectionWhere>;
  /** Return Users where some of the related UserModOfChannelsConnections match this filter */
  ModOfChannelsConnection_SOME?: InputMaybe<UserModOfChannelsConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  ModOfChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  ModOfChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  ModOfChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  ModOfChannels_SOME?: InputMaybe<ChannelWhere>;
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  ModerationProfileAggregate?: InputMaybe<UserModerationProfileAggregateInput>;
  ModerationProfileConnection?: InputMaybe<UserModerationProfileConnectionWhere>;
  ModerationProfileConnection_NOT?: InputMaybe<UserModerationProfileConnectionWhere>;
  ModerationProfile_NOT?: InputMaybe<ModerationProfileWhere>;
  NOT?: InputMaybe<UserWhere>;
  NotificationsAggregate?: InputMaybe<UserNotificationsAggregateInput>;
  /** Return Users where all of the related UserNotificationsConnections match this filter */
  NotificationsConnection_ALL?: InputMaybe<UserNotificationsConnectionWhere>;
  /** Return Users where none of the related UserNotificationsConnections match this filter */
  NotificationsConnection_NONE?: InputMaybe<UserNotificationsConnectionWhere>;
  /** Return Users where one of the related UserNotificationsConnections match this filter */
  NotificationsConnection_SINGLE?: InputMaybe<UserNotificationsConnectionWhere>;
  /** Return Users where some of the related UserNotificationsConnections match this filter */
  NotificationsConnection_SOME?: InputMaybe<UserNotificationsConnectionWhere>;
  /** Return Users where all of the related Notifications match this filter */
  Notifications_ALL?: InputMaybe<NotificationWhere>;
  /** Return Users where none of the related Notifications match this filter */
  Notifications_NONE?: InputMaybe<NotificationWhere>;
  /** Return Users where one of the related Notifications match this filter */
  Notifications_SINGLE?: InputMaybe<NotificationWhere>;
  /** Return Users where some of the related Notifications match this filter */
  Notifications_SOME?: InputMaybe<NotificationWhere>;
  OR?: InputMaybe<Array<UserWhere>>;
  PendingModInvitesAggregate?: InputMaybe<UserPendingModInvitesAggregateInput>;
  /** Return Users where all of the related UserPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_ALL?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  /** Return Users where none of the related UserPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_NONE?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  /** Return Users where one of the related UserPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_SINGLE?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  /** Return Users where some of the related UserPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_SOME?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  PendingModInvites_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  PendingModInvites_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  PendingModInvites_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  PendingModInvites_SOME?: InputMaybe<ChannelWhere>;
  PendingOwnerInvitesAggregate?: InputMaybe<UserPendingOwnerInvitesAggregateInput>;
  /** Return Users where all of the related UserPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_ALL?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  /** Return Users where none of the related UserPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_NONE?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  /** Return Users where one of the related UserPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_SINGLE?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  /** Return Users where some of the related UserPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_SOME?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  PendingOwnerInvites_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  PendingOwnerInvites_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  PendingOwnerInvites_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  PendingOwnerInvites_SOME?: InputMaybe<ChannelWhere>;
  RecentlyVisitedChannelsAggregate?: InputMaybe<UserRecentlyVisitedChannelsAggregateInput>;
  /** Return Users where all of the related UserRecentlyVisitedChannelsConnections match this filter */
  RecentlyVisitedChannelsConnection_ALL?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  /** Return Users where none of the related UserRecentlyVisitedChannelsConnections match this filter */
  RecentlyVisitedChannelsConnection_NONE?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  /** Return Users where one of the related UserRecentlyVisitedChannelsConnections match this filter */
  RecentlyVisitedChannelsConnection_SINGLE?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  /** Return Users where some of the related UserRecentlyVisitedChannelsConnections match this filter */
  RecentlyVisitedChannelsConnection_SOME?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  RecentlyVisitedChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  RecentlyVisitedChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  RecentlyVisitedChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  RecentlyVisitedChannels_SOME?: InputMaybe<ChannelWhere>;
  ServerRolesAggregate?: InputMaybe<UserServerRolesAggregateInput>;
  /** Return Users where all of the related UserServerRolesConnections match this filter */
  ServerRolesConnection_ALL?: InputMaybe<UserServerRolesConnectionWhere>;
  /** Return Users where none of the related UserServerRolesConnections match this filter */
  ServerRolesConnection_NONE?: InputMaybe<UserServerRolesConnectionWhere>;
  /** Return Users where one of the related UserServerRolesConnections match this filter */
  ServerRolesConnection_SINGLE?: InputMaybe<UserServerRolesConnectionWhere>;
  /** Return Users where some of the related UserServerRolesConnections match this filter */
  ServerRolesConnection_SOME?: InputMaybe<UserServerRolesConnectionWhere>;
  /** Return Users where all of the related ServerRoles match this filter */
  ServerRoles_ALL?: InputMaybe<ServerRoleWhere>;
  /** Return Users where none of the related ServerRoles match this filter */
  ServerRoles_NONE?: InputMaybe<ServerRoleWhere>;
  /** Return Users where one of the related ServerRoles match this filter */
  ServerRoles_SINGLE?: InputMaybe<ServerRoleWhere>;
  /** Return Users where some of the related ServerRoles match this filter */
  ServerRoles_SOME?: InputMaybe<ServerRoleWhere>;
  SuspensionsAggregate?: InputMaybe<UserSuspensionsAggregateInput>;
  /** Return Users where all of the related UserSuspensionsConnections match this filter */
  SuspensionsConnection_ALL?: InputMaybe<UserSuspensionsConnectionWhere>;
  /** Return Users where none of the related UserSuspensionsConnections match this filter */
  SuspensionsConnection_NONE?: InputMaybe<UserSuspensionsConnectionWhere>;
  /** Return Users where one of the related UserSuspensionsConnections match this filter */
  SuspensionsConnection_SINGLE?: InputMaybe<UserSuspensionsConnectionWhere>;
  /** Return Users where some of the related UserSuspensionsConnections match this filter */
  SuspensionsConnection_SOME?: InputMaybe<UserSuspensionsConnectionWhere>;
  /** Return Users where all of the related Suspensions match this filter */
  Suspensions_ALL?: InputMaybe<SuspensionWhere>;
  /** Return Users where none of the related Suspensions match this filter */
  Suspensions_NONE?: InputMaybe<SuspensionWhere>;
  /** Return Users where one of the related Suspensions match this filter */
  Suspensions_SINGLE?: InputMaybe<SuspensionWhere>;
  /** Return Users where some of the related Suspensions match this filter */
  Suspensions_SOME?: InputMaybe<SuspensionWhere>;
  UpvotedCommentsAggregate?: InputMaybe<UserUpvotedCommentsAggregateInput>;
  /** Return Users where all of the related UserUpvotedCommentsConnections match this filter */
  UpvotedCommentsConnection_ALL?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  /** Return Users where none of the related UserUpvotedCommentsConnections match this filter */
  UpvotedCommentsConnection_NONE?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  /** Return Users where one of the related UserUpvotedCommentsConnections match this filter */
  UpvotedCommentsConnection_SINGLE?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  /** Return Users where some of the related UserUpvotedCommentsConnections match this filter */
  UpvotedCommentsConnection_SOME?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  /** Return Users where all of the related Comments match this filter */
  UpvotedComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Users where none of the related Comments match this filter */
  UpvotedComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Users where one of the related Comments match this filter */
  UpvotedComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Users where some of the related Comments match this filter */
  UpvotedComments_SOME?: InputMaybe<CommentWhere>;
  UpvotedDiscussionChannelsAggregate?: InputMaybe<UserUpvotedDiscussionChannelsAggregateInput>;
  /** Return Users where all of the related UserUpvotedDiscussionChannelsConnections match this filter */
  UpvotedDiscussionChannelsConnection_ALL?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  /** Return Users where none of the related UserUpvotedDiscussionChannelsConnections match this filter */
  UpvotedDiscussionChannelsConnection_NONE?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  /** Return Users where one of the related UserUpvotedDiscussionChannelsConnections match this filter */
  UpvotedDiscussionChannelsConnection_SINGLE?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  /** Return Users where some of the related UserUpvotedDiscussionChannelsConnections match this filter */
  UpvotedDiscussionChannelsConnection_SOME?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  /** Return Users where all of the related DiscussionChannels match this filter */
  UpvotedDiscussionChannels_ALL?: InputMaybe<DiscussionChannelWhere>;
  /** Return Users where none of the related DiscussionChannels match this filter */
  UpvotedDiscussionChannels_NONE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Users where one of the related DiscussionChannels match this filter */
  UpvotedDiscussionChannels_SINGLE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Users where some of the related DiscussionChannels match this filter */
  UpvotedDiscussionChannels_SOME?: InputMaybe<DiscussionChannelWhere>;
  bio?: InputMaybe<Scalars['String']['input']>;
  bio_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  bio_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  bio_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  bio_MATCHES?: InputMaybe<Scalars['String']['input']>;
  bio_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  collectionsAggregate?: InputMaybe<UserCollectionsAggregateInput>;
  /** Return Users where all of the related UserCollectionsConnections match this filter */
  collectionsConnection_ALL?: InputMaybe<UserCollectionsConnectionWhere>;
  /** Return Users where none of the related UserCollectionsConnections match this filter */
  collectionsConnection_NONE?: InputMaybe<UserCollectionsConnectionWhere>;
  /** Return Users where one of the related UserCollectionsConnections match this filter */
  collectionsConnection_SINGLE?: InputMaybe<UserCollectionsConnectionWhere>;
  /** Return Users where some of the related UserCollectionsConnections match this filter */
  collectionsConnection_SOME?: InputMaybe<UserCollectionsConnectionWhere>;
  /** Return Users where all of the related Collections match this filter */
  collections_ALL?: InputMaybe<CollectionWhere>;
  /** Return Users where none of the related Collections match this filter */
  collections_NONE?: InputMaybe<CollectionWhere>;
  /** Return Users where one of the related Collections match this filter */
  collections_SINGLE?: InputMaybe<CollectionWhere>;
  /** Return Users where some of the related Collections match this filter */
  collections_SOME?: InputMaybe<CollectionWhere>;
  commentKarma?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  commentKarma_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone?: InputMaybe<Scalars['String']['input']>;
  defaultEmojiSkinTone_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  defaultEmojiSkinTone_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  defaultEmojiSkinTone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  defaultEmojiSkinTone_MATCHES?: InputMaybe<Scalars['String']['input']>;
  defaultEmojiSkinTone_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  defaultLicense?: InputMaybe<LicenseWhere>;
  defaultLicenseAggregate?: InputMaybe<UserDefaultLicenseAggregateInput>;
  defaultLicenseConnection?: InputMaybe<UserDefaultLicenseConnectionWhere>;
  defaultLicenseConnection_NOT?: InputMaybe<UserDefaultLicenseConnectionWhere>;
  defaultLicense_NOT?: InputMaybe<LicenseWhere>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discussionKarma?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  discussionKarma_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  enableSensitiveContentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  libraryAggregate?: InputMaybe<UserLibraryAggregateInput>;
  /** Return Users where all of the related UserLibraryConnections match this filter */
  libraryConnection_ALL?: InputMaybe<UserLibraryConnectionWhere>;
  /** Return Users where none of the related UserLibraryConnections match this filter */
  libraryConnection_NONE?: InputMaybe<UserLibraryConnectionWhere>;
  /** Return Users where one of the related UserLibraryConnections match this filter */
  libraryConnection_SINGLE?: InputMaybe<UserLibraryConnectionWhere>;
  /** Return Users where some of the related UserLibraryConnections match this filter */
  libraryConnection_SOME?: InputMaybe<UserLibraryConnectionWhere>;
  /** Return Users where all of the related DownloadableFiles match this filter */
  library_ALL?: InputMaybe<DownloadableFileWhere>;
  /** Return Users where none of the related DownloadableFiles match this filter */
  library_NONE?: InputMaybe<DownloadableFileWhere>;
  /** Return Users where one of the related DownloadableFiles match this filter */
  library_SINGLE?: InputMaybe<DownloadableFileWhere>;
  /** Return Users where some of the related DownloadableFiles match this filter */
  library_SOME?: InputMaybe<DownloadableFileWhere>;
  location?: InputMaybe<Scalars['String']['input']>;
  location_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  location_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  location_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  location_MATCHES?: InputMaybe<Scalars['String']['input']>;
  location_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  notificationBundleContent_MATCHES?: InputMaybe<Scalars['String']['input']>;
  notificationBundleContent_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  notificationBundleEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  notificationBundleInterval?: InputMaybe<Scalars['String']['input']>;
  notificationBundleInterval_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  notificationBundleInterval_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  notificationBundleInterval_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  notificationBundleInterval_MATCHES?: InputMaybe<Scalars['String']['input']>;
  notificationBundleInterval_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  notifyOnFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToCommentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToDiscussionByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyOnReplyToEventByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  notifyWhenTagged?: InputMaybe<Scalars['Boolean']['input']>;
  preferredTimeZone?: InputMaybe<Scalars['String']['input']>;
  preferredTimeZone_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  preferredTimeZone_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  preferredTimeZone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  preferredTimeZone_MATCHES?: InputMaybe<Scalars['String']['input']>;
  preferredTimeZone_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  profilePicURL?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  profilePicURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  pronouns?: InputMaybe<Scalars['String']['input']>;
  pronouns_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  pronouns_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  pronouns_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  pronouns_MATCHES?: InputMaybe<Scalars['String']['input']>;
  pronouns_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  purchasesAggregate?: InputMaybe<UserPurchasesAggregateInput>;
  /** Return Users where all of the related UserPurchasesConnections match this filter */
  purchasesConnection_ALL?: InputMaybe<UserPurchasesConnectionWhere>;
  /** Return Users where none of the related UserPurchasesConnections match this filter */
  purchasesConnection_NONE?: InputMaybe<UserPurchasesConnectionWhere>;
  /** Return Users where one of the related UserPurchasesConnections match this filter */
  purchasesConnection_SINGLE?: InputMaybe<UserPurchasesConnectionWhere>;
  /** Return Users where some of the related UserPurchasesConnections match this filter */
  purchasesConnection_SOME?: InputMaybe<UserPurchasesConnectionWhere>;
  /** Return Users where all of the related Purchases match this filter */
  purchases_ALL?: InputMaybe<PurchaseWhere>;
  /** Return Users where none of the related Purchases match this filter */
  purchases_NONE?: InputMaybe<PurchaseWhere>;
  /** Return Users where one of the related Purchases match this filter */
  purchases_SINGLE?: InputMaybe<PurchaseWhere>;
  /** Return Users where some of the related Purchases match this filter */
  purchases_SOME?: InputMaybe<PurchaseWhere>;
  stripeAccountId?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  stripeAccountId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  stripeAccountId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
  username_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  username_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  username_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  username_MATCHES?: InputMaybe<Scalars['String']['input']>;
  username_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type UserWikiPageAuthoredWikiPagesAggregationSelection = {
  __typename?: 'UserWikiPageAuthoredWikiPagesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserWikiPageAuthoredWikiPagesNodeAggregateSelection>;
};

export type UserWikiPageAuthoredWikiPagesNodeAggregateSelection = {
  __typename?: 'UserWikiPageAuthoredWikiPagesNodeAggregateSelection';
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  slug: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type UsersConnection = {
  __typename?: 'UsersConnection';
  edges: Array<UserEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WikiPage = {
  __typename?: 'WikiPage';
  ChildPages: Array<WikiPage>;
  ChildPagesAggregate?: Maybe<WikiPageWikiPageChildPagesAggregationSelection>;
  ChildPagesConnection: WikiPageChildPagesConnection;
  PastVersions: Array<TextVersion>;
  PastVersionsAggregate?: Maybe<WikiPageTextVersionPastVersionsAggregationSelection>;
  PastVersionsConnection: WikiPagePastVersionsConnection;
  ProposedEdits: Array<TextVersion>;
  ProposedEditsAggregate?: Maybe<WikiPageTextVersionProposedEditsAggregationSelection>;
  ProposedEditsConnection: WikiPageProposedEditsConnection;
  VersionAuthor?: Maybe<User>;
  VersionAuthorAggregate?: Maybe<WikiPageUserVersionAuthorAggregationSelection>;
  VersionAuthorConnection: WikiPageVersionAuthorConnection;
  body?: Maybe<Scalars['String']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  slug: Scalars['String']['output'];
  title: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type WikiPageChildPagesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<WikiPageOptions>;
  where?: InputMaybe<WikiPageWhere>;
};


export type WikiPageChildPagesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<WikiPageWhere>;
};


export type WikiPageChildPagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<WikiPageChildPagesConnectionSort>>;
  where?: InputMaybe<WikiPageChildPagesConnectionWhere>;
};


export type WikiPagePastVersionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type WikiPagePastVersionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TextVersionWhere>;
};


export type WikiPagePastVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<WikiPagePastVersionsConnectionSort>>;
  where?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
};


export type WikiPageProposedEditsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type WikiPageProposedEditsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TextVersionWhere>;
};


export type WikiPageProposedEditsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<WikiPageProposedEditsConnectionSort>>;
  where?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
};


export type WikiPageVersionAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type WikiPageVersionAuthorAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type WikiPageVersionAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<WikiPageVersionAuthorConnectionSort>>;
  where?: InputMaybe<WikiPageVersionAuthorConnectionWhere>;
};

export type WikiPageAggregateSelection = {
  __typename?: 'WikiPageAggregateSelection';
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  slug: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type WikiPageChildPagesAggregateInput = {
  AND?: InputMaybe<Array<WikiPageChildPagesAggregateInput>>;
  NOT?: InputMaybe<WikiPageChildPagesAggregateInput>;
  OR?: InputMaybe<Array<WikiPageChildPagesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<WikiPageChildPagesNodeAggregationWhereInput>;
};

export type WikiPageChildPagesConnectFieldInput = {
  connect?: InputMaybe<Array<WikiPageConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<WikiPageConnectWhere>;
};

export type WikiPageChildPagesConnectedRelationship = {
  __typename?: 'WikiPageChildPagesConnectedRelationship';
  node: WikiPageEventPayload;
};

export type WikiPageChildPagesConnection = {
  __typename?: 'WikiPageChildPagesConnection';
  edges: Array<WikiPageChildPagesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WikiPageChildPagesConnectionSort = {
  node?: InputMaybe<WikiPageSort>;
};

export type WikiPageChildPagesConnectionWhere = {
  AND?: InputMaybe<Array<WikiPageChildPagesConnectionWhere>>;
  NOT?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  OR?: InputMaybe<Array<WikiPageChildPagesConnectionWhere>>;
  node?: InputMaybe<WikiPageWhere>;
};

export type WikiPageChildPagesCreateFieldInput = {
  node: WikiPageCreateInput;
};

export type WikiPageChildPagesDeleteFieldInput = {
  delete?: InputMaybe<WikiPageDeleteInput>;
  where?: InputMaybe<WikiPageChildPagesConnectionWhere>;
};

export type WikiPageChildPagesDisconnectFieldInput = {
  disconnect?: InputMaybe<WikiPageDisconnectInput>;
  where?: InputMaybe<WikiPageChildPagesConnectionWhere>;
};

export type WikiPageChildPagesFieldInput = {
  connect?: InputMaybe<Array<WikiPageChildPagesConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPageChildPagesCreateFieldInput>>;
};

export type WikiPageChildPagesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<WikiPageChildPagesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<WikiPageChildPagesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<WikiPageChildPagesNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  slug_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  slug_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPageChildPagesRelationship = {
  __typename?: 'WikiPageChildPagesRelationship';
  cursor: Scalars['String']['output'];
  node: WikiPage;
};

export type WikiPageChildPagesRelationshipSubscriptionWhere = {
  node?: InputMaybe<WikiPageSubscriptionWhere>;
};

export type WikiPageChildPagesUpdateConnectionInput = {
  node?: InputMaybe<WikiPageUpdateInput>;
};

export type WikiPageChildPagesUpdateFieldInput = {
  connect?: InputMaybe<Array<WikiPageChildPagesConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPageChildPagesCreateFieldInput>>;
  delete?: InputMaybe<Array<WikiPageChildPagesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<WikiPageChildPagesDisconnectFieldInput>>;
  update?: InputMaybe<WikiPageChildPagesUpdateConnectionInput>;
  where?: InputMaybe<WikiPageChildPagesConnectionWhere>;
};

export type WikiPageConnectInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesConnectFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsConnectFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsConnectFieldInput>>;
  VersionAuthor?: InputMaybe<WikiPageVersionAuthorConnectFieldInput>;
};

export type WikiPageConnectOrCreateInput = {
  VersionAuthor?: InputMaybe<WikiPageVersionAuthorConnectOrCreateFieldInput>;
};

export type WikiPageConnectWhere = {
  node: WikiPageWhere;
};

export type WikiPageConnectedRelationships = {
  __typename?: 'WikiPageConnectedRelationships';
  ChildPages?: Maybe<WikiPageChildPagesConnectedRelationship>;
  PastVersions?: Maybe<WikiPagePastVersionsConnectedRelationship>;
  ProposedEdits?: Maybe<WikiPageProposedEditsConnectedRelationship>;
  VersionAuthor?: Maybe<WikiPageVersionAuthorConnectedRelationship>;
};

export type WikiPageCreateInput = {
  ChildPages?: InputMaybe<WikiPageChildPagesFieldInput>;
  PastVersions?: InputMaybe<WikiPagePastVersionsFieldInput>;
  ProposedEdits?: InputMaybe<WikiPageProposedEditsFieldInput>;
  VersionAuthor?: InputMaybe<WikiPageVersionAuthorFieldInput>;
  body?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  slug: Scalars['String']['input'];
  title: Scalars['String']['input'];
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPageCreatedEvent = {
  __typename?: 'WikiPageCreatedEvent';
  createdWikiPage: WikiPageEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type WikiPageDeleteInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesDeleteFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsDeleteFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsDeleteFieldInput>>;
  VersionAuthor?: InputMaybe<WikiPageVersionAuthorDeleteFieldInput>;
};

export type WikiPageDeletedEvent = {
  __typename?: 'WikiPageDeletedEvent';
  deletedWikiPage: WikiPageEventPayload;
  event: EventType;
  timestamp: Scalars['Float']['output'];
};

export type WikiPageDisconnectInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesDisconnectFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsDisconnectFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsDisconnectFieldInput>>;
  VersionAuthor?: InputMaybe<WikiPageVersionAuthorDisconnectFieldInput>;
};

export type WikiPageEdge = {
  __typename?: 'WikiPageEdge';
  cursor: Scalars['String']['output'];
  node: WikiPage;
};

export type WikiPageEventPayload = {
  __typename?: 'WikiPageEventPayload';
  body?: Maybe<Scalars['String']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  slug: Scalars['String']['output'];
  title: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type WikiPageOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more WikiPageSort objects to sort WikiPages by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<WikiPageSort>>;
};

export type WikiPagePastVersionsAggregateInput = {
  AND?: InputMaybe<Array<WikiPagePastVersionsAggregateInput>>;
  NOT?: InputMaybe<WikiPagePastVersionsAggregateInput>;
  OR?: InputMaybe<Array<WikiPagePastVersionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<WikiPagePastVersionsNodeAggregationWhereInput>;
};

export type WikiPagePastVersionsConnectFieldInput = {
  connect?: InputMaybe<Array<TextVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TextVersionConnectWhere>;
};

export type WikiPagePastVersionsConnectedRelationship = {
  __typename?: 'WikiPagePastVersionsConnectedRelationship';
  node: TextVersionEventPayload;
};

export type WikiPagePastVersionsConnection = {
  __typename?: 'WikiPagePastVersionsConnection';
  edges: Array<WikiPagePastVersionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WikiPagePastVersionsConnectionSort = {
  node?: InputMaybe<TextVersionSort>;
};

export type WikiPagePastVersionsConnectionWhere = {
  AND?: InputMaybe<Array<WikiPagePastVersionsConnectionWhere>>;
  NOT?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  OR?: InputMaybe<Array<WikiPagePastVersionsConnectionWhere>>;
  node?: InputMaybe<TextVersionWhere>;
};

export type WikiPagePastVersionsCreateFieldInput = {
  node: TextVersionCreateInput;
};

export type WikiPagePastVersionsDeleteFieldInput = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
};

export type WikiPagePastVersionsDisconnectFieldInput = {
  disconnect?: InputMaybe<TextVersionDisconnectInput>;
  where?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
};

export type WikiPagePastVersionsFieldInput = {
  connect?: InputMaybe<Array<WikiPagePastVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPagePastVersionsCreateFieldInput>>;
};

export type WikiPagePastVersionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<WikiPagePastVersionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<WikiPagePastVersionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<WikiPagePastVersionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPagePastVersionsRelationship = {
  __typename?: 'WikiPagePastVersionsRelationship';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type WikiPagePastVersionsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TextVersionSubscriptionWhere>;
};

export type WikiPagePastVersionsUpdateConnectionInput = {
  node?: InputMaybe<TextVersionUpdateInput>;
};

export type WikiPagePastVersionsUpdateFieldInput = {
  connect?: InputMaybe<Array<WikiPagePastVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPagePastVersionsCreateFieldInput>>;
  delete?: InputMaybe<Array<WikiPagePastVersionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<WikiPagePastVersionsDisconnectFieldInput>>;
  update?: InputMaybe<WikiPagePastVersionsUpdateConnectionInput>;
  where?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
};

export type WikiPageProposedEditsAggregateInput = {
  AND?: InputMaybe<Array<WikiPageProposedEditsAggregateInput>>;
  NOT?: InputMaybe<WikiPageProposedEditsAggregateInput>;
  OR?: InputMaybe<Array<WikiPageProposedEditsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<WikiPageProposedEditsNodeAggregationWhereInput>;
};

export type WikiPageProposedEditsConnectFieldInput = {
  connect?: InputMaybe<Array<TextVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TextVersionConnectWhere>;
};

export type WikiPageProposedEditsConnectedRelationship = {
  __typename?: 'WikiPageProposedEditsConnectedRelationship';
  node: TextVersionEventPayload;
};

export type WikiPageProposedEditsConnection = {
  __typename?: 'WikiPageProposedEditsConnection';
  edges: Array<WikiPageProposedEditsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WikiPageProposedEditsConnectionSort = {
  node?: InputMaybe<TextVersionSort>;
};

export type WikiPageProposedEditsConnectionWhere = {
  AND?: InputMaybe<Array<WikiPageProposedEditsConnectionWhere>>;
  NOT?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  OR?: InputMaybe<Array<WikiPageProposedEditsConnectionWhere>>;
  node?: InputMaybe<TextVersionWhere>;
};

export type WikiPageProposedEditsCreateFieldInput = {
  node: TextVersionCreateInput;
};

export type WikiPageProposedEditsDeleteFieldInput = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
};

export type WikiPageProposedEditsDisconnectFieldInput = {
  disconnect?: InputMaybe<TextVersionDisconnectInput>;
  where?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
};

export type WikiPageProposedEditsFieldInput = {
  connect?: InputMaybe<Array<WikiPageProposedEditsConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPageProposedEditsCreateFieldInput>>;
};

export type WikiPageProposedEditsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<WikiPageProposedEditsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<WikiPageProposedEditsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<WikiPageProposedEditsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPageProposedEditsRelationship = {
  __typename?: 'WikiPageProposedEditsRelationship';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type WikiPageProposedEditsRelationshipSubscriptionWhere = {
  node?: InputMaybe<TextVersionSubscriptionWhere>;
};

export type WikiPageProposedEditsUpdateConnectionInput = {
  node?: InputMaybe<TextVersionUpdateInput>;
};

export type WikiPageProposedEditsUpdateFieldInput = {
  connect?: InputMaybe<Array<WikiPageProposedEditsConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPageProposedEditsCreateFieldInput>>;
  delete?: InputMaybe<Array<WikiPageProposedEditsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<WikiPageProposedEditsDisconnectFieldInput>>;
  update?: InputMaybe<WikiPageProposedEditsUpdateConnectionInput>;
  where?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
};

export type WikiPageRelationInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesCreateFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsCreateFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsCreateFieldInput>>;
  VersionAuthor?: InputMaybe<WikiPageVersionAuthorCreateFieldInput>;
};

export type WikiPageRelationshipCreatedEvent = {
  __typename?: 'WikiPageRelationshipCreatedEvent';
  createdRelationship: WikiPageConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
  wikiPage: WikiPageEventPayload;
};

export type WikiPageRelationshipCreatedSubscriptionWhere = {
  AND?: InputMaybe<Array<WikiPageRelationshipCreatedSubscriptionWhere>>;
  NOT?: InputMaybe<WikiPageRelationshipCreatedSubscriptionWhere>;
  OR?: InputMaybe<Array<WikiPageRelationshipCreatedSubscriptionWhere>>;
  createdRelationship?: InputMaybe<WikiPageRelationshipsSubscriptionWhere>;
  wikiPage?: InputMaybe<WikiPageSubscriptionWhere>;
};

export type WikiPageRelationshipDeletedEvent = {
  __typename?: 'WikiPageRelationshipDeletedEvent';
  deletedRelationship: WikiPageConnectedRelationships;
  event: EventType;
  relationshipFieldName: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
  wikiPage: WikiPageEventPayload;
};

export type WikiPageRelationshipDeletedSubscriptionWhere = {
  AND?: InputMaybe<Array<WikiPageRelationshipDeletedSubscriptionWhere>>;
  NOT?: InputMaybe<WikiPageRelationshipDeletedSubscriptionWhere>;
  OR?: InputMaybe<Array<WikiPageRelationshipDeletedSubscriptionWhere>>;
  deletedRelationship?: InputMaybe<WikiPageRelationshipsSubscriptionWhere>;
  wikiPage?: InputMaybe<WikiPageSubscriptionWhere>;
};

export type WikiPageRelationshipsSubscriptionWhere = {
  ChildPages?: InputMaybe<WikiPageChildPagesRelationshipSubscriptionWhere>;
  PastVersions?: InputMaybe<WikiPagePastVersionsRelationshipSubscriptionWhere>;
  ProposedEdits?: InputMaybe<WikiPageProposedEditsRelationshipSubscriptionWhere>;
  VersionAuthor?: InputMaybe<WikiPageVersionAuthorRelationshipSubscriptionWhere>;
};

/** Fields to sort WikiPages by. The order in which sorts are applied is not guaranteed when specifying many fields in one WikiPageSort object. */
export type WikiPageSort = {
  body?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  slug?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type WikiPageSubscriptionWhere = {
  AND?: InputMaybe<Array<WikiPageSubscriptionWhere>>;
  NOT?: InputMaybe<WikiPageSubscriptionWhere>;
  OR?: InputMaybe<Array<WikiPageSubscriptionWhere>>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  slug_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  slug_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  slug_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  slug_MATCHES?: InputMaybe<Scalars['String']['input']>;
  slug_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPageTextVersionPastVersionsAggregationSelection = {
  __typename?: 'WikiPageTextVersionPastVersionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<WikiPageTextVersionPastVersionsNodeAggregateSelection>;
};

export type WikiPageTextVersionPastVersionsNodeAggregateSelection = {
  __typename?: 'WikiPageTextVersionPastVersionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type WikiPageTextVersionProposedEditsAggregationSelection = {
  __typename?: 'WikiPageTextVersionProposedEditsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<WikiPageTextVersionProposedEditsNodeAggregateSelection>;
};

export type WikiPageTextVersionProposedEditsNodeAggregateSelection = {
  __typename?: 'WikiPageTextVersionProposedEditsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type WikiPageUpdateInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesUpdateFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsUpdateFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsUpdateFieldInput>>;
  VersionAuthor?: InputMaybe<WikiPageVersionAuthorUpdateFieldInput>;
  body?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type WikiPageUpdatedEvent = {
  __typename?: 'WikiPageUpdatedEvent';
  event: EventType;
  previousState: WikiPageEventPayload;
  timestamp: Scalars['Float']['output'];
  updatedWikiPage: WikiPageEventPayload;
};

export type WikiPageUserVersionAuthorAggregationSelection = {
  __typename?: 'WikiPageUserVersionAuthorAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<WikiPageUserVersionAuthorNodeAggregateSelection>;
};

export type WikiPageUserVersionAuthorNodeAggregateSelection = {
  __typename?: 'WikiPageUserVersionAuthorNodeAggregateSelection';
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  defaultEmojiSkinTone: StringAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  notificationBundleContent: StringAggregateSelection;
  notificationBundleInterval: StringAggregateSelection;
  preferredTimeZone: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  stripeAccountId: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type WikiPageVersionAuthorAggregateInput = {
  AND?: InputMaybe<Array<WikiPageVersionAuthorAggregateInput>>;
  NOT?: InputMaybe<WikiPageVersionAuthorAggregateInput>;
  OR?: InputMaybe<Array<WikiPageVersionAuthorAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<WikiPageVersionAuthorNodeAggregationWhereInput>;
};

export type WikiPageVersionAuthorConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type WikiPageVersionAuthorConnectOrCreateFieldInput = {
  onCreate: WikiPageVersionAuthorConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type WikiPageVersionAuthorConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type WikiPageVersionAuthorConnectedRelationship = {
  __typename?: 'WikiPageVersionAuthorConnectedRelationship';
  node: UserEventPayload;
};

export type WikiPageVersionAuthorConnection = {
  __typename?: 'WikiPageVersionAuthorConnection';
  edges: Array<WikiPageVersionAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WikiPageVersionAuthorConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type WikiPageVersionAuthorConnectionWhere = {
  AND?: InputMaybe<Array<WikiPageVersionAuthorConnectionWhere>>;
  NOT?: InputMaybe<WikiPageVersionAuthorConnectionWhere>;
  OR?: InputMaybe<Array<WikiPageVersionAuthorConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type WikiPageVersionAuthorCreateFieldInput = {
  node: UserCreateInput;
};

export type WikiPageVersionAuthorDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<WikiPageVersionAuthorConnectionWhere>;
};

export type WikiPageVersionAuthorDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<WikiPageVersionAuthorConnectionWhere>;
};

export type WikiPageVersionAuthorFieldInput = {
  connect?: InputMaybe<WikiPageVersionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<WikiPageVersionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<WikiPageVersionAuthorCreateFieldInput>;
};

export type WikiPageVersionAuthorNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<WikiPageVersionAuthorNodeAggregationWhereInput>>;
  NOT?: InputMaybe<WikiPageVersionAuthorNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<WikiPageVersionAuthorNodeAggregationWhereInput>>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  defaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleContent_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleContent_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  notificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  preferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  preferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  stripeAccountId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  stripeAccountId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type WikiPageVersionAuthorRelationship = {
  __typename?: 'WikiPageVersionAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type WikiPageVersionAuthorRelationshipSubscriptionWhere = {
  node?: InputMaybe<UserSubscriptionWhere>;
};

export type WikiPageVersionAuthorUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type WikiPageVersionAuthorUpdateFieldInput = {
  connect?: InputMaybe<WikiPageVersionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<WikiPageVersionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<WikiPageVersionAuthorCreateFieldInput>;
  delete?: InputMaybe<WikiPageVersionAuthorDeleteFieldInput>;
  disconnect?: InputMaybe<WikiPageVersionAuthorDisconnectFieldInput>;
  update?: InputMaybe<WikiPageVersionAuthorUpdateConnectionInput>;
  where?: InputMaybe<WikiPageVersionAuthorConnectionWhere>;
};

export type WikiPageWhere = {
  AND?: InputMaybe<Array<WikiPageWhere>>;
  ChildPagesAggregate?: InputMaybe<WikiPageChildPagesAggregateInput>;
  /** Return WikiPages where all of the related WikiPageChildPagesConnections match this filter */
  ChildPagesConnection_ALL?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  /** Return WikiPages where none of the related WikiPageChildPagesConnections match this filter */
  ChildPagesConnection_NONE?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  /** Return WikiPages where one of the related WikiPageChildPagesConnections match this filter */
  ChildPagesConnection_SINGLE?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  /** Return WikiPages where some of the related WikiPageChildPagesConnections match this filter */
  ChildPagesConnection_SOME?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  /** Return WikiPages where all of the related WikiPages match this filter */
  ChildPages_ALL?: InputMaybe<WikiPageWhere>;
  /** Return WikiPages where none of the related WikiPages match this filter */
  ChildPages_NONE?: InputMaybe<WikiPageWhere>;
  /** Return WikiPages where one of the related WikiPages match this filter */
  ChildPages_SINGLE?: InputMaybe<WikiPageWhere>;
  /** Return WikiPages where some of the related WikiPages match this filter */
  ChildPages_SOME?: InputMaybe<WikiPageWhere>;
  NOT?: InputMaybe<WikiPageWhere>;
  OR?: InputMaybe<Array<WikiPageWhere>>;
  PastVersionsAggregate?: InputMaybe<WikiPagePastVersionsAggregateInput>;
  /** Return WikiPages where all of the related WikiPagePastVersionsConnections match this filter */
  PastVersionsConnection_ALL?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  /** Return WikiPages where none of the related WikiPagePastVersionsConnections match this filter */
  PastVersionsConnection_NONE?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  /** Return WikiPages where one of the related WikiPagePastVersionsConnections match this filter */
  PastVersionsConnection_SINGLE?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  /** Return WikiPages where some of the related WikiPagePastVersionsConnections match this filter */
  PastVersionsConnection_SOME?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  /** Return WikiPages where all of the related TextVersions match this filter */
  PastVersions_ALL?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where none of the related TextVersions match this filter */
  PastVersions_NONE?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where one of the related TextVersions match this filter */
  PastVersions_SINGLE?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where some of the related TextVersions match this filter */
  PastVersions_SOME?: InputMaybe<TextVersionWhere>;
  ProposedEditsAggregate?: InputMaybe<WikiPageProposedEditsAggregateInput>;
  /** Return WikiPages where all of the related WikiPageProposedEditsConnections match this filter */
  ProposedEditsConnection_ALL?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  /** Return WikiPages where none of the related WikiPageProposedEditsConnections match this filter */
  ProposedEditsConnection_NONE?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  /** Return WikiPages where one of the related WikiPageProposedEditsConnections match this filter */
  ProposedEditsConnection_SINGLE?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  /** Return WikiPages where some of the related WikiPageProposedEditsConnections match this filter */
  ProposedEditsConnection_SOME?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  /** Return WikiPages where all of the related TextVersions match this filter */
  ProposedEdits_ALL?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where none of the related TextVersions match this filter */
  ProposedEdits_NONE?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where one of the related TextVersions match this filter */
  ProposedEdits_SINGLE?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where some of the related TextVersions match this filter */
  ProposedEdits_SOME?: InputMaybe<TextVersionWhere>;
  VersionAuthor?: InputMaybe<UserWhere>;
  VersionAuthorAggregate?: InputMaybe<WikiPageVersionAuthorAggregateInput>;
  VersionAuthorConnection?: InputMaybe<WikiPageVersionAuthorConnectionWhere>;
  VersionAuthorConnection_NOT?: InputMaybe<WikiPageVersionAuthorConnectionWhere>;
  VersionAuthor_NOT?: InputMaybe<UserWhere>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  slug_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  slug_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  slug_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  slug_MATCHES?: InputMaybe<Scalars['String']['input']>;
  slug_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPageWikiPageChildPagesAggregationSelection = {
  __typename?: 'WikiPageWikiPageChildPagesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<WikiPageWikiPageChildPagesNodeAggregateSelection>;
};

export type WikiPageWikiPageChildPagesNodeAggregateSelection = {
  __typename?: 'WikiPageWikiPageChildPagesNodeAggregateSelection';
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  slug: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type WikiPagesConnection = {
  __typename?: 'WikiPagesConnection';
  edges: Array<WikiPageEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};
