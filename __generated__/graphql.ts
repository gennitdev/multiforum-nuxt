/* eslint-disable */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** A date and time, represented as an ISO-8601 string */
  DateTime: { input: any; output: any; }
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: { input: any; output: any; }
};

export type Album = {
  __typename?: 'Album';
  Discussions: Array<Discussion>;
  DiscussionsAggregate?: Maybe<AlbumDiscussionDiscussionsAggregationSelection>;
  DiscussionsConnection: AlbumDiscussionsConnection;
  Images: Array<Image>;
  ImagesAggregate?: Maybe<AlbumImageImagesAggregationSelection>;
  ImagesConnection: AlbumImagesConnection;
  Owner?: Maybe<User>;
  OwnerAggregate?: Maybe<AlbumUserOwnerAggregationSelection>;
  OwnerConnection: AlbumOwnerConnection;
  id: Scalars['ID']['output'];
};


export type AlbumDiscussionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type AlbumDiscussionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type AlbumDiscussionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<AlbumDiscussionsConnectionSort>>;
  where?: InputMaybe<AlbumDiscussionsConnectionWhere>;
};


export type AlbumImagesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ImageOptions>;
  where?: InputMaybe<ImageWhere>;
};


export type AlbumImagesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ImageWhere>;
};


export type AlbumImagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<AlbumImagesConnectionSort>>;
  where?: InputMaybe<AlbumImagesConnectionWhere>;
};


export type AlbumOwnerArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type AlbumOwnerAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type AlbumOwnerConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<AlbumOwnerConnectionSort>>;
  where?: InputMaybe<AlbumOwnerConnectionWhere>;
};

export type AlbumAggregateSelection = {
  __typename?: 'AlbumAggregateSelection';
  count: Scalars['Int']['output'];
  id: IdAggregateSelection;
};

export type AlbumConnectInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsConnectFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesConnectFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerConnectFieldInput>;
};

export type AlbumConnectOrCreateInput = {
  Owner?: InputMaybe<AlbumOwnerConnectOrCreateFieldInput>;
};

export type AlbumConnectWhere = {
  node: AlbumWhere;
};

export type AlbumCreateInput = {
  Discussions?: InputMaybe<AlbumDiscussionsFieldInput>;
  Images?: InputMaybe<AlbumImagesFieldInput>;
  Owner?: InputMaybe<AlbumOwnerFieldInput>;
};

export type AlbumDeleteInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsDeleteFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesDeleteFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerDeleteFieldInput>;
};

export type AlbumDisconnectInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsDisconnectFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesDisconnectFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerDisconnectFieldInput>;
};

export type AlbumDiscussionDiscussionsAggregationSelection = {
  __typename?: 'AlbumDiscussionDiscussionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<AlbumDiscussionDiscussionsNodeAggregateSelection>;
};

export type AlbumDiscussionDiscussionsNodeAggregateSelection = {
  __typename?: 'AlbumDiscussionDiscussionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type AlbumDiscussionsAggregateInput = {
  AND?: InputMaybe<Array<AlbumDiscussionsAggregateInput>>;
  NOT?: InputMaybe<AlbumDiscussionsAggregateInput>;
  OR?: InputMaybe<Array<AlbumDiscussionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<AlbumDiscussionsNodeAggregationWhereInput>;
};

export type AlbumDiscussionsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type AlbumDiscussionsConnection = {
  __typename?: 'AlbumDiscussionsConnection';
  edges: Array<AlbumDiscussionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type AlbumDiscussionsConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type AlbumDiscussionsConnectionWhere = {
  AND?: InputMaybe<Array<AlbumDiscussionsConnectionWhere>>;
  NOT?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  OR?: InputMaybe<Array<AlbumDiscussionsConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type AlbumDiscussionsCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type AlbumDiscussionsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<AlbumDiscussionsConnectionWhere>;
};

export type AlbumDiscussionsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<AlbumDiscussionsConnectionWhere>;
};

export type AlbumDiscussionsFieldInput = {
  connect?: InputMaybe<Array<AlbumDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<AlbumDiscussionsCreateFieldInput>>;
};

export type AlbumDiscussionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<AlbumDiscussionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<AlbumDiscussionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<AlbumDiscussionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AlbumDiscussionsRelationship = {
  __typename?: 'AlbumDiscussionsRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type AlbumDiscussionsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type AlbumDiscussionsUpdateFieldInput = {
  connect?: InputMaybe<Array<AlbumDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<AlbumDiscussionsCreateFieldInput>>;
  delete?: InputMaybe<Array<AlbumDiscussionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<AlbumDiscussionsDisconnectFieldInput>>;
  update?: InputMaybe<AlbumDiscussionsUpdateConnectionInput>;
  where?: InputMaybe<AlbumDiscussionsConnectionWhere>;
};

export type AlbumEdge = {
  __typename?: 'AlbumEdge';
  cursor: Scalars['String']['output'];
  node: Album;
};

export type AlbumImageImagesAggregationSelection = {
  __typename?: 'AlbumImageImagesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<AlbumImageImagesNodeAggregateSelection>;
};

export type AlbumImageImagesNodeAggregateSelection = {
  __typename?: 'AlbumImageImagesNodeAggregateSelection';
  alt: StringAggregateSelection;
  caption: StringAggregateSelection;
  copyright: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  url: StringAggregateSelection;
};

export type AlbumImagesAggregateInput = {
  AND?: InputMaybe<Array<AlbumImagesAggregateInput>>;
  NOT?: InputMaybe<AlbumImagesAggregateInput>;
  OR?: InputMaybe<Array<AlbumImagesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<AlbumImagesNodeAggregationWhereInput>;
};

export type AlbumImagesConnectFieldInput = {
  connect?: InputMaybe<Array<ImageConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ImageConnectWhere>;
};

export type AlbumImagesConnection = {
  __typename?: 'AlbumImagesConnection';
  edges: Array<AlbumImagesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type AlbumImagesConnectionSort = {
  node?: InputMaybe<ImageSort>;
};

export type AlbumImagesConnectionWhere = {
  AND?: InputMaybe<Array<AlbumImagesConnectionWhere>>;
  NOT?: InputMaybe<AlbumImagesConnectionWhere>;
  OR?: InputMaybe<Array<AlbumImagesConnectionWhere>>;
  node?: InputMaybe<ImageWhere>;
};

export type AlbumImagesCreateFieldInput = {
  node: ImageCreateInput;
};

export type AlbumImagesDeleteFieldInput = {
  delete?: InputMaybe<ImageDeleteInput>;
  where?: InputMaybe<AlbumImagesConnectionWhere>;
};

export type AlbumImagesDisconnectFieldInput = {
  disconnect?: InputMaybe<ImageDisconnectInput>;
  where?: InputMaybe<AlbumImagesConnectionWhere>;
};

export type AlbumImagesFieldInput = {
  connect?: InputMaybe<Array<AlbumImagesConnectFieldInput>>;
  create?: InputMaybe<Array<AlbumImagesCreateFieldInput>>;
};

export type AlbumImagesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<AlbumImagesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<AlbumImagesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<AlbumImagesNodeAggregationWhereInput>>;
  alt_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  alt_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  alt_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  alt_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  alt_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  caption_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  caption_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  caption_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  caption_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  caption_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  copyright_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  copyright_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  copyright_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  copyright_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type AlbumImagesRelationship = {
  __typename?: 'AlbumImagesRelationship';
  cursor: Scalars['String']['output'];
  node: Image;
};

export type AlbumImagesUpdateConnectionInput = {
  node?: InputMaybe<ImageUpdateInput>;
};

export type AlbumImagesUpdateFieldInput = {
  connect?: InputMaybe<Array<AlbumImagesConnectFieldInput>>;
  create?: InputMaybe<Array<AlbumImagesCreateFieldInput>>;
  delete?: InputMaybe<Array<AlbumImagesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<AlbumImagesDisconnectFieldInput>>;
  update?: InputMaybe<AlbumImagesUpdateConnectionInput>;
  where?: InputMaybe<AlbumImagesConnectionWhere>;
};

export type AlbumOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more AlbumSort objects to sort Albums by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<AlbumSort>>;
};

export type AlbumOwnerAggregateInput = {
  AND?: InputMaybe<Array<AlbumOwnerAggregateInput>>;
  NOT?: InputMaybe<AlbumOwnerAggregateInput>;
  OR?: InputMaybe<Array<AlbumOwnerAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<AlbumOwnerNodeAggregationWhereInput>;
};

export type AlbumOwnerConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type AlbumOwnerConnectOrCreateFieldInput = {
  onCreate: AlbumOwnerConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type AlbumOwnerConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type AlbumOwnerConnection = {
  __typename?: 'AlbumOwnerConnection';
  edges: Array<AlbumOwnerRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type AlbumOwnerConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type AlbumOwnerConnectionWhere = {
  AND?: InputMaybe<Array<AlbumOwnerConnectionWhere>>;
  NOT?: InputMaybe<AlbumOwnerConnectionWhere>;
  OR?: InputMaybe<Array<AlbumOwnerConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type AlbumOwnerCreateFieldInput = {
  node: UserCreateInput;
};

export type AlbumOwnerDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<AlbumOwnerConnectionWhere>;
};

export type AlbumOwnerDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<AlbumOwnerConnectionWhere>;
};

export type AlbumOwnerFieldInput = {
  connect?: InputMaybe<AlbumOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<AlbumOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<AlbumOwnerCreateFieldInput>;
};

export type AlbumOwnerNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<AlbumOwnerNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<AlbumOwnerNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<AlbumOwnerNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type AlbumOwnerRelationship = {
  __typename?: 'AlbumOwnerRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type AlbumOwnerUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type AlbumOwnerUpdateFieldInput = {
  connect?: InputMaybe<AlbumOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<AlbumOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<AlbumOwnerCreateFieldInput>;
  delete?: InputMaybe<AlbumOwnerDeleteFieldInput>;
  disconnect?: InputMaybe<AlbumOwnerDisconnectFieldInput>;
  update?: InputMaybe<AlbumOwnerUpdateConnectionInput>;
  where?: InputMaybe<AlbumOwnerConnectionWhere>;
};

export type AlbumRelationInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsCreateFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesCreateFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerCreateFieldInput>;
};

/** Fields to sort Albums by. The order in which sorts are applied is not guaranteed when specifying many fields in one AlbumSort object. */
export type AlbumSort = {
  id?: InputMaybe<SortDirection>;
};

export type AlbumUpdateInput = {
  Discussions?: InputMaybe<Array<AlbumDiscussionsUpdateFieldInput>>;
  Images?: InputMaybe<Array<AlbumImagesUpdateFieldInput>>;
  Owner?: InputMaybe<AlbumOwnerUpdateFieldInput>;
};

export type AlbumUserOwnerAggregationSelection = {
  __typename?: 'AlbumUserOwnerAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<AlbumUserOwnerNodeAggregateSelection>;
};

export type AlbumUserOwnerNodeAggregateSelection = {
  __typename?: 'AlbumUserOwnerNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type AlbumWhere = {
  AND?: InputMaybe<Array<AlbumWhere>>;
  DiscussionsAggregate?: InputMaybe<AlbumDiscussionsAggregateInput>;
  /** Return Albums where all of the related AlbumDiscussionsConnections match this filter */
  DiscussionsConnection_ALL?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  /** Return Albums where none of the related AlbumDiscussionsConnections match this filter */
  DiscussionsConnection_NONE?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  /** Return Albums where one of the related AlbumDiscussionsConnections match this filter */
  DiscussionsConnection_SINGLE?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  /** Return Albums where some of the related AlbumDiscussionsConnections match this filter */
  DiscussionsConnection_SOME?: InputMaybe<AlbumDiscussionsConnectionWhere>;
  /** Return Albums where all of the related Discussions match this filter */
  Discussions_ALL?: InputMaybe<DiscussionWhere>;
  /** Return Albums where none of the related Discussions match this filter */
  Discussions_NONE?: InputMaybe<DiscussionWhere>;
  /** Return Albums where one of the related Discussions match this filter */
  Discussions_SINGLE?: InputMaybe<DiscussionWhere>;
  /** Return Albums where some of the related Discussions match this filter */
  Discussions_SOME?: InputMaybe<DiscussionWhere>;
  ImagesAggregate?: InputMaybe<AlbumImagesAggregateInput>;
  /** Return Albums where all of the related AlbumImagesConnections match this filter */
  ImagesConnection_ALL?: InputMaybe<AlbumImagesConnectionWhere>;
  /** Return Albums where none of the related AlbumImagesConnections match this filter */
  ImagesConnection_NONE?: InputMaybe<AlbumImagesConnectionWhere>;
  /** Return Albums where one of the related AlbumImagesConnections match this filter */
  ImagesConnection_SINGLE?: InputMaybe<AlbumImagesConnectionWhere>;
  /** Return Albums where some of the related AlbumImagesConnections match this filter */
  ImagesConnection_SOME?: InputMaybe<AlbumImagesConnectionWhere>;
  /** Return Albums where all of the related Images match this filter */
  Images_ALL?: InputMaybe<ImageWhere>;
  /** Return Albums where none of the related Images match this filter */
  Images_NONE?: InputMaybe<ImageWhere>;
  /** Return Albums where one of the related Images match this filter */
  Images_SINGLE?: InputMaybe<ImageWhere>;
  /** Return Albums where some of the related Images match this filter */
  Images_SOME?: InputMaybe<ImageWhere>;
  NOT?: InputMaybe<AlbumWhere>;
  OR?: InputMaybe<Array<AlbumWhere>>;
  Owner?: InputMaybe<UserWhere>;
  OwnerAggregate?: InputMaybe<AlbumOwnerAggregateInput>;
  OwnerConnection?: InputMaybe<AlbumOwnerConnectionWhere>;
  OwnerConnection_NOT?: InputMaybe<AlbumOwnerConnectionWhere>;
  Owner_NOT?: InputMaybe<UserWhere>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type AlbumsConnection = {
  __typename?: 'AlbumsConnection';
  edges: Array<AlbumEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Channel = {
  __typename?: 'Channel';
  Admins: Array<User>;
  AdminsAggregate?: Maybe<ChannelUserAdminsAggregationSelection>;
  AdminsConnection: ChannelAdminsConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<ChannelCommentCommentsAggregationSelection>;
  CommentsConnection: ChannelCommentsConnection;
  DefaultChannelRole?: Maybe<ChannelRole>;
  DefaultChannelRoleAggregate?: Maybe<ChannelChannelRoleDefaultChannelRoleAggregationSelection>;
  DefaultChannelRoleConnection: ChannelDefaultChannelRoleConnection;
  DefaultModRole?: Maybe<ModChannelRole>;
  DefaultModRoleAggregate?: Maybe<ChannelModChannelRoleDefaultModRoleAggregationSelection>;
  DefaultModRoleConnection: ChannelDefaultModRoleConnection;
  DiscussionChannels: Array<DiscussionChannel>;
  DiscussionChannelsAggregate?: Maybe<ChannelDiscussionChannelDiscussionChannelsAggregationSelection>;
  DiscussionChannelsConnection: ChannelDiscussionChannelsConnection;
  ElevatedModRole?: Maybe<ModChannelRole>;
  ElevatedModRoleAggregate?: Maybe<ChannelModChannelRoleElevatedModRoleAggregationSelection>;
  ElevatedModRoleConnection: ChannelElevatedModRoleConnection;
  EventChannels: Array<EventChannel>;
  EventChannelsAggregate?: Maybe<ChannelEventChannelEventChannelsAggregationSelection>;
  EventChannelsConnection: ChannelEventChannelsConnection;
  Issues: Array<Issue>;
  IssuesAggregate?: Maybe<ChannelIssueIssuesAggregationSelection>;
  IssuesConnection: ChannelIssuesConnection;
  Moderators: Array<ModerationProfile>;
  ModeratorsAggregate?: Maybe<ChannelModerationProfileModeratorsAggregationSelection>;
  ModeratorsConnection: ChannelModeratorsConnection;
  PendingModInvites: Array<User>;
  PendingModInvitesAggregate?: Maybe<ChannelUserPendingModInvitesAggregationSelection>;
  PendingModInvitesConnection: ChannelPendingModInvitesConnection;
  PendingOwnerInvites: Array<User>;
  PendingOwnerInvitesAggregate?: Maybe<ChannelUserPendingOwnerInvitesAggregationSelection>;
  PendingOwnerInvitesConnection: ChannelPendingOwnerInvitesConnection;
  RelatedChannels: Array<Channel>;
  RelatedChannelsAggregate?: Maybe<ChannelChannelRelatedChannelsAggregationSelection>;
  RelatedChannelsConnection: ChannelRelatedChannelsConnection;
  SuspendedModRole?: Maybe<ModChannelRole>;
  SuspendedModRoleAggregate?: Maybe<ChannelModChannelRoleSuspendedModRoleAggregationSelection>;
  SuspendedModRoleConnection: ChannelSuspendedModRoleConnection;
  SuspendedMods: Array<Suspension>;
  SuspendedModsAggregate?: Maybe<ChannelSuspensionSuspendedModsAggregationSelection>;
  SuspendedModsConnection: ChannelSuspendedModsConnection;
  SuspendedRole?: Maybe<ChannelRole>;
  SuspendedRoleAggregate?: Maybe<ChannelChannelRoleSuspendedRoleAggregationSelection>;
  SuspendedRoleConnection: ChannelSuspendedRoleConnection;
  SuspendedUsers: Array<Suspension>;
  SuspendedUsersAggregate?: Maybe<ChannelSuspensionSuspendedUsersAggregationSelection>;
  SuspendedUsersConnection: ChannelSuspendedUsersConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<ChannelTagTagsAggregationSelection>;
  TagsConnection: ChannelTagsConnection;
  WikiHomePage?: Maybe<WikiPage>;
  WikiHomePageAggregate?: Maybe<ChannelWikiPageWikiHomePageAggregationSelection>;
  WikiHomePageConnection: ChannelWikiHomePageConnection;
  channelBannerURL?: Maybe<Scalars['String']['output']>;
  channelIconURL?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  eventsEnabled?: Maybe<Scalars['Boolean']['output']>;
  feedbackEnabled?: Maybe<Scalars['Boolean']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  rules?: Maybe<Scalars['JSON']['output']>;
  uniqueName: Scalars['String']['output'];
  wikiEnabled?: Maybe<Scalars['Boolean']['output']>;
};


export type ChannelAdminsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelAdminsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelAdminsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelAdminsConnectionSort>>;
  where?: InputMaybe<ChannelAdminsConnectionWhere>;
};


export type ChannelCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type ChannelCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type ChannelCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelCommentsConnectionSort>>;
  where?: InputMaybe<ChannelCommentsConnectionWhere>;
};


export type ChannelDefaultChannelRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelRoleOptions>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type ChannelDefaultChannelRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type ChannelDefaultChannelRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelDefaultChannelRoleConnectionSort>>;
  where?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
};


export type ChannelDefaultModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelDefaultModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelDefaultModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelDefaultModRoleConnectionSort>>;
  where?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
};


export type ChannelDiscussionChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type ChannelDiscussionChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type ChannelDiscussionChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelDiscussionChannelsConnectionSort>>;
  where?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
};


export type ChannelElevatedModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelElevatedModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelElevatedModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelElevatedModRoleConnectionSort>>;
  where?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
};


export type ChannelEventChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventChannelOptions>;
  where?: InputMaybe<EventChannelWhere>;
};


export type ChannelEventChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventChannelWhere>;
};


export type ChannelEventChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelEventChannelsConnectionSort>>;
  where?: InputMaybe<ChannelEventChannelsConnectionWhere>;
};


export type ChannelIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type ChannelIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type ChannelIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelIssuesConnectionSort>>;
  where?: InputMaybe<ChannelIssuesConnectionWhere>;
};


export type ChannelModeratorsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type ChannelModeratorsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type ChannelModeratorsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelModeratorsConnectionSort>>;
  where?: InputMaybe<ChannelModeratorsConnectionWhere>;
};


export type ChannelPendingModInvitesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelPendingModInvitesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelPendingModInvitesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelPendingModInvitesConnectionSort>>;
  where?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
};


export type ChannelPendingOwnerInvitesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelPendingOwnerInvitesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ChannelPendingOwnerInvitesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectionSort>>;
  where?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
};


export type ChannelRelatedChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type ChannelRelatedChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type ChannelRelatedChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelRelatedChannelsConnectionSort>>;
  where?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
};


export type ChannelSuspendedModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelSuspendedModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ChannelSuspendedModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelSuspendedModRoleConnectionSort>>;
  where?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
};


export type ChannelSuspendedModsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ChannelSuspendedModsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ChannelSuspendedModsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelSuspendedModsConnectionSort>>;
  where?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
};


export type ChannelSuspendedRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelRoleOptions>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type ChannelSuspendedRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type ChannelSuspendedRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelSuspendedRoleConnectionSort>>;
  where?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
};


export type ChannelSuspendedUsersArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ChannelSuspendedUsersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ChannelSuspendedUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelSuspendedUsersConnectionSort>>;
  where?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
};


export type ChannelTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type ChannelTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type ChannelTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelTagsConnectionSort>>;
  where?: InputMaybe<ChannelTagsConnectionWhere>;
};


export type ChannelWikiHomePageArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<WikiPageOptions>;
  where?: InputMaybe<WikiPageWhere>;
};


export type ChannelWikiHomePageAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<WikiPageWhere>;
};


export type ChannelWikiHomePageConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ChannelWikiHomePageConnectionSort>>;
  where?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
};

export type ChannelAdminsAggregateInput = {
  AND?: InputMaybe<Array<ChannelAdminsAggregateInput>>;
  NOT?: InputMaybe<ChannelAdminsAggregateInput>;
  OR?: InputMaybe<Array<ChannelAdminsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelAdminsNodeAggregationWhereInput>;
};

export type ChannelAdminsConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ChannelAdminsConnectOrCreateFieldInput = {
  onCreate: ChannelAdminsConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ChannelAdminsConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ChannelAdminsConnection = {
  __typename?: 'ChannelAdminsConnection';
  edges: Array<ChannelAdminsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelAdminsConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ChannelAdminsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelAdminsConnectionWhere>>;
  NOT?: InputMaybe<ChannelAdminsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelAdminsConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ChannelAdminsCreateFieldInput = {
  node: UserCreateInput;
};

export type ChannelAdminsDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ChannelAdminsConnectionWhere>;
};

export type ChannelAdminsDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ChannelAdminsConnectionWhere>;
};

export type ChannelAdminsFieldInput = {
  connect?: InputMaybe<Array<ChannelAdminsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelAdminsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelAdminsCreateFieldInput>>;
};

export type ChannelAdminsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelAdminsNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<ChannelAdminsNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<ChannelAdminsNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelAdminsRelationship = {
  __typename?: 'ChannelAdminsRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ChannelAdminsUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ChannelAdminsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelAdminsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelAdminsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelAdminsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelAdminsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelAdminsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelAdminsUpdateConnectionInput>;
  where?: InputMaybe<ChannelAdminsConnectionWhere>;
};

export type ChannelAggregateSelection = {
  __typename?: 'ChannelAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type ChannelChannelRelatedChannelsAggregationSelection = {
  __typename?: 'ChannelChannelRelatedChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelChannelRelatedChannelsNodeAggregateSelection>;
};

export type ChannelChannelRelatedChannelsNodeAggregateSelection = {
  __typename?: 'ChannelChannelRelatedChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type ChannelChannelRoleDefaultChannelRoleAggregationSelection = {
  __typename?: 'ChannelChannelRoleDefaultChannelRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelChannelRoleDefaultChannelRoleNodeAggregateSelection>;
};

export type ChannelChannelRoleDefaultChannelRoleNodeAggregateSelection = {
  __typename?: 'ChannelChannelRoleDefaultChannelRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelChannelRoleSuspendedRoleAggregationSelection = {
  __typename?: 'ChannelChannelRoleSuspendedRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelChannelRoleSuspendedRoleNodeAggregateSelection>;
};

export type ChannelChannelRoleSuspendedRoleNodeAggregateSelection = {
  __typename?: 'ChannelChannelRoleSuspendedRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelCommentCommentsAggregationSelection = {
  __typename?: 'ChannelCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelCommentCommentsNodeAggregateSelection>;
};

export type ChannelCommentCommentsNodeAggregateSelection = {
  __typename?: 'ChannelCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type ChannelCommentsAggregateInput = {
  AND?: InputMaybe<Array<ChannelCommentsAggregateInput>>;
  NOT?: InputMaybe<ChannelCommentsAggregateInput>;
  OR?: InputMaybe<Array<ChannelCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelCommentsNodeAggregationWhereInput>;
};

export type ChannelCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type ChannelCommentsConnection = {
  __typename?: 'ChannelCommentsConnection';
  edges: Array<ChannelCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type ChannelCommentsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelCommentsConnectionWhere>>;
  NOT?: InputMaybe<ChannelCommentsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type ChannelCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type ChannelCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<ChannelCommentsConnectionWhere>;
};

export type ChannelCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<ChannelCommentsConnectionWhere>;
};

export type ChannelCommentsFieldInput = {
  connect?: InputMaybe<Array<ChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelCommentsCreateFieldInput>>;
};

export type ChannelCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type ChannelCommentsRelationship = {
  __typename?: 'ChannelCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type ChannelCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type ChannelCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelCommentsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelCommentsUpdateConnectionInput>;
  where?: InputMaybe<ChannelCommentsConnectionWhere>;
};

export type ChannelConnectInput = {
  Admins?: InputMaybe<Array<ChannelAdminsConnectFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsConnectFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleConnectFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleConnectFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsConnectFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleConnectFieldInput>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsConnectFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesConnectFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsConnectFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesConnectFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsConnectFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleConnectFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsConnectFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleConnectFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersConnectFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsConnectFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageConnectFieldInput>;
};

export type ChannelConnectOrCreateInput = {
  Admins?: InputMaybe<Array<ChannelAdminsConnectOrCreateFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleConnectOrCreateFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleConnectOrCreateFieldInput>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleConnectOrCreateFieldInput>;
  Moderators?: InputMaybe<Array<ChannelModeratorsConnectOrCreateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesConnectOrCreateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectOrCreateFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsConnectOrCreateFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleConnectOrCreateFieldInput>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleConnectOrCreateFieldInput>;
  Tags?: InputMaybe<Array<ChannelTagsConnectOrCreateFieldInput>>;
};

export type ChannelConnectOrCreateWhere = {
  node: ChannelUniqueWhere;
};

export type ChannelConnectWhere = {
  node: ChannelWhere;
};

export type ChannelCreateInput = {
  Admins?: InputMaybe<ChannelAdminsFieldInput>;
  Comments?: InputMaybe<ChannelCommentsFieldInput>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleFieldInput>;
  DiscussionChannels?: InputMaybe<ChannelDiscussionChannelsFieldInput>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleFieldInput>;
  EventChannels?: InputMaybe<ChannelEventChannelsFieldInput>;
  Issues?: InputMaybe<ChannelIssuesFieldInput>;
  Moderators?: InputMaybe<ChannelModeratorsFieldInput>;
  PendingModInvites?: InputMaybe<ChannelPendingModInvitesFieldInput>;
  PendingOwnerInvites?: InputMaybe<ChannelPendingOwnerInvitesFieldInput>;
  RelatedChannels?: InputMaybe<ChannelRelatedChannelsFieldInput>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleFieldInput>;
  SuspendedMods?: InputMaybe<ChannelSuspendedModsFieldInput>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleFieldInput>;
  SuspendedUsers?: InputMaybe<ChannelSuspendedUsersFieldInput>;
  Tags?: InputMaybe<ChannelTagsFieldInput>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageFieldInput>;
  channelBannerURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  eventsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  feedbackEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  uniqueName: Scalars['String']['input'];
  wikiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelDefaultChannelRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelDefaultChannelRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelDefaultChannelRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelDefaultChannelRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelDefaultChannelRoleNodeAggregationWhereInput>;
};

export type ChannelDefaultChannelRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelRoleConnectWhere>;
};

export type ChannelDefaultChannelRoleConnectOrCreateFieldInput = {
  onCreate: ChannelDefaultChannelRoleConnectOrCreateFieldInputOnCreate;
  where: ChannelRoleConnectOrCreateWhere;
};

export type ChannelDefaultChannelRoleConnectOrCreateFieldInputOnCreate = {
  node: ChannelRoleOnCreateInput;
};

export type ChannelDefaultChannelRoleConnection = {
  __typename?: 'ChannelDefaultChannelRoleConnection';
  edges: Array<ChannelDefaultChannelRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelDefaultChannelRoleConnectionSort = {
  node?: InputMaybe<ChannelRoleSort>;
};

export type ChannelDefaultChannelRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelDefaultChannelRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelDefaultChannelRoleConnectionWhere>>;
  node?: InputMaybe<ChannelRoleWhere>;
};

export type ChannelDefaultChannelRoleCreateFieldInput = {
  node: ChannelRoleCreateInput;
};

export type ChannelDefaultChannelRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
};

export type ChannelDefaultChannelRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
};

export type ChannelDefaultChannelRoleFieldInput = {
  connect?: InputMaybe<ChannelDefaultChannelRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelDefaultChannelRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelDefaultChannelRoleCreateFieldInput>;
};

export type ChannelDefaultChannelRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelDefaultChannelRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelDefaultChannelRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelDefaultChannelRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelDefaultChannelRoleRelationship = {
  __typename?: 'ChannelDefaultChannelRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ChannelRole;
};

export type ChannelDefaultChannelRoleUpdateConnectionInput = {
  node?: InputMaybe<ChannelRoleUpdateInput>;
};

export type ChannelDefaultChannelRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelDefaultChannelRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelDefaultChannelRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelDefaultChannelRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelDefaultChannelRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelDefaultChannelRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelDefaultChannelRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
};

export type ChannelDefaultModRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelDefaultModRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelDefaultModRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelDefaultModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelDefaultModRoleNodeAggregationWhereInput>;
};

export type ChannelDefaultModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModChannelRoleConnectWhere>;
};

export type ChannelDefaultModRoleConnectOrCreateFieldInput = {
  onCreate: ChannelDefaultModRoleConnectOrCreateFieldInputOnCreate;
  where: ModChannelRoleConnectOrCreateWhere;
};

export type ChannelDefaultModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModChannelRoleOnCreateInput;
};

export type ChannelDefaultModRoleConnection = {
  __typename?: 'ChannelDefaultModRoleConnection';
  edges: Array<ChannelDefaultModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelDefaultModRoleConnectionSort = {
  node?: InputMaybe<ModChannelRoleSort>;
};

export type ChannelDefaultModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelDefaultModRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelDefaultModRoleConnectionWhere>>;
  node?: InputMaybe<ModChannelRoleWhere>;
};

export type ChannelDefaultModRoleCreateFieldInput = {
  node: ModChannelRoleCreateInput;
};

export type ChannelDefaultModRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
};

export type ChannelDefaultModRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
};

export type ChannelDefaultModRoleFieldInput = {
  connect?: InputMaybe<ChannelDefaultModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelDefaultModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelDefaultModRoleCreateFieldInput>;
};

export type ChannelDefaultModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelDefaultModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelDefaultModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelDefaultModRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelDefaultModRoleRelationship = {
  __typename?: 'ChannelDefaultModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ChannelDefaultModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModChannelRoleUpdateInput>;
};

export type ChannelDefaultModRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelDefaultModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelDefaultModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelDefaultModRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelDefaultModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelDefaultModRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelDefaultModRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
};

export type ChannelDeleteInput = {
  Admins?: InputMaybe<Array<ChannelAdminsDeleteFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsDeleteFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleDeleteFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleDeleteFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsDeleteFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleDeleteFieldInput>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsDeleteFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesDeleteFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsDeleteFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesDeleteFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesDeleteFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsDeleteFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleDeleteFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsDeleteFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleDeleteFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersDeleteFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsDeleteFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageDeleteFieldInput>;
};

export type ChannelDisconnectInput = {
  Admins?: InputMaybe<Array<ChannelAdminsDisconnectFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsDisconnectFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleDisconnectFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleDisconnectFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsDisconnectFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleDisconnectFieldInput>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsDisconnectFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesDisconnectFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsDisconnectFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesDisconnectFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesDisconnectFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsDisconnectFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleDisconnectFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsDisconnectFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleDisconnectFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersDisconnectFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsDisconnectFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageDisconnectFieldInput>;
};

export type ChannelDiscussionChannelDiscussionChannelsAggregationSelection = {
  __typename?: 'ChannelDiscussionChannelDiscussionChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelDiscussionChannelDiscussionChannelsNodeAggregateSelection>;
};

export type ChannelDiscussionChannelDiscussionChannelsNodeAggregateSelection = {
  __typename?: 'ChannelDiscussionChannelDiscussionChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type ChannelDiscussionChannelsAggregateInput = {
  AND?: InputMaybe<Array<ChannelDiscussionChannelsAggregateInput>>;
  NOT?: InputMaybe<ChannelDiscussionChannelsAggregateInput>;
  OR?: InputMaybe<Array<ChannelDiscussionChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelDiscussionChannelsNodeAggregationWhereInput>;
};

export type ChannelDiscussionChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionChannelConnectWhere>;
};

export type ChannelDiscussionChannelsConnection = {
  __typename?: 'ChannelDiscussionChannelsConnection';
  edges: Array<ChannelDiscussionChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelDiscussionChannelsConnectionSort = {
  node?: InputMaybe<DiscussionChannelSort>;
};

export type ChannelDiscussionChannelsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelDiscussionChannelsConnectionWhere>>;
  NOT?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelDiscussionChannelsConnectionWhere>>;
  node?: InputMaybe<DiscussionChannelWhere>;
};

export type ChannelDiscussionChannelsCreateFieldInput = {
  node: DiscussionChannelCreateInput;
};

export type ChannelDiscussionChannelsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
};

export type ChannelDiscussionChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionChannelDisconnectInput>;
  where?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
};

export type ChannelDiscussionChannelsFieldInput = {
  connect?: InputMaybe<Array<ChannelDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelDiscussionChannelsCreateFieldInput>>;
};

export type ChannelDiscussionChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelDiscussionChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelDiscussionChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelDiscussionChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type ChannelDiscussionChannelsRelationship = {
  __typename?: 'ChannelDiscussionChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type ChannelDiscussionChannelsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionChannelUpdateInput>;
};

export type ChannelDiscussionChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelDiscussionChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelDiscussionChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelDiscussionChannelsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelDiscussionChannelsUpdateConnectionInput>;
  where?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
};

export type ChannelEdge = {
  __typename?: 'ChannelEdge';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type ChannelElevatedModRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelElevatedModRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelElevatedModRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelElevatedModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelElevatedModRoleNodeAggregationWhereInput>;
};

export type ChannelElevatedModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModChannelRoleConnectWhere>;
};

export type ChannelElevatedModRoleConnectOrCreateFieldInput = {
  onCreate: ChannelElevatedModRoleConnectOrCreateFieldInputOnCreate;
  where: ModChannelRoleConnectOrCreateWhere;
};

export type ChannelElevatedModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModChannelRoleOnCreateInput;
};

export type ChannelElevatedModRoleConnection = {
  __typename?: 'ChannelElevatedModRoleConnection';
  edges: Array<ChannelElevatedModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelElevatedModRoleConnectionSort = {
  node?: InputMaybe<ModChannelRoleSort>;
};

export type ChannelElevatedModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelElevatedModRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelElevatedModRoleConnectionWhere>>;
  node?: InputMaybe<ModChannelRoleWhere>;
};

export type ChannelElevatedModRoleCreateFieldInput = {
  node: ModChannelRoleCreateInput;
};

export type ChannelElevatedModRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
};

export type ChannelElevatedModRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
};

export type ChannelElevatedModRoleFieldInput = {
  connect?: InputMaybe<ChannelElevatedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelElevatedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelElevatedModRoleCreateFieldInput>;
};

export type ChannelElevatedModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelElevatedModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelElevatedModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelElevatedModRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelElevatedModRoleRelationship = {
  __typename?: 'ChannelElevatedModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ChannelElevatedModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModChannelRoleUpdateInput>;
};

export type ChannelElevatedModRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelElevatedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelElevatedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelElevatedModRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelElevatedModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelElevatedModRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelElevatedModRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
};

export type ChannelEventChannelEventChannelsAggregationSelection = {
  __typename?: 'ChannelEventChannelEventChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelEventChannelEventChannelsNodeAggregateSelection>;
};

export type ChannelEventChannelEventChannelsNodeAggregateSelection = {
  __typename?: 'ChannelEventChannelEventChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  eventId: IdAggregateSelection;
  id: IdAggregateSelection;
};

export type ChannelEventChannelsAggregateInput = {
  AND?: InputMaybe<Array<ChannelEventChannelsAggregateInput>>;
  NOT?: InputMaybe<ChannelEventChannelsAggregateInput>;
  OR?: InputMaybe<Array<ChannelEventChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelEventChannelsNodeAggregationWhereInput>;
};

export type ChannelEventChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<EventChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventChannelConnectWhere>;
};

export type ChannelEventChannelsConnection = {
  __typename?: 'ChannelEventChannelsConnection';
  edges: Array<ChannelEventChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelEventChannelsConnectionSort = {
  node?: InputMaybe<EventChannelSort>;
};

export type ChannelEventChannelsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelEventChannelsConnectionWhere>>;
  NOT?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelEventChannelsConnectionWhere>>;
  node?: InputMaybe<EventChannelWhere>;
};

export type ChannelEventChannelsCreateFieldInput = {
  node: EventChannelCreateInput;
};

export type ChannelEventChannelsDeleteFieldInput = {
  delete?: InputMaybe<EventChannelDeleteInput>;
  where?: InputMaybe<ChannelEventChannelsConnectionWhere>;
};

export type ChannelEventChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventChannelDisconnectInput>;
  where?: InputMaybe<ChannelEventChannelsConnectionWhere>;
};

export type ChannelEventChannelsFieldInput = {
  connect?: InputMaybe<Array<ChannelEventChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelEventChannelsCreateFieldInput>>;
};

export type ChannelEventChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelEventChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelEventChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelEventChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ChannelEventChannelsRelationship = {
  __typename?: 'ChannelEventChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: EventChannel;
};

export type ChannelEventChannelsUpdateConnectionInput = {
  node?: InputMaybe<EventChannelUpdateInput>;
};

export type ChannelEventChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelEventChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelEventChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelEventChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelEventChannelsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelEventChannelsUpdateConnectionInput>;
  where?: InputMaybe<ChannelEventChannelsConnectionWhere>;
};

export type ChannelIssueIssuesAggregationSelection = {
  __typename?: 'ChannelIssueIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelIssueIssuesNodeAggregateSelection>;
};

export type ChannelIssueIssuesNodeAggregateSelection = {
  __typename?: 'ChannelIssueIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type ChannelIssuesAggregateInput = {
  AND?: InputMaybe<Array<ChannelIssuesAggregateInput>>;
  NOT?: InputMaybe<ChannelIssuesAggregateInput>;
  OR?: InputMaybe<Array<ChannelIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelIssuesNodeAggregationWhereInput>;
};

export type ChannelIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type ChannelIssuesConnection = {
  __typename?: 'ChannelIssuesConnection';
  edges: Array<ChannelIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type ChannelIssuesConnectionWhere = {
  AND?: InputMaybe<Array<ChannelIssuesConnectionWhere>>;
  NOT?: InputMaybe<ChannelIssuesConnectionWhere>;
  OR?: InputMaybe<Array<ChannelIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type ChannelIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type ChannelIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<ChannelIssuesConnectionWhere>;
};

export type ChannelIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<ChannelIssuesConnectionWhere>;
};

export type ChannelIssuesFieldInput = {
  connect?: InputMaybe<Array<ChannelIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelIssuesCreateFieldInput>>;
};

export type ChannelIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ChannelIssuesRelationship = {
  __typename?: 'ChannelIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type ChannelIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type ChannelIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelIssuesDisconnectFieldInput>>;
  update?: InputMaybe<ChannelIssuesUpdateConnectionInput>;
  where?: InputMaybe<ChannelIssuesConnectionWhere>;
};

export type ChannelModChannelRoleDefaultModRoleAggregationSelection = {
  __typename?: 'ChannelModChannelRoleDefaultModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelModChannelRoleDefaultModRoleNodeAggregateSelection>;
};

export type ChannelModChannelRoleDefaultModRoleNodeAggregateSelection = {
  __typename?: 'ChannelModChannelRoleDefaultModRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelModChannelRoleElevatedModRoleAggregationSelection = {
  __typename?: 'ChannelModChannelRoleElevatedModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelModChannelRoleElevatedModRoleNodeAggregateSelection>;
};

export type ChannelModChannelRoleElevatedModRoleNodeAggregateSelection = {
  __typename?: 'ChannelModChannelRoleElevatedModRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelModChannelRoleSuspendedModRoleAggregationSelection = {
  __typename?: 'ChannelModChannelRoleSuspendedModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelModChannelRoleSuspendedModRoleNodeAggregateSelection>;
};

export type ChannelModChannelRoleSuspendedModRoleNodeAggregateSelection = {
  __typename?: 'ChannelModChannelRoleSuspendedModRoleNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelModerationProfileModeratorsAggregationSelection = {
  __typename?: 'ChannelModerationProfileModeratorsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelModerationProfileModeratorsNodeAggregateSelection>;
};

export type ChannelModerationProfileModeratorsNodeAggregateSelection = {
  __typename?: 'ChannelModerationProfileModeratorsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type ChannelModeratorsAggregateInput = {
  AND?: InputMaybe<Array<ChannelModeratorsAggregateInput>>;
  NOT?: InputMaybe<ChannelModeratorsAggregateInput>;
  OR?: InputMaybe<Array<ChannelModeratorsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelModeratorsNodeAggregationWhereInput>;
};

export type ChannelModeratorsConnectFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type ChannelModeratorsConnectOrCreateFieldInput = {
  onCreate: ChannelModeratorsConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type ChannelModeratorsConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type ChannelModeratorsConnection = {
  __typename?: 'ChannelModeratorsConnection';
  edges: Array<ChannelModeratorsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelModeratorsConnectionSort = {
  node?: InputMaybe<ModerationProfileSort>;
};

export type ChannelModeratorsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelModeratorsConnectionWhere>>;
  NOT?: InputMaybe<ChannelModeratorsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelModeratorsConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type ChannelModeratorsCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type ChannelModeratorsDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<ChannelModeratorsConnectionWhere>;
};

export type ChannelModeratorsDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<ChannelModeratorsConnectionWhere>;
};

export type ChannelModeratorsFieldInput = {
  connect?: InputMaybe<Array<ChannelModeratorsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelModeratorsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelModeratorsCreateFieldInput>>;
};

export type ChannelModeratorsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelModeratorsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelModeratorsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelModeratorsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelModeratorsRelationship = {
  __typename?: 'ChannelModeratorsRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type ChannelModeratorsUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type ChannelModeratorsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelModeratorsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelModeratorsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelModeratorsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelModeratorsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelModeratorsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelModeratorsUpdateConnectionInput>;
  where?: InputMaybe<ChannelModeratorsConnectionWhere>;
};

export type ChannelOnCreateInput = {
  channelBannerURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  eventsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  feedbackEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  uniqueName: Scalars['String']['input'];
  wikiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ChannelSort objects to sort Channels by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ChannelSort>>;
};

export type ChannelPendingModInvitesAggregateInput = {
  AND?: InputMaybe<Array<ChannelPendingModInvitesAggregateInput>>;
  NOT?: InputMaybe<ChannelPendingModInvitesAggregateInput>;
  OR?: InputMaybe<Array<ChannelPendingModInvitesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelPendingModInvitesNodeAggregationWhereInput>;
};

export type ChannelPendingModInvitesConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ChannelPendingModInvitesConnectOrCreateFieldInput = {
  onCreate: ChannelPendingModInvitesConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ChannelPendingModInvitesConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ChannelPendingModInvitesConnection = {
  __typename?: 'ChannelPendingModInvitesConnection';
  edges: Array<ChannelPendingModInvitesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelPendingModInvitesConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ChannelPendingModInvitesConnectionWhere = {
  AND?: InputMaybe<Array<ChannelPendingModInvitesConnectionWhere>>;
  NOT?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  OR?: InputMaybe<Array<ChannelPendingModInvitesConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ChannelPendingModInvitesCreateFieldInput = {
  node: UserCreateInput;
};

export type ChannelPendingModInvitesDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
};

export type ChannelPendingModInvitesDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
};

export type ChannelPendingModInvitesFieldInput = {
  connect?: InputMaybe<Array<ChannelPendingModInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelPendingModInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelPendingModInvitesCreateFieldInput>>;
};

export type ChannelPendingModInvitesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelPendingModInvitesNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<ChannelPendingModInvitesNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<ChannelPendingModInvitesNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelPendingModInvitesRelationship = {
  __typename?: 'ChannelPendingModInvitesRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ChannelPendingModInvitesUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ChannelPendingModInvitesUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelPendingModInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelPendingModInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelPendingModInvitesCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelPendingModInvitesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelPendingModInvitesDisconnectFieldInput>>;
  update?: InputMaybe<ChannelPendingModInvitesUpdateConnectionInput>;
  where?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
};

export type ChannelPendingOwnerInvitesAggregateInput = {
  AND?: InputMaybe<Array<ChannelPendingOwnerInvitesAggregateInput>>;
  NOT?: InputMaybe<ChannelPendingOwnerInvitesAggregateInput>;
  OR?: InputMaybe<Array<ChannelPendingOwnerInvitesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelPendingOwnerInvitesNodeAggregationWhereInput>;
};

export type ChannelPendingOwnerInvitesConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ChannelPendingOwnerInvitesConnectOrCreateFieldInput = {
  onCreate: ChannelPendingOwnerInvitesConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ChannelPendingOwnerInvitesConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ChannelPendingOwnerInvitesConnection = {
  __typename?: 'ChannelPendingOwnerInvitesConnection';
  edges: Array<ChannelPendingOwnerInvitesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelPendingOwnerInvitesConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ChannelPendingOwnerInvitesConnectionWhere = {
  AND?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectionWhere>>;
  NOT?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  OR?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ChannelPendingOwnerInvitesCreateFieldInput = {
  node: UserCreateInput;
};

export type ChannelPendingOwnerInvitesDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
};

export type ChannelPendingOwnerInvitesDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
};

export type ChannelPendingOwnerInvitesFieldInput = {
  connect?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelPendingOwnerInvitesCreateFieldInput>>;
};

export type ChannelPendingOwnerInvitesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelPendingOwnerInvitesNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<ChannelPendingOwnerInvitesNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<ChannelPendingOwnerInvitesNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelPendingOwnerInvitesRelationship = {
  __typename?: 'ChannelPendingOwnerInvitesRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ChannelPendingOwnerInvitesUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ChannelPendingOwnerInvitesUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelPendingOwnerInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelPendingOwnerInvitesCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelPendingOwnerInvitesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelPendingOwnerInvitesDisconnectFieldInput>>;
  update?: InputMaybe<ChannelPendingOwnerInvitesUpdateConnectionInput>;
  where?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
};

export type ChannelRelatedChannelsAggregateInput = {
  AND?: InputMaybe<Array<ChannelRelatedChannelsAggregateInput>>;
  NOT?: InputMaybe<ChannelRelatedChannelsAggregateInput>;
  OR?: InputMaybe<Array<ChannelRelatedChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelRelatedChannelsNodeAggregationWhereInput>;
};

export type ChannelRelatedChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type ChannelRelatedChannelsConnectOrCreateFieldInput = {
  onCreate: ChannelRelatedChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type ChannelRelatedChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type ChannelRelatedChannelsConnection = {
  __typename?: 'ChannelRelatedChannelsConnection';
  edges: Array<ChannelRelatedChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelRelatedChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type ChannelRelatedChannelsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelRelatedChannelsConnectionWhere>>;
  NOT?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelRelatedChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type ChannelRelatedChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type ChannelRelatedChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
};

export type ChannelRelatedChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
};

export type ChannelRelatedChannelsFieldInput = {
  connect?: InputMaybe<Array<ChannelRelatedChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelRelatedChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelRelatedChannelsCreateFieldInput>>;
};

export type ChannelRelatedChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelRelatedChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelRelatedChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelRelatedChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelRelatedChannelsRelationship = {
  __typename?: 'ChannelRelatedChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type ChannelRelatedChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type ChannelRelatedChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelRelatedChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelRelatedChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelRelatedChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelRelatedChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelRelatedChannelsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelRelatedChannelsUpdateConnectionInput>;
  where?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
};

export type ChannelRelationInput = {
  Admins?: InputMaybe<Array<ChannelAdminsCreateFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsCreateFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleCreateFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleCreateFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsCreateFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleCreateFieldInput>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsCreateFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesCreateFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsCreateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesCreateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesCreateFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsCreateFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleCreateFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsCreateFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleCreateFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersCreateFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsCreateFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageCreateFieldInput>;
};

export type ChannelRole = {
  __typename?: 'ChannelRole';
  canCreateComment?: Maybe<Scalars['Boolean']['output']>;
  canCreateDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canCreateEvent?: Maybe<Scalars['Boolean']['output']>;
  canUpdateChannel?: Maybe<Scalars['Boolean']['output']>;
  canUploadFile?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteComment?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteDiscussion?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  showModTag?: Maybe<Scalars['Boolean']['output']>;
};

export type ChannelRoleAggregateSelection = {
  __typename?: 'ChannelRoleAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ChannelRoleConnectOrCreateWhere = {
  node: ChannelRoleUniqueWhere;
};

export type ChannelRoleConnectWhere = {
  node: ChannelRoleWhere;
};

export type ChannelRoleCreateInput = {
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canUpdateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showModTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelRoleEdge = {
  __typename?: 'ChannelRoleEdge';
  cursor: Scalars['String']['output'];
  node: ChannelRole;
};

export type ChannelRoleOnCreateInput = {
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canUpdateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showModTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelRoleOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ChannelRoleSort objects to sort ChannelRoles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ChannelRoleSort>>;
};

/** Fields to sort ChannelRoles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ChannelRoleSort object. */
export type ChannelRoleSort = {
  canCreateComment?: InputMaybe<SortDirection>;
  canCreateDiscussion?: InputMaybe<SortDirection>;
  canCreateEvent?: InputMaybe<SortDirection>;
  canUpdateChannel?: InputMaybe<SortDirection>;
  canUploadFile?: InputMaybe<SortDirection>;
  canUpvoteComment?: InputMaybe<SortDirection>;
  canUpvoteDiscussion?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  showModTag?: InputMaybe<SortDirection>;
};

export type ChannelRoleUniqueWhere = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelRoleUpdateInput = {
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canUpdateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showModTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelRoleWhere = {
  AND?: InputMaybe<Array<ChannelRoleWhere>>;
  NOT?: InputMaybe<ChannelRoleWhere>;
  OR?: InputMaybe<Array<ChannelRoleWhere>>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canUpdateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  showModTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelRolesConnection = {
  __typename?: 'ChannelRolesConnection';
  edges: Array<ChannelRoleEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** Fields to sort Channels by. The order in which sorts are applied is not guaranteed when specifying many fields in one ChannelSort object. */
export type ChannelSort = {
  channelBannerURL?: InputMaybe<SortDirection>;
  channelIconURL?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  displayName?: InputMaybe<SortDirection>;
  eventsEnabled?: InputMaybe<SortDirection>;
  feedbackEnabled?: InputMaybe<SortDirection>;
  locked?: InputMaybe<SortDirection>;
  rules?: InputMaybe<SortDirection>;
  uniqueName?: InputMaybe<SortDirection>;
  wikiEnabled?: InputMaybe<SortDirection>;
};

export type ChannelSuspendedModRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelSuspendedModRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelSuspendedModRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelSuspendedModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelSuspendedModRoleNodeAggregationWhereInput>;
};

export type ChannelSuspendedModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModChannelRoleConnectWhere>;
};

export type ChannelSuspendedModRoleConnectOrCreateFieldInput = {
  onCreate: ChannelSuspendedModRoleConnectOrCreateFieldInputOnCreate;
  where: ModChannelRoleConnectOrCreateWhere;
};

export type ChannelSuspendedModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModChannelRoleOnCreateInput;
};

export type ChannelSuspendedModRoleConnection = {
  __typename?: 'ChannelSuspendedModRoleConnection';
  edges: Array<ChannelSuspendedModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelSuspendedModRoleConnectionSort = {
  node?: InputMaybe<ModChannelRoleSort>;
};

export type ChannelSuspendedModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelSuspendedModRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelSuspendedModRoleConnectionWhere>>;
  node?: InputMaybe<ModChannelRoleWhere>;
};

export type ChannelSuspendedModRoleCreateFieldInput = {
  node: ModChannelRoleCreateInput;
};

export type ChannelSuspendedModRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
};

export type ChannelSuspendedModRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
};

export type ChannelSuspendedModRoleFieldInput = {
  connect?: InputMaybe<ChannelSuspendedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelSuspendedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelSuspendedModRoleCreateFieldInput>;
};

export type ChannelSuspendedModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelSuspendedModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelSuspendedModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelSuspendedModRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelSuspendedModRoleRelationship = {
  __typename?: 'ChannelSuspendedModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ChannelSuspendedModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModChannelRoleUpdateInput>;
};

export type ChannelSuspendedModRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelSuspendedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelSuspendedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelSuspendedModRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelSuspendedModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelSuspendedModRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelSuspendedModRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
};

export type ChannelSuspendedModsAggregateInput = {
  AND?: InputMaybe<Array<ChannelSuspendedModsAggregateInput>>;
  NOT?: InputMaybe<ChannelSuspendedModsAggregateInput>;
  OR?: InputMaybe<Array<ChannelSuspendedModsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelSuspendedModsNodeAggregationWhereInput>;
};

export type ChannelSuspendedModsConnectFieldInput = {
  connect?: InputMaybe<Array<SuspensionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<SuspensionConnectWhere>;
};

export type ChannelSuspendedModsConnection = {
  __typename?: 'ChannelSuspendedModsConnection';
  edges: Array<ChannelSuspendedModsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelSuspendedModsConnectionSort = {
  node?: InputMaybe<SuspensionSort>;
};

export type ChannelSuspendedModsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelSuspendedModsConnectionWhere>>;
  NOT?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelSuspendedModsConnectionWhere>>;
  node?: InputMaybe<SuspensionWhere>;
};

export type ChannelSuspendedModsCreateFieldInput = {
  node: SuspensionCreateInput;
};

export type ChannelSuspendedModsDeleteFieldInput = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
};

export type ChannelSuspendedModsDisconnectFieldInput = {
  disconnect?: InputMaybe<SuspensionDisconnectInput>;
  where?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
};

export type ChannelSuspendedModsFieldInput = {
  connect?: InputMaybe<Array<ChannelSuspendedModsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelSuspendedModsCreateFieldInput>>;
};

export type ChannelSuspendedModsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelSuspendedModsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelSuspendedModsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelSuspendedModsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  suspendedUntil_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelSuspendedModsRelationship = {
  __typename?: 'ChannelSuspendedModsRelationship';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type ChannelSuspendedModsUpdateConnectionInput = {
  node?: InputMaybe<SuspensionUpdateInput>;
};

export type ChannelSuspendedModsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelSuspendedModsConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelSuspendedModsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelSuspendedModsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelSuspendedModsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelSuspendedModsUpdateConnectionInput>;
  where?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
};

export type ChannelSuspendedRoleAggregateInput = {
  AND?: InputMaybe<Array<ChannelSuspendedRoleAggregateInput>>;
  NOT?: InputMaybe<ChannelSuspendedRoleAggregateInput>;
  OR?: InputMaybe<Array<ChannelSuspendedRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelSuspendedRoleNodeAggregationWhereInput>;
};

export type ChannelSuspendedRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelRoleConnectWhere>;
};

export type ChannelSuspendedRoleConnectOrCreateFieldInput = {
  onCreate: ChannelSuspendedRoleConnectOrCreateFieldInputOnCreate;
  where: ChannelRoleConnectOrCreateWhere;
};

export type ChannelSuspendedRoleConnectOrCreateFieldInputOnCreate = {
  node: ChannelRoleOnCreateInput;
};

export type ChannelSuspendedRoleConnection = {
  __typename?: 'ChannelSuspendedRoleConnection';
  edges: Array<ChannelSuspendedRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelSuspendedRoleConnectionSort = {
  node?: InputMaybe<ChannelRoleSort>;
};

export type ChannelSuspendedRoleConnectionWhere = {
  AND?: InputMaybe<Array<ChannelSuspendedRoleConnectionWhere>>;
  NOT?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
  OR?: InputMaybe<Array<ChannelSuspendedRoleConnectionWhere>>;
  node?: InputMaybe<ChannelRoleWhere>;
};

export type ChannelSuspendedRoleCreateFieldInput = {
  node: ChannelRoleCreateInput;
};

export type ChannelSuspendedRoleDeleteFieldInput = {
  where?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
};

export type ChannelSuspendedRoleDisconnectFieldInput = {
  where?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
};

export type ChannelSuspendedRoleFieldInput = {
  connect?: InputMaybe<ChannelSuspendedRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelSuspendedRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelSuspendedRoleCreateFieldInput>;
};

export type ChannelSuspendedRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelSuspendedRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelSuspendedRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelSuspendedRoleNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelSuspendedRoleRelationship = {
  __typename?: 'ChannelSuspendedRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ChannelRole;
};

export type ChannelSuspendedRoleUpdateConnectionInput = {
  node?: InputMaybe<ChannelRoleUpdateInput>;
};

export type ChannelSuspendedRoleUpdateFieldInput = {
  connect?: InputMaybe<ChannelSuspendedRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ChannelSuspendedRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ChannelSuspendedRoleCreateFieldInput>;
  delete?: InputMaybe<ChannelSuspendedRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelSuspendedRoleDisconnectFieldInput>;
  update?: InputMaybe<ChannelSuspendedRoleUpdateConnectionInput>;
  where?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
};

export type ChannelSuspendedUsersAggregateInput = {
  AND?: InputMaybe<Array<ChannelSuspendedUsersAggregateInput>>;
  NOT?: InputMaybe<ChannelSuspendedUsersAggregateInput>;
  OR?: InputMaybe<Array<ChannelSuspendedUsersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelSuspendedUsersNodeAggregationWhereInput>;
};

export type ChannelSuspendedUsersConnectFieldInput = {
  connect?: InputMaybe<Array<SuspensionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<SuspensionConnectWhere>;
};

export type ChannelSuspendedUsersConnection = {
  __typename?: 'ChannelSuspendedUsersConnection';
  edges: Array<ChannelSuspendedUsersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelSuspendedUsersConnectionSort = {
  node?: InputMaybe<SuspensionSort>;
};

export type ChannelSuspendedUsersConnectionWhere = {
  AND?: InputMaybe<Array<ChannelSuspendedUsersConnectionWhere>>;
  NOT?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  OR?: InputMaybe<Array<ChannelSuspendedUsersConnectionWhere>>;
  node?: InputMaybe<SuspensionWhere>;
};

export type ChannelSuspendedUsersCreateFieldInput = {
  node: SuspensionCreateInput;
};

export type ChannelSuspendedUsersDeleteFieldInput = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
};

export type ChannelSuspendedUsersDisconnectFieldInput = {
  disconnect?: InputMaybe<SuspensionDisconnectInput>;
  where?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
};

export type ChannelSuspendedUsersFieldInput = {
  connect?: InputMaybe<Array<ChannelSuspendedUsersConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelSuspendedUsersCreateFieldInput>>;
};

export type ChannelSuspendedUsersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelSuspendedUsersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelSuspendedUsersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelSuspendedUsersNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  suspendedUntil_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelSuspendedUsersRelationship = {
  __typename?: 'ChannelSuspendedUsersRelationship';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type ChannelSuspendedUsersUpdateConnectionInput = {
  node?: InputMaybe<SuspensionUpdateInput>;
};

export type ChannelSuspendedUsersUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelSuspendedUsersConnectFieldInput>>;
  create?: InputMaybe<Array<ChannelSuspendedUsersCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelSuspendedUsersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelSuspendedUsersDisconnectFieldInput>>;
  update?: InputMaybe<ChannelSuspendedUsersUpdateConnectionInput>;
  where?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
};

export type ChannelSuspensionSuspendedModsAggregationSelection = {
  __typename?: 'ChannelSuspensionSuspendedModsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelSuspensionSuspendedModsNodeAggregateSelection>;
};

export type ChannelSuspensionSuspendedModsNodeAggregateSelection = {
  __typename?: 'ChannelSuspensionSuspendedModsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelSuspensionSuspendedUsersAggregationSelection = {
  __typename?: 'ChannelSuspensionSuspendedUsersAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelSuspensionSuspendedUsersNodeAggregateSelection>;
};

export type ChannelSuspensionSuspendedUsersNodeAggregateSelection = {
  __typename?: 'ChannelSuspensionSuspendedUsersNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelTagTagsAggregationSelection = {
  __typename?: 'ChannelTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelTagTagsNodeAggregateSelection>;
};

export type ChannelTagTagsNodeAggregateSelection = {
  __typename?: 'ChannelTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type ChannelTagsAggregateInput = {
  AND?: InputMaybe<Array<ChannelTagsAggregateInput>>;
  NOT?: InputMaybe<ChannelTagsAggregateInput>;
  OR?: InputMaybe<Array<ChannelTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelTagsNodeAggregationWhereInput>;
};

export type ChannelTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type ChannelTagsConnectOrCreateFieldInput = {
  onCreate: ChannelTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type ChannelTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type ChannelTagsConnection = {
  __typename?: 'ChannelTagsConnection';
  edges: Array<ChannelTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type ChannelTagsConnectionWhere = {
  AND?: InputMaybe<Array<ChannelTagsConnectionWhere>>;
  NOT?: InputMaybe<ChannelTagsConnectionWhere>;
  OR?: InputMaybe<Array<ChannelTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type ChannelTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type ChannelTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<ChannelTagsConnectionWhere>;
};

export type ChannelTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<ChannelTagsConnectionWhere>;
};

export type ChannelTagsFieldInput = {
  connect?: InputMaybe<Array<ChannelTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelTagsCreateFieldInput>>;
};

export type ChannelTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ChannelTagsRelationship = {
  __typename?: 'ChannelTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type ChannelTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type ChannelTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<ChannelTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ChannelTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ChannelTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<ChannelTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ChannelTagsDisconnectFieldInput>>;
  update?: InputMaybe<ChannelTagsUpdateConnectionInput>;
  where?: InputMaybe<ChannelTagsConnectionWhere>;
};

export type ChannelUniqueWhere = {
  uniqueName?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelUpdateInput = {
  Admins?: InputMaybe<Array<ChannelAdminsUpdateFieldInput>>;
  Comments?: InputMaybe<Array<ChannelCommentsUpdateFieldInput>>;
  DefaultChannelRole?: InputMaybe<ChannelDefaultChannelRoleUpdateFieldInput>;
  DefaultModRole?: InputMaybe<ChannelDefaultModRoleUpdateFieldInput>;
  DiscussionChannels?: InputMaybe<Array<ChannelDiscussionChannelsUpdateFieldInput>>;
  ElevatedModRole?: InputMaybe<ChannelElevatedModRoleUpdateFieldInput>;
  EventChannels?: InputMaybe<Array<ChannelEventChannelsUpdateFieldInput>>;
  Issues?: InputMaybe<Array<ChannelIssuesUpdateFieldInput>>;
  Moderators?: InputMaybe<Array<ChannelModeratorsUpdateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<ChannelPendingModInvitesUpdateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<ChannelPendingOwnerInvitesUpdateFieldInput>>;
  RelatedChannels?: InputMaybe<Array<ChannelRelatedChannelsUpdateFieldInput>>;
  SuspendedModRole?: InputMaybe<ChannelSuspendedModRoleUpdateFieldInput>;
  SuspendedMods?: InputMaybe<Array<ChannelSuspendedModsUpdateFieldInput>>;
  SuspendedRole?: InputMaybe<ChannelSuspendedRoleUpdateFieldInput>;
  SuspendedUsers?: InputMaybe<Array<ChannelSuspendedUsersUpdateFieldInput>>;
  Tags?: InputMaybe<Array<ChannelTagsUpdateFieldInput>>;
  WikiHomePage?: InputMaybe<ChannelWikiHomePageUpdateFieldInput>;
  channelBannerURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  eventsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  feedbackEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  uniqueName?: InputMaybe<Scalars['String']['input']>;
  wikiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelUserAdminsAggregationSelection = {
  __typename?: 'ChannelUserAdminsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelUserAdminsNodeAggregateSelection>;
};

export type ChannelUserAdminsNodeAggregateSelection = {
  __typename?: 'ChannelUserAdminsNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelUserPendingModInvitesAggregationSelection = {
  __typename?: 'ChannelUserPendingModInvitesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelUserPendingModInvitesNodeAggregateSelection>;
};

export type ChannelUserPendingModInvitesNodeAggregateSelection = {
  __typename?: 'ChannelUserPendingModInvitesNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelUserPendingOwnerInvitesAggregationSelection = {
  __typename?: 'ChannelUserPendingOwnerInvitesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelUserPendingOwnerInvitesNodeAggregateSelection>;
};

export type ChannelUserPendingOwnerInvitesNodeAggregateSelection = {
  __typename?: 'ChannelUserPendingOwnerInvitesNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ChannelWhere = {
  AND?: InputMaybe<Array<ChannelWhere>>;
  AdminsAggregate?: InputMaybe<ChannelAdminsAggregateInput>;
  /** Return Channels where all of the related ChannelAdminsConnections match this filter */
  AdminsConnection_ALL?: InputMaybe<ChannelAdminsConnectionWhere>;
  /** Return Channels where none of the related ChannelAdminsConnections match this filter */
  AdminsConnection_NONE?: InputMaybe<ChannelAdminsConnectionWhere>;
  /** Return Channels where one of the related ChannelAdminsConnections match this filter */
  AdminsConnection_SINGLE?: InputMaybe<ChannelAdminsConnectionWhere>;
  /** Return Channels where some of the related ChannelAdminsConnections match this filter */
  AdminsConnection_SOME?: InputMaybe<ChannelAdminsConnectionWhere>;
  /** Return Channels where all of the related Users match this filter */
  Admins_ALL?: InputMaybe<UserWhere>;
  /** Return Channels where none of the related Users match this filter */
  Admins_NONE?: InputMaybe<UserWhere>;
  /** Return Channels where one of the related Users match this filter */
  Admins_SINGLE?: InputMaybe<UserWhere>;
  /** Return Channels where some of the related Users match this filter */
  Admins_SOME?: InputMaybe<UserWhere>;
  CommentsAggregate?: InputMaybe<ChannelCommentsAggregateInput>;
  /** Return Channels where all of the related ChannelCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<ChannelCommentsConnectionWhere>;
  /** Return Channels where none of the related ChannelCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<ChannelCommentsConnectionWhere>;
  /** Return Channels where one of the related ChannelCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<ChannelCommentsConnectionWhere>;
  /** Return Channels where some of the related ChannelCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<ChannelCommentsConnectionWhere>;
  /** Return Channels where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return Channels where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return Channels where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Channels where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  DefaultChannelRole?: InputMaybe<ChannelRoleWhere>;
  DefaultChannelRoleAggregate?: InputMaybe<ChannelDefaultChannelRoleAggregateInput>;
  DefaultChannelRoleConnection?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
  DefaultChannelRoleConnection_NOT?: InputMaybe<ChannelDefaultChannelRoleConnectionWhere>;
  DefaultChannelRole_NOT?: InputMaybe<ChannelRoleWhere>;
  DefaultModRole?: InputMaybe<ModChannelRoleWhere>;
  DefaultModRoleAggregate?: InputMaybe<ChannelDefaultModRoleAggregateInput>;
  DefaultModRoleConnection?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
  DefaultModRoleConnection_NOT?: InputMaybe<ChannelDefaultModRoleConnectionWhere>;
  DefaultModRole_NOT?: InputMaybe<ModChannelRoleWhere>;
  DiscussionChannelsAggregate?: InputMaybe<ChannelDiscussionChannelsAggregateInput>;
  /** Return Channels where all of the related ChannelDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_ALL?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  /** Return Channels where none of the related ChannelDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_NONE?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  /** Return Channels where one of the related ChannelDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_SINGLE?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  /** Return Channels where some of the related ChannelDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_SOME?: InputMaybe<ChannelDiscussionChannelsConnectionWhere>;
  /** Return Channels where all of the related DiscussionChannels match this filter */
  DiscussionChannels_ALL?: InputMaybe<DiscussionChannelWhere>;
  /** Return Channels where none of the related DiscussionChannels match this filter */
  DiscussionChannels_NONE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Channels where one of the related DiscussionChannels match this filter */
  DiscussionChannels_SINGLE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Channels where some of the related DiscussionChannels match this filter */
  DiscussionChannels_SOME?: InputMaybe<DiscussionChannelWhere>;
  ElevatedModRole?: InputMaybe<ModChannelRoleWhere>;
  ElevatedModRoleAggregate?: InputMaybe<ChannelElevatedModRoleAggregateInput>;
  ElevatedModRoleConnection?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
  ElevatedModRoleConnection_NOT?: InputMaybe<ChannelElevatedModRoleConnectionWhere>;
  ElevatedModRole_NOT?: InputMaybe<ModChannelRoleWhere>;
  EventChannelsAggregate?: InputMaybe<ChannelEventChannelsAggregateInput>;
  /** Return Channels where all of the related ChannelEventChannelsConnections match this filter */
  EventChannelsConnection_ALL?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  /** Return Channels where none of the related ChannelEventChannelsConnections match this filter */
  EventChannelsConnection_NONE?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  /** Return Channels where one of the related ChannelEventChannelsConnections match this filter */
  EventChannelsConnection_SINGLE?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  /** Return Channels where some of the related ChannelEventChannelsConnections match this filter */
  EventChannelsConnection_SOME?: InputMaybe<ChannelEventChannelsConnectionWhere>;
  /** Return Channels where all of the related EventChannels match this filter */
  EventChannels_ALL?: InputMaybe<EventChannelWhere>;
  /** Return Channels where none of the related EventChannels match this filter */
  EventChannels_NONE?: InputMaybe<EventChannelWhere>;
  /** Return Channels where one of the related EventChannels match this filter */
  EventChannels_SINGLE?: InputMaybe<EventChannelWhere>;
  /** Return Channels where some of the related EventChannels match this filter */
  EventChannels_SOME?: InputMaybe<EventChannelWhere>;
  IssuesAggregate?: InputMaybe<ChannelIssuesAggregateInput>;
  /** Return Channels where all of the related ChannelIssuesConnections match this filter */
  IssuesConnection_ALL?: InputMaybe<ChannelIssuesConnectionWhere>;
  /** Return Channels where none of the related ChannelIssuesConnections match this filter */
  IssuesConnection_NONE?: InputMaybe<ChannelIssuesConnectionWhere>;
  /** Return Channels where one of the related ChannelIssuesConnections match this filter */
  IssuesConnection_SINGLE?: InputMaybe<ChannelIssuesConnectionWhere>;
  /** Return Channels where some of the related ChannelIssuesConnections match this filter */
  IssuesConnection_SOME?: InputMaybe<ChannelIssuesConnectionWhere>;
  /** Return Channels where all of the related Issues match this filter */
  Issues_ALL?: InputMaybe<IssueWhere>;
  /** Return Channels where none of the related Issues match this filter */
  Issues_NONE?: InputMaybe<IssueWhere>;
  /** Return Channels where one of the related Issues match this filter */
  Issues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return Channels where some of the related Issues match this filter */
  Issues_SOME?: InputMaybe<IssueWhere>;
  ModeratorsAggregate?: InputMaybe<ChannelModeratorsAggregateInput>;
  /** Return Channels where all of the related ChannelModeratorsConnections match this filter */
  ModeratorsConnection_ALL?: InputMaybe<ChannelModeratorsConnectionWhere>;
  /** Return Channels where none of the related ChannelModeratorsConnections match this filter */
  ModeratorsConnection_NONE?: InputMaybe<ChannelModeratorsConnectionWhere>;
  /** Return Channels where one of the related ChannelModeratorsConnections match this filter */
  ModeratorsConnection_SINGLE?: InputMaybe<ChannelModeratorsConnectionWhere>;
  /** Return Channels where some of the related ChannelModeratorsConnections match this filter */
  ModeratorsConnection_SOME?: InputMaybe<ChannelModeratorsConnectionWhere>;
  /** Return Channels where all of the related ModerationProfiles match this filter */
  Moderators_ALL?: InputMaybe<ModerationProfileWhere>;
  /** Return Channels where none of the related ModerationProfiles match this filter */
  Moderators_NONE?: InputMaybe<ModerationProfileWhere>;
  /** Return Channels where one of the related ModerationProfiles match this filter */
  Moderators_SINGLE?: InputMaybe<ModerationProfileWhere>;
  /** Return Channels where some of the related ModerationProfiles match this filter */
  Moderators_SOME?: InputMaybe<ModerationProfileWhere>;
  NOT?: InputMaybe<ChannelWhere>;
  OR?: InputMaybe<Array<ChannelWhere>>;
  PendingModInvitesAggregate?: InputMaybe<ChannelPendingModInvitesAggregateInput>;
  /** Return Channels where all of the related ChannelPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_ALL?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  /** Return Channels where none of the related ChannelPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_NONE?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  /** Return Channels where one of the related ChannelPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_SINGLE?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  /** Return Channels where some of the related ChannelPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_SOME?: InputMaybe<ChannelPendingModInvitesConnectionWhere>;
  /** Return Channels where all of the related Users match this filter */
  PendingModInvites_ALL?: InputMaybe<UserWhere>;
  /** Return Channels where none of the related Users match this filter */
  PendingModInvites_NONE?: InputMaybe<UserWhere>;
  /** Return Channels where one of the related Users match this filter */
  PendingModInvites_SINGLE?: InputMaybe<UserWhere>;
  /** Return Channels where some of the related Users match this filter */
  PendingModInvites_SOME?: InputMaybe<UserWhere>;
  PendingOwnerInvitesAggregate?: InputMaybe<ChannelPendingOwnerInvitesAggregateInput>;
  /** Return Channels where all of the related ChannelPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_ALL?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  /** Return Channels where none of the related ChannelPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_NONE?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  /** Return Channels where one of the related ChannelPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_SINGLE?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  /** Return Channels where some of the related ChannelPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_SOME?: InputMaybe<ChannelPendingOwnerInvitesConnectionWhere>;
  /** Return Channels where all of the related Users match this filter */
  PendingOwnerInvites_ALL?: InputMaybe<UserWhere>;
  /** Return Channels where none of the related Users match this filter */
  PendingOwnerInvites_NONE?: InputMaybe<UserWhere>;
  /** Return Channels where one of the related Users match this filter */
  PendingOwnerInvites_SINGLE?: InputMaybe<UserWhere>;
  /** Return Channels where some of the related Users match this filter */
  PendingOwnerInvites_SOME?: InputMaybe<UserWhere>;
  RelatedChannelsAggregate?: InputMaybe<ChannelRelatedChannelsAggregateInput>;
  /** Return Channels where all of the related ChannelRelatedChannelsConnections match this filter */
  RelatedChannelsConnection_ALL?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  /** Return Channels where none of the related ChannelRelatedChannelsConnections match this filter */
  RelatedChannelsConnection_NONE?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  /** Return Channels where one of the related ChannelRelatedChannelsConnections match this filter */
  RelatedChannelsConnection_SINGLE?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  /** Return Channels where some of the related ChannelRelatedChannelsConnections match this filter */
  RelatedChannelsConnection_SOME?: InputMaybe<ChannelRelatedChannelsConnectionWhere>;
  /** Return Channels where all of the related Channels match this filter */
  RelatedChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Channels where none of the related Channels match this filter */
  RelatedChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Channels where one of the related Channels match this filter */
  RelatedChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Channels where some of the related Channels match this filter */
  RelatedChannels_SOME?: InputMaybe<ChannelWhere>;
  SuspendedModRole?: InputMaybe<ModChannelRoleWhere>;
  SuspendedModRoleAggregate?: InputMaybe<ChannelSuspendedModRoleAggregateInput>;
  SuspendedModRoleConnection?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
  SuspendedModRoleConnection_NOT?: InputMaybe<ChannelSuspendedModRoleConnectionWhere>;
  SuspendedModRole_NOT?: InputMaybe<ModChannelRoleWhere>;
  SuspendedModsAggregate?: InputMaybe<ChannelSuspendedModsAggregateInput>;
  /** Return Channels where all of the related ChannelSuspendedModsConnections match this filter */
  SuspendedModsConnection_ALL?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  /** Return Channels where none of the related ChannelSuspendedModsConnections match this filter */
  SuspendedModsConnection_NONE?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  /** Return Channels where one of the related ChannelSuspendedModsConnections match this filter */
  SuspendedModsConnection_SINGLE?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  /** Return Channels where some of the related ChannelSuspendedModsConnections match this filter */
  SuspendedModsConnection_SOME?: InputMaybe<ChannelSuspendedModsConnectionWhere>;
  /** Return Channels where all of the related Suspensions match this filter */
  SuspendedMods_ALL?: InputMaybe<SuspensionWhere>;
  /** Return Channels where none of the related Suspensions match this filter */
  SuspendedMods_NONE?: InputMaybe<SuspensionWhere>;
  /** Return Channels where one of the related Suspensions match this filter */
  SuspendedMods_SINGLE?: InputMaybe<SuspensionWhere>;
  /** Return Channels where some of the related Suspensions match this filter */
  SuspendedMods_SOME?: InputMaybe<SuspensionWhere>;
  SuspendedRole?: InputMaybe<ChannelRoleWhere>;
  SuspendedRoleAggregate?: InputMaybe<ChannelSuspendedRoleAggregateInput>;
  SuspendedRoleConnection?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
  SuspendedRoleConnection_NOT?: InputMaybe<ChannelSuspendedRoleConnectionWhere>;
  SuspendedRole_NOT?: InputMaybe<ChannelRoleWhere>;
  SuspendedUsersAggregate?: InputMaybe<ChannelSuspendedUsersAggregateInput>;
  /** Return Channels where all of the related ChannelSuspendedUsersConnections match this filter */
  SuspendedUsersConnection_ALL?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  /** Return Channels where none of the related ChannelSuspendedUsersConnections match this filter */
  SuspendedUsersConnection_NONE?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  /** Return Channels where one of the related ChannelSuspendedUsersConnections match this filter */
  SuspendedUsersConnection_SINGLE?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  /** Return Channels where some of the related ChannelSuspendedUsersConnections match this filter */
  SuspendedUsersConnection_SOME?: InputMaybe<ChannelSuspendedUsersConnectionWhere>;
  /** Return Channels where all of the related Suspensions match this filter */
  SuspendedUsers_ALL?: InputMaybe<SuspensionWhere>;
  /** Return Channels where none of the related Suspensions match this filter */
  SuspendedUsers_NONE?: InputMaybe<SuspensionWhere>;
  /** Return Channels where one of the related Suspensions match this filter */
  SuspendedUsers_SINGLE?: InputMaybe<SuspensionWhere>;
  /** Return Channels where some of the related Suspensions match this filter */
  SuspendedUsers_SOME?: InputMaybe<SuspensionWhere>;
  TagsAggregate?: InputMaybe<ChannelTagsAggregateInput>;
  /** Return Channels where all of the related ChannelTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<ChannelTagsConnectionWhere>;
  /** Return Channels where none of the related ChannelTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<ChannelTagsConnectionWhere>;
  /** Return Channels where one of the related ChannelTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<ChannelTagsConnectionWhere>;
  /** Return Channels where some of the related ChannelTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<ChannelTagsConnectionWhere>;
  /** Return Channels where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Channels where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Channels where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Channels where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  WikiHomePage?: InputMaybe<WikiPageWhere>;
  WikiHomePageAggregate?: InputMaybe<ChannelWikiHomePageAggregateInput>;
  WikiHomePageConnection?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
  WikiHomePageConnection_NOT?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
  WikiHomePage_NOT?: InputMaybe<WikiPageWhere>;
  channelBannerURL?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelBannerURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelBannerURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelIconURL?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelIconURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelIconURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  eventsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  feedbackEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  rules_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  uniqueName?: InputMaybe<Scalars['String']['input']>;
  uniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  uniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  uniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  uniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  uniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  wikiEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ChannelWikiHomePageAggregateInput = {
  AND?: InputMaybe<Array<ChannelWikiHomePageAggregateInput>>;
  NOT?: InputMaybe<ChannelWikiHomePageAggregateInput>;
  OR?: InputMaybe<Array<ChannelWikiHomePageAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ChannelWikiHomePageNodeAggregationWhereInput>;
};

export type ChannelWikiHomePageConnectFieldInput = {
  connect?: InputMaybe<WikiPageConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<WikiPageConnectWhere>;
};

export type ChannelWikiHomePageConnection = {
  __typename?: 'ChannelWikiHomePageConnection';
  edges: Array<ChannelWikiHomePageRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ChannelWikiHomePageConnectionSort = {
  node?: InputMaybe<WikiPageSort>;
};

export type ChannelWikiHomePageConnectionWhere = {
  AND?: InputMaybe<Array<ChannelWikiHomePageConnectionWhere>>;
  NOT?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
  OR?: InputMaybe<Array<ChannelWikiHomePageConnectionWhere>>;
  node?: InputMaybe<WikiPageWhere>;
};

export type ChannelWikiHomePageCreateFieldInput = {
  node: WikiPageCreateInput;
};

export type ChannelWikiHomePageDeleteFieldInput = {
  delete?: InputMaybe<WikiPageDeleteInput>;
  where?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
};

export type ChannelWikiHomePageDisconnectFieldInput = {
  disconnect?: InputMaybe<WikiPageDisconnectInput>;
  where?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
};

export type ChannelWikiHomePageFieldInput = {
  connect?: InputMaybe<ChannelWikiHomePageConnectFieldInput>;
  create?: InputMaybe<ChannelWikiHomePageCreateFieldInput>;
};

export type ChannelWikiHomePageNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ChannelWikiHomePageNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ChannelWikiHomePageNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ChannelWikiHomePageNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  slug_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  slug_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ChannelWikiHomePageRelationship = {
  __typename?: 'ChannelWikiHomePageRelationship';
  cursor: Scalars['String']['output'];
  node: WikiPage;
};

export type ChannelWikiHomePageUpdateConnectionInput = {
  node?: InputMaybe<WikiPageUpdateInput>;
};

export type ChannelWikiHomePageUpdateFieldInput = {
  connect?: InputMaybe<ChannelWikiHomePageConnectFieldInput>;
  create?: InputMaybe<ChannelWikiHomePageCreateFieldInput>;
  delete?: InputMaybe<ChannelWikiHomePageDeleteFieldInput>;
  disconnect?: InputMaybe<ChannelWikiHomePageDisconnectFieldInput>;
  update?: InputMaybe<ChannelWikiHomePageUpdateConnectionInput>;
  where?: InputMaybe<ChannelWikiHomePageConnectionWhere>;
};

export type ChannelWikiPageWikiHomePageAggregationSelection = {
  __typename?: 'ChannelWikiPageWikiHomePageAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ChannelWikiPageWikiHomePageNodeAggregateSelection>;
};

export type ChannelWikiPageWikiHomePageNodeAggregateSelection = {
  __typename?: 'ChannelWikiPageWikiHomePageNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  slug: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type ChannelsConnection = {
  __typename?: 'ChannelsConnection';
  edges: Array<ChannelEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Comment = {
  __typename?: 'Comment';
  Channel?: Maybe<Channel>;
  ChannelAggregate?: Maybe<CommentChannelChannelAggregationSelection>;
  ChannelConnection: CommentChannelConnection;
  ChildComments: Array<Comment>;
  ChildCommentsAggregate?: Maybe<CommentCommentChildCommentsAggregationSelection>;
  ChildCommentsConnection: CommentChildCommentsConnection;
  CommentAuthor?: Maybe<CommentAuthor>;
  CommentAuthorConnection: CommentCommentAuthorConnection;
  DiscussionChannel?: Maybe<DiscussionChannel>;
  DiscussionChannelAggregate?: Maybe<CommentDiscussionChannelDiscussionChannelAggregationSelection>;
  DiscussionChannelConnection: CommentDiscussionChannelConnection;
  Event?: Maybe<Event>;
  EventAggregate?: Maybe<CommentEventEventAggregationSelection>;
  EventConnection: CommentEventConnection;
  FeedbackComments: Array<Comment>;
  FeedbackCommentsAggregate?: Maybe<CommentCommentFeedbackCommentsAggregationSelection>;
  FeedbackCommentsConnection: CommentFeedbackCommentsConnection;
  GivesFeedbackOnComment?: Maybe<Comment>;
  GivesFeedbackOnCommentAggregate?: Maybe<CommentCommentGivesFeedbackOnCommentAggregationSelection>;
  GivesFeedbackOnCommentConnection: CommentGivesFeedbackOnCommentConnection;
  GivesFeedbackOnDiscussion?: Maybe<Discussion>;
  GivesFeedbackOnDiscussionAggregate?: Maybe<CommentDiscussionGivesFeedbackOnDiscussionAggregationSelection>;
  GivesFeedbackOnDiscussionConnection: CommentGivesFeedbackOnDiscussionConnection;
  GivesFeedbackOnEvent?: Maybe<Event>;
  GivesFeedbackOnEventAggregate?: Maybe<CommentEventGivesFeedbackOnEventAggregationSelection>;
  GivesFeedbackOnEventConnection: CommentGivesFeedbackOnEventConnection;
  Issue?: Maybe<Issue>;
  IssueAggregate?: Maybe<CommentIssueIssueAggregationSelection>;
  IssueConnection: CommentIssueConnection;
  ModerationAction?: Maybe<ModerationAction>;
  ModerationActionAggregate?: Maybe<CommentModerationActionModerationActionAggregationSelection>;
  ModerationActionConnection: CommentModerationActionConnection;
  ParentComment?: Maybe<Comment>;
  ParentCommentAggregate?: Maybe<CommentCommentParentCommentAggregationSelection>;
  ParentCommentConnection: CommentParentCommentConnection;
  RelatedIssues: Array<Issue>;
  RelatedIssuesAggregate?: Maybe<CommentIssueRelatedIssuesAggregationSelection>;
  RelatedIssuesConnection: CommentRelatedIssuesConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<CommentTagTagsAggregationSelection>;
  TagsConnection: CommentTagsConnection;
  UpvotedByUsers: Array<User>;
  UpvotedByUsersAggregate?: Maybe<CommentUserUpvotedByUsersAggregationSelection>;
  UpvotedByUsersConnection: CommentUpvotedByUsersConnection;
  archived?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  emoji?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  isFeedbackComment?: Maybe<Scalars['Boolean']['output']>;
  isRootComment: Scalars['Boolean']['output'];
  text?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  weightedVotesCount?: Maybe<Scalars['Float']['output']>;
};


export type CommentChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type CommentChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type CommentChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentChannelConnectionSort>>;
  where?: InputMaybe<CommentChannelConnectionWhere>;
};


export type CommentChildCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentChildCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentChildCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentChildCommentsConnectionSort>>;
  where?: InputMaybe<CommentChildCommentsConnectionWhere>;
};


export type CommentCommentAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<CommentAuthorWhere>;
};


export type CommentCommentAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CommentCommentAuthorConnectionWhere>;
};


export type CommentDiscussionChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type CommentDiscussionChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type CommentDiscussionChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentDiscussionChannelConnectionSort>>;
  where?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
};


export type CommentEventArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type CommentEventAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type CommentEventConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentEventConnectionSort>>;
  where?: InputMaybe<CommentEventConnectionWhere>;
};


export type CommentFeedbackCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentFeedbackCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentFeedbackCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentFeedbackCommentsConnectionSort>>;
  where?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
};


export type CommentGivesFeedbackOnCommentArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentGivesFeedbackOnCommentAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentGivesFeedbackOnCommentConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentGivesFeedbackOnCommentConnectionSort>>;
  where?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
};


export type CommentGivesFeedbackOnDiscussionArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type CommentGivesFeedbackOnDiscussionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type CommentGivesFeedbackOnDiscussionConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionConnectionSort>>;
  where?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
};


export type CommentGivesFeedbackOnEventArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type CommentGivesFeedbackOnEventAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type CommentGivesFeedbackOnEventConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentGivesFeedbackOnEventConnectionSort>>;
  where?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
};


export type CommentIssueArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type CommentIssueAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type CommentIssueConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentIssueConnectionSort>>;
  where?: InputMaybe<CommentIssueConnectionWhere>;
};


export type CommentModerationActionArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationActionOptions>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type CommentModerationActionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type CommentModerationActionConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentModerationActionConnectionSort>>;
  where?: InputMaybe<CommentModerationActionConnectionWhere>;
};


export type CommentParentCommentArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentParentCommentAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type CommentParentCommentConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentParentCommentConnectionSort>>;
  where?: InputMaybe<CommentParentCommentConnectionWhere>;
};


export type CommentRelatedIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type CommentRelatedIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type CommentRelatedIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentRelatedIssuesConnectionSort>>;
  where?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
};


export type CommentTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type CommentTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type CommentTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentTagsConnectionSort>>;
  where?: InputMaybe<CommentTagsConnectionWhere>;
};


export type CommentUpvotedByUsersArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type CommentUpvotedByUsersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type CommentUpvotedByUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<CommentUpvotedByUsersConnectionSort>>;
  where?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
};

export type CommentAggregateSelection = {
  __typename?: 'CommentAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentAuthor = ModerationProfile | User;

export type CommentAuthorWhere = {
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  User?: InputMaybe<UserWhere>;
};

export type CommentChannelAggregateInput = {
  AND?: InputMaybe<Array<CommentChannelAggregateInput>>;
  NOT?: InputMaybe<CommentChannelAggregateInput>;
  OR?: InputMaybe<Array<CommentChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentChannelNodeAggregationWhereInput>;
};

export type CommentChannelChannelAggregationSelection = {
  __typename?: 'CommentChannelChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentChannelChannelNodeAggregateSelection>;
};

export type CommentChannelChannelNodeAggregateSelection = {
  __typename?: 'CommentChannelChannelNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type CommentChannelConnectFieldInput = {
  connect?: InputMaybe<ChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type CommentChannelConnectOrCreateFieldInput = {
  onCreate: CommentChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type CommentChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type CommentChannelConnection = {
  __typename?: 'CommentChannelConnection';
  edges: Array<CommentChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentChannelConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type CommentChannelConnectionWhere = {
  AND?: InputMaybe<Array<CommentChannelConnectionWhere>>;
  NOT?: InputMaybe<CommentChannelConnectionWhere>;
  OR?: InputMaybe<Array<CommentChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type CommentChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type CommentChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<CommentChannelConnectionWhere>;
};

export type CommentChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<CommentChannelConnectionWhere>;
};

export type CommentChannelFieldInput = {
  connect?: InputMaybe<CommentChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentChannelCreateFieldInput>;
};

export type CommentChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentChannelNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentChannelRelationship = {
  __typename?: 'CommentChannelRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type CommentChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type CommentChannelUpdateFieldInput = {
  connect?: InputMaybe<CommentChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentChannelCreateFieldInput>;
  delete?: InputMaybe<CommentChannelDeleteFieldInput>;
  disconnect?: InputMaybe<CommentChannelDisconnectFieldInput>;
  update?: InputMaybe<CommentChannelUpdateConnectionInput>;
  where?: InputMaybe<CommentChannelConnectionWhere>;
};

export type CommentChildCommentsAggregateInput = {
  AND?: InputMaybe<Array<CommentChildCommentsAggregateInput>>;
  NOT?: InputMaybe<CommentChildCommentsAggregateInput>;
  OR?: InputMaybe<Array<CommentChildCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentChildCommentsNodeAggregationWhereInput>;
};

export type CommentChildCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type CommentChildCommentsConnection = {
  __typename?: 'CommentChildCommentsConnection';
  edges: Array<CommentChildCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentChildCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type CommentChildCommentsConnectionWhere = {
  AND?: InputMaybe<Array<CommentChildCommentsConnectionWhere>>;
  NOT?: InputMaybe<CommentChildCommentsConnectionWhere>;
  OR?: InputMaybe<Array<CommentChildCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type CommentChildCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type CommentChildCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentChildCommentsConnectionWhere>;
};

export type CommentChildCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<CommentChildCommentsConnectionWhere>;
};

export type CommentChildCommentsFieldInput = {
  connect?: InputMaybe<Array<CommentChildCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentChildCommentsCreateFieldInput>>;
};

export type CommentChildCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentChildCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentChildCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentChildCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentChildCommentsRelationship = {
  __typename?: 'CommentChildCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentChildCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type CommentChildCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentChildCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentChildCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentChildCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentChildCommentsDisconnectFieldInput>>;
  update?: InputMaybe<CommentChildCommentsUpdateConnectionInput>;
  where?: InputMaybe<CommentChildCommentsConnectionWhere>;
};

export type CommentCommentAuthorConnectInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileConnectFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserConnectFieldInput>;
};

export type CommentCommentAuthorConnectOrCreateInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileConnectOrCreateFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserConnectOrCreateFieldInput>;
};

export type CommentCommentAuthorConnection = {
  __typename?: 'CommentCommentAuthorConnection';
  edges: Array<CommentCommentAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentCommentAuthorConnectionWhere = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
  User?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
};

export type CommentCommentAuthorCreateFieldInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileCreateFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserCreateFieldInput>;
};

export type CommentCommentAuthorCreateInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserFieldInput>;
};

export type CommentCommentAuthorDeleteInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileDeleteFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserDeleteFieldInput>;
};

export type CommentCommentAuthorDisconnectInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileDisconnectFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserDisconnectFieldInput>;
};

export type CommentCommentAuthorModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type CommentCommentAuthorModerationProfileConnectOrCreateFieldInput = {
  onCreate: CommentCommentAuthorModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type CommentCommentAuthorModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type CommentCommentAuthorModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<CommentCommentAuthorModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<CommentCommentAuthorModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type CommentCommentAuthorModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type CommentCommentAuthorModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
};

export type CommentCommentAuthorModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
};

export type CommentCommentAuthorModerationProfileFieldInput = {
  connect?: InputMaybe<CommentCommentAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentCommentAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentCommentAuthorModerationProfileCreateFieldInput>;
};

export type CommentCommentAuthorModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type CommentCommentAuthorModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<CommentCommentAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentCommentAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentCommentAuthorModerationProfileCreateFieldInput>;
  delete?: InputMaybe<CommentCommentAuthorModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<CommentCommentAuthorModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<CommentCommentAuthorModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<CommentCommentAuthorModerationProfileConnectionWhere>;
};

export type CommentCommentAuthorRelationship = {
  __typename?: 'CommentCommentAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: CommentAuthor;
};

export type CommentCommentAuthorUpdateInput = {
  ModerationProfile?: InputMaybe<CommentCommentAuthorModerationProfileUpdateFieldInput>;
  User?: InputMaybe<CommentCommentAuthorUserUpdateFieldInput>;
};

export type CommentCommentAuthorUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type CommentCommentAuthorUserConnectOrCreateFieldInput = {
  onCreate: CommentCommentAuthorUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type CommentCommentAuthorUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type CommentCommentAuthorUserConnectionWhere = {
  AND?: InputMaybe<Array<CommentCommentAuthorUserConnectionWhere>>;
  NOT?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
  OR?: InputMaybe<Array<CommentCommentAuthorUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type CommentCommentAuthorUserCreateFieldInput = {
  node: UserCreateInput;
};

export type CommentCommentAuthorUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
};

export type CommentCommentAuthorUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
};

export type CommentCommentAuthorUserFieldInput = {
  connect?: InputMaybe<CommentCommentAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentCommentAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentCommentAuthorUserCreateFieldInput>;
};

export type CommentCommentAuthorUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type CommentCommentAuthorUserUpdateFieldInput = {
  connect?: InputMaybe<CommentCommentAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<CommentCommentAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<CommentCommentAuthorUserCreateFieldInput>;
  delete?: InputMaybe<CommentCommentAuthorUserDeleteFieldInput>;
  disconnect?: InputMaybe<CommentCommentAuthorUserDisconnectFieldInput>;
  update?: InputMaybe<CommentCommentAuthorUserUpdateConnectionInput>;
  where?: InputMaybe<CommentCommentAuthorUserConnectionWhere>;
};

export type CommentCommentChildCommentsAggregationSelection = {
  __typename?: 'CommentCommentChildCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentCommentChildCommentsNodeAggregateSelection>;
};

export type CommentCommentChildCommentsNodeAggregateSelection = {
  __typename?: 'CommentCommentChildCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentCommentFeedbackCommentsAggregationSelection = {
  __typename?: 'CommentCommentFeedbackCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentCommentFeedbackCommentsNodeAggregateSelection>;
};

export type CommentCommentFeedbackCommentsNodeAggregateSelection = {
  __typename?: 'CommentCommentFeedbackCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentCommentGivesFeedbackOnCommentAggregationSelection = {
  __typename?: 'CommentCommentGivesFeedbackOnCommentAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentCommentGivesFeedbackOnCommentNodeAggregateSelection>;
};

export type CommentCommentGivesFeedbackOnCommentNodeAggregateSelection = {
  __typename?: 'CommentCommentGivesFeedbackOnCommentNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentCommentParentCommentAggregationSelection = {
  __typename?: 'CommentCommentParentCommentAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentCommentParentCommentNodeAggregateSelection>;
};

export type CommentCommentParentCommentNodeAggregateSelection = {
  __typename?: 'CommentCommentParentCommentNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentConnectInput = {
  Channel?: InputMaybe<CommentChannelConnectFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsConnectFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorConnectInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelConnectFieldInput>;
  Event?: InputMaybe<CommentEventConnectFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsConnectFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentConnectFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventConnectFieldInput>;
  Issue?: InputMaybe<CommentIssueConnectFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionConnectFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentConnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesConnectFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsConnectFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersConnectFieldInput>>;
};

export type CommentConnectOrCreateInput = {
  Channel?: InputMaybe<CommentChannelConnectOrCreateFieldInput>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorConnectOrCreateInput>;
  Tags?: InputMaybe<Array<CommentTagsConnectOrCreateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersConnectOrCreateFieldInput>>;
};

export type CommentConnectWhere = {
  node: CommentWhere;
};

export type CommentCreateInput = {
  Channel?: InputMaybe<CommentChannelFieldInput>;
  ChildComments?: InputMaybe<CommentChildCommentsFieldInput>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorCreateInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelFieldInput>;
  Event?: InputMaybe<CommentEventFieldInput>;
  FeedbackComments?: InputMaybe<CommentFeedbackCommentsFieldInput>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventFieldInput>;
  Issue?: InputMaybe<CommentIssueFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentFieldInput>;
  RelatedIssues?: InputMaybe<CommentRelatedIssuesFieldInput>;
  Tags?: InputMaybe<CommentTagsFieldInput>;
  UpvotedByUsers?: InputMaybe<CommentUpvotedByUsersFieldInput>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  isFeedbackComment?: InputMaybe<Scalars['Boolean']['input']>;
  isRootComment: Scalars['Boolean']['input'];
  text?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentDeleteInput = {
  Channel?: InputMaybe<CommentChannelDeleteFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsDeleteFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorDeleteInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelDeleteFieldInput>;
  Event?: InputMaybe<CommentEventDeleteFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsDeleteFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentDeleteFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionDeleteFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventDeleteFieldInput>;
  Issue?: InputMaybe<CommentIssueDeleteFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionDeleteFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentDeleteFieldInput>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesDeleteFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsDeleteFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersDeleteFieldInput>>;
};

export type CommentDisconnectInput = {
  Channel?: InputMaybe<CommentChannelDisconnectFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsDisconnectFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorDisconnectInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelDisconnectFieldInput>;
  Event?: InputMaybe<CommentEventDisconnectFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsDisconnectFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentDisconnectFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionDisconnectFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventDisconnectFieldInput>;
  Issue?: InputMaybe<CommentIssueDisconnectFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionDisconnectFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentDisconnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesDisconnectFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsDisconnectFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersDisconnectFieldInput>>;
};

export type CommentDiscussionChannelAggregateInput = {
  AND?: InputMaybe<Array<CommentDiscussionChannelAggregateInput>>;
  NOT?: InputMaybe<CommentDiscussionChannelAggregateInput>;
  OR?: InputMaybe<Array<CommentDiscussionChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentDiscussionChannelNodeAggregationWhereInput>;
};

export type CommentDiscussionChannelConnectFieldInput = {
  connect?: InputMaybe<DiscussionChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionChannelConnectWhere>;
};

export type CommentDiscussionChannelConnection = {
  __typename?: 'CommentDiscussionChannelConnection';
  edges: Array<CommentDiscussionChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentDiscussionChannelConnectionSort = {
  node?: InputMaybe<DiscussionChannelSort>;
};

export type CommentDiscussionChannelConnectionWhere = {
  AND?: InputMaybe<Array<CommentDiscussionChannelConnectionWhere>>;
  NOT?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
  OR?: InputMaybe<Array<CommentDiscussionChannelConnectionWhere>>;
  node?: InputMaybe<DiscussionChannelWhere>;
};

export type CommentDiscussionChannelCreateFieldInput = {
  node: DiscussionChannelCreateInput;
};

export type CommentDiscussionChannelDeleteFieldInput = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
};

export type CommentDiscussionChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionChannelDisconnectInput>;
  where?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
};

export type CommentDiscussionChannelDiscussionChannelAggregationSelection = {
  __typename?: 'CommentDiscussionChannelDiscussionChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentDiscussionChannelDiscussionChannelNodeAggregateSelection>;
};

export type CommentDiscussionChannelDiscussionChannelNodeAggregateSelection = {
  __typename?: 'CommentDiscussionChannelDiscussionChannelNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type CommentDiscussionChannelFieldInput = {
  connect?: InputMaybe<CommentDiscussionChannelConnectFieldInput>;
  create?: InputMaybe<CommentDiscussionChannelCreateFieldInput>;
};

export type CommentDiscussionChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentDiscussionChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentDiscussionChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentDiscussionChannelNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentDiscussionChannelRelationship = {
  __typename?: 'CommentDiscussionChannelRelationship';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type CommentDiscussionChannelUpdateConnectionInput = {
  node?: InputMaybe<DiscussionChannelUpdateInput>;
};

export type CommentDiscussionChannelUpdateFieldInput = {
  connect?: InputMaybe<CommentDiscussionChannelConnectFieldInput>;
  create?: InputMaybe<CommentDiscussionChannelCreateFieldInput>;
  delete?: InputMaybe<CommentDiscussionChannelDeleteFieldInput>;
  disconnect?: InputMaybe<CommentDiscussionChannelDisconnectFieldInput>;
  update?: InputMaybe<CommentDiscussionChannelUpdateConnectionInput>;
  where?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
};

export type CommentDiscussionGivesFeedbackOnDiscussionAggregationSelection = {
  __typename?: 'CommentDiscussionGivesFeedbackOnDiscussionAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentDiscussionGivesFeedbackOnDiscussionNodeAggregateSelection>;
};

export type CommentDiscussionGivesFeedbackOnDiscussionNodeAggregateSelection = {
  __typename?: 'CommentDiscussionGivesFeedbackOnDiscussionNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type CommentEdge = {
  __typename?: 'CommentEdge';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentEventAggregateInput = {
  AND?: InputMaybe<Array<CommentEventAggregateInput>>;
  NOT?: InputMaybe<CommentEventAggregateInput>;
  OR?: InputMaybe<Array<CommentEventAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentEventNodeAggregationWhereInput>;
};

export type CommentEventConnectFieldInput = {
  connect?: InputMaybe<EventConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type CommentEventConnection = {
  __typename?: 'CommentEventConnection';
  edges: Array<CommentEventRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentEventConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type CommentEventConnectionWhere = {
  AND?: InputMaybe<Array<CommentEventConnectionWhere>>;
  NOT?: InputMaybe<CommentEventConnectionWhere>;
  OR?: InputMaybe<Array<CommentEventConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type CommentEventCreateFieldInput = {
  node: EventCreateInput;
};

export type CommentEventDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<CommentEventConnectionWhere>;
};

export type CommentEventDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<CommentEventConnectionWhere>;
};

export type CommentEventEventAggregationSelection = {
  __typename?: 'CommentEventEventAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentEventEventNodeAggregateSelection>;
};

export type CommentEventEventNodeAggregateSelection = {
  __typename?: 'CommentEventEventNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type CommentEventFieldInput = {
  connect?: InputMaybe<CommentEventConnectFieldInput>;
  create?: InputMaybe<CommentEventCreateFieldInput>;
};

export type CommentEventGivesFeedbackOnEventAggregationSelection = {
  __typename?: 'CommentEventGivesFeedbackOnEventAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentEventGivesFeedbackOnEventNodeAggregateSelection>;
};

export type CommentEventGivesFeedbackOnEventNodeAggregateSelection = {
  __typename?: 'CommentEventGivesFeedbackOnEventNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type CommentEventNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentEventNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentEventNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentEventNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentEventRelationship = {
  __typename?: 'CommentEventRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type CommentEventUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type CommentEventUpdateFieldInput = {
  connect?: InputMaybe<CommentEventConnectFieldInput>;
  create?: InputMaybe<CommentEventCreateFieldInput>;
  delete?: InputMaybe<CommentEventDeleteFieldInput>;
  disconnect?: InputMaybe<CommentEventDisconnectFieldInput>;
  update?: InputMaybe<CommentEventUpdateConnectionInput>;
  where?: InputMaybe<CommentEventConnectionWhere>;
};

export type CommentFeedbackCommentsAggregateInput = {
  AND?: InputMaybe<Array<CommentFeedbackCommentsAggregateInput>>;
  NOT?: InputMaybe<CommentFeedbackCommentsAggregateInput>;
  OR?: InputMaybe<Array<CommentFeedbackCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentFeedbackCommentsNodeAggregationWhereInput>;
};

export type CommentFeedbackCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type CommentFeedbackCommentsConnection = {
  __typename?: 'CommentFeedbackCommentsConnection';
  edges: Array<CommentFeedbackCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentFeedbackCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type CommentFeedbackCommentsConnectionWhere = {
  AND?: InputMaybe<Array<CommentFeedbackCommentsConnectionWhere>>;
  NOT?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  OR?: InputMaybe<Array<CommentFeedbackCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type CommentFeedbackCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type CommentFeedbackCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
};

export type CommentFeedbackCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
};

export type CommentFeedbackCommentsFieldInput = {
  connect?: InputMaybe<Array<CommentFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentFeedbackCommentsCreateFieldInput>>;
};

export type CommentFeedbackCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentFeedbackCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentFeedbackCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentFeedbackCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentFeedbackCommentsRelationship = {
  __typename?: 'CommentFeedbackCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentFeedbackCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type CommentFeedbackCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<CommentFeedbackCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentFeedbackCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentFeedbackCommentsDisconnectFieldInput>>;
  update?: InputMaybe<CommentFeedbackCommentsUpdateConnectionInput>;
  where?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
};

export type CommentGivesFeedbackOnCommentAggregateInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnCommentAggregateInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnCommentAggregateInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnCommentAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentGivesFeedbackOnCommentNodeAggregationWhereInput>;
};

export type CommentGivesFeedbackOnCommentConnectFieldInput = {
  connect?: InputMaybe<CommentConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type CommentGivesFeedbackOnCommentConnection = {
  __typename?: 'CommentGivesFeedbackOnCommentConnection';
  edges: Array<CommentGivesFeedbackOnCommentRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentGivesFeedbackOnCommentConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type CommentGivesFeedbackOnCommentConnectionWhere = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnCommentConnectionWhere>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnCommentConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type CommentGivesFeedbackOnCommentCreateFieldInput = {
  node: CommentCreateInput;
};

export type CommentGivesFeedbackOnCommentDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
};

export type CommentGivesFeedbackOnCommentDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
};

export type CommentGivesFeedbackOnCommentFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnCommentConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnCommentCreateFieldInput>;
};

export type CommentGivesFeedbackOnCommentNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnCommentNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnCommentNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnCommentNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentGivesFeedbackOnCommentRelationship = {
  __typename?: 'CommentGivesFeedbackOnCommentRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentGivesFeedbackOnCommentUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type CommentGivesFeedbackOnCommentUpdateFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnCommentConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnCommentCreateFieldInput>;
  delete?: InputMaybe<CommentGivesFeedbackOnCommentDeleteFieldInput>;
  disconnect?: InputMaybe<CommentGivesFeedbackOnCommentDisconnectFieldInput>;
  update?: InputMaybe<CommentGivesFeedbackOnCommentUpdateConnectionInput>;
  where?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
};

export type CommentGivesFeedbackOnDiscussionAggregateInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionAggregateInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnDiscussionAggregateInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput>;
};

export type CommentGivesFeedbackOnDiscussionConnectFieldInput = {
  connect?: InputMaybe<DiscussionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type CommentGivesFeedbackOnDiscussionConnection = {
  __typename?: 'CommentGivesFeedbackOnDiscussionConnection';
  edges: Array<CommentGivesFeedbackOnDiscussionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentGivesFeedbackOnDiscussionConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type CommentGivesFeedbackOnDiscussionConnectionWhere = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionConnectionWhere>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type CommentGivesFeedbackOnDiscussionCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type CommentGivesFeedbackOnDiscussionDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
};

export type CommentGivesFeedbackOnDiscussionDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
};

export type CommentGivesFeedbackOnDiscussionFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnDiscussionCreateFieldInput>;
};

export type CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnDiscussionNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentGivesFeedbackOnDiscussionRelationship = {
  __typename?: 'CommentGivesFeedbackOnDiscussionRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type CommentGivesFeedbackOnDiscussionUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type CommentGivesFeedbackOnDiscussionUpdateFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnDiscussionCreateFieldInput>;
  delete?: InputMaybe<CommentGivesFeedbackOnDiscussionDeleteFieldInput>;
  disconnect?: InputMaybe<CommentGivesFeedbackOnDiscussionDisconnectFieldInput>;
  update?: InputMaybe<CommentGivesFeedbackOnDiscussionUpdateConnectionInput>;
  where?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
};

export type CommentGivesFeedbackOnEventAggregateInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnEventAggregateInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnEventAggregateInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnEventAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentGivesFeedbackOnEventNodeAggregationWhereInput>;
};

export type CommentGivesFeedbackOnEventConnectFieldInput = {
  connect?: InputMaybe<EventConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type CommentGivesFeedbackOnEventConnection = {
  __typename?: 'CommentGivesFeedbackOnEventConnection';
  edges: Array<CommentGivesFeedbackOnEventRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentGivesFeedbackOnEventConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type CommentGivesFeedbackOnEventConnectionWhere = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnEventConnectionWhere>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnEventConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type CommentGivesFeedbackOnEventCreateFieldInput = {
  node: EventCreateInput;
};

export type CommentGivesFeedbackOnEventDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
};

export type CommentGivesFeedbackOnEventDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
};

export type CommentGivesFeedbackOnEventFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnEventConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnEventCreateFieldInput>;
};

export type CommentGivesFeedbackOnEventNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentGivesFeedbackOnEventNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentGivesFeedbackOnEventNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentGivesFeedbackOnEventNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentGivesFeedbackOnEventRelationship = {
  __typename?: 'CommentGivesFeedbackOnEventRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type CommentGivesFeedbackOnEventUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type CommentGivesFeedbackOnEventUpdateFieldInput = {
  connect?: InputMaybe<CommentGivesFeedbackOnEventConnectFieldInput>;
  create?: InputMaybe<CommentGivesFeedbackOnEventCreateFieldInput>;
  delete?: InputMaybe<CommentGivesFeedbackOnEventDeleteFieldInput>;
  disconnect?: InputMaybe<CommentGivesFeedbackOnEventDisconnectFieldInput>;
  update?: InputMaybe<CommentGivesFeedbackOnEventUpdateConnectionInput>;
  where?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
};

export type CommentIssueAggregateInput = {
  AND?: InputMaybe<Array<CommentIssueAggregateInput>>;
  NOT?: InputMaybe<CommentIssueAggregateInput>;
  OR?: InputMaybe<Array<CommentIssueAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentIssueNodeAggregationWhereInput>;
};

export type CommentIssueConnectFieldInput = {
  connect?: InputMaybe<IssueConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type CommentIssueConnection = {
  __typename?: 'CommentIssueConnection';
  edges: Array<CommentIssueRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentIssueConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type CommentIssueConnectionWhere = {
  AND?: InputMaybe<Array<CommentIssueConnectionWhere>>;
  NOT?: InputMaybe<CommentIssueConnectionWhere>;
  OR?: InputMaybe<Array<CommentIssueConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type CommentIssueCreateFieldInput = {
  node: IssueCreateInput;
};

export type CommentIssueDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<CommentIssueConnectionWhere>;
};

export type CommentIssueDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<CommentIssueConnectionWhere>;
};

export type CommentIssueFieldInput = {
  connect?: InputMaybe<CommentIssueConnectFieldInput>;
  create?: InputMaybe<CommentIssueCreateFieldInput>;
};

export type CommentIssueIssueAggregationSelection = {
  __typename?: 'CommentIssueIssueAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentIssueIssueNodeAggregateSelection>;
};

export type CommentIssueIssueNodeAggregateSelection = {
  __typename?: 'CommentIssueIssueNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type CommentIssueNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentIssueNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentIssueNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentIssueNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentIssueRelatedIssuesAggregationSelection = {
  __typename?: 'CommentIssueRelatedIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentIssueRelatedIssuesNodeAggregateSelection>;
};

export type CommentIssueRelatedIssuesNodeAggregateSelection = {
  __typename?: 'CommentIssueRelatedIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type CommentIssueRelationship = {
  __typename?: 'CommentIssueRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type CommentIssueUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type CommentIssueUpdateFieldInput = {
  connect?: InputMaybe<CommentIssueConnectFieldInput>;
  create?: InputMaybe<CommentIssueCreateFieldInput>;
  delete?: InputMaybe<CommentIssueDeleteFieldInput>;
  disconnect?: InputMaybe<CommentIssueDisconnectFieldInput>;
  update?: InputMaybe<CommentIssueUpdateConnectionInput>;
  where?: InputMaybe<CommentIssueConnectionWhere>;
};

export type CommentModerationActionAggregateInput = {
  AND?: InputMaybe<Array<CommentModerationActionAggregateInput>>;
  NOT?: InputMaybe<CommentModerationActionAggregateInput>;
  OR?: InputMaybe<Array<CommentModerationActionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentModerationActionNodeAggregationWhereInput>;
};

export type CommentModerationActionConnectFieldInput = {
  connect?: InputMaybe<ModerationActionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationActionConnectWhere>;
};

export type CommentModerationActionConnection = {
  __typename?: 'CommentModerationActionConnection';
  edges: Array<CommentModerationActionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentModerationActionConnectionSort = {
  node?: InputMaybe<ModerationActionSort>;
};

export type CommentModerationActionConnectionWhere = {
  AND?: InputMaybe<Array<CommentModerationActionConnectionWhere>>;
  NOT?: InputMaybe<CommentModerationActionConnectionWhere>;
  OR?: InputMaybe<Array<CommentModerationActionConnectionWhere>>;
  node?: InputMaybe<ModerationActionWhere>;
};

export type CommentModerationActionCreateFieldInput = {
  node: ModerationActionCreateInput;
};

export type CommentModerationActionDeleteFieldInput = {
  delete?: InputMaybe<ModerationActionDeleteInput>;
  where?: InputMaybe<CommentModerationActionConnectionWhere>;
};

export type CommentModerationActionDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationActionDisconnectInput>;
  where?: InputMaybe<CommentModerationActionConnectionWhere>;
};

export type CommentModerationActionFieldInput = {
  connect?: InputMaybe<CommentModerationActionConnectFieldInput>;
  create?: InputMaybe<CommentModerationActionCreateFieldInput>;
};

export type CommentModerationActionModerationActionAggregationSelection = {
  __typename?: 'CommentModerationActionModerationActionAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentModerationActionModerationActionNodeAggregateSelection>;
};

export type CommentModerationActionModerationActionNodeAggregateSelection = {
  __typename?: 'CommentModerationActionModerationActionNodeAggregateSelection';
  actionDescription: StringAggregateSelection;
  actionType: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
};

export type CommentModerationActionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentModerationActionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentModerationActionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentModerationActionNodeAggregationWhereInput>>;
  actionDescription_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentModerationActionRelationship = {
  __typename?: 'CommentModerationActionRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationAction;
};

export type CommentModerationActionUpdateConnectionInput = {
  node?: InputMaybe<ModerationActionUpdateInput>;
};

export type CommentModerationActionUpdateFieldInput = {
  connect?: InputMaybe<CommentModerationActionConnectFieldInput>;
  create?: InputMaybe<CommentModerationActionCreateFieldInput>;
  delete?: InputMaybe<CommentModerationActionDeleteFieldInput>;
  disconnect?: InputMaybe<CommentModerationActionDisconnectFieldInput>;
  update?: InputMaybe<CommentModerationActionUpdateConnectionInput>;
  where?: InputMaybe<CommentModerationActionConnectionWhere>;
};

export type CommentOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more CommentSort objects to sort Comments by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CommentSort>>;
};

export type CommentParentCommentAggregateInput = {
  AND?: InputMaybe<Array<CommentParentCommentAggregateInput>>;
  NOT?: InputMaybe<CommentParentCommentAggregateInput>;
  OR?: InputMaybe<Array<CommentParentCommentAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentParentCommentNodeAggregationWhereInput>;
};

export type CommentParentCommentConnectFieldInput = {
  connect?: InputMaybe<CommentConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type CommentParentCommentConnection = {
  __typename?: 'CommentParentCommentConnection';
  edges: Array<CommentParentCommentRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentParentCommentConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type CommentParentCommentConnectionWhere = {
  AND?: InputMaybe<Array<CommentParentCommentConnectionWhere>>;
  NOT?: InputMaybe<CommentParentCommentConnectionWhere>;
  OR?: InputMaybe<Array<CommentParentCommentConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type CommentParentCommentCreateFieldInput = {
  node: CommentCreateInput;
};

export type CommentParentCommentDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentParentCommentConnectionWhere>;
};

export type CommentParentCommentDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<CommentParentCommentConnectionWhere>;
};

export type CommentParentCommentFieldInput = {
  connect?: InputMaybe<CommentParentCommentConnectFieldInput>;
  create?: InputMaybe<CommentParentCommentCreateFieldInput>;
};

export type CommentParentCommentNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentParentCommentNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentParentCommentNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentParentCommentNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentParentCommentRelationship = {
  __typename?: 'CommentParentCommentRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type CommentParentCommentUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type CommentParentCommentUpdateFieldInput = {
  connect?: InputMaybe<CommentParentCommentConnectFieldInput>;
  create?: InputMaybe<CommentParentCommentCreateFieldInput>;
  delete?: InputMaybe<CommentParentCommentDeleteFieldInput>;
  disconnect?: InputMaybe<CommentParentCommentDisconnectFieldInput>;
  update?: InputMaybe<CommentParentCommentUpdateConnectionInput>;
  where?: InputMaybe<CommentParentCommentConnectionWhere>;
};

export type CommentRelatedIssuesAggregateInput = {
  AND?: InputMaybe<Array<CommentRelatedIssuesAggregateInput>>;
  NOT?: InputMaybe<CommentRelatedIssuesAggregateInput>;
  OR?: InputMaybe<Array<CommentRelatedIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentRelatedIssuesNodeAggregationWhereInput>;
};

export type CommentRelatedIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type CommentRelatedIssuesConnection = {
  __typename?: 'CommentRelatedIssuesConnection';
  edges: Array<CommentRelatedIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentRelatedIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type CommentRelatedIssuesConnectionWhere = {
  AND?: InputMaybe<Array<CommentRelatedIssuesConnectionWhere>>;
  NOT?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  OR?: InputMaybe<Array<CommentRelatedIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type CommentRelatedIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type CommentRelatedIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
};

export type CommentRelatedIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
};

export type CommentRelatedIssuesFieldInput = {
  connect?: InputMaybe<Array<CommentRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<CommentRelatedIssuesCreateFieldInput>>;
};

export type CommentRelatedIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentRelatedIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentRelatedIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentRelatedIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentRelatedIssuesRelationship = {
  __typename?: 'CommentRelatedIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type CommentRelatedIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type CommentRelatedIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<CommentRelatedIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentRelatedIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentRelatedIssuesDisconnectFieldInput>>;
  update?: InputMaybe<CommentRelatedIssuesUpdateConnectionInput>;
  where?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
};

export type CommentRelationInput = {
  Channel?: InputMaybe<CommentChannelCreateFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsCreateFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorCreateFieldInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelCreateFieldInput>;
  Event?: InputMaybe<CommentEventCreateFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsCreateFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentCreateFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionCreateFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventCreateFieldInput>;
  Issue?: InputMaybe<CommentIssueCreateFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionCreateFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentCreateFieldInput>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesCreateFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsCreateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersCreateFieldInput>>;
};

export type CommentRepliesFormat = {
  __typename?: 'CommentRepliesFormat';
  ChildComments: Array<Comment>;
  aggregateChildCommentCount: Scalars['Int']['output'];
};

export type CommentRepliesFormatAggregateSelection = {
  __typename?: 'CommentRepliesFormatAggregateSelection';
  aggregateChildCommentCount: IntAggregateSelection;
  count: Scalars['Int']['output'];
};

export type CommentRepliesFormatCreateInput = {
  aggregateChildCommentCount: Scalars['Int']['input'];
};

export type CommentRepliesFormatEdge = {
  __typename?: 'CommentRepliesFormatEdge';
  cursor: Scalars['String']['output'];
  node: CommentRepliesFormat;
};

export type CommentRepliesFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more CommentRepliesFormatSort objects to sort CommentRepliesFormats by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<CommentRepliesFormatSort>>;
};

/** Fields to sort CommentRepliesFormats by. The order in which sorts are applied is not guaranteed when specifying many fields in one CommentRepliesFormatSort object. */
export type CommentRepliesFormatSort = {
  aggregateChildCommentCount?: InputMaybe<SortDirection>;
};

export type CommentRepliesFormatUpdateInput = {
  aggregateChildCommentCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentRepliesFormatWhere = {
  AND?: InputMaybe<Array<CommentRepliesFormatWhere>>;
  NOT?: InputMaybe<CommentRepliesFormatWhere>;
  OR?: InputMaybe<Array<CommentRepliesFormatWhere>>;
  aggregateChildCommentCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  aggregateChildCommentCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChildCommentCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentRepliesFormatsConnection = {
  __typename?: 'CommentRepliesFormatsConnection';
  edges: Array<CommentRepliesFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentSectionFormat = {
  __typename?: 'CommentSectionFormat';
  Comments: Array<Comment>;
  DiscussionChannel?: Maybe<DiscussionChannel>;
};

export type CommentSectionFormatAggregateSelection = {
  __typename?: 'CommentSectionFormatAggregateSelection';
  count: Scalars['Int']['output'];
};

export type CommentSectionFormatCreateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CommentSectionFormatEdge = {
  __typename?: 'CommentSectionFormatEdge';
  cursor: Scalars['String']['output'];
  node: CommentSectionFormat;
};

export type CommentSectionFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentSectionFormatUpdateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CommentSectionFormatWhere = {
  AND?: InputMaybe<Array<CommentSectionFormatWhere>>;
  NOT?: InputMaybe<CommentSectionFormatWhere>;
  OR?: InputMaybe<Array<CommentSectionFormatWhere>>;
};

export type CommentSectionFormatsConnection = {
  __typename?: 'CommentSectionFormatsConnection';
  edges: Array<CommentSectionFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** Fields to sort Comments by. The order in which sorts are applied is not guaranteed when specifying many fields in one CommentSort object. */
export type CommentSort = {
  archived?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  emoji?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isFeedbackComment?: InputMaybe<SortDirection>;
  isRootComment?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  weightedVotesCount?: InputMaybe<SortDirection>;
};

export type CommentTagTagsAggregationSelection = {
  __typename?: 'CommentTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentTagTagsNodeAggregateSelection>;
};

export type CommentTagTagsNodeAggregateSelection = {
  __typename?: 'CommentTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type CommentTagsAggregateInput = {
  AND?: InputMaybe<Array<CommentTagsAggregateInput>>;
  NOT?: InputMaybe<CommentTagsAggregateInput>;
  OR?: InputMaybe<Array<CommentTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentTagsNodeAggregationWhereInput>;
};

export type CommentTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type CommentTagsConnectOrCreateFieldInput = {
  onCreate: CommentTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type CommentTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type CommentTagsConnection = {
  __typename?: 'CommentTagsConnection';
  edges: Array<CommentTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type CommentTagsConnectionWhere = {
  AND?: InputMaybe<Array<CommentTagsConnectionWhere>>;
  NOT?: InputMaybe<CommentTagsConnectionWhere>;
  OR?: InputMaybe<Array<CommentTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type CommentTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type CommentTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<CommentTagsConnectionWhere>;
};

export type CommentTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<CommentTagsConnectionWhere>;
};

export type CommentTagsFieldInput = {
  connect?: InputMaybe<Array<CommentTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentTagsCreateFieldInput>>;
};

export type CommentTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<CommentTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<CommentTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentTagsRelationship = {
  __typename?: 'CommentTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type CommentTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type CommentTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentTagsDisconnectFieldInput>>;
  update?: InputMaybe<CommentTagsUpdateConnectionInput>;
  where?: InputMaybe<CommentTagsConnectionWhere>;
};

export type CommentUpdateInput = {
  Channel?: InputMaybe<CommentChannelUpdateFieldInput>;
  ChildComments?: InputMaybe<Array<CommentChildCommentsUpdateFieldInput>>;
  CommentAuthor?: InputMaybe<CommentCommentAuthorUpdateInput>;
  DiscussionChannel?: InputMaybe<CommentDiscussionChannelUpdateFieldInput>;
  Event?: InputMaybe<CommentEventUpdateFieldInput>;
  FeedbackComments?: InputMaybe<Array<CommentFeedbackCommentsUpdateFieldInput>>;
  GivesFeedbackOnComment?: InputMaybe<CommentGivesFeedbackOnCommentUpdateFieldInput>;
  GivesFeedbackOnDiscussion?: InputMaybe<CommentGivesFeedbackOnDiscussionUpdateFieldInput>;
  GivesFeedbackOnEvent?: InputMaybe<CommentGivesFeedbackOnEventUpdateFieldInput>;
  Issue?: InputMaybe<CommentIssueUpdateFieldInput>;
  ModerationAction?: InputMaybe<CommentModerationActionUpdateFieldInput>;
  ParentComment?: InputMaybe<CommentParentCommentUpdateFieldInput>;
  RelatedIssues?: InputMaybe<Array<CommentRelatedIssuesUpdateFieldInput>>;
  Tags?: InputMaybe<Array<CommentTagsUpdateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<CommentUpvotedByUsersUpdateFieldInput>>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  isFeedbackComment?: InputMaybe<Scalars['Boolean']['input']>;
  isRootComment?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_ADD?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_DIVIDE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MULTIPLY?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUBTRACT?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentUpvotedByUsersAggregateInput = {
  AND?: InputMaybe<Array<CommentUpvotedByUsersAggregateInput>>;
  NOT?: InputMaybe<CommentUpvotedByUsersAggregateInput>;
  OR?: InputMaybe<Array<CommentUpvotedByUsersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<CommentUpvotedByUsersNodeAggregationWhereInput>;
};

export type CommentUpvotedByUsersConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type CommentUpvotedByUsersConnectOrCreateFieldInput = {
  onCreate: CommentUpvotedByUsersConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type CommentUpvotedByUsersConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type CommentUpvotedByUsersConnection = {
  __typename?: 'CommentUpvotedByUsersConnection';
  edges: Array<CommentUpvotedByUsersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CommentUpvotedByUsersConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type CommentUpvotedByUsersConnectionWhere = {
  AND?: InputMaybe<Array<CommentUpvotedByUsersConnectionWhere>>;
  NOT?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  OR?: InputMaybe<Array<CommentUpvotedByUsersConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type CommentUpvotedByUsersCreateFieldInput = {
  node: UserCreateInput;
};

export type CommentUpvotedByUsersDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
};

export type CommentUpvotedByUsersDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
};

export type CommentUpvotedByUsersFieldInput = {
  connect?: InputMaybe<Array<CommentUpvotedByUsersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentUpvotedByUsersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentUpvotedByUsersCreateFieldInput>>;
};

export type CommentUpvotedByUsersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<CommentUpvotedByUsersNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<CommentUpvotedByUsersNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<CommentUpvotedByUsersNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type CommentUpvotedByUsersRelationship = {
  __typename?: 'CommentUpvotedByUsersRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type CommentUpvotedByUsersUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type CommentUpvotedByUsersUpdateFieldInput = {
  connect?: InputMaybe<Array<CommentUpvotedByUsersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<CommentUpvotedByUsersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<CommentUpvotedByUsersCreateFieldInput>>;
  delete?: InputMaybe<Array<CommentUpvotedByUsersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<CommentUpvotedByUsersDisconnectFieldInput>>;
  update?: InputMaybe<CommentUpvotedByUsersUpdateConnectionInput>;
  where?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
};

export type CommentUserUpvotedByUsersAggregationSelection = {
  __typename?: 'CommentUserUpvotedByUsersAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<CommentUserUpvotedByUsersNodeAggregateSelection>;
};

export type CommentUserUpvotedByUsersNodeAggregateSelection = {
  __typename?: 'CommentUserUpvotedByUsersNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type CommentWhere = {
  AND?: InputMaybe<Array<CommentWhere>>;
  Channel?: InputMaybe<ChannelWhere>;
  ChannelAggregate?: InputMaybe<CommentChannelAggregateInput>;
  ChannelConnection?: InputMaybe<CommentChannelConnectionWhere>;
  ChannelConnection_NOT?: InputMaybe<CommentChannelConnectionWhere>;
  Channel_NOT?: InputMaybe<ChannelWhere>;
  ChildCommentsAggregate?: InputMaybe<CommentChildCommentsAggregateInput>;
  /** Return Comments where all of the related CommentChildCommentsConnections match this filter */
  ChildCommentsConnection_ALL?: InputMaybe<CommentChildCommentsConnectionWhere>;
  /** Return Comments where none of the related CommentChildCommentsConnections match this filter */
  ChildCommentsConnection_NONE?: InputMaybe<CommentChildCommentsConnectionWhere>;
  /** Return Comments where one of the related CommentChildCommentsConnections match this filter */
  ChildCommentsConnection_SINGLE?: InputMaybe<CommentChildCommentsConnectionWhere>;
  /** Return Comments where some of the related CommentChildCommentsConnections match this filter */
  ChildCommentsConnection_SOME?: InputMaybe<CommentChildCommentsConnectionWhere>;
  /** Return Comments where all of the related Comments match this filter */
  ChildComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Comments where none of the related Comments match this filter */
  ChildComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Comments where one of the related Comments match this filter */
  ChildComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Comments where some of the related Comments match this filter */
  ChildComments_SOME?: InputMaybe<CommentWhere>;
  CommentAuthor?: InputMaybe<CommentAuthorWhere>;
  CommentAuthorConnection?: InputMaybe<CommentCommentAuthorConnectionWhere>;
  CommentAuthorConnection_NOT?: InputMaybe<CommentCommentAuthorConnectionWhere>;
  CommentAuthor_NOT?: InputMaybe<CommentAuthorWhere>;
  DiscussionChannel?: InputMaybe<DiscussionChannelWhere>;
  DiscussionChannelAggregate?: InputMaybe<CommentDiscussionChannelAggregateInput>;
  DiscussionChannelConnection?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
  DiscussionChannelConnection_NOT?: InputMaybe<CommentDiscussionChannelConnectionWhere>;
  DiscussionChannel_NOT?: InputMaybe<DiscussionChannelWhere>;
  Event?: InputMaybe<EventWhere>;
  EventAggregate?: InputMaybe<CommentEventAggregateInput>;
  EventConnection?: InputMaybe<CommentEventConnectionWhere>;
  EventConnection_NOT?: InputMaybe<CommentEventConnectionWhere>;
  Event_NOT?: InputMaybe<EventWhere>;
  FeedbackCommentsAggregate?: InputMaybe<CommentFeedbackCommentsAggregateInput>;
  /** Return Comments where all of the related CommentFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_ALL?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  /** Return Comments where none of the related CommentFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_NONE?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  /** Return Comments where one of the related CommentFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SINGLE?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  /** Return Comments where some of the related CommentFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SOME?: InputMaybe<CommentFeedbackCommentsConnectionWhere>;
  /** Return Comments where all of the related Comments match this filter */
  FeedbackComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Comments where none of the related Comments match this filter */
  FeedbackComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Comments where one of the related Comments match this filter */
  FeedbackComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Comments where some of the related Comments match this filter */
  FeedbackComments_SOME?: InputMaybe<CommentWhere>;
  GivesFeedbackOnComment?: InputMaybe<CommentWhere>;
  GivesFeedbackOnCommentAggregate?: InputMaybe<CommentGivesFeedbackOnCommentAggregateInput>;
  GivesFeedbackOnCommentConnection?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
  GivesFeedbackOnCommentConnection_NOT?: InputMaybe<CommentGivesFeedbackOnCommentConnectionWhere>;
  GivesFeedbackOnComment_NOT?: InputMaybe<CommentWhere>;
  GivesFeedbackOnDiscussion?: InputMaybe<DiscussionWhere>;
  GivesFeedbackOnDiscussionAggregate?: InputMaybe<CommentGivesFeedbackOnDiscussionAggregateInput>;
  GivesFeedbackOnDiscussionConnection?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
  GivesFeedbackOnDiscussionConnection_NOT?: InputMaybe<CommentGivesFeedbackOnDiscussionConnectionWhere>;
  GivesFeedbackOnDiscussion_NOT?: InputMaybe<DiscussionWhere>;
  GivesFeedbackOnEvent?: InputMaybe<EventWhere>;
  GivesFeedbackOnEventAggregate?: InputMaybe<CommentGivesFeedbackOnEventAggregateInput>;
  GivesFeedbackOnEventConnection?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
  GivesFeedbackOnEventConnection_NOT?: InputMaybe<CommentGivesFeedbackOnEventConnectionWhere>;
  GivesFeedbackOnEvent_NOT?: InputMaybe<EventWhere>;
  Issue?: InputMaybe<IssueWhere>;
  IssueAggregate?: InputMaybe<CommentIssueAggregateInput>;
  IssueConnection?: InputMaybe<CommentIssueConnectionWhere>;
  IssueConnection_NOT?: InputMaybe<CommentIssueConnectionWhere>;
  Issue_NOT?: InputMaybe<IssueWhere>;
  ModerationAction?: InputMaybe<ModerationActionWhere>;
  ModerationActionAggregate?: InputMaybe<CommentModerationActionAggregateInput>;
  ModerationActionConnection?: InputMaybe<CommentModerationActionConnectionWhere>;
  ModerationActionConnection_NOT?: InputMaybe<CommentModerationActionConnectionWhere>;
  ModerationAction_NOT?: InputMaybe<ModerationActionWhere>;
  NOT?: InputMaybe<CommentWhere>;
  OR?: InputMaybe<Array<CommentWhere>>;
  ParentComment?: InputMaybe<CommentWhere>;
  ParentCommentAggregate?: InputMaybe<CommentParentCommentAggregateInput>;
  ParentCommentConnection?: InputMaybe<CommentParentCommentConnectionWhere>;
  ParentCommentConnection_NOT?: InputMaybe<CommentParentCommentConnectionWhere>;
  ParentComment_NOT?: InputMaybe<CommentWhere>;
  RelatedIssuesAggregate?: InputMaybe<CommentRelatedIssuesAggregateInput>;
  /** Return Comments where all of the related CommentRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_ALL?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  /** Return Comments where none of the related CommentRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_NONE?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  /** Return Comments where one of the related CommentRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SINGLE?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  /** Return Comments where some of the related CommentRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SOME?: InputMaybe<CommentRelatedIssuesConnectionWhere>;
  /** Return Comments where all of the related Issues match this filter */
  RelatedIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return Comments where none of the related Issues match this filter */
  RelatedIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return Comments where one of the related Issues match this filter */
  RelatedIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return Comments where some of the related Issues match this filter */
  RelatedIssues_SOME?: InputMaybe<IssueWhere>;
  TagsAggregate?: InputMaybe<CommentTagsAggregateInput>;
  /** Return Comments where all of the related CommentTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<CommentTagsConnectionWhere>;
  /** Return Comments where none of the related CommentTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<CommentTagsConnectionWhere>;
  /** Return Comments where one of the related CommentTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<CommentTagsConnectionWhere>;
  /** Return Comments where some of the related CommentTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<CommentTagsConnectionWhere>;
  /** Return Comments where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Comments where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Comments where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Comments where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  UpvotedByUsersAggregate?: InputMaybe<CommentUpvotedByUsersAggregateInput>;
  /** Return Comments where all of the related CommentUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_ALL?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  /** Return Comments where none of the related CommentUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_NONE?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  /** Return Comments where one of the related CommentUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_SINGLE?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  /** Return Comments where some of the related CommentUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_SOME?: InputMaybe<CommentUpvotedByUsersConnectionWhere>;
  /** Return Comments where all of the related Users match this filter */
  UpvotedByUsers_ALL?: InputMaybe<UserWhere>;
  /** Return Comments where none of the related Users match this filter */
  UpvotedByUsers_NONE?: InputMaybe<UserWhere>;
  /** Return Comments where one of the related Users match this filter */
  UpvotedByUsers_SINGLE?: InputMaybe<UserWhere>;
  /** Return Comments where some of the related Users match this filter */
  UpvotedByUsers_SOME?: InputMaybe<UserWhere>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  emoji_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  isFeedbackComment?: InputMaybe<Scalars['Boolean']['input']>;
  isRootComment?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_IN?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
  weightedVotesCount_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type CommentsConnection = {
  __typename?: 'CommentsConnection';
  edges: Array<CommentEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Contact = {
  __typename?: 'Contact';
  MessageAuthor?: Maybe<CommentAuthor>;
  MessageAuthorConnection: ContactMessageAuthorConnection;
  Messages: Array<Message>;
  MessagesAggregate?: Maybe<ContactMessageMessagesAggregationSelection>;
  MessagesConnection: ContactMessagesConnection;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  mostRecentMessageTimestamp?: Maybe<Scalars['DateTime']['output']>;
};


export type ContactMessageAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<CommentAuthorWhere>;
};


export type ContactMessageAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ContactMessageAuthorConnectionWhere>;
};


export type ContactMessagesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<MessageOptions>;
  where?: InputMaybe<MessageWhere>;
};


export type ContactMessagesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<MessageWhere>;
};


export type ContactMessagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ContactMessagesConnectionSort>>;
  where?: InputMaybe<ContactMessagesConnectionWhere>;
};

export type ContactAggregateSelection = {
  __typename?: 'ContactAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  mostRecentMessageTimestamp: DateTimeAggregateSelection;
};

export type ContactConnectInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorConnectInput>;
  Messages?: InputMaybe<Array<ContactMessagesConnectFieldInput>>;
};

export type ContactConnectOrCreateInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorConnectOrCreateInput>;
};

export type ContactConnectWhere = {
  node: ContactWhere;
};

export type ContactCreateInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorCreateInput>;
  Messages?: InputMaybe<ContactMessagesFieldInput>;
  mostRecentMessageTimestamp?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ContactDeleteInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorDeleteInput>;
  Messages?: InputMaybe<Array<ContactMessagesDeleteFieldInput>>;
};

export type ContactDisconnectInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorDisconnectInput>;
  Messages?: InputMaybe<Array<ContactMessagesDisconnectFieldInput>>;
};

export type ContactEdge = {
  __typename?: 'ContactEdge';
  cursor: Scalars['String']['output'];
  node: Contact;
};

export type ContactMessageAuthorConnectInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileConnectFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserConnectFieldInput>;
};

export type ContactMessageAuthorConnectOrCreateInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileConnectOrCreateFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserConnectOrCreateFieldInput>;
};

export type ContactMessageAuthorConnection = {
  __typename?: 'ContactMessageAuthorConnection';
  edges: Array<ContactMessageAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ContactMessageAuthorConnectionWhere = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
  User?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
};

export type ContactMessageAuthorCreateFieldInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileCreateFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserCreateFieldInput>;
};

export type ContactMessageAuthorCreateInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserFieldInput>;
};

export type ContactMessageAuthorDeleteInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileDeleteFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserDeleteFieldInput>;
};

export type ContactMessageAuthorDisconnectInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileDisconnectFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserDisconnectFieldInput>;
};

export type ContactMessageAuthorModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type ContactMessageAuthorModerationProfileConnectOrCreateFieldInput = {
  onCreate: ContactMessageAuthorModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type ContactMessageAuthorModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type ContactMessageAuthorModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<ContactMessageAuthorModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<ContactMessageAuthorModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type ContactMessageAuthorModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type ContactMessageAuthorModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
};

export type ContactMessageAuthorModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
};

export type ContactMessageAuthorModerationProfileFieldInput = {
  connect?: InputMaybe<ContactMessageAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<ContactMessageAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<ContactMessageAuthorModerationProfileCreateFieldInput>;
};

export type ContactMessageAuthorModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type ContactMessageAuthorModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<ContactMessageAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<ContactMessageAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<ContactMessageAuthorModerationProfileCreateFieldInput>;
  delete?: InputMaybe<ContactMessageAuthorModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<ContactMessageAuthorModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<ContactMessageAuthorModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<ContactMessageAuthorModerationProfileConnectionWhere>;
};

export type ContactMessageAuthorRelationship = {
  __typename?: 'ContactMessageAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: CommentAuthor;
};

export type ContactMessageAuthorUpdateInput = {
  ModerationProfile?: InputMaybe<ContactMessageAuthorModerationProfileUpdateFieldInput>;
  User?: InputMaybe<ContactMessageAuthorUserUpdateFieldInput>;
};

export type ContactMessageAuthorUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type ContactMessageAuthorUserConnectOrCreateFieldInput = {
  onCreate: ContactMessageAuthorUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ContactMessageAuthorUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ContactMessageAuthorUserConnectionWhere = {
  AND?: InputMaybe<Array<ContactMessageAuthorUserConnectionWhere>>;
  NOT?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
  OR?: InputMaybe<Array<ContactMessageAuthorUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ContactMessageAuthorUserCreateFieldInput = {
  node: UserCreateInput;
};

export type ContactMessageAuthorUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
};

export type ContactMessageAuthorUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
};

export type ContactMessageAuthorUserFieldInput = {
  connect?: InputMaybe<ContactMessageAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ContactMessageAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ContactMessageAuthorUserCreateFieldInput>;
};

export type ContactMessageAuthorUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ContactMessageAuthorUserUpdateFieldInput = {
  connect?: InputMaybe<ContactMessageAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ContactMessageAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ContactMessageAuthorUserCreateFieldInput>;
  delete?: InputMaybe<ContactMessageAuthorUserDeleteFieldInput>;
  disconnect?: InputMaybe<ContactMessageAuthorUserDisconnectFieldInput>;
  update?: InputMaybe<ContactMessageAuthorUserUpdateConnectionInput>;
  where?: InputMaybe<ContactMessageAuthorUserConnectionWhere>;
};

export type ContactMessageMessagesAggregationSelection = {
  __typename?: 'ContactMessageMessagesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ContactMessageMessagesNodeAggregateSelection>;
};

export type ContactMessageMessagesNodeAggregateSelection = {
  __typename?: 'ContactMessageMessagesNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
};

export type ContactMessagesAggregateInput = {
  AND?: InputMaybe<Array<ContactMessagesAggregateInput>>;
  NOT?: InputMaybe<ContactMessagesAggregateInput>;
  OR?: InputMaybe<Array<ContactMessagesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ContactMessagesNodeAggregationWhereInput>;
};

export type ContactMessagesConnectFieldInput = {
  connect?: InputMaybe<Array<MessageConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<MessageConnectWhere>;
};

export type ContactMessagesConnection = {
  __typename?: 'ContactMessagesConnection';
  edges: Array<ContactMessagesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ContactMessagesConnectionSort = {
  node?: InputMaybe<MessageSort>;
};

export type ContactMessagesConnectionWhere = {
  AND?: InputMaybe<Array<ContactMessagesConnectionWhere>>;
  NOT?: InputMaybe<ContactMessagesConnectionWhere>;
  OR?: InputMaybe<Array<ContactMessagesConnectionWhere>>;
  node?: InputMaybe<MessageWhere>;
};

export type ContactMessagesCreateFieldInput = {
  node: MessageCreateInput;
};

export type ContactMessagesDeleteFieldInput = {
  delete?: InputMaybe<MessageDeleteInput>;
  where?: InputMaybe<ContactMessagesConnectionWhere>;
};

export type ContactMessagesDisconnectFieldInput = {
  disconnect?: InputMaybe<MessageDisconnectInput>;
  where?: InputMaybe<ContactMessagesConnectionWhere>;
};

export type ContactMessagesFieldInput = {
  connect?: InputMaybe<Array<ContactMessagesConnectFieldInput>>;
  create?: InputMaybe<Array<ContactMessagesCreateFieldInput>>;
};

export type ContactMessagesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ContactMessagesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ContactMessagesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ContactMessagesNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ContactMessagesRelationship = {
  __typename?: 'ContactMessagesRelationship';
  cursor: Scalars['String']['output'];
  node: Message;
};

export type ContactMessagesUpdateConnectionInput = {
  node?: InputMaybe<MessageUpdateInput>;
};

export type ContactMessagesUpdateFieldInput = {
  connect?: InputMaybe<Array<ContactMessagesConnectFieldInput>>;
  create?: InputMaybe<Array<ContactMessagesCreateFieldInput>>;
  delete?: InputMaybe<Array<ContactMessagesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ContactMessagesDisconnectFieldInput>>;
  update?: InputMaybe<ContactMessagesUpdateConnectionInput>;
  where?: InputMaybe<ContactMessagesConnectionWhere>;
};

export type ContactOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ContactSort objects to sort Contacts by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ContactSort>>;
};

export type ContactRelationInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorCreateFieldInput>;
  Messages?: InputMaybe<Array<ContactMessagesCreateFieldInput>>;
};

/** Fields to sort Contacts by. The order in which sorts are applied is not guaranteed when specifying many fields in one ContactSort object. */
export type ContactSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  mostRecentMessageTimestamp?: InputMaybe<SortDirection>;
};

export type ContactUpdateInput = {
  MessageAuthor?: InputMaybe<ContactMessageAuthorUpdateInput>;
  Messages?: InputMaybe<Array<ContactMessagesUpdateFieldInput>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ContactWhere = {
  AND?: InputMaybe<Array<ContactWhere>>;
  MessageAuthor?: InputMaybe<CommentAuthorWhere>;
  MessageAuthorConnection?: InputMaybe<ContactMessageAuthorConnectionWhere>;
  MessageAuthorConnection_NOT?: InputMaybe<ContactMessageAuthorConnectionWhere>;
  MessageAuthor_NOT?: InputMaybe<CommentAuthorWhere>;
  MessagesAggregate?: InputMaybe<ContactMessagesAggregateInput>;
  /** Return Contacts where all of the related ContactMessagesConnections match this filter */
  MessagesConnection_ALL?: InputMaybe<ContactMessagesConnectionWhere>;
  /** Return Contacts where none of the related ContactMessagesConnections match this filter */
  MessagesConnection_NONE?: InputMaybe<ContactMessagesConnectionWhere>;
  /** Return Contacts where one of the related ContactMessagesConnections match this filter */
  MessagesConnection_SINGLE?: InputMaybe<ContactMessagesConnectionWhere>;
  /** Return Contacts where some of the related ContactMessagesConnections match this filter */
  MessagesConnection_SOME?: InputMaybe<ContactMessagesConnectionWhere>;
  /** Return Contacts where all of the related Messages match this filter */
  Messages_ALL?: InputMaybe<MessageWhere>;
  /** Return Contacts where none of the related Messages match this filter */
  Messages_NONE?: InputMaybe<MessageWhere>;
  /** Return Contacts where one of the related Messages match this filter */
  Messages_SINGLE?: InputMaybe<MessageWhere>;
  /** Return Contacts where some of the related Messages match this filter */
  Messages_SOME?: InputMaybe<MessageWhere>;
  NOT?: InputMaybe<ContactWhere>;
  OR?: InputMaybe<Array<ContactWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  mostRecentMessageTimestamp?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_GT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  mostRecentMessageTimestamp_LT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ContactsConnection = {
  __typename?: 'ContactsConnection';
  edges: Array<ContactEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CreateAlbumsMutationResponse = {
  __typename?: 'CreateAlbumsMutationResponse';
  albums: Array<Album>;
  info: CreateInfo;
};

export type CreateChannelRolesMutationResponse = {
  __typename?: 'CreateChannelRolesMutationResponse';
  channelRoles: Array<ChannelRole>;
  info: CreateInfo;
};

export type CreateChannelsMutationResponse = {
  __typename?: 'CreateChannelsMutationResponse';
  channels: Array<Channel>;
  info: CreateInfo;
};

export type CreateCommentRepliesFormatsMutationResponse = {
  __typename?: 'CreateCommentRepliesFormatsMutationResponse';
  commentRepliesFormats: Array<CommentRepliesFormat>;
  info: CreateInfo;
};

export type CreateCommentSectionFormatsMutationResponse = {
  __typename?: 'CreateCommentSectionFormatsMutationResponse';
  commentSectionFormats: Array<CommentSectionFormat>;
  info: CreateInfo;
};

export type CreateCommentsMutationResponse = {
  __typename?: 'CreateCommentsMutationResponse';
  comments: Array<Comment>;
  info: CreateInfo;
};

export type CreateContactsMutationResponse = {
  __typename?: 'CreateContactsMutationResponse';
  contacts: Array<Contact>;
  info: CreateInfo;
};

export type CreateDiscussionChannelListFormatsMutationResponse = {
  __typename?: 'CreateDiscussionChannelListFormatsMutationResponse';
  discussionChannelListFormats: Array<DiscussionChannelListFormat>;
  info: CreateInfo;
};

export type CreateDiscussionChannelsMutationResponse = {
  __typename?: 'CreateDiscussionChannelsMutationResponse';
  discussionChannels: Array<DiscussionChannel>;
  info: CreateInfo;
};

export type CreateDiscussionsMutationResponse = {
  __typename?: 'CreateDiscussionsMutationResponse';
  discussions: Array<Discussion>;
  info: CreateInfo;
};

export type CreateDropDataResponsesMutationResponse = {
  __typename?: 'CreateDropDataResponsesMutationResponse';
  dropDataResponses: Array<DropDataResponse>;
  info: CreateInfo;
};

export type CreateEmailsMutationResponse = {
  __typename?: 'CreateEmailsMutationResponse';
  emails: Array<Email>;
  info: CreateInfo;
};

export type CreateEmojisMutationResponse = {
  __typename?: 'CreateEmojisMutationResponse';
  emojis: Array<Emoji>;
  info: CreateInfo;
};

export type CreateEnvironmentInfosMutationResponse = {
  __typename?: 'CreateEnvironmentInfosMutationResponse';
  environmentInfos: Array<EnvironmentInfo>;
  info: CreateInfo;
};

export type CreateEventChannelsMutationResponse = {
  __typename?: 'CreateEventChannelsMutationResponse';
  eventChannels: Array<EventChannel>;
  info: CreateInfo;
};

export type CreateEventCommentsFormatsMutationResponse = {
  __typename?: 'CreateEventCommentsFormatsMutationResponse';
  eventCommentsFormats: Array<EventCommentsFormat>;
  info: CreateInfo;
};

export type CreateEventsMutationResponse = {
  __typename?: 'CreateEventsMutationResponse';
  events: Array<Event>;
  info: CreateInfo;
};

export type CreateFeedsMutationResponse = {
  __typename?: 'CreateFeedsMutationResponse';
  feeds: Array<Feed>;
  info: CreateInfo;
};

export type CreateGetSortedChannelsResponsesMutationResponse = {
  __typename?: 'CreateGetSortedChannelsResponsesMutationResponse';
  getSortedChannelsResponses: Array<GetSortedChannelsResponse>;
  info: CreateInfo;
};

export type CreateImagesMutationResponse = {
  __typename?: 'CreateImagesMutationResponse';
  images: Array<Image>;
  info: CreateInfo;
};

/** Information about the number of nodes and relationships created during a create mutation */
export type CreateInfo = {
  __typename?: 'CreateInfo';
  /** @deprecated This field has been deprecated because bookmarks are now handled by the driver. */
  bookmark?: Maybe<Scalars['String']['output']>;
  nodesCreated: Scalars['Int']['output'];
  relationshipsCreated: Scalars['Int']['output'];
};

export type CreateIssuesMutationResponse = {
  __typename?: 'CreateIssuesMutationResponse';
  info: CreateInfo;
  issues: Array<Issue>;
};

export type CreateLinkFlairsMutationResponse = {
  __typename?: 'CreateLinkFlairsMutationResponse';
  info: CreateInfo;
  linkFlairs: Array<LinkFlair>;
};

export type CreateMessagesMutationResponse = {
  __typename?: 'CreateMessagesMutationResponse';
  info: CreateInfo;
  messages: Array<Message>;
};

export type CreateModChannelRolesMutationResponse = {
  __typename?: 'CreateModChannelRolesMutationResponse';
  info: CreateInfo;
  modChannelRoles: Array<ModChannelRole>;
};

export type CreateModServerRolesMutationResponse = {
  __typename?: 'CreateModServerRolesMutationResponse';
  info: CreateInfo;
  modServerRoles: Array<ModServerRole>;
};

export type CreateModerationActionsMutationResponse = {
  __typename?: 'CreateModerationActionsMutationResponse';
  info: CreateInfo;
  moderationActions: Array<ModerationAction>;
};

export type CreateModerationProfilesMutationResponse = {
  __typename?: 'CreateModerationProfilesMutationResponse';
  info: CreateInfo;
  moderationProfiles: Array<ModerationProfile>;
};

export type CreateNotificationsMutationResponse = {
  __typename?: 'CreateNotificationsMutationResponse';
  info: CreateInfo;
  notifications: Array<Notification>;
};

export type CreateRecurringEventsMutationResponse = {
  __typename?: 'CreateRecurringEventsMutationResponse';
  info: CreateInfo;
  recurringEvents: Array<RecurringEvent>;
};

export type CreateRepeatEndsMutationResponse = {
  __typename?: 'CreateRepeatEndsMutationResponse';
  info: CreateInfo;
  repeatEnds: Array<RepeatEnds>;
};

export type CreateRepeatEveriesMutationResponse = {
  __typename?: 'CreateRepeatEveriesMutationResponse';
  info: CreateInfo;
  repeatEveries: Array<RepeatEvery>;
};

export type CreateSafetyCheckResponsesMutationResponse = {
  __typename?: 'CreateSafetyCheckResponsesMutationResponse';
  info: CreateInfo;
  safetyCheckResponses: Array<SafetyCheckResponse>;
};

export type CreateSeedDataResponsesMutationResponse = {
  __typename?: 'CreateSeedDataResponsesMutationResponse';
  info: CreateInfo;
  seedDataResponses: Array<SeedDataResponse>;
};

export type CreateServerConfigsMutationResponse = {
  __typename?: 'CreateServerConfigsMutationResponse';
  info: CreateInfo;
  serverConfigs: Array<ServerConfig>;
};

export type CreateServerRolesMutationResponse = {
  __typename?: 'CreateServerRolesMutationResponse';
  info: CreateInfo;
  serverRoles: Array<ServerRole>;
};

export type CreateSignedUrlsMutationResponse = {
  __typename?: 'CreateSignedUrlsMutationResponse';
  info: CreateInfo;
  signedUrls: Array<SignedUrl>;
};

export type CreateSiteWideDiscussionListFormatsMutationResponse = {
  __typename?: 'CreateSiteWideDiscussionListFormatsMutationResponse';
  info: CreateInfo;
  siteWideDiscussionListFormats: Array<SiteWideDiscussionListFormat>;
};

export type CreateSuspensionsMutationResponse = {
  __typename?: 'CreateSuspensionsMutationResponse';
  info: CreateInfo;
  suspensions: Array<Suspension>;
};

export type CreateTagsMutationResponse = {
  __typename?: 'CreateTagsMutationResponse';
  info: CreateInfo;
  tags: Array<Tag>;
};

export type CreateTextVersionsMutationResponse = {
  __typename?: 'CreateTextVersionsMutationResponse';
  info: CreateInfo;
  textVersions: Array<TextVersion>;
};

export type CreateUsersMutationResponse = {
  __typename?: 'CreateUsersMutationResponse';
  info: CreateInfo;
  users: Array<User>;
};

export type CreateWikiPagesMutationResponse = {
  __typename?: 'CreateWikiPagesMutationResponse';
  info: CreateInfo;
  wikiPages: Array<WikiPage>;
};

export type DateTimeAggregateSelection = {
  __typename?: 'DateTimeAggregateSelection';
  max?: Maybe<Scalars['DateTime']['output']>;
  min?: Maybe<Scalars['DateTime']['output']>;
};

/** Information about the number of nodes and relationships deleted during a delete mutation */
export type DeleteInfo = {
  __typename?: 'DeleteInfo';
  /** @deprecated This field has been deprecated because bookmarks are now handled by the driver. */
  bookmark?: Maybe<Scalars['String']['output']>;
  nodesDeleted: Scalars['Int']['output'];
  relationshipsDeleted: Scalars['Int']['output'];
};

export type Discussion = {
  __typename?: 'Discussion';
  Album?: Maybe<Album>;
  AlbumAggregate?: Maybe<DiscussionAlbumAlbumAggregationSelection>;
  AlbumConnection: DiscussionAlbumConnection;
  Author?: Maybe<User>;
  AuthorAggregate?: Maybe<DiscussionUserAuthorAggregationSelection>;
  AuthorConnection: DiscussionAuthorConnection;
  DiscussionChannels: Array<DiscussionChannel>;
  DiscussionChannelsAggregate?: Maybe<DiscussionDiscussionChannelDiscussionChannelsAggregationSelection>;
  DiscussionChannelsConnection: DiscussionDiscussionChannelsConnection;
  FeedbackComments: Array<Comment>;
  FeedbackCommentsAggregate?: Maybe<DiscussionCommentFeedbackCommentsAggregationSelection>;
  FeedbackCommentsConnection: DiscussionFeedbackCommentsConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<DiscussionTagTagsAggregationSelection>;
  TagsConnection: DiscussionTagsConnection;
  body?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  hasSensitiveContent?: Maybe<Scalars['Boolean']['output']>;
  hasSpoiler?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  title: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type DiscussionAlbumArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<AlbumOptions>;
  where?: InputMaybe<AlbumWhere>;
};


export type DiscussionAlbumAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<AlbumWhere>;
};


export type DiscussionAlbumConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionAlbumConnectionSort>>;
  where?: InputMaybe<DiscussionAlbumConnectionWhere>;
};


export type DiscussionAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionAuthorAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionAuthorConnectionSort>>;
  where?: InputMaybe<DiscussionAuthorConnectionWhere>;
};


export type DiscussionDiscussionChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type DiscussionDiscussionChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type DiscussionDiscussionChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionDiscussionChannelsConnectionSort>>;
  where?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
};


export type DiscussionFeedbackCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionFeedbackCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionFeedbackCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionFeedbackCommentsConnectionSort>>;
  where?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
};


export type DiscussionTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type DiscussionTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type DiscussionTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionTagsConnectionSort>>;
  where?: InputMaybe<DiscussionTagsConnectionWhere>;
};

export type DiscussionAggregateSelection = {
  __typename?: 'DiscussionAggregateSelection';
  body: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type DiscussionAlbumAggregateInput = {
  AND?: InputMaybe<Array<DiscussionAlbumAggregateInput>>;
  NOT?: InputMaybe<DiscussionAlbumAggregateInput>;
  OR?: InputMaybe<Array<DiscussionAlbumAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionAlbumNodeAggregationWhereInput>;
};

export type DiscussionAlbumAlbumAggregationSelection = {
  __typename?: 'DiscussionAlbumAlbumAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionAlbumAlbumNodeAggregateSelection>;
};

export type DiscussionAlbumAlbumNodeAggregateSelection = {
  __typename?: 'DiscussionAlbumAlbumNodeAggregateSelection';
  id: IdAggregateSelection;
};

export type DiscussionAlbumConnectFieldInput = {
  connect?: InputMaybe<AlbumConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<AlbumConnectWhere>;
};

export type DiscussionAlbumConnection = {
  __typename?: 'DiscussionAlbumConnection';
  edges: Array<DiscussionAlbumRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionAlbumConnectionSort = {
  node?: InputMaybe<AlbumSort>;
};

export type DiscussionAlbumConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionAlbumConnectionWhere>>;
  NOT?: InputMaybe<DiscussionAlbumConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionAlbumConnectionWhere>>;
  node?: InputMaybe<AlbumWhere>;
};

export type DiscussionAlbumCreateFieldInput = {
  node: AlbumCreateInput;
};

export type DiscussionAlbumDeleteFieldInput = {
  delete?: InputMaybe<AlbumDeleteInput>;
  where?: InputMaybe<DiscussionAlbumConnectionWhere>;
};

export type DiscussionAlbumDisconnectFieldInput = {
  disconnect?: InputMaybe<AlbumDisconnectInput>;
  where?: InputMaybe<DiscussionAlbumConnectionWhere>;
};

export type DiscussionAlbumFieldInput = {
  connect?: InputMaybe<DiscussionAlbumConnectFieldInput>;
  create?: InputMaybe<DiscussionAlbumCreateFieldInput>;
};

export type DiscussionAlbumNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionAlbumNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionAlbumNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionAlbumNodeAggregationWhereInput>>;
};

export type DiscussionAlbumRelationship = {
  __typename?: 'DiscussionAlbumRelationship';
  cursor: Scalars['String']['output'];
  node: Album;
};

export type DiscussionAlbumUpdateConnectionInput = {
  node?: InputMaybe<AlbumUpdateInput>;
};

export type DiscussionAlbumUpdateFieldInput = {
  connect?: InputMaybe<DiscussionAlbumConnectFieldInput>;
  create?: InputMaybe<DiscussionAlbumCreateFieldInput>;
  delete?: InputMaybe<DiscussionAlbumDeleteFieldInput>;
  disconnect?: InputMaybe<DiscussionAlbumDisconnectFieldInput>;
  update?: InputMaybe<DiscussionAlbumUpdateConnectionInput>;
  where?: InputMaybe<DiscussionAlbumConnectionWhere>;
};

export type DiscussionAuthorAggregateInput = {
  AND?: InputMaybe<Array<DiscussionAuthorAggregateInput>>;
  NOT?: InputMaybe<DiscussionAuthorAggregateInput>;
  OR?: InputMaybe<Array<DiscussionAuthorAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionAuthorNodeAggregationWhereInput>;
};

export type DiscussionAuthorConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type DiscussionAuthorConnectOrCreateFieldInput = {
  onCreate: DiscussionAuthorConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type DiscussionAuthorConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type DiscussionAuthorConnection = {
  __typename?: 'DiscussionAuthorConnection';
  edges: Array<DiscussionAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionAuthorConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type DiscussionAuthorConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionAuthorConnectionWhere>>;
  NOT?: InputMaybe<DiscussionAuthorConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionAuthorConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type DiscussionAuthorCreateFieldInput = {
  node: UserCreateInput;
};

export type DiscussionAuthorDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<DiscussionAuthorConnectionWhere>;
};

export type DiscussionAuthorDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<DiscussionAuthorConnectionWhere>;
};

export type DiscussionAuthorFieldInput = {
  connect?: InputMaybe<DiscussionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<DiscussionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<DiscussionAuthorCreateFieldInput>;
};

export type DiscussionAuthorNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionAuthorNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<DiscussionAuthorNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<DiscussionAuthorNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionAuthorRelationship = {
  __typename?: 'DiscussionAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type DiscussionAuthorUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type DiscussionAuthorUpdateFieldInput = {
  connect?: InputMaybe<DiscussionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<DiscussionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<DiscussionAuthorCreateFieldInput>;
  delete?: InputMaybe<DiscussionAuthorDeleteFieldInput>;
  disconnect?: InputMaybe<DiscussionAuthorDisconnectFieldInput>;
  update?: InputMaybe<DiscussionAuthorUpdateConnectionInput>;
  where?: InputMaybe<DiscussionAuthorConnectionWhere>;
};

export type DiscussionChannel = {
  __typename?: 'DiscussionChannel';
  Answers: Array<Comment>;
  AnswersAggregate?: Maybe<DiscussionChannelCommentAnswersAggregationSelection>;
  AnswersConnection: DiscussionChannelAnswersConnection;
  Channel?: Maybe<Channel>;
  ChannelAggregate?: Maybe<DiscussionChannelChannelChannelAggregationSelection>;
  ChannelConnection: DiscussionChannelChannelConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<DiscussionChannelCommentCommentsAggregationSelection>;
  CommentsConnection: DiscussionChannelCommentsConnection;
  Discussion?: Maybe<Discussion>;
  DiscussionAggregate?: Maybe<DiscussionChannelDiscussionDiscussionAggregationSelection>;
  DiscussionConnection: DiscussionChannelDiscussionConnection;
  RelatedIssues: Array<Issue>;
  RelatedIssuesAggregate?: Maybe<DiscussionChannelIssueRelatedIssuesAggregationSelection>;
  RelatedIssuesConnection: DiscussionChannelRelatedIssuesConnection;
  UpvotedByUsers: Array<User>;
  UpvotedByUsersAggregate?: Maybe<DiscussionChannelUserUpvotedByUsersAggregationSelection>;
  UpvotedByUsersConnection: DiscussionChannelUpvotedByUsersConnection;
  answered?: Maybe<Scalars['Boolean']['output']>;
  archived?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  discussionId: Scalars['ID']['output'];
  emoji?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  locked?: Maybe<Scalars['Boolean']['output']>;
  weightedVotesCount?: Maybe<Scalars['Float']['output']>;
};


export type DiscussionChannelAnswersArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionChannelAnswersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionChannelAnswersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelAnswersConnectionSort>>;
  where?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
};


export type DiscussionChannelChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type DiscussionChannelChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type DiscussionChannelChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelChannelConnectionSort>>;
  where?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
};


export type DiscussionChannelCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionChannelCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type DiscussionChannelCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelCommentsConnectionSort>>;
  where?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
};


export type DiscussionChannelDiscussionArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type DiscussionChannelDiscussionAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type DiscussionChannelDiscussionConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelDiscussionConnectionSort>>;
  where?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
};


export type DiscussionChannelRelatedIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type DiscussionChannelRelatedIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type DiscussionChannelRelatedIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectionSort>>;
  where?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
};


export type DiscussionChannelUpvotedByUsersArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionChannelUpvotedByUsersAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type DiscussionChannelUpvotedByUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectionSort>>;
  where?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
};

export type DiscussionChannelAggregateSelection = {
  __typename?: 'DiscussionChannelAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionChannelAnswersAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelAnswersAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelAnswersAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelAnswersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelAnswersNodeAggregationWhereInput>;
};

export type DiscussionChannelAnswersConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type DiscussionChannelAnswersConnection = {
  __typename?: 'DiscussionChannelAnswersConnection';
  edges: Array<DiscussionChannelAnswersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelAnswersConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type DiscussionChannelAnswersConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelAnswersConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelAnswersConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type DiscussionChannelAnswersCreateFieldInput = {
  node: CommentCreateInput;
};

export type DiscussionChannelAnswersDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
};

export type DiscussionChannelAnswersDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
};

export type DiscussionChannelAnswersFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelAnswersConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelAnswersCreateFieldInput>>;
};

export type DiscussionChannelAnswersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelAnswersNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelAnswersNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelAnswersNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelAnswersRelationship = {
  __typename?: 'DiscussionChannelAnswersRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type DiscussionChannelAnswersUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type DiscussionChannelAnswersUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelAnswersConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelAnswersCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelAnswersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelAnswersDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelAnswersUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
};

export type DiscussionChannelChannelAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelChannelAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelChannelAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelChannelNodeAggregationWhereInput>;
};

export type DiscussionChannelChannelChannelAggregationSelection = {
  __typename?: 'DiscussionChannelChannelChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelChannelChannelNodeAggregateSelection>;
};

export type DiscussionChannelChannelChannelNodeAggregateSelection = {
  __typename?: 'DiscussionChannelChannelChannelNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type DiscussionChannelChannelConnectFieldInput = {
  connect?: InputMaybe<ChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type DiscussionChannelChannelConnectOrCreateFieldInput = {
  onCreate: DiscussionChannelChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type DiscussionChannelChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type DiscussionChannelChannelConnection = {
  __typename?: 'DiscussionChannelChannelConnection';
  edges: Array<DiscussionChannelChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelChannelConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type DiscussionChannelChannelConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelChannelConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type DiscussionChannelChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type DiscussionChannelChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
};

export type DiscussionChannelChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
};

export type DiscussionChannelChannelFieldInput = {
  connect?: InputMaybe<DiscussionChannelChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<DiscussionChannelChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<DiscussionChannelChannelCreateFieldInput>;
};

export type DiscussionChannelChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelChannelNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelChannelRelationship = {
  __typename?: 'DiscussionChannelChannelRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type DiscussionChannelChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type DiscussionChannelChannelUpdateFieldInput = {
  connect?: InputMaybe<DiscussionChannelChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<DiscussionChannelChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<DiscussionChannelChannelCreateFieldInput>;
  delete?: InputMaybe<DiscussionChannelChannelDeleteFieldInput>;
  disconnect?: InputMaybe<DiscussionChannelChannelDisconnectFieldInput>;
  update?: InputMaybe<DiscussionChannelChannelUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
};

export type DiscussionChannelCommentAnswersAggregationSelection = {
  __typename?: 'DiscussionChannelCommentAnswersAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelCommentAnswersNodeAggregateSelection>;
};

export type DiscussionChannelCommentAnswersNodeAggregateSelection = {
  __typename?: 'DiscussionChannelCommentAnswersNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionChannelCommentCommentsAggregationSelection = {
  __typename?: 'DiscussionChannelCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelCommentCommentsNodeAggregateSelection>;
};

export type DiscussionChannelCommentCommentsNodeAggregateSelection = {
  __typename?: 'DiscussionChannelCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionChannelCommentsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelCommentsAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelCommentsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelCommentsNodeAggregationWhereInput>;
};

export type DiscussionChannelCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type DiscussionChannelCommentsConnection = {
  __typename?: 'DiscussionChannelCommentsConnection';
  edges: Array<DiscussionChannelCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type DiscussionChannelCommentsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelCommentsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type DiscussionChannelCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type DiscussionChannelCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
};

export type DiscussionChannelCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
};

export type DiscussionChannelCommentsFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelCommentsCreateFieldInput>>;
};

export type DiscussionChannelCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelCommentsRelationship = {
  __typename?: 'DiscussionChannelCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type DiscussionChannelCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type DiscussionChannelCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelCommentsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelCommentsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
};

export type DiscussionChannelConnectInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersConnectFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelConnectFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsConnectFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionConnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectFieldInput>>;
};

export type DiscussionChannelConnectOrCreateInput = {
  Channel?: InputMaybe<DiscussionChannelChannelConnectOrCreateFieldInput>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectOrCreateFieldInput>>;
};

export type DiscussionChannelConnectWhere = {
  node: DiscussionChannelWhere;
};

export type DiscussionChannelCreateInput = {
  Answers?: InputMaybe<DiscussionChannelAnswersFieldInput>;
  Channel?: InputMaybe<DiscussionChannelChannelFieldInput>;
  Comments?: InputMaybe<DiscussionChannelCommentsFieldInput>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionFieldInput>;
  RelatedIssues?: InputMaybe<DiscussionChannelRelatedIssuesFieldInput>;
  UpvotedByUsers?: InputMaybe<DiscussionChannelUpvotedByUsersFieldInput>;
  answered?: InputMaybe<Scalars['Boolean']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelDeleteInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersDeleteFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelDeleteFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsDeleteFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionDeleteFieldInput>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesDeleteFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersDeleteFieldInput>>;
};

export type DiscussionChannelDisconnectInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersDisconnectFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelDisconnectFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsDisconnectFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionDisconnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesDisconnectFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersDisconnectFieldInput>>;
};

export type DiscussionChannelDiscussionAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelDiscussionAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelDiscussionAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelDiscussionAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelDiscussionNodeAggregationWhereInput>;
};

export type DiscussionChannelDiscussionConnectFieldInput = {
  connect?: InputMaybe<DiscussionConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type DiscussionChannelDiscussionConnection = {
  __typename?: 'DiscussionChannelDiscussionConnection';
  edges: Array<DiscussionChannelDiscussionRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelDiscussionConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type DiscussionChannelDiscussionConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelDiscussionConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelDiscussionConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type DiscussionChannelDiscussionCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type DiscussionChannelDiscussionDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
};

export type DiscussionChannelDiscussionDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
};

export type DiscussionChannelDiscussionDiscussionAggregationSelection = {
  __typename?: 'DiscussionChannelDiscussionDiscussionAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelDiscussionDiscussionNodeAggregateSelection>;
};

export type DiscussionChannelDiscussionDiscussionNodeAggregateSelection = {
  __typename?: 'DiscussionChannelDiscussionDiscussionNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type DiscussionChannelDiscussionFieldInput = {
  connect?: InputMaybe<DiscussionChannelDiscussionConnectFieldInput>;
  create?: InputMaybe<DiscussionChannelDiscussionCreateFieldInput>;
};

export type DiscussionChannelDiscussionNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelDiscussionNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelDiscussionNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelDiscussionNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionChannelDiscussionRelationship = {
  __typename?: 'DiscussionChannelDiscussionRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type DiscussionChannelDiscussionUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type DiscussionChannelDiscussionUpdateFieldInput = {
  connect?: InputMaybe<DiscussionChannelDiscussionConnectFieldInput>;
  create?: InputMaybe<DiscussionChannelDiscussionCreateFieldInput>;
  delete?: InputMaybe<DiscussionChannelDiscussionDeleteFieldInput>;
  disconnect?: InputMaybe<DiscussionChannelDiscussionDisconnectFieldInput>;
  update?: InputMaybe<DiscussionChannelDiscussionUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
};

export type DiscussionChannelEdge = {
  __typename?: 'DiscussionChannelEdge';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type DiscussionChannelIssueRelatedIssuesAggregationSelection = {
  __typename?: 'DiscussionChannelIssueRelatedIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelIssueRelatedIssuesNodeAggregateSelection>;
};

export type DiscussionChannelIssueRelatedIssuesNodeAggregateSelection = {
  __typename?: 'DiscussionChannelIssueRelatedIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type DiscussionChannelListFormat = {
  __typename?: 'DiscussionChannelListFormat';
  aggregateDiscussionChannelsCount: Scalars['Int']['output'];
  discussionChannels: Array<DiscussionChannel>;
};

export type DiscussionChannelListFormatAggregateSelection = {
  __typename?: 'DiscussionChannelListFormatAggregateSelection';
  aggregateDiscussionChannelsCount: IntAggregateSelection;
  count: Scalars['Int']['output'];
};

export type DiscussionChannelListFormatCreateInput = {
  aggregateDiscussionChannelsCount: Scalars['Int']['input'];
};

export type DiscussionChannelListFormatEdge = {
  __typename?: 'DiscussionChannelListFormatEdge';
  cursor: Scalars['String']['output'];
  node: DiscussionChannelListFormat;
};

export type DiscussionChannelListFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DiscussionChannelListFormatSort objects to sort DiscussionChannelListFormats by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DiscussionChannelListFormatSort>>;
};

/** Fields to sort DiscussionChannelListFormats by. The order in which sorts are applied is not guaranteed when specifying many fields in one DiscussionChannelListFormatSort object. */
export type DiscussionChannelListFormatSort = {
  aggregateDiscussionChannelsCount?: InputMaybe<SortDirection>;
};

export type DiscussionChannelListFormatUpdateInput = {
  aggregateDiscussionChannelsCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelListFormatWhere = {
  AND?: InputMaybe<Array<DiscussionChannelListFormatWhere>>;
  NOT?: InputMaybe<DiscussionChannelListFormatWhere>;
  OR?: InputMaybe<Array<DiscussionChannelListFormatWhere>>;
  aggregateDiscussionChannelsCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  aggregateDiscussionChannelsCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionChannelsCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelListFormatsConnection = {
  __typename?: 'DiscussionChannelListFormatsConnection';
  edges: Array<DiscussionChannelListFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DiscussionChannelSort objects to sort DiscussionChannels by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DiscussionChannelSort>>;
};

export type DiscussionChannelRelatedIssuesAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelRelatedIssuesAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelRelatedIssuesAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelRelatedIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelRelatedIssuesNodeAggregationWhereInput>;
};

export type DiscussionChannelRelatedIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type DiscussionChannelRelatedIssuesConnection = {
  __typename?: 'DiscussionChannelRelatedIssuesConnection';
  edges: Array<DiscussionChannelRelatedIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelRelatedIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type DiscussionChannelRelatedIssuesConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type DiscussionChannelRelatedIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type DiscussionChannelRelatedIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
};

export type DiscussionChannelRelatedIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
};

export type DiscussionChannelRelatedIssuesFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelRelatedIssuesCreateFieldInput>>;
};

export type DiscussionChannelRelatedIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelRelatedIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionChannelRelatedIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionChannelRelatedIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionChannelRelatedIssuesRelationship = {
  __typename?: 'DiscussionChannelRelatedIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type DiscussionChannelRelatedIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type DiscussionChannelRelatedIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelRelatedIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelRelatedIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelRelatedIssuesDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelRelatedIssuesUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
};

export type DiscussionChannelRelationInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersCreateFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelCreateFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsCreateFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionCreateFieldInput>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesCreateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersCreateFieldInput>>;
};

/** Fields to sort DiscussionChannels by. The order in which sorts are applied is not guaranteed when specifying many fields in one DiscussionChannelSort object. */
export type DiscussionChannelSort = {
  answered?: InputMaybe<SortDirection>;
  archived?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  discussionId?: InputMaybe<SortDirection>;
  emoji?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  locked?: InputMaybe<SortDirection>;
  weightedVotesCount?: InputMaybe<SortDirection>;
};

export type DiscussionChannelUpdateInput = {
  Answers?: InputMaybe<Array<DiscussionChannelAnswersUpdateFieldInput>>;
  Channel?: InputMaybe<DiscussionChannelChannelUpdateFieldInput>;
  Comments?: InputMaybe<Array<DiscussionChannelCommentsUpdateFieldInput>>;
  Discussion?: InputMaybe<DiscussionChannelDiscussionUpdateFieldInput>;
  RelatedIssues?: InputMaybe<Array<DiscussionChannelRelatedIssuesUpdateFieldInput>>;
  UpvotedByUsers?: InputMaybe<Array<DiscussionChannelUpvotedByUsersUpdateFieldInput>>;
  answered?: InputMaybe<Scalars['Boolean']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  discussionId?: InputMaybe<Scalars['ID']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_ADD?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_DIVIDE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MULTIPLY?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUBTRACT?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelUpvotedByUsersAggregateInput = {
  AND?: InputMaybe<Array<DiscussionChannelUpvotedByUsersAggregateInput>>;
  NOT?: InputMaybe<DiscussionChannelUpvotedByUsersAggregateInput>;
  OR?: InputMaybe<Array<DiscussionChannelUpvotedByUsersAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionChannelUpvotedByUsersNodeAggregationWhereInput>;
};

export type DiscussionChannelUpvotedByUsersConnectFieldInput = {
  connect?: InputMaybe<Array<UserConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type DiscussionChannelUpvotedByUsersConnectOrCreateFieldInput = {
  onCreate: DiscussionChannelUpvotedByUsersConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type DiscussionChannelUpvotedByUsersConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type DiscussionChannelUpvotedByUsersConnection = {
  __typename?: 'DiscussionChannelUpvotedByUsersConnection';
  edges: Array<DiscussionChannelUpvotedByUsersRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionChannelUpvotedByUsersConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type DiscussionChannelUpvotedByUsersConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectionWhere>>;
  NOT?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type DiscussionChannelUpvotedByUsersCreateFieldInput = {
  node: UserCreateInput;
};

export type DiscussionChannelUpvotedByUsersDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
};

export type DiscussionChannelUpvotedByUsersDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
};

export type DiscussionChannelUpvotedByUsersFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelUpvotedByUsersCreateFieldInput>>;
};

export type DiscussionChannelUpvotedByUsersNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionChannelUpvotedByUsersNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<DiscussionChannelUpvotedByUsersNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<DiscussionChannelUpvotedByUsersNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionChannelUpvotedByUsersRelationship = {
  __typename?: 'DiscussionChannelUpvotedByUsersRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type DiscussionChannelUpvotedByUsersUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type DiscussionChannelUpvotedByUsersUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionChannelUpvotedByUsersConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionChannelUpvotedByUsersCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionChannelUpvotedByUsersDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionChannelUpvotedByUsersDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionChannelUpvotedByUsersUpdateConnectionInput>;
  where?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
};

export type DiscussionChannelUserUpvotedByUsersAggregationSelection = {
  __typename?: 'DiscussionChannelUserUpvotedByUsersAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionChannelUserUpvotedByUsersNodeAggregateSelection>;
};

export type DiscussionChannelUserUpvotedByUsersNodeAggregateSelection = {
  __typename?: 'DiscussionChannelUserUpvotedByUsersNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type DiscussionChannelWhere = {
  AND?: InputMaybe<Array<DiscussionChannelWhere>>;
  AnswersAggregate?: InputMaybe<DiscussionChannelAnswersAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelAnswersConnections match this filter */
  AnswersConnection_ALL?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelAnswersConnections match this filter */
  AnswersConnection_NONE?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelAnswersConnections match this filter */
  AnswersConnection_SINGLE?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelAnswersConnections match this filter */
  AnswersConnection_SOME?: InputMaybe<DiscussionChannelAnswersConnectionWhere>;
  /** Return DiscussionChannels where all of the related Comments match this filter */
  Answers_ALL?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where none of the related Comments match this filter */
  Answers_NONE?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where one of the related Comments match this filter */
  Answers_SINGLE?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where some of the related Comments match this filter */
  Answers_SOME?: InputMaybe<CommentWhere>;
  Channel?: InputMaybe<ChannelWhere>;
  ChannelAggregate?: InputMaybe<DiscussionChannelChannelAggregateInput>;
  ChannelConnection?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
  ChannelConnection_NOT?: InputMaybe<DiscussionChannelChannelConnectionWhere>;
  Channel_NOT?: InputMaybe<ChannelWhere>;
  CommentsAggregate?: InputMaybe<DiscussionChannelCommentsAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<DiscussionChannelCommentsConnectionWhere>;
  /** Return DiscussionChannels where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return DiscussionChannels where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  Discussion?: InputMaybe<DiscussionWhere>;
  DiscussionAggregate?: InputMaybe<DiscussionChannelDiscussionAggregateInput>;
  DiscussionConnection?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
  DiscussionConnection_NOT?: InputMaybe<DiscussionChannelDiscussionConnectionWhere>;
  Discussion_NOT?: InputMaybe<DiscussionWhere>;
  NOT?: InputMaybe<DiscussionChannelWhere>;
  OR?: InputMaybe<Array<DiscussionChannelWhere>>;
  RelatedIssuesAggregate?: InputMaybe<DiscussionChannelRelatedIssuesAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_ALL?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_NONE?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SINGLE?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SOME?: InputMaybe<DiscussionChannelRelatedIssuesConnectionWhere>;
  /** Return DiscussionChannels where all of the related Issues match this filter */
  RelatedIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return DiscussionChannels where none of the related Issues match this filter */
  RelatedIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return DiscussionChannels where one of the related Issues match this filter */
  RelatedIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return DiscussionChannels where some of the related Issues match this filter */
  RelatedIssues_SOME?: InputMaybe<IssueWhere>;
  UpvotedByUsersAggregate?: InputMaybe<DiscussionChannelUpvotedByUsersAggregateInput>;
  /** Return DiscussionChannels where all of the related DiscussionChannelUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_ALL?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  /** Return DiscussionChannels where none of the related DiscussionChannelUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_NONE?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  /** Return DiscussionChannels where one of the related DiscussionChannelUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_SINGLE?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  /** Return DiscussionChannels where some of the related DiscussionChannelUpvotedByUsersConnections match this filter */
  UpvotedByUsersConnection_SOME?: InputMaybe<DiscussionChannelUpvotedByUsersConnectionWhere>;
  /** Return DiscussionChannels where all of the related Users match this filter */
  UpvotedByUsers_ALL?: InputMaybe<UserWhere>;
  /** Return DiscussionChannels where none of the related Users match this filter */
  UpvotedByUsers_NONE?: InputMaybe<UserWhere>;
  /** Return DiscussionChannels where one of the related Users match this filter */
  UpvotedByUsers_SINGLE?: InputMaybe<UserWhere>;
  /** Return DiscussionChannels where some of the related Users match this filter */
  UpvotedByUsers_SOME?: InputMaybe<UserWhere>;
  answered?: InputMaybe<Scalars['Boolean']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionId?: InputMaybe<Scalars['ID']['input']>;
  discussionId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  discussionId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  discussionId_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  discussionId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  emoji?: InputMaybe<Scalars['JSON']['input']>;
  emoji_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  weightedVotesCount?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_IN?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
  weightedVotesCount_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionChannelsConnection = {
  __typename?: 'DiscussionChannelsConnection';
  edges: Array<DiscussionChannelEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionCommentFeedbackCommentsAggregationSelection = {
  __typename?: 'DiscussionCommentFeedbackCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionCommentFeedbackCommentsNodeAggregateSelection>;
};

export type DiscussionCommentFeedbackCommentsNodeAggregateSelection = {
  __typename?: 'DiscussionCommentFeedbackCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionConnectInput = {
  Album?: InputMaybe<DiscussionAlbumConnectFieldInput>;
  Author?: InputMaybe<DiscussionAuthorConnectFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsConnectFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsConnectFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsConnectFieldInput>>;
};

export type DiscussionConnectOrCreateInput = {
  Author?: InputMaybe<DiscussionAuthorConnectOrCreateFieldInput>;
  Tags?: InputMaybe<Array<DiscussionTagsConnectOrCreateFieldInput>>;
};

export type DiscussionConnectWhere = {
  node: DiscussionWhere;
};

export type DiscussionCreateInput = {
  Album?: InputMaybe<DiscussionAlbumFieldInput>;
  Author?: InputMaybe<DiscussionAuthorFieldInput>;
  DiscussionChannels?: InputMaybe<DiscussionDiscussionChannelsFieldInput>;
  FeedbackComments?: InputMaybe<DiscussionFeedbackCommentsFieldInput>;
  Tags?: InputMaybe<DiscussionTagsFieldInput>;
  body?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  title: Scalars['String']['input'];
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionCreateInputWithChannels = {
  channelConnections: Array<Scalars['String']['input']>;
  discussionCreateInput: DiscussionCreateInput;
};

export type DiscussionDeleteInput = {
  Album?: InputMaybe<DiscussionAlbumDeleteFieldInput>;
  Author?: InputMaybe<DiscussionAuthorDeleteFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsDeleteFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsDeleteFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsDeleteFieldInput>>;
};

export type DiscussionDisconnectInput = {
  Album?: InputMaybe<DiscussionAlbumDisconnectFieldInput>;
  Author?: InputMaybe<DiscussionAuthorDisconnectFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsDisconnectFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsDisconnectFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsDisconnectFieldInput>>;
};

export type DiscussionDiscussionChannelDiscussionChannelsAggregationSelection = {
  __typename?: 'DiscussionDiscussionChannelDiscussionChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionDiscussionChannelDiscussionChannelsNodeAggregateSelection>;
};

export type DiscussionDiscussionChannelDiscussionChannelsNodeAggregateSelection = {
  __typename?: 'DiscussionDiscussionChannelDiscussionChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type DiscussionDiscussionChannelsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionDiscussionChannelsAggregateInput>>;
  NOT?: InputMaybe<DiscussionDiscussionChannelsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionDiscussionChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionDiscussionChannelsNodeAggregationWhereInput>;
};

export type DiscussionDiscussionChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionChannelConnectWhere>;
};

export type DiscussionDiscussionChannelsConnection = {
  __typename?: 'DiscussionDiscussionChannelsConnection';
  edges: Array<DiscussionDiscussionChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionDiscussionChannelsConnectionSort = {
  node?: InputMaybe<DiscussionChannelSort>;
};

export type DiscussionDiscussionChannelsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionDiscussionChannelsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionDiscussionChannelsConnectionWhere>>;
  node?: InputMaybe<DiscussionChannelWhere>;
};

export type DiscussionDiscussionChannelsCreateFieldInput = {
  node: DiscussionChannelCreateInput;
};

export type DiscussionDiscussionChannelsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
};

export type DiscussionDiscussionChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionChannelDisconnectInput>;
  where?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
};

export type DiscussionDiscussionChannelsFieldInput = {
  connect?: InputMaybe<Array<DiscussionDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionDiscussionChannelsCreateFieldInput>>;
};

export type DiscussionDiscussionChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionDiscussionChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionDiscussionChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionDiscussionChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionDiscussionChannelsRelationship = {
  __typename?: 'DiscussionDiscussionChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type DiscussionDiscussionChannelsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionChannelUpdateInput>;
};

export type DiscussionDiscussionChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionDiscussionChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionDiscussionChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionDiscussionChannelsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionDiscussionChannelsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
};

export type DiscussionEdge = {
  __typename?: 'DiscussionEdge';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type DiscussionFeedbackCommentsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionFeedbackCommentsAggregateInput>>;
  NOT?: InputMaybe<DiscussionFeedbackCommentsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionFeedbackCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionFeedbackCommentsNodeAggregationWhereInput>;
};

export type DiscussionFeedbackCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type DiscussionFeedbackCommentsConnection = {
  __typename?: 'DiscussionFeedbackCommentsConnection';
  edges: Array<DiscussionFeedbackCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionFeedbackCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type DiscussionFeedbackCommentsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionFeedbackCommentsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionFeedbackCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type DiscussionFeedbackCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type DiscussionFeedbackCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
};

export type DiscussionFeedbackCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
};

export type DiscussionFeedbackCommentsFieldInput = {
  connect?: InputMaybe<Array<DiscussionFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionFeedbackCommentsCreateFieldInput>>;
};

export type DiscussionFeedbackCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionFeedbackCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionFeedbackCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionFeedbackCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type DiscussionFeedbackCommentsRelationship = {
  __typename?: 'DiscussionFeedbackCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type DiscussionFeedbackCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type DiscussionFeedbackCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<DiscussionFeedbackCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionFeedbackCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionFeedbackCommentsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionFeedbackCommentsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
};

export type DiscussionListOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<SortType>;
  timeFrame?: InputMaybe<TimeFrame>;
};

export type DiscussionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DiscussionSort objects to sort Discussions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DiscussionSort>>;
};

export type DiscussionRelationInput = {
  Album?: InputMaybe<DiscussionAlbumCreateFieldInput>;
  Author?: InputMaybe<DiscussionAuthorCreateFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsCreateFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsCreateFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsCreateFieldInput>>;
};

/** Fields to sort Discussions by. The order in which sorts are applied is not guaranteed when specifying many fields in one DiscussionSort object. */
export type DiscussionSort = {
  body?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  hasSensitiveContent?: InputMaybe<SortDirection>;
  hasSpoiler?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type DiscussionTagTagsAggregationSelection = {
  __typename?: 'DiscussionTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionTagTagsNodeAggregateSelection>;
};

export type DiscussionTagTagsNodeAggregateSelection = {
  __typename?: 'DiscussionTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type DiscussionTagsAggregateInput = {
  AND?: InputMaybe<Array<DiscussionTagsAggregateInput>>;
  NOT?: InputMaybe<DiscussionTagsAggregateInput>;
  OR?: InputMaybe<Array<DiscussionTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<DiscussionTagsNodeAggregationWhereInput>;
};

export type DiscussionTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type DiscussionTagsConnectOrCreateFieldInput = {
  onCreate: DiscussionTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type DiscussionTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type DiscussionTagsConnection = {
  __typename?: 'DiscussionTagsConnection';
  edges: Array<DiscussionTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DiscussionTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type DiscussionTagsConnectionWhere = {
  AND?: InputMaybe<Array<DiscussionTagsConnectionWhere>>;
  NOT?: InputMaybe<DiscussionTagsConnectionWhere>;
  OR?: InputMaybe<Array<DiscussionTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type DiscussionTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type DiscussionTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<DiscussionTagsConnectionWhere>;
};

export type DiscussionTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<DiscussionTagsConnectionWhere>;
};

export type DiscussionTagsFieldInput = {
  connect?: InputMaybe<Array<DiscussionTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionTagsCreateFieldInput>>;
};

export type DiscussionTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<DiscussionTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<DiscussionTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<DiscussionTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type DiscussionTagsRelationship = {
  __typename?: 'DiscussionTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type DiscussionTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type DiscussionTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<DiscussionTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<DiscussionTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<DiscussionTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<DiscussionTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<DiscussionTagsDisconnectFieldInput>>;
  update?: InputMaybe<DiscussionTagsUpdateConnectionInput>;
  where?: InputMaybe<DiscussionTagsConnectionWhere>;
};

export type DiscussionUpdateInput = {
  Album?: InputMaybe<DiscussionAlbumUpdateFieldInput>;
  Author?: InputMaybe<DiscussionAuthorUpdateFieldInput>;
  DiscussionChannels?: InputMaybe<Array<DiscussionDiscussionChannelsUpdateFieldInput>>;
  FeedbackComments?: InputMaybe<Array<DiscussionFeedbackCommentsUpdateFieldInput>>;
  Tags?: InputMaybe<Array<DiscussionTagsUpdateFieldInput>>;
  body?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type DiscussionUserAuthorAggregationSelection = {
  __typename?: 'DiscussionUserAuthorAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<DiscussionUserAuthorNodeAggregateSelection>;
};

export type DiscussionUserAuthorNodeAggregateSelection = {
  __typename?: 'DiscussionUserAuthorNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type DiscussionWhere = {
  AND?: InputMaybe<Array<DiscussionWhere>>;
  Album?: InputMaybe<AlbumWhere>;
  AlbumAggregate?: InputMaybe<DiscussionAlbumAggregateInput>;
  AlbumConnection?: InputMaybe<DiscussionAlbumConnectionWhere>;
  AlbumConnection_NOT?: InputMaybe<DiscussionAlbumConnectionWhere>;
  Album_NOT?: InputMaybe<AlbumWhere>;
  Author?: InputMaybe<UserWhere>;
  AuthorAggregate?: InputMaybe<DiscussionAuthorAggregateInput>;
  AuthorConnection?: InputMaybe<DiscussionAuthorConnectionWhere>;
  AuthorConnection_NOT?: InputMaybe<DiscussionAuthorConnectionWhere>;
  Author_NOT?: InputMaybe<UserWhere>;
  DiscussionChannelsAggregate?: InputMaybe<DiscussionDiscussionChannelsAggregateInput>;
  /** Return Discussions where all of the related DiscussionDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_ALL?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  /** Return Discussions where none of the related DiscussionDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_NONE?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  /** Return Discussions where one of the related DiscussionDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_SINGLE?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  /** Return Discussions where some of the related DiscussionDiscussionChannelsConnections match this filter */
  DiscussionChannelsConnection_SOME?: InputMaybe<DiscussionDiscussionChannelsConnectionWhere>;
  /** Return Discussions where all of the related DiscussionChannels match this filter */
  DiscussionChannels_ALL?: InputMaybe<DiscussionChannelWhere>;
  /** Return Discussions where none of the related DiscussionChannels match this filter */
  DiscussionChannels_NONE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Discussions where one of the related DiscussionChannels match this filter */
  DiscussionChannels_SINGLE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Discussions where some of the related DiscussionChannels match this filter */
  DiscussionChannels_SOME?: InputMaybe<DiscussionChannelWhere>;
  FeedbackCommentsAggregate?: InputMaybe<DiscussionFeedbackCommentsAggregateInput>;
  /** Return Discussions where all of the related DiscussionFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_ALL?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  /** Return Discussions where none of the related DiscussionFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_NONE?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  /** Return Discussions where one of the related DiscussionFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SINGLE?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  /** Return Discussions where some of the related DiscussionFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SOME?: InputMaybe<DiscussionFeedbackCommentsConnectionWhere>;
  /** Return Discussions where all of the related Comments match this filter */
  FeedbackComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Discussions where none of the related Comments match this filter */
  FeedbackComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Discussions where one of the related Comments match this filter */
  FeedbackComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Discussions where some of the related Comments match this filter */
  FeedbackComments_SOME?: InputMaybe<CommentWhere>;
  NOT?: InputMaybe<DiscussionWhere>;
  OR?: InputMaybe<Array<DiscussionWhere>>;
  TagsAggregate?: InputMaybe<DiscussionTagsAggregateInput>;
  /** Return Discussions where all of the related DiscussionTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<DiscussionTagsConnectionWhere>;
  /** Return Discussions where none of the related DiscussionTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<DiscussionTagsConnectionWhere>;
  /** Return Discussions where one of the related DiscussionTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<DiscussionTagsConnectionWhere>;
  /** Return Discussions where some of the related DiscussionTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<DiscussionTagsConnectionWhere>;
  /** Return Discussions where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Discussions where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Discussions where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Discussions where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DiscussionsConnection = {
  __typename?: 'DiscussionsConnection';
  edges: Array<DiscussionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type DropDataResponse = {
  __typename?: 'DropDataResponse';
  message?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type DropDataResponseAggregateSelection = {
  __typename?: 'DropDataResponseAggregateSelection';
  count: Scalars['Int']['output'];
  message: StringAggregateSelection;
};

export type DropDataResponseCreateInput = {
  message?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DropDataResponseEdge = {
  __typename?: 'DropDataResponseEdge';
  cursor: Scalars['String']['output'];
  node: DropDataResponse;
};

export type DropDataResponseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more DropDataResponseSort objects to sort DropDataResponses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<DropDataResponseSort>>;
};

/** Fields to sort DropDataResponses by. The order in which sorts are applied is not guaranteed when specifying many fields in one DropDataResponseSort object. */
export type DropDataResponseSort = {
  message?: InputMaybe<SortDirection>;
  success?: InputMaybe<SortDirection>;
};

export type DropDataResponseUpdateInput = {
  message?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DropDataResponseWhere = {
  AND?: InputMaybe<Array<DropDataResponseWhere>>;
  NOT?: InputMaybe<DropDataResponseWhere>;
  OR?: InputMaybe<Array<DropDataResponseWhere>>;
  message?: InputMaybe<Scalars['String']['input']>;
  message_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  message_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  message_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  message_MATCHES?: InputMaybe<Scalars['String']['input']>;
  message_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DropDataResponsesConnection = {
  __typename?: 'DropDataResponsesConnection';
  edges: Array<DropDataResponseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Email = {
  __typename?: 'Email';
  User?: Maybe<User>;
  UserAggregate?: Maybe<EmailUserUserAggregationSelection>;
  UserConnection: EmailUserConnection;
  address: Scalars['String']['output'];
};


export type EmailUserArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type EmailUserAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type EmailUserConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EmailUserConnectionSort>>;
  where?: InputMaybe<EmailUserConnectionWhere>;
};

export type EmailAggregateSelection = {
  __typename?: 'EmailAggregateSelection';
  address: StringAggregateSelection;
  count: Scalars['Int']['output'];
};

export type EmailConnectInput = {
  User?: InputMaybe<EmailUserConnectFieldInput>;
};

export type EmailConnectOrCreateInput = {
  User?: InputMaybe<EmailUserConnectOrCreateFieldInput>;
};

export type EmailConnectOrCreateWhere = {
  node: EmailUniqueWhere;
};

export type EmailConnectWhere = {
  node: EmailWhere;
};

export type EmailCreateInput = {
  User?: InputMaybe<EmailUserFieldInput>;
  address: Scalars['String']['input'];
};

export type EmailDeleteInput = {
  User?: InputMaybe<EmailUserDeleteFieldInput>;
};

export type EmailDisconnectInput = {
  User?: InputMaybe<EmailUserDisconnectFieldInput>;
};

export type EmailEdge = {
  __typename?: 'EmailEdge';
  cursor: Scalars['String']['output'];
  node: Email;
};

export type EmailOnCreateInput = {
  address: Scalars['String']['input'];
};

export type EmailOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EmailSort objects to sort Emails by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EmailSort>>;
};

export type EmailRelationInput = {
  User?: InputMaybe<EmailUserCreateFieldInput>;
};

/** Fields to sort Emails by. The order in which sorts are applied is not guaranteed when specifying many fields in one EmailSort object. */
export type EmailSort = {
  address?: InputMaybe<SortDirection>;
};

export type EmailUniqueWhere = {
  address?: InputMaybe<Scalars['String']['input']>;
};

export type EmailUpdateInput = {
  User?: InputMaybe<EmailUserUpdateFieldInput>;
  address?: InputMaybe<Scalars['String']['input']>;
};

export type EmailUserAggregateInput = {
  AND?: InputMaybe<Array<EmailUserAggregateInput>>;
  NOT?: InputMaybe<EmailUserAggregateInput>;
  OR?: InputMaybe<Array<EmailUserAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EmailUserNodeAggregationWhereInput>;
};

export type EmailUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type EmailUserConnectOrCreateFieldInput = {
  onCreate: EmailUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type EmailUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type EmailUserConnection = {
  __typename?: 'EmailUserConnection';
  edges: Array<EmailUserRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EmailUserConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type EmailUserConnectionWhere = {
  AND?: InputMaybe<Array<EmailUserConnectionWhere>>;
  NOT?: InputMaybe<EmailUserConnectionWhere>;
  OR?: InputMaybe<Array<EmailUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type EmailUserCreateFieldInput = {
  node: UserCreateInput;
};

export type EmailUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<EmailUserConnectionWhere>;
};

export type EmailUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<EmailUserConnectionWhere>;
};

export type EmailUserFieldInput = {
  connect?: InputMaybe<EmailUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<EmailUserConnectOrCreateFieldInput>;
  create?: InputMaybe<EmailUserCreateFieldInput>;
};

export type EmailUserNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EmailUserNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<EmailUserNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<EmailUserNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EmailUserRelationship = {
  __typename?: 'EmailUserRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type EmailUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type EmailUserUpdateFieldInput = {
  connect?: InputMaybe<EmailUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<EmailUserConnectOrCreateFieldInput>;
  create?: InputMaybe<EmailUserCreateFieldInput>;
  delete?: InputMaybe<EmailUserDeleteFieldInput>;
  disconnect?: InputMaybe<EmailUserDisconnectFieldInput>;
  update?: InputMaybe<EmailUserUpdateConnectionInput>;
  where?: InputMaybe<EmailUserConnectionWhere>;
};

export type EmailUserUserAggregationSelection = {
  __typename?: 'EmailUserUserAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EmailUserUserNodeAggregateSelection>;
};

export type EmailUserUserNodeAggregateSelection = {
  __typename?: 'EmailUserUserNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type EmailWhere = {
  AND?: InputMaybe<Array<EmailWhere>>;
  NOT?: InputMaybe<EmailWhere>;
  OR?: InputMaybe<Array<EmailWhere>>;
  User?: InputMaybe<UserWhere>;
  UserAggregate?: InputMaybe<EmailUserAggregateInput>;
  UserConnection?: InputMaybe<EmailUserConnectionWhere>;
  UserConnection_NOT?: InputMaybe<EmailUserConnectionWhere>;
  User_NOT?: InputMaybe<UserWhere>;
  address?: InputMaybe<Scalars['String']['input']>;
  address_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  address_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  address_MATCHES?: InputMaybe<Scalars['String']['input']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EmailsConnection = {
  __typename?: 'EmailsConnection';
  edges: Array<EmailEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Emoji = {
  __typename?: 'Emoji';
  PostedByUser?: Maybe<User>;
  PostedByUserAggregate?: Maybe<EmojiUserPostedByUserAggregationSelection>;
  PostedByUserConnection: EmojiPostedByUserConnection;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};


export type EmojiPostedByUserArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type EmojiPostedByUserAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type EmojiPostedByUserConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EmojiPostedByUserConnectionSort>>;
  where?: InputMaybe<EmojiPostedByUserConnectionWhere>;
};

export type EmojiAggregateSelection = {
  __typename?: 'EmojiAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  name: StringAggregateSelection;
};

export type EmojiConnectInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserConnectFieldInput>;
};

export type EmojiConnectOrCreateInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserConnectOrCreateFieldInput>;
};

export type EmojiCreateInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserFieldInput>;
  name: Scalars['String']['input'];
};

export type EmojiDeleteInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserDeleteFieldInput>;
};

export type EmojiDisconnectInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserDisconnectFieldInput>;
};

export type EmojiEdge = {
  __typename?: 'EmojiEdge';
  cursor: Scalars['String']['output'];
  node: Emoji;
};

export type EmojiOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EmojiSort objects to sort Emojis by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EmojiSort>>;
};

export type EmojiPostedByUserAggregateInput = {
  AND?: InputMaybe<Array<EmojiPostedByUserAggregateInput>>;
  NOT?: InputMaybe<EmojiPostedByUserAggregateInput>;
  OR?: InputMaybe<Array<EmojiPostedByUserAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EmojiPostedByUserNodeAggregationWhereInput>;
};

export type EmojiPostedByUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type EmojiPostedByUserConnectOrCreateFieldInput = {
  onCreate: EmojiPostedByUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type EmojiPostedByUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type EmojiPostedByUserConnection = {
  __typename?: 'EmojiPostedByUserConnection';
  edges: Array<EmojiPostedByUserRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EmojiPostedByUserConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type EmojiPostedByUserConnectionWhere = {
  AND?: InputMaybe<Array<EmojiPostedByUserConnectionWhere>>;
  NOT?: InputMaybe<EmojiPostedByUserConnectionWhere>;
  OR?: InputMaybe<Array<EmojiPostedByUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type EmojiPostedByUserCreateFieldInput = {
  node: UserCreateInput;
};

export type EmojiPostedByUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<EmojiPostedByUserConnectionWhere>;
};

export type EmojiPostedByUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<EmojiPostedByUserConnectionWhere>;
};

export type EmojiPostedByUserFieldInput = {
  connect?: InputMaybe<EmojiPostedByUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<EmojiPostedByUserConnectOrCreateFieldInput>;
  create?: InputMaybe<EmojiPostedByUserCreateFieldInput>;
};

export type EmojiPostedByUserNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EmojiPostedByUserNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<EmojiPostedByUserNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<EmojiPostedByUserNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EmojiPostedByUserRelationship = {
  __typename?: 'EmojiPostedByUserRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type EmojiPostedByUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type EmojiPostedByUserUpdateFieldInput = {
  connect?: InputMaybe<EmojiPostedByUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<EmojiPostedByUserConnectOrCreateFieldInput>;
  create?: InputMaybe<EmojiPostedByUserCreateFieldInput>;
  delete?: InputMaybe<EmojiPostedByUserDeleteFieldInput>;
  disconnect?: InputMaybe<EmojiPostedByUserDisconnectFieldInput>;
  update?: InputMaybe<EmojiPostedByUserUpdateConnectionInput>;
  where?: InputMaybe<EmojiPostedByUserConnectionWhere>;
};

export type EmojiRelationInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserCreateFieldInput>;
};

/** Fields to sort Emojis by. The order in which sorts are applied is not guaranteed when specifying many fields in one EmojiSort object. */
export type EmojiSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export type EmojiUpdateInput = {
  PostedByUser?: InputMaybe<EmojiPostedByUserUpdateFieldInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type EmojiUserPostedByUserAggregationSelection = {
  __typename?: 'EmojiUserPostedByUserAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EmojiUserPostedByUserNodeAggregateSelection>;
};

export type EmojiUserPostedByUserNodeAggregateSelection = {
  __typename?: 'EmojiUserPostedByUserNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type EmojiWhere = {
  AND?: InputMaybe<Array<EmojiWhere>>;
  NOT?: InputMaybe<EmojiWhere>;
  OR?: InputMaybe<Array<EmojiWhere>>;
  PostedByUser?: InputMaybe<UserWhere>;
  PostedByUserAggregate?: InputMaybe<EmojiPostedByUserAggregateInput>;
  PostedByUserConnection?: InputMaybe<EmojiPostedByUserConnectionWhere>;
  PostedByUserConnection_NOT?: InputMaybe<EmojiPostedByUserConnectionWhere>;
  PostedByUser_NOT?: InputMaybe<UserWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EmojisConnection = {
  __typename?: 'EmojisConnection';
  edges: Array<EmojiEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EnvironmentInfo = {
  __typename?: 'EnvironmentInfo';
  currentDatabase?: Maybe<Scalars['String']['output']>;
  isTestEnvironment?: Maybe<Scalars['Boolean']['output']>;
};

export type EnvironmentInfoAggregateSelection = {
  __typename?: 'EnvironmentInfoAggregateSelection';
  count: Scalars['Int']['output'];
  currentDatabase: StringAggregateSelection;
};

export type EnvironmentInfoCreateInput = {
  currentDatabase?: InputMaybe<Scalars['String']['input']>;
  isTestEnvironment?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EnvironmentInfoEdge = {
  __typename?: 'EnvironmentInfoEdge';
  cursor: Scalars['String']['output'];
  node: EnvironmentInfo;
};

export type EnvironmentInfoOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EnvironmentInfoSort objects to sort EnvironmentInfos by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EnvironmentInfoSort>>;
};

/** Fields to sort EnvironmentInfos by. The order in which sorts are applied is not guaranteed when specifying many fields in one EnvironmentInfoSort object. */
export type EnvironmentInfoSort = {
  currentDatabase?: InputMaybe<SortDirection>;
  isTestEnvironment?: InputMaybe<SortDirection>;
};

export type EnvironmentInfoUpdateInput = {
  currentDatabase?: InputMaybe<Scalars['String']['input']>;
  isTestEnvironment?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EnvironmentInfoWhere = {
  AND?: InputMaybe<Array<EnvironmentInfoWhere>>;
  NOT?: InputMaybe<EnvironmentInfoWhere>;
  OR?: InputMaybe<Array<EnvironmentInfoWhere>>;
  currentDatabase?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  currentDatabase_MATCHES?: InputMaybe<Scalars['String']['input']>;
  currentDatabase_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  isTestEnvironment?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EnvironmentInfosConnection = {
  __typename?: 'EnvironmentInfosConnection';
  edges: Array<EnvironmentInfoEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Event = {
  __typename?: 'Event';
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<EventCommentCommentsAggregationSelection>;
  CommentsConnection: EventCommentsConnection;
  EventChannels: Array<EventChannel>;
  EventChannelsAggregate?: Maybe<EventEventChannelEventChannelsAggregationSelection>;
  EventChannelsConnection: EventEventChannelsConnection;
  FeedbackComments: Array<Comment>;
  FeedbackCommentsAggregate?: Maybe<EventCommentFeedbackCommentsAggregationSelection>;
  FeedbackCommentsConnection: EventFeedbackCommentsConnection;
  Poster?: Maybe<User>;
  PosterAggregate?: Maybe<EventUserPosterAggregationSelection>;
  PosterConnection: EventPosterConnection;
  RecurringEvent?: Maybe<RecurringEvent>;
  RecurringEventAggregate?: Maybe<EventRecurringEventRecurringEventAggregationSelection>;
  RecurringEventConnection: EventRecurringEventConnection;
  RelatedIssues: Array<Issue>;
  RelatedIssuesAggregate?: Maybe<EventIssueRelatedIssuesAggregationSelection>;
  RelatedIssuesConnection: EventRelatedIssuesConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<EventTagTagsAggregationSelection>;
  TagsConnection: EventTagsConnection;
  address?: Maybe<Scalars['String']['output']>;
  canceled: Scalars['Boolean']['output'];
  cost?: Maybe<Scalars['String']['output']>;
  coverImageURL?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  endTime: Scalars['DateTime']['output'];
  free?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  isAllDay?: Maybe<Scalars['Boolean']['output']>;
  isHostedByOP?: Maybe<Scalars['Boolean']['output']>;
  isInPrivateResidence?: Maybe<Scalars['Boolean']['output']>;
  location?: Maybe<Point>;
  locationName?: Maybe<Scalars['String']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  placeId?: Maybe<Scalars['String']['output']>;
  startTime: Scalars['DateTime']['output'];
  startTimeDayOfWeek?: Maybe<Scalars['String']['output']>;
  startTimeHourOfDay?: Maybe<Scalars['Int']['output']>;
  title: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  virtualEventUrl?: Maybe<Scalars['String']['output']>;
};


export type EventCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type EventCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type EventCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventCommentsConnectionSort>>;
  where?: InputMaybe<EventCommentsConnectionWhere>;
};


export type EventEventChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventChannelOptions>;
  where?: InputMaybe<EventChannelWhere>;
};


export type EventEventChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventChannelWhere>;
};


export type EventEventChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventEventChannelsConnectionSort>>;
  where?: InputMaybe<EventEventChannelsConnectionWhere>;
};


export type EventFeedbackCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type EventFeedbackCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type EventFeedbackCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventFeedbackCommentsConnectionSort>>;
  where?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
};


export type EventPosterArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type EventPosterAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type EventPosterConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventPosterConnectionSort>>;
  where?: InputMaybe<EventPosterConnectionWhere>;
};


export type EventRecurringEventArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<RecurringEventOptions>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type EventRecurringEventAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type EventRecurringEventConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventRecurringEventConnectionSort>>;
  where?: InputMaybe<EventRecurringEventConnectionWhere>;
};


export type EventRelatedIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type EventRelatedIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type EventRelatedIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventRelatedIssuesConnectionSort>>;
  where?: InputMaybe<EventRelatedIssuesConnectionWhere>;
};


export type EventTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type EventTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type EventTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventTagsConnectionSort>>;
  where?: InputMaybe<EventTagsConnectionWhere>;
};

export type EventAggregateSelection = {
  __typename?: 'EventAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  count: Scalars['Int']['output'];
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type EventChannel = {
  __typename?: 'EventChannel';
  Channel?: Maybe<Channel>;
  ChannelAggregate?: Maybe<EventChannelChannelChannelAggregationSelection>;
  ChannelConnection: EventChannelChannelConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<EventChannelCommentCommentsAggregationSelection>;
  CommentsConnection: EventChannelCommentsConnection;
  Event?: Maybe<Event>;
  EventAggregate?: Maybe<EventChannelEventEventAggregationSelection>;
  EventConnection: EventChannelEventConnection;
  RelatedIssues: Array<Issue>;
  RelatedIssuesAggregate?: Maybe<EventChannelIssueRelatedIssuesAggregationSelection>;
  RelatedIssuesConnection: EventChannelRelatedIssuesConnection;
  archived?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  eventId: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  locked?: Maybe<Scalars['Boolean']['output']>;
};


export type EventChannelChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type EventChannelChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type EventChannelChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventChannelChannelConnectionSort>>;
  where?: InputMaybe<EventChannelChannelConnectionWhere>;
};


export type EventChannelCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type EventChannelCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type EventChannelCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventChannelCommentsConnectionSort>>;
  where?: InputMaybe<EventChannelCommentsConnectionWhere>;
};


export type EventChannelEventArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type EventChannelEventAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type EventChannelEventConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventChannelEventConnectionSort>>;
  where?: InputMaybe<EventChannelEventConnectionWhere>;
};


export type EventChannelRelatedIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type EventChannelRelatedIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type EventChannelRelatedIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<EventChannelRelatedIssuesConnectionSort>>;
  where?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
};

export type EventChannelAggregateSelection = {
  __typename?: 'EventChannelAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  eventId: IdAggregateSelection;
  id: IdAggregateSelection;
};

export type EventChannelChannelAggregateInput = {
  AND?: InputMaybe<Array<EventChannelChannelAggregateInput>>;
  NOT?: InputMaybe<EventChannelChannelAggregateInput>;
  OR?: InputMaybe<Array<EventChannelChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventChannelChannelNodeAggregationWhereInput>;
};

export type EventChannelChannelChannelAggregationSelection = {
  __typename?: 'EventChannelChannelChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventChannelChannelChannelNodeAggregateSelection>;
};

export type EventChannelChannelChannelNodeAggregateSelection = {
  __typename?: 'EventChannelChannelChannelNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type EventChannelChannelConnectFieldInput = {
  connect?: InputMaybe<ChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type EventChannelChannelConnectOrCreateFieldInput = {
  onCreate: EventChannelChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type EventChannelChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type EventChannelChannelConnection = {
  __typename?: 'EventChannelChannelConnection';
  edges: Array<EventChannelChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventChannelChannelConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type EventChannelChannelConnectionWhere = {
  AND?: InputMaybe<Array<EventChannelChannelConnectionWhere>>;
  NOT?: InputMaybe<EventChannelChannelConnectionWhere>;
  OR?: InputMaybe<Array<EventChannelChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type EventChannelChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type EventChannelChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<EventChannelChannelConnectionWhere>;
};

export type EventChannelChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<EventChannelChannelConnectionWhere>;
};

export type EventChannelChannelFieldInput = {
  connect?: InputMaybe<EventChannelChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<EventChannelChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<EventChannelChannelCreateFieldInput>;
};

export type EventChannelChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventChannelChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventChannelChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventChannelChannelNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EventChannelChannelRelationship = {
  __typename?: 'EventChannelChannelRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type EventChannelChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type EventChannelChannelUpdateFieldInput = {
  connect?: InputMaybe<EventChannelChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<EventChannelChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<EventChannelChannelCreateFieldInput>;
  delete?: InputMaybe<EventChannelChannelDeleteFieldInput>;
  disconnect?: InputMaybe<EventChannelChannelDisconnectFieldInput>;
  update?: InputMaybe<EventChannelChannelUpdateConnectionInput>;
  where?: InputMaybe<EventChannelChannelConnectionWhere>;
};

export type EventChannelCommentCommentsAggregationSelection = {
  __typename?: 'EventChannelCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventChannelCommentCommentsNodeAggregateSelection>;
};

export type EventChannelCommentCommentsNodeAggregateSelection = {
  __typename?: 'EventChannelCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type EventChannelCommentsAggregateInput = {
  AND?: InputMaybe<Array<EventChannelCommentsAggregateInput>>;
  NOT?: InputMaybe<EventChannelCommentsAggregateInput>;
  OR?: InputMaybe<Array<EventChannelCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventChannelCommentsNodeAggregationWhereInput>;
};

export type EventChannelCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type EventChannelCommentsConnection = {
  __typename?: 'EventChannelCommentsConnection';
  edges: Array<EventChannelCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventChannelCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type EventChannelCommentsConnectionWhere = {
  AND?: InputMaybe<Array<EventChannelCommentsConnectionWhere>>;
  NOT?: InputMaybe<EventChannelCommentsConnectionWhere>;
  OR?: InputMaybe<Array<EventChannelCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type EventChannelCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type EventChannelCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<EventChannelCommentsConnectionWhere>;
};

export type EventChannelCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<EventChannelCommentsConnectionWhere>;
};

export type EventChannelCommentsFieldInput = {
  connect?: InputMaybe<Array<EventChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventChannelCommentsCreateFieldInput>>;
};

export type EventChannelCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventChannelCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventChannelCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventChannelCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type EventChannelCommentsRelationship = {
  __typename?: 'EventChannelCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type EventChannelCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type EventChannelCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventChannelCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventChannelCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventChannelCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventChannelCommentsDisconnectFieldInput>>;
  update?: InputMaybe<EventChannelCommentsUpdateConnectionInput>;
  where?: InputMaybe<EventChannelCommentsConnectionWhere>;
};

export type EventChannelConnectInput = {
  Channel?: InputMaybe<EventChannelChannelConnectFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsConnectFieldInput>>;
  Event?: InputMaybe<EventChannelEventConnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesConnectFieldInput>>;
};

export type EventChannelConnectOrCreateInput = {
  Channel?: InputMaybe<EventChannelChannelConnectOrCreateFieldInput>;
};

export type EventChannelConnectWhere = {
  node: EventChannelWhere;
};

export type EventChannelCreateInput = {
  Channel?: InputMaybe<EventChannelChannelFieldInput>;
  Comments?: InputMaybe<EventChannelCommentsFieldInput>;
  Event?: InputMaybe<EventChannelEventFieldInput>;
  RelatedIssues?: InputMaybe<EventChannelRelatedIssuesFieldInput>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName: Scalars['String']['input'];
  eventId: Scalars['ID']['input'];
  locked?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventChannelDeleteInput = {
  Channel?: InputMaybe<EventChannelChannelDeleteFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsDeleteFieldInput>>;
  Event?: InputMaybe<EventChannelEventDeleteFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesDeleteFieldInput>>;
};

export type EventChannelDisconnectInput = {
  Channel?: InputMaybe<EventChannelChannelDisconnectFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsDisconnectFieldInput>>;
  Event?: InputMaybe<EventChannelEventDisconnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesDisconnectFieldInput>>;
};

export type EventChannelEdge = {
  __typename?: 'EventChannelEdge';
  cursor: Scalars['String']['output'];
  node: EventChannel;
};

export type EventChannelEventAggregateInput = {
  AND?: InputMaybe<Array<EventChannelEventAggregateInput>>;
  NOT?: InputMaybe<EventChannelEventAggregateInput>;
  OR?: InputMaybe<Array<EventChannelEventAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventChannelEventNodeAggregationWhereInput>;
};

export type EventChannelEventConnectFieldInput = {
  connect?: InputMaybe<EventConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type EventChannelEventConnection = {
  __typename?: 'EventChannelEventConnection';
  edges: Array<EventChannelEventRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventChannelEventConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type EventChannelEventConnectionWhere = {
  AND?: InputMaybe<Array<EventChannelEventConnectionWhere>>;
  NOT?: InputMaybe<EventChannelEventConnectionWhere>;
  OR?: InputMaybe<Array<EventChannelEventConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type EventChannelEventCreateFieldInput = {
  node: EventCreateInput;
};

export type EventChannelEventDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<EventChannelEventConnectionWhere>;
};

export type EventChannelEventDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<EventChannelEventConnectionWhere>;
};

export type EventChannelEventEventAggregationSelection = {
  __typename?: 'EventChannelEventEventAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventChannelEventEventNodeAggregateSelection>;
};

export type EventChannelEventEventNodeAggregateSelection = {
  __typename?: 'EventChannelEventEventNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type EventChannelEventFieldInput = {
  connect?: InputMaybe<EventChannelEventConnectFieldInput>;
  create?: InputMaybe<EventChannelEventCreateFieldInput>;
};

export type EventChannelEventNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventChannelEventNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventChannelEventNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventChannelEventNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EventChannelEventRelationship = {
  __typename?: 'EventChannelEventRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type EventChannelEventUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type EventChannelEventUpdateFieldInput = {
  connect?: InputMaybe<EventChannelEventConnectFieldInput>;
  create?: InputMaybe<EventChannelEventCreateFieldInput>;
  delete?: InputMaybe<EventChannelEventDeleteFieldInput>;
  disconnect?: InputMaybe<EventChannelEventDisconnectFieldInput>;
  update?: InputMaybe<EventChannelEventUpdateConnectionInput>;
  where?: InputMaybe<EventChannelEventConnectionWhere>;
};

export type EventChannelIssueRelatedIssuesAggregationSelection = {
  __typename?: 'EventChannelIssueRelatedIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventChannelIssueRelatedIssuesNodeAggregateSelection>;
};

export type EventChannelIssueRelatedIssuesNodeAggregateSelection = {
  __typename?: 'EventChannelIssueRelatedIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type EventChannelOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EventChannelSort objects to sort EventChannels by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EventChannelSort>>;
};

export type EventChannelRelatedIssuesAggregateInput = {
  AND?: InputMaybe<Array<EventChannelRelatedIssuesAggregateInput>>;
  NOT?: InputMaybe<EventChannelRelatedIssuesAggregateInput>;
  OR?: InputMaybe<Array<EventChannelRelatedIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventChannelRelatedIssuesNodeAggregationWhereInput>;
};

export type EventChannelRelatedIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type EventChannelRelatedIssuesConnection = {
  __typename?: 'EventChannelRelatedIssuesConnection';
  edges: Array<EventChannelRelatedIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventChannelRelatedIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type EventChannelRelatedIssuesConnectionWhere = {
  AND?: InputMaybe<Array<EventChannelRelatedIssuesConnectionWhere>>;
  NOT?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  OR?: InputMaybe<Array<EventChannelRelatedIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type EventChannelRelatedIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type EventChannelRelatedIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
};

export type EventChannelRelatedIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
};

export type EventChannelRelatedIssuesFieldInput = {
  connect?: InputMaybe<Array<EventChannelRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<EventChannelRelatedIssuesCreateFieldInput>>;
};

export type EventChannelRelatedIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventChannelRelatedIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventChannelRelatedIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventChannelRelatedIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type EventChannelRelatedIssuesRelationship = {
  __typename?: 'EventChannelRelatedIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type EventChannelRelatedIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type EventChannelRelatedIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<EventChannelRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<EventChannelRelatedIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<EventChannelRelatedIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventChannelRelatedIssuesDisconnectFieldInput>>;
  update?: InputMaybe<EventChannelRelatedIssuesUpdateConnectionInput>;
  where?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
};

export type EventChannelRelationInput = {
  Channel?: InputMaybe<EventChannelChannelCreateFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsCreateFieldInput>>;
  Event?: InputMaybe<EventChannelEventCreateFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesCreateFieldInput>>;
};

/** Fields to sort EventChannels by. The order in which sorts are applied is not guaranteed when specifying many fields in one EventChannelSort object. */
export type EventChannelSort = {
  archived?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  eventId?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  locked?: InputMaybe<SortDirection>;
};

export type EventChannelUpdateInput = {
  Channel?: InputMaybe<EventChannelChannelUpdateFieldInput>;
  Comments?: InputMaybe<Array<EventChannelCommentsUpdateFieldInput>>;
  Event?: InputMaybe<EventChannelEventUpdateFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventChannelRelatedIssuesUpdateFieldInput>>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  eventId?: InputMaybe<Scalars['ID']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventChannelWhere = {
  AND?: InputMaybe<Array<EventChannelWhere>>;
  Channel?: InputMaybe<ChannelWhere>;
  ChannelAggregate?: InputMaybe<EventChannelChannelAggregateInput>;
  ChannelConnection?: InputMaybe<EventChannelChannelConnectionWhere>;
  ChannelConnection_NOT?: InputMaybe<EventChannelChannelConnectionWhere>;
  Channel_NOT?: InputMaybe<ChannelWhere>;
  CommentsAggregate?: InputMaybe<EventChannelCommentsAggregateInput>;
  /** Return EventChannels where all of the related EventChannelCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<EventChannelCommentsConnectionWhere>;
  /** Return EventChannels where none of the related EventChannelCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<EventChannelCommentsConnectionWhere>;
  /** Return EventChannels where one of the related EventChannelCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<EventChannelCommentsConnectionWhere>;
  /** Return EventChannels where some of the related EventChannelCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<EventChannelCommentsConnectionWhere>;
  /** Return EventChannels where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return EventChannels where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return EventChannels where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return EventChannels where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  Event?: InputMaybe<EventWhere>;
  EventAggregate?: InputMaybe<EventChannelEventAggregateInput>;
  EventConnection?: InputMaybe<EventChannelEventConnectionWhere>;
  EventConnection_NOT?: InputMaybe<EventChannelEventConnectionWhere>;
  Event_NOT?: InputMaybe<EventWhere>;
  NOT?: InputMaybe<EventChannelWhere>;
  OR?: InputMaybe<Array<EventChannelWhere>>;
  RelatedIssuesAggregate?: InputMaybe<EventChannelRelatedIssuesAggregateInput>;
  /** Return EventChannels where all of the related EventChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_ALL?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  /** Return EventChannels where none of the related EventChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_NONE?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  /** Return EventChannels where one of the related EventChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SINGLE?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  /** Return EventChannels where some of the related EventChannelRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SOME?: InputMaybe<EventChannelRelatedIssuesConnectionWhere>;
  /** Return EventChannels where all of the related Issues match this filter */
  RelatedIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return EventChannels where none of the related Issues match this filter */
  RelatedIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return EventChannels where one of the related Issues match this filter */
  RelatedIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return EventChannels where some of the related Issues match this filter */
  RelatedIssues_SOME?: InputMaybe<IssueWhere>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  eventId?: InputMaybe<Scalars['ID']['input']>;
  eventId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  eventId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  eventId_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  eventId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventChannelsConnection = {
  __typename?: 'EventChannelsConnection';
  edges: Array<EventChannelEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventCommentCommentsAggregationSelection = {
  __typename?: 'EventCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventCommentCommentsNodeAggregateSelection>;
};

export type EventCommentCommentsNodeAggregateSelection = {
  __typename?: 'EventCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type EventCommentFeedbackCommentsAggregationSelection = {
  __typename?: 'EventCommentFeedbackCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventCommentFeedbackCommentsNodeAggregateSelection>;
};

export type EventCommentFeedbackCommentsNodeAggregateSelection = {
  __typename?: 'EventCommentFeedbackCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type EventCommentsAggregateInput = {
  AND?: InputMaybe<Array<EventCommentsAggregateInput>>;
  NOT?: InputMaybe<EventCommentsAggregateInput>;
  OR?: InputMaybe<Array<EventCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventCommentsNodeAggregationWhereInput>;
};

export type EventCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type EventCommentsConnection = {
  __typename?: 'EventCommentsConnection';
  edges: Array<EventCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type EventCommentsConnectionWhere = {
  AND?: InputMaybe<Array<EventCommentsConnectionWhere>>;
  NOT?: InputMaybe<EventCommentsConnectionWhere>;
  OR?: InputMaybe<Array<EventCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type EventCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type EventCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<EventCommentsConnectionWhere>;
};

export type EventCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<EventCommentsConnectionWhere>;
};

export type EventCommentsFieldInput = {
  connect?: InputMaybe<Array<EventCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventCommentsCreateFieldInput>>;
};

export type EventCommentsFormat = {
  __typename?: 'EventCommentsFormat';
  Comments: Array<Comment>;
  Event?: Maybe<Event>;
};

export type EventCommentsFormatAggregateSelection = {
  __typename?: 'EventCommentsFormatAggregateSelection';
  count: Scalars['Int']['output'];
};

export type EventCommentsFormatCreateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventCommentsFormatEdge = {
  __typename?: 'EventCommentsFormatEdge';
  cursor: Scalars['String']['output'];
  node: EventCommentsFormat;
};

export type EventCommentsFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type EventCommentsFormatUpdateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventCommentsFormatWhere = {
  AND?: InputMaybe<Array<EventCommentsFormatWhere>>;
  NOT?: InputMaybe<EventCommentsFormatWhere>;
  OR?: InputMaybe<Array<EventCommentsFormatWhere>>;
};

export type EventCommentsFormatsConnection = {
  __typename?: 'EventCommentsFormatsConnection';
  edges: Array<EventCommentsFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type EventCommentsRelationship = {
  __typename?: 'EventCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type EventCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type EventCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventCommentsDisconnectFieldInput>>;
  update?: InputMaybe<EventCommentsUpdateConnectionInput>;
  where?: InputMaybe<EventCommentsConnectionWhere>;
};

export type EventConnectInput = {
  Comments?: InputMaybe<Array<EventCommentsConnectFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsConnectFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsConnectFieldInput>>;
  Poster?: InputMaybe<EventPosterConnectFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventConnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesConnectFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsConnectFieldInput>>;
};

export type EventConnectOrCreateInput = {
  Poster?: InputMaybe<EventPosterConnectOrCreateFieldInput>;
  Tags?: InputMaybe<Array<EventTagsConnectOrCreateFieldInput>>;
};

export type EventConnectWhere = {
  node: EventWhere;
};

export type EventCreateInput = {
  Comments?: InputMaybe<EventCommentsFieldInput>;
  EventChannels?: InputMaybe<EventEventChannelsFieldInput>;
  FeedbackComments?: InputMaybe<EventFeedbackCommentsFieldInput>;
  Poster?: InputMaybe<EventPosterFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventFieldInput>;
  RelatedIssues?: InputMaybe<EventRelatedIssuesFieldInput>;
  Tags?: InputMaybe<EventTagsFieldInput>;
  address?: InputMaybe<Scalars['String']['input']>;
  canceled: Scalars['Boolean']['input'];
  cost?: InputMaybe<Scalars['String']['input']>;
  coverImageURL?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  endTime: Scalars['DateTime']['input'];
  free?: InputMaybe<Scalars['Boolean']['input']>;
  isAllDay?: InputMaybe<Scalars['Boolean']['input']>;
  isHostedByOP?: InputMaybe<Scalars['Boolean']['input']>;
  isInPrivateResidence?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<PointInput>;
  locationName?: InputMaybe<Scalars['String']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  placeId?: InputMaybe<Scalars['String']['input']>;
  startTime: Scalars['DateTime']['input'];
  startTimeDayOfWeek?: InputMaybe<Scalars['String']['input']>;
  startTimeHourOfDay?: InputMaybe<Scalars['Int']['input']>;
  title: Scalars['String']['input'];
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl?: InputMaybe<Scalars['String']['input']>;
};

export type EventCreateInputWithChannels = {
  channelConnections: Array<Scalars['String']['input']>;
  eventCreateInput: EventCreateInput;
};

export type EventDeleteInput = {
  Comments?: InputMaybe<Array<EventCommentsDeleteFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsDeleteFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsDeleteFieldInput>>;
  Poster?: InputMaybe<EventPosterDeleteFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventDeleteFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesDeleteFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsDeleteFieldInput>>;
};

export type EventDisconnectInput = {
  Comments?: InputMaybe<Array<EventCommentsDisconnectFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsDisconnectFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsDisconnectFieldInput>>;
  Poster?: InputMaybe<EventPosterDisconnectFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventDisconnectFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesDisconnectFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsDisconnectFieldInput>>;
};

export type EventEdge = {
  __typename?: 'EventEdge';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type EventEventChannelEventChannelsAggregationSelection = {
  __typename?: 'EventEventChannelEventChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventEventChannelEventChannelsNodeAggregateSelection>;
};

export type EventEventChannelEventChannelsNodeAggregateSelection = {
  __typename?: 'EventEventChannelEventChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  eventId: IdAggregateSelection;
  id: IdAggregateSelection;
};

export type EventEventChannelsAggregateInput = {
  AND?: InputMaybe<Array<EventEventChannelsAggregateInput>>;
  NOT?: InputMaybe<EventEventChannelsAggregateInput>;
  OR?: InputMaybe<Array<EventEventChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventEventChannelsNodeAggregationWhereInput>;
};

export type EventEventChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<EventChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventChannelConnectWhere>;
};

export type EventEventChannelsConnection = {
  __typename?: 'EventEventChannelsConnection';
  edges: Array<EventEventChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventEventChannelsConnectionSort = {
  node?: InputMaybe<EventChannelSort>;
};

export type EventEventChannelsConnectionWhere = {
  AND?: InputMaybe<Array<EventEventChannelsConnectionWhere>>;
  NOT?: InputMaybe<EventEventChannelsConnectionWhere>;
  OR?: InputMaybe<Array<EventEventChannelsConnectionWhere>>;
  node?: InputMaybe<EventChannelWhere>;
};

export type EventEventChannelsCreateFieldInput = {
  node: EventChannelCreateInput;
};

export type EventEventChannelsDeleteFieldInput = {
  delete?: InputMaybe<EventChannelDeleteInput>;
  where?: InputMaybe<EventEventChannelsConnectionWhere>;
};

export type EventEventChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventChannelDisconnectInput>;
  where?: InputMaybe<EventEventChannelsConnectionWhere>;
};

export type EventEventChannelsFieldInput = {
  connect?: InputMaybe<Array<EventEventChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<EventEventChannelsCreateFieldInput>>;
};

export type EventEventChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventEventChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventEventChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventEventChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type EventEventChannelsRelationship = {
  __typename?: 'EventEventChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: EventChannel;
};

export type EventEventChannelsUpdateConnectionInput = {
  node?: InputMaybe<EventChannelUpdateInput>;
};

export type EventEventChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventEventChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<EventEventChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventEventChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventEventChannelsDisconnectFieldInput>>;
  update?: InputMaybe<EventEventChannelsUpdateConnectionInput>;
  where?: InputMaybe<EventEventChannelsConnectionWhere>;
};

export type EventFeedbackCommentsAggregateInput = {
  AND?: InputMaybe<Array<EventFeedbackCommentsAggregateInput>>;
  NOT?: InputMaybe<EventFeedbackCommentsAggregateInput>;
  OR?: InputMaybe<Array<EventFeedbackCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventFeedbackCommentsNodeAggregationWhereInput>;
};

export type EventFeedbackCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type EventFeedbackCommentsConnection = {
  __typename?: 'EventFeedbackCommentsConnection';
  edges: Array<EventFeedbackCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventFeedbackCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type EventFeedbackCommentsConnectionWhere = {
  AND?: InputMaybe<Array<EventFeedbackCommentsConnectionWhere>>;
  NOT?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  OR?: InputMaybe<Array<EventFeedbackCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type EventFeedbackCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type EventFeedbackCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
};

export type EventFeedbackCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
};

export type EventFeedbackCommentsFieldInput = {
  connect?: InputMaybe<Array<EventFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventFeedbackCommentsCreateFieldInput>>;
};

export type EventFeedbackCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventFeedbackCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventFeedbackCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventFeedbackCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type EventFeedbackCommentsRelationship = {
  __typename?: 'EventFeedbackCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type EventFeedbackCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type EventFeedbackCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventFeedbackCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<EventFeedbackCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventFeedbackCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventFeedbackCommentsDisconnectFieldInput>>;
  update?: InputMaybe<EventFeedbackCommentsUpdateConnectionInput>;
  where?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
};

export type EventIssueRelatedIssuesAggregationSelection = {
  __typename?: 'EventIssueRelatedIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventIssueRelatedIssuesNodeAggregateSelection>;
};

export type EventIssueRelatedIssuesNodeAggregateSelection = {
  __typename?: 'EventIssueRelatedIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type EventOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more EventSort objects to sort Events by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<EventSort>>;
};

export type EventPosterAggregateInput = {
  AND?: InputMaybe<Array<EventPosterAggregateInput>>;
  NOT?: InputMaybe<EventPosterAggregateInput>;
  OR?: InputMaybe<Array<EventPosterAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventPosterNodeAggregationWhereInput>;
};

export type EventPosterConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type EventPosterConnectOrCreateFieldInput = {
  onCreate: EventPosterConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type EventPosterConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type EventPosterConnection = {
  __typename?: 'EventPosterConnection';
  edges: Array<EventPosterRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventPosterConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type EventPosterConnectionWhere = {
  AND?: InputMaybe<Array<EventPosterConnectionWhere>>;
  NOT?: InputMaybe<EventPosterConnectionWhere>;
  OR?: InputMaybe<Array<EventPosterConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type EventPosterCreateFieldInput = {
  node: UserCreateInput;
};

export type EventPosterDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<EventPosterConnectionWhere>;
};

export type EventPosterDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<EventPosterConnectionWhere>;
};

export type EventPosterFieldInput = {
  connect?: InputMaybe<EventPosterConnectFieldInput>;
  connectOrCreate?: InputMaybe<EventPosterConnectOrCreateFieldInput>;
  create?: InputMaybe<EventPosterCreateFieldInput>;
};

export type EventPosterNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventPosterNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<EventPosterNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<EventPosterNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EventPosterRelationship = {
  __typename?: 'EventPosterRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type EventPosterUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type EventPosterUpdateFieldInput = {
  connect?: InputMaybe<EventPosterConnectFieldInput>;
  connectOrCreate?: InputMaybe<EventPosterConnectOrCreateFieldInput>;
  create?: InputMaybe<EventPosterCreateFieldInput>;
  delete?: InputMaybe<EventPosterDeleteFieldInput>;
  disconnect?: InputMaybe<EventPosterDisconnectFieldInput>;
  update?: InputMaybe<EventPosterUpdateConnectionInput>;
  where?: InputMaybe<EventPosterConnectionWhere>;
};

export type EventRecurringEventAggregateInput = {
  AND?: InputMaybe<Array<EventRecurringEventAggregateInput>>;
  NOT?: InputMaybe<EventRecurringEventAggregateInput>;
  OR?: InputMaybe<Array<EventRecurringEventAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventRecurringEventNodeAggregationWhereInput>;
};

export type EventRecurringEventConnectFieldInput = {
  connect?: InputMaybe<RecurringEventConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<RecurringEventConnectWhere>;
};

export type EventRecurringEventConnection = {
  __typename?: 'EventRecurringEventConnection';
  edges: Array<EventRecurringEventRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventRecurringEventConnectionSort = {
  node?: InputMaybe<RecurringEventSort>;
};

export type EventRecurringEventConnectionWhere = {
  AND?: InputMaybe<Array<EventRecurringEventConnectionWhere>>;
  NOT?: InputMaybe<EventRecurringEventConnectionWhere>;
  OR?: InputMaybe<Array<EventRecurringEventConnectionWhere>>;
  node?: InputMaybe<RecurringEventWhere>;
};

export type EventRecurringEventCreateFieldInput = {
  node: RecurringEventCreateInput;
};

export type EventRecurringEventDeleteFieldInput = {
  delete?: InputMaybe<RecurringEventDeleteInput>;
  where?: InputMaybe<EventRecurringEventConnectionWhere>;
};

export type EventRecurringEventDisconnectFieldInput = {
  disconnect?: InputMaybe<RecurringEventDisconnectInput>;
  where?: InputMaybe<EventRecurringEventConnectionWhere>;
};

export type EventRecurringEventFieldInput = {
  connect?: InputMaybe<EventRecurringEventConnectFieldInput>;
  create?: InputMaybe<EventRecurringEventCreateFieldInput>;
};

export type EventRecurringEventNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventRecurringEventNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventRecurringEventNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventRecurringEventNodeAggregationWhereInput>>;
};

export type EventRecurringEventRecurringEventAggregationSelection = {
  __typename?: 'EventRecurringEventRecurringEventAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventRecurringEventRecurringEventNodeAggregateSelection>;
};

export type EventRecurringEventRecurringEventNodeAggregateSelection = {
  __typename?: 'EventRecurringEventRecurringEventNodeAggregateSelection';
  id: IdAggregateSelection;
};

export type EventRecurringEventRelationship = {
  __typename?: 'EventRecurringEventRelationship';
  cursor: Scalars['String']['output'];
  node: RecurringEvent;
};

export type EventRecurringEventUpdateConnectionInput = {
  node?: InputMaybe<RecurringEventUpdateInput>;
};

export type EventRecurringEventUpdateFieldInput = {
  connect?: InputMaybe<EventRecurringEventConnectFieldInput>;
  create?: InputMaybe<EventRecurringEventCreateFieldInput>;
  delete?: InputMaybe<EventRecurringEventDeleteFieldInput>;
  disconnect?: InputMaybe<EventRecurringEventDisconnectFieldInput>;
  update?: InputMaybe<EventRecurringEventUpdateConnectionInput>;
  where?: InputMaybe<EventRecurringEventConnectionWhere>;
};

export type EventRelatedIssuesAggregateInput = {
  AND?: InputMaybe<Array<EventRelatedIssuesAggregateInput>>;
  NOT?: InputMaybe<EventRelatedIssuesAggregateInput>;
  OR?: InputMaybe<Array<EventRelatedIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventRelatedIssuesNodeAggregationWhereInput>;
};

export type EventRelatedIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type EventRelatedIssuesConnection = {
  __typename?: 'EventRelatedIssuesConnection';
  edges: Array<EventRelatedIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventRelatedIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type EventRelatedIssuesConnectionWhere = {
  AND?: InputMaybe<Array<EventRelatedIssuesConnectionWhere>>;
  NOT?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  OR?: InputMaybe<Array<EventRelatedIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type EventRelatedIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type EventRelatedIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<EventRelatedIssuesConnectionWhere>;
};

export type EventRelatedIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<EventRelatedIssuesConnectionWhere>;
};

export type EventRelatedIssuesFieldInput = {
  connect?: InputMaybe<Array<EventRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<EventRelatedIssuesCreateFieldInput>>;
};

export type EventRelatedIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventRelatedIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventRelatedIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventRelatedIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type EventRelatedIssuesRelationship = {
  __typename?: 'EventRelatedIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type EventRelatedIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type EventRelatedIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<EventRelatedIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<EventRelatedIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<EventRelatedIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventRelatedIssuesDisconnectFieldInput>>;
  update?: InputMaybe<EventRelatedIssuesUpdateConnectionInput>;
  where?: InputMaybe<EventRelatedIssuesConnectionWhere>;
};

export type EventRelationInput = {
  Comments?: InputMaybe<Array<EventCommentsCreateFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsCreateFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsCreateFieldInput>>;
  Poster?: InputMaybe<EventPosterCreateFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventCreateFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesCreateFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsCreateFieldInput>>;
};

/** Fields to sort Events by. The order in which sorts are applied is not guaranteed when specifying many fields in one EventSort object. */
export type EventSort = {
  address?: InputMaybe<SortDirection>;
  canceled?: InputMaybe<SortDirection>;
  cost?: InputMaybe<SortDirection>;
  coverImageURL?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  endTime?: InputMaybe<SortDirection>;
  free?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isAllDay?: InputMaybe<SortDirection>;
  isHostedByOP?: InputMaybe<SortDirection>;
  isInPrivateResidence?: InputMaybe<SortDirection>;
  location?: InputMaybe<SortDirection>;
  locationName?: InputMaybe<SortDirection>;
  locked?: InputMaybe<SortDirection>;
  placeId?: InputMaybe<SortDirection>;
  startTime?: InputMaybe<SortDirection>;
  startTimeDayOfWeek?: InputMaybe<SortDirection>;
  startTimeHourOfDay?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
  virtualEventUrl?: InputMaybe<SortDirection>;
};

export type EventTagTagsAggregationSelection = {
  __typename?: 'EventTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventTagTagsNodeAggregateSelection>;
};

export type EventTagTagsNodeAggregateSelection = {
  __typename?: 'EventTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type EventTagsAggregateInput = {
  AND?: InputMaybe<Array<EventTagsAggregateInput>>;
  NOT?: InputMaybe<EventTagsAggregateInput>;
  OR?: InputMaybe<Array<EventTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<EventTagsNodeAggregationWhereInput>;
};

export type EventTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type EventTagsConnectOrCreateFieldInput = {
  onCreate: EventTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type EventTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type EventTagsConnection = {
  __typename?: 'EventTagsConnection';
  edges: Array<EventTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EventTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type EventTagsConnectionWhere = {
  AND?: InputMaybe<Array<EventTagsConnectionWhere>>;
  NOT?: InputMaybe<EventTagsConnectionWhere>;
  OR?: InputMaybe<Array<EventTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type EventTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type EventTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<EventTagsConnectionWhere>;
};

export type EventTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<EventTagsConnectionWhere>;
};

export type EventTagsFieldInput = {
  connect?: InputMaybe<Array<EventTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<EventTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<EventTagsCreateFieldInput>>;
};

export type EventTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<EventTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<EventTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<EventTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type EventTagsRelationship = {
  __typename?: 'EventTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type EventTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type EventTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<EventTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<EventTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<EventTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<EventTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<EventTagsDisconnectFieldInput>>;
  update?: InputMaybe<EventTagsUpdateConnectionInput>;
  where?: InputMaybe<EventTagsConnectionWhere>;
};

export type EventUpdateInput = {
  Comments?: InputMaybe<Array<EventCommentsUpdateFieldInput>>;
  EventChannels?: InputMaybe<Array<EventEventChannelsUpdateFieldInput>>;
  FeedbackComments?: InputMaybe<Array<EventFeedbackCommentsUpdateFieldInput>>;
  Poster?: InputMaybe<EventPosterUpdateFieldInput>;
  RecurringEvent?: InputMaybe<EventRecurringEventUpdateFieldInput>;
  RelatedIssues?: InputMaybe<Array<EventRelatedIssuesUpdateFieldInput>>;
  Tags?: InputMaybe<Array<EventTagsUpdateFieldInput>>;
  address?: InputMaybe<Scalars['String']['input']>;
  canceled?: InputMaybe<Scalars['Boolean']['input']>;
  cost?: InputMaybe<Scalars['String']['input']>;
  coverImageURL?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  endTime?: InputMaybe<Scalars['DateTime']['input']>;
  free?: InputMaybe<Scalars['Boolean']['input']>;
  isAllDay?: InputMaybe<Scalars['Boolean']['input']>;
  isHostedByOP?: InputMaybe<Scalars['Boolean']['input']>;
  isInPrivateResidence?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<PointInput>;
  locationName?: InputMaybe<Scalars['String']['input']>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  placeId?: InputMaybe<Scalars['String']['input']>;
  startTime?: InputMaybe<Scalars['DateTime']['input']>;
  startTimeDayOfWeek?: InputMaybe<Scalars['String']['input']>;
  startTimeHourOfDay?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl?: InputMaybe<Scalars['String']['input']>;
};

export type EventUserPosterAggregationSelection = {
  __typename?: 'EventUserPosterAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<EventUserPosterNodeAggregateSelection>;
};

export type EventUserPosterNodeAggregateSelection = {
  __typename?: 'EventUserPosterNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type EventWhere = {
  AND?: InputMaybe<Array<EventWhere>>;
  CommentsAggregate?: InputMaybe<EventCommentsAggregateInput>;
  /** Return Events where all of the related EventCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<EventCommentsConnectionWhere>;
  /** Return Events where none of the related EventCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<EventCommentsConnectionWhere>;
  /** Return Events where one of the related EventCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<EventCommentsConnectionWhere>;
  /** Return Events where some of the related EventCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<EventCommentsConnectionWhere>;
  /** Return Events where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return Events where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return Events where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Events where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  EventChannelsAggregate?: InputMaybe<EventEventChannelsAggregateInput>;
  /** Return Events where all of the related EventEventChannelsConnections match this filter */
  EventChannelsConnection_ALL?: InputMaybe<EventEventChannelsConnectionWhere>;
  /** Return Events where none of the related EventEventChannelsConnections match this filter */
  EventChannelsConnection_NONE?: InputMaybe<EventEventChannelsConnectionWhere>;
  /** Return Events where one of the related EventEventChannelsConnections match this filter */
  EventChannelsConnection_SINGLE?: InputMaybe<EventEventChannelsConnectionWhere>;
  /** Return Events where some of the related EventEventChannelsConnections match this filter */
  EventChannelsConnection_SOME?: InputMaybe<EventEventChannelsConnectionWhere>;
  /** Return Events where all of the related EventChannels match this filter */
  EventChannels_ALL?: InputMaybe<EventChannelWhere>;
  /** Return Events where none of the related EventChannels match this filter */
  EventChannels_NONE?: InputMaybe<EventChannelWhere>;
  /** Return Events where one of the related EventChannels match this filter */
  EventChannels_SINGLE?: InputMaybe<EventChannelWhere>;
  /** Return Events where some of the related EventChannels match this filter */
  EventChannels_SOME?: InputMaybe<EventChannelWhere>;
  FeedbackCommentsAggregate?: InputMaybe<EventFeedbackCommentsAggregateInput>;
  /** Return Events where all of the related EventFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_ALL?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  /** Return Events where none of the related EventFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_NONE?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  /** Return Events where one of the related EventFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SINGLE?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  /** Return Events where some of the related EventFeedbackCommentsConnections match this filter */
  FeedbackCommentsConnection_SOME?: InputMaybe<EventFeedbackCommentsConnectionWhere>;
  /** Return Events where all of the related Comments match this filter */
  FeedbackComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Events where none of the related Comments match this filter */
  FeedbackComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Events where one of the related Comments match this filter */
  FeedbackComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Events where some of the related Comments match this filter */
  FeedbackComments_SOME?: InputMaybe<CommentWhere>;
  NOT?: InputMaybe<EventWhere>;
  OR?: InputMaybe<Array<EventWhere>>;
  Poster?: InputMaybe<UserWhere>;
  PosterAggregate?: InputMaybe<EventPosterAggregateInput>;
  PosterConnection?: InputMaybe<EventPosterConnectionWhere>;
  PosterConnection_NOT?: InputMaybe<EventPosterConnectionWhere>;
  Poster_NOT?: InputMaybe<UserWhere>;
  RecurringEvent?: InputMaybe<RecurringEventWhere>;
  RecurringEventAggregate?: InputMaybe<EventRecurringEventAggregateInput>;
  RecurringEventConnection?: InputMaybe<EventRecurringEventConnectionWhere>;
  RecurringEventConnection_NOT?: InputMaybe<EventRecurringEventConnectionWhere>;
  RecurringEvent_NOT?: InputMaybe<RecurringEventWhere>;
  RelatedIssuesAggregate?: InputMaybe<EventRelatedIssuesAggregateInput>;
  /** Return Events where all of the related EventRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_ALL?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  /** Return Events where none of the related EventRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_NONE?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  /** Return Events where one of the related EventRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SINGLE?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  /** Return Events where some of the related EventRelatedIssuesConnections match this filter */
  RelatedIssuesConnection_SOME?: InputMaybe<EventRelatedIssuesConnectionWhere>;
  /** Return Events where all of the related Issues match this filter */
  RelatedIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return Events where none of the related Issues match this filter */
  RelatedIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return Events where one of the related Issues match this filter */
  RelatedIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return Events where some of the related Issues match this filter */
  RelatedIssues_SOME?: InputMaybe<IssueWhere>;
  TagsAggregate?: InputMaybe<EventTagsAggregateInput>;
  /** Return Events where all of the related EventTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<EventTagsConnectionWhere>;
  /** Return Events where none of the related EventTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<EventTagsConnectionWhere>;
  /** Return Events where one of the related EventTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<EventTagsConnectionWhere>;
  /** Return Events where some of the related EventTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<EventTagsConnectionWhere>;
  /** Return Events where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Events where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Events where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Events where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  address?: InputMaybe<Scalars['String']['input']>;
  address_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  address_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  address_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  address_MATCHES?: InputMaybe<Scalars['String']['input']>;
  address_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  canceled?: InputMaybe<Scalars['Boolean']['input']>;
  cost?: InputMaybe<Scalars['String']['input']>;
  cost_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  cost_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  cost_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  cost_MATCHES?: InputMaybe<Scalars['String']['input']>;
  cost_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  coverImageURL?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  coverImageURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  coverImageURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  endTime?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  endTime_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  free?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  isAllDay?: InputMaybe<Scalars['Boolean']['input']>;
  isHostedByOP?: InputMaybe<Scalars['Boolean']['input']>;
  isInPrivateResidence?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<PointInput>;
  locationName?: InputMaybe<Scalars['String']['input']>;
  locationName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  locationName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  locationName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  locationName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  locationName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  location_DISTANCE?: InputMaybe<PointDistance>;
  location_GT?: InputMaybe<PointDistance>;
  location_GTE?: InputMaybe<PointDistance>;
  location_IN?: InputMaybe<Array<InputMaybe<PointInput>>>;
  location_LT?: InputMaybe<PointDistance>;
  location_LTE?: InputMaybe<PointDistance>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
  placeId?: InputMaybe<Scalars['String']['input']>;
  placeId_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  placeId_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  placeId_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  placeId_MATCHES?: InputMaybe<Scalars['String']['input']>;
  placeId_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  startTime?: InputMaybe<Scalars['DateTime']['input']>;
  startTimeDayOfWeek?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  startTimeDayOfWeek_MATCHES?: InputMaybe<Scalars['String']['input']>;
  startTimeDayOfWeek_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  startTimeHourOfDay?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  startTimeHourOfDay_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  startTime_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  virtualEventUrl_MATCHES?: InputMaybe<Scalars['String']['input']>;
  virtualEventUrl_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type EventsConnection = {
  __typename?: 'EventsConnection';
  edges: Array<EventEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Feed = {
  __typename?: 'Feed';
  Owner?: Maybe<User>;
  OwnerAggregate?: Maybe<FeedUserOwnerAggregationSelection>;
  OwnerConnection: FeedOwnerConnection;
  Tags: Array<Tag>;
  TagsAggregate?: Maybe<FeedTagTagsAggregationSelection>;
  TagsConnection: FeedTagsConnection;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  title?: Maybe<Scalars['String']['output']>;
};


export type FeedOwnerArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type FeedOwnerAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type FeedOwnerConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<FeedOwnerConnectionSort>>;
  where?: InputMaybe<FeedOwnerConnectionWhere>;
};


export type FeedTagsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type FeedTagsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TagWhere>;
};


export type FeedTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<FeedTagsConnectionSort>>;
  where?: InputMaybe<FeedTagsConnectionWhere>;
};

export type FeedAggregateSelection = {
  __typename?: 'FeedAggregateSelection';
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type FeedConnectInput = {
  Owner?: InputMaybe<FeedOwnerConnectFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsConnectFieldInput>>;
};

export type FeedConnectOrCreateInput = {
  Owner?: InputMaybe<FeedOwnerConnectOrCreateFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsConnectOrCreateFieldInput>>;
};

export type FeedConnectWhere = {
  node: FeedWhere;
};

export type FeedCreateInput = {
  Owner?: InputMaybe<FeedOwnerFieldInput>;
  Tags?: InputMaybe<FeedTagsFieldInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type FeedDeleteInput = {
  Owner?: InputMaybe<FeedOwnerDeleteFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsDeleteFieldInput>>;
};

export type FeedDisconnectInput = {
  Owner?: InputMaybe<FeedOwnerDisconnectFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsDisconnectFieldInput>>;
};

export type FeedEdge = {
  __typename?: 'FeedEdge';
  cursor: Scalars['String']['output'];
  node: Feed;
};

export type FeedOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more FeedSort objects to sort Feeds by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<FeedSort>>;
};

export type FeedOwnerAggregateInput = {
  AND?: InputMaybe<Array<FeedOwnerAggregateInput>>;
  NOT?: InputMaybe<FeedOwnerAggregateInput>;
  OR?: InputMaybe<Array<FeedOwnerAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<FeedOwnerNodeAggregationWhereInput>;
};

export type FeedOwnerConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type FeedOwnerConnectOrCreateFieldInput = {
  onCreate: FeedOwnerConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type FeedOwnerConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type FeedOwnerConnection = {
  __typename?: 'FeedOwnerConnection';
  edges: Array<FeedOwnerRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FeedOwnerConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type FeedOwnerConnectionWhere = {
  AND?: InputMaybe<Array<FeedOwnerConnectionWhere>>;
  NOT?: InputMaybe<FeedOwnerConnectionWhere>;
  OR?: InputMaybe<Array<FeedOwnerConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type FeedOwnerCreateFieldInput = {
  node: UserCreateInput;
};

export type FeedOwnerDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<FeedOwnerConnectionWhere>;
};

export type FeedOwnerDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<FeedOwnerConnectionWhere>;
};

export type FeedOwnerFieldInput = {
  connect?: InputMaybe<FeedOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<FeedOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<FeedOwnerCreateFieldInput>;
};

export type FeedOwnerNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FeedOwnerNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<FeedOwnerNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<FeedOwnerNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FeedOwnerRelationship = {
  __typename?: 'FeedOwnerRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type FeedOwnerUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type FeedOwnerUpdateFieldInput = {
  connect?: InputMaybe<FeedOwnerConnectFieldInput>;
  connectOrCreate?: InputMaybe<FeedOwnerConnectOrCreateFieldInput>;
  create?: InputMaybe<FeedOwnerCreateFieldInput>;
  delete?: InputMaybe<FeedOwnerDeleteFieldInput>;
  disconnect?: InputMaybe<FeedOwnerDisconnectFieldInput>;
  update?: InputMaybe<FeedOwnerUpdateConnectionInput>;
  where?: InputMaybe<FeedOwnerConnectionWhere>;
};

export type FeedRelationInput = {
  Owner?: InputMaybe<FeedOwnerCreateFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsCreateFieldInput>>;
};

/** Fields to sort Feeds by. The order in which sorts are applied is not guaranteed when specifying many fields in one FeedSort object. */
export type FeedSort = {
  deleted?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
};

export type FeedTagTagsAggregationSelection = {
  __typename?: 'FeedTagTagsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<FeedTagTagsNodeAggregateSelection>;
};

export type FeedTagTagsNodeAggregateSelection = {
  __typename?: 'FeedTagTagsNodeAggregateSelection';
  text: StringAggregateSelection;
};

export type FeedTagsAggregateInput = {
  AND?: InputMaybe<Array<FeedTagsAggregateInput>>;
  NOT?: InputMaybe<FeedTagsAggregateInput>;
  OR?: InputMaybe<Array<FeedTagsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<FeedTagsNodeAggregationWhereInput>;
};

export type FeedTagsConnectFieldInput = {
  connect?: InputMaybe<Array<TagConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TagConnectWhere>;
};

export type FeedTagsConnectOrCreateFieldInput = {
  onCreate: FeedTagsConnectOrCreateFieldInputOnCreate;
  where: TagConnectOrCreateWhere;
};

export type FeedTagsConnectOrCreateFieldInputOnCreate = {
  node: TagOnCreateInput;
};

export type FeedTagsConnection = {
  __typename?: 'FeedTagsConnection';
  edges: Array<FeedTagsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FeedTagsConnectionSort = {
  node?: InputMaybe<TagSort>;
};

export type FeedTagsConnectionWhere = {
  AND?: InputMaybe<Array<FeedTagsConnectionWhere>>;
  NOT?: InputMaybe<FeedTagsConnectionWhere>;
  OR?: InputMaybe<Array<FeedTagsConnectionWhere>>;
  node?: InputMaybe<TagWhere>;
};

export type FeedTagsCreateFieldInput = {
  node: TagCreateInput;
};

export type FeedTagsDeleteFieldInput = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<FeedTagsConnectionWhere>;
};

export type FeedTagsDisconnectFieldInput = {
  disconnect?: InputMaybe<TagDisconnectInput>;
  where?: InputMaybe<FeedTagsConnectionWhere>;
};

export type FeedTagsFieldInput = {
  connect?: InputMaybe<Array<FeedTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<FeedTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<FeedTagsCreateFieldInput>>;
};

export type FeedTagsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<FeedTagsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<FeedTagsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<FeedTagsNodeAggregationWhereInput>>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type FeedTagsRelationship = {
  __typename?: 'FeedTagsRelationship';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type FeedTagsUpdateConnectionInput = {
  node?: InputMaybe<TagUpdateInput>;
};

export type FeedTagsUpdateFieldInput = {
  connect?: InputMaybe<Array<FeedTagsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<FeedTagsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<FeedTagsCreateFieldInput>>;
  delete?: InputMaybe<Array<FeedTagsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<FeedTagsDisconnectFieldInput>>;
  update?: InputMaybe<FeedTagsUpdateConnectionInput>;
  where?: InputMaybe<FeedTagsConnectionWhere>;
};

export type FeedUpdateInput = {
  Owner?: InputMaybe<FeedOwnerUpdateFieldInput>;
  Tags?: InputMaybe<Array<FeedTagsUpdateFieldInput>>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type FeedUserOwnerAggregationSelection = {
  __typename?: 'FeedUserOwnerAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<FeedUserOwnerNodeAggregateSelection>;
};

export type FeedUserOwnerNodeAggregateSelection = {
  __typename?: 'FeedUserOwnerNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type FeedWhere = {
  AND?: InputMaybe<Array<FeedWhere>>;
  NOT?: InputMaybe<FeedWhere>;
  OR?: InputMaybe<Array<FeedWhere>>;
  Owner?: InputMaybe<UserWhere>;
  OwnerAggregate?: InputMaybe<FeedOwnerAggregateInput>;
  OwnerConnection?: InputMaybe<FeedOwnerConnectionWhere>;
  OwnerConnection_NOT?: InputMaybe<FeedOwnerConnectionWhere>;
  Owner_NOT?: InputMaybe<UserWhere>;
  TagsAggregate?: InputMaybe<FeedTagsAggregateInput>;
  /** Return Feeds where all of the related FeedTagsConnections match this filter */
  TagsConnection_ALL?: InputMaybe<FeedTagsConnectionWhere>;
  /** Return Feeds where none of the related FeedTagsConnections match this filter */
  TagsConnection_NONE?: InputMaybe<FeedTagsConnectionWhere>;
  /** Return Feeds where one of the related FeedTagsConnections match this filter */
  TagsConnection_SINGLE?: InputMaybe<FeedTagsConnectionWhere>;
  /** Return Feeds where some of the related FeedTagsConnections match this filter */
  TagsConnection_SOME?: InputMaybe<FeedTagsConnectionWhere>;
  /** Return Feeds where all of the related Tags match this filter */
  Tags_ALL?: InputMaybe<TagWhere>;
  /** Return Feeds where none of the related Tags match this filter */
  Tags_NONE?: InputMaybe<TagWhere>;
  /** Return Feeds where one of the related Tags match this filter */
  Tags_SINGLE?: InputMaybe<TagWhere>;
  /** Return Feeds where some of the related Tags match this filter */
  Tags_SOME?: InputMaybe<TagWhere>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type FeedsConnection = {
  __typename?: 'FeedsConnection';
  edges: Array<FeedEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type FloatAggregateSelection = {
  __typename?: 'FloatAggregateSelection';
  average?: Maybe<Scalars['Float']['output']>;
  max?: Maybe<Scalars['Float']['output']>;
  min?: Maybe<Scalars['Float']['output']>;
  sum?: Maybe<Scalars['Float']['output']>;
};

export type GetSortedChannelsResponse = {
  __typename?: 'GetSortedChannelsResponse';
  aggregateChannelCount?: Maybe<Scalars['Int']['output']>;
  channels?: Maybe<Array<Maybe<Channel>>>;
};

export type GetSortedChannelsResponseAggregateSelection = {
  __typename?: 'GetSortedChannelsResponseAggregateSelection';
  aggregateChannelCount: IntAggregateSelection;
  count: Scalars['Int']['output'];
};

export type GetSortedChannelsResponseCreateInput = {
  aggregateChannelCount?: InputMaybe<Scalars['Int']['input']>;
};

export type GetSortedChannelsResponseEdge = {
  __typename?: 'GetSortedChannelsResponseEdge';
  cursor: Scalars['String']['output'];
  node: GetSortedChannelsResponse;
};

export type GetSortedChannelsResponseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more GetSortedChannelsResponseSort objects to sort GetSortedChannelsResponses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<GetSortedChannelsResponseSort>>;
};

/** Fields to sort GetSortedChannelsResponses by. The order in which sorts are applied is not guaranteed when specifying many fields in one GetSortedChannelsResponseSort object. */
export type GetSortedChannelsResponseSort = {
  aggregateChannelCount?: InputMaybe<SortDirection>;
};

export type GetSortedChannelsResponseUpdateInput = {
  aggregateChannelCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
};

export type GetSortedChannelsResponseWhere = {
  AND?: InputMaybe<Array<GetSortedChannelsResponseWhere>>;
  NOT?: InputMaybe<GetSortedChannelsResponseWhere>;
  OR?: InputMaybe<Array<GetSortedChannelsResponseWhere>>;
  aggregateChannelCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  aggregateChannelCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateChannelCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type GetSortedChannelsResponsesConnection = {
  __typename?: 'GetSortedChannelsResponsesConnection';
  edges: Array<GetSortedChannelsResponseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IdAggregateSelection = {
  __typename?: 'IDAggregateSelection';
  longest?: Maybe<Scalars['ID']['output']>;
  shortest?: Maybe<Scalars['ID']['output']>;
};

export type Image = {
  __typename?: 'Image';
  Album?: Maybe<Album>;
  AlbumAggregate?: Maybe<ImageAlbumAlbumAggregationSelection>;
  AlbumConnection: ImageAlbumConnection;
  alt?: Maybe<Scalars['String']['output']>;
  caption?: Maybe<Scalars['String']['output']>;
  copyright?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  hasSensitiveContent?: Maybe<Scalars['Boolean']['output']>;
  hasSpoiler?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  url?: Maybe<Scalars['String']['output']>;
};


export type ImageAlbumArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<AlbumOptions>;
  where?: InputMaybe<AlbumWhere>;
};


export type ImageAlbumAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<AlbumWhere>;
};


export type ImageAlbumConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ImageAlbumConnectionSort>>;
  where?: InputMaybe<ImageAlbumConnectionWhere>;
};

export type ImageAggregateSelection = {
  __typename?: 'ImageAggregateSelection';
  alt: StringAggregateSelection;
  caption: StringAggregateSelection;
  copyright: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  url: StringAggregateSelection;
};

export type ImageAlbumAggregateInput = {
  AND?: InputMaybe<Array<ImageAlbumAggregateInput>>;
  NOT?: InputMaybe<ImageAlbumAggregateInput>;
  OR?: InputMaybe<Array<ImageAlbumAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ImageAlbumNodeAggregationWhereInput>;
};

export type ImageAlbumAlbumAggregationSelection = {
  __typename?: 'ImageAlbumAlbumAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ImageAlbumAlbumNodeAggregateSelection>;
};

export type ImageAlbumAlbumNodeAggregateSelection = {
  __typename?: 'ImageAlbumAlbumNodeAggregateSelection';
  id: IdAggregateSelection;
};

export type ImageAlbumConnectFieldInput = {
  connect?: InputMaybe<AlbumConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<AlbumConnectWhere>;
};

export type ImageAlbumConnection = {
  __typename?: 'ImageAlbumConnection';
  edges: Array<ImageAlbumRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ImageAlbumConnectionSort = {
  node?: InputMaybe<AlbumSort>;
};

export type ImageAlbumConnectionWhere = {
  AND?: InputMaybe<Array<ImageAlbumConnectionWhere>>;
  NOT?: InputMaybe<ImageAlbumConnectionWhere>;
  OR?: InputMaybe<Array<ImageAlbumConnectionWhere>>;
  node?: InputMaybe<AlbumWhere>;
};

export type ImageAlbumCreateFieldInput = {
  node: AlbumCreateInput;
};

export type ImageAlbumDeleteFieldInput = {
  delete?: InputMaybe<AlbumDeleteInput>;
  where?: InputMaybe<ImageAlbumConnectionWhere>;
};

export type ImageAlbumDisconnectFieldInput = {
  disconnect?: InputMaybe<AlbumDisconnectInput>;
  where?: InputMaybe<ImageAlbumConnectionWhere>;
};

export type ImageAlbumFieldInput = {
  connect?: InputMaybe<ImageAlbumConnectFieldInput>;
  create?: InputMaybe<ImageAlbumCreateFieldInput>;
};

export type ImageAlbumNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ImageAlbumNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ImageAlbumNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ImageAlbumNodeAggregationWhereInput>>;
};

export type ImageAlbumRelationship = {
  __typename?: 'ImageAlbumRelationship';
  cursor: Scalars['String']['output'];
  node: Album;
};

export type ImageAlbumUpdateConnectionInput = {
  node?: InputMaybe<AlbumUpdateInput>;
};

export type ImageAlbumUpdateFieldInput = {
  connect?: InputMaybe<ImageAlbumConnectFieldInput>;
  create?: InputMaybe<ImageAlbumCreateFieldInput>;
  delete?: InputMaybe<ImageAlbumDeleteFieldInput>;
  disconnect?: InputMaybe<ImageAlbumDisconnectFieldInput>;
  update?: InputMaybe<ImageAlbumUpdateConnectionInput>;
  where?: InputMaybe<ImageAlbumConnectionWhere>;
};

export type ImageConnectInput = {
  Album?: InputMaybe<ImageAlbumConnectFieldInput>;
};

export type ImageConnectWhere = {
  node: ImageWhere;
};

export type ImageCreateInput = {
  Album?: InputMaybe<ImageAlbumFieldInput>;
  alt?: InputMaybe<Scalars['String']['input']>;
  caption?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ImageDeleteInput = {
  Album?: InputMaybe<ImageAlbumDeleteFieldInput>;
};

export type ImageDisconnectInput = {
  Album?: InputMaybe<ImageAlbumDisconnectFieldInput>;
};

export type ImageEdge = {
  __typename?: 'ImageEdge';
  cursor: Scalars['String']['output'];
  node: Image;
};

export type ImageOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ImageSort objects to sort Images by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ImageSort>>;
};

export type ImageRelationInput = {
  Album?: InputMaybe<ImageAlbumCreateFieldInput>;
};

/** Fields to sort Images by. The order in which sorts are applied is not guaranteed when specifying many fields in one ImageSort object. */
export type ImageSort = {
  alt?: InputMaybe<SortDirection>;
  caption?: InputMaybe<SortDirection>;
  copyright?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  hasSensitiveContent?: InputMaybe<SortDirection>;
  hasSpoiler?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  url?: InputMaybe<SortDirection>;
};

export type ImageUpdateInput = {
  Album?: InputMaybe<ImageAlbumUpdateFieldInput>;
  alt?: InputMaybe<Scalars['String']['input']>;
  caption?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type ImageWhere = {
  AND?: InputMaybe<Array<ImageWhere>>;
  Album?: InputMaybe<AlbumWhere>;
  AlbumAggregate?: InputMaybe<ImageAlbumAggregateInput>;
  AlbumConnection?: InputMaybe<ImageAlbumConnectionWhere>;
  AlbumConnection_NOT?: InputMaybe<ImageAlbumConnectionWhere>;
  Album_NOT?: InputMaybe<AlbumWhere>;
  NOT?: InputMaybe<ImageWhere>;
  OR?: InputMaybe<Array<ImageWhere>>;
  alt?: InputMaybe<Scalars['String']['input']>;
  alt_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  alt_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  alt_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  alt_MATCHES?: InputMaybe<Scalars['String']['input']>;
  alt_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  caption?: InputMaybe<Scalars['String']['input']>;
  caption_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  caption_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  caption_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  caption_MATCHES?: InputMaybe<Scalars['String']['input']>;
  caption_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
  copyright_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  copyright_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  copyright_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  copyright_MATCHES?: InputMaybe<Scalars['String']['input']>;
  copyright_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  hasSensitiveContent?: InputMaybe<Scalars['Boolean']['input']>;
  hasSpoiler?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ImagesConnection = {
  __typename?: 'ImagesConnection';
  edges: Array<ImageEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IntAggregateSelection = {
  __typename?: 'IntAggregateSelection';
  average?: Maybe<Scalars['Float']['output']>;
  max?: Maybe<Scalars['Int']['output']>;
  min?: Maybe<Scalars['Int']['output']>;
  sum?: Maybe<Scalars['Int']['output']>;
};

export type Issue = {
  __typename?: 'Issue';
  ActivityFeed: Array<ModerationAction>;
  ActivityFeedAggregate?: Maybe<IssueModerationActionActivityFeedAggregationSelection>;
  ActivityFeedConnection: IssueActivityFeedConnection;
  Author?: Maybe<IssueAuthor>;
  AuthorConnection: IssueAuthorConnection;
  Channel?: Maybe<Channel>;
  ChannelAggregate?: Maybe<IssueChannelChannelAggregationSelection>;
  ChannelConnection: IssueChannelConnection;
  authorName?: Maybe<Scalars['String']['output']>;
  body?: Maybe<Scalars['String']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  flaggedServerRuleViolation?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  isOpen: Scalars['Boolean']['output'];
  relatedCommentId?: Maybe<Scalars['ID']['output']>;
  relatedDiscussionId?: Maybe<Scalars['ID']['output']>;
  relatedEventId?: Maybe<Scalars['ID']['output']>;
  relatedModProfileName?: Maybe<Scalars['String']['output']>;
  relatedUsername?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type IssueActivityFeedArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationActionOptions>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type IssueActivityFeedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type IssueActivityFeedConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<IssueActivityFeedConnectionSort>>;
  where?: InputMaybe<IssueActivityFeedConnectionWhere>;
};


export type IssueAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<IssueAuthorWhere>;
};


export type IssueAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<IssueAuthorConnectionWhere>;
};


export type IssueChannelArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type IssueChannelAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type IssueChannelConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<IssueChannelConnectionSort>>;
  where?: InputMaybe<IssueChannelConnectionWhere>;
};

export type IssueActivityFeedAggregateInput = {
  AND?: InputMaybe<Array<IssueActivityFeedAggregateInput>>;
  NOT?: InputMaybe<IssueActivityFeedAggregateInput>;
  OR?: InputMaybe<Array<IssueActivityFeedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<IssueActivityFeedNodeAggregationWhereInput>;
};

export type IssueActivityFeedConnectFieldInput = {
  connect?: InputMaybe<Array<ModerationActionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationActionConnectWhere>;
};

export type IssueActivityFeedConnection = {
  __typename?: 'IssueActivityFeedConnection';
  edges: Array<IssueActivityFeedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IssueActivityFeedConnectionSort = {
  node?: InputMaybe<ModerationActionSort>;
};

export type IssueActivityFeedConnectionWhere = {
  AND?: InputMaybe<Array<IssueActivityFeedConnectionWhere>>;
  NOT?: InputMaybe<IssueActivityFeedConnectionWhere>;
  OR?: InputMaybe<Array<IssueActivityFeedConnectionWhere>>;
  node?: InputMaybe<ModerationActionWhere>;
};

export type IssueActivityFeedCreateFieldInput = {
  node: ModerationActionCreateInput;
};

export type IssueActivityFeedDeleteFieldInput = {
  delete?: InputMaybe<ModerationActionDeleteInput>;
  where?: InputMaybe<IssueActivityFeedConnectionWhere>;
};

export type IssueActivityFeedDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationActionDisconnectInput>;
  where?: InputMaybe<IssueActivityFeedConnectionWhere>;
};

export type IssueActivityFeedFieldInput = {
  connect?: InputMaybe<Array<IssueActivityFeedConnectFieldInput>>;
  create?: InputMaybe<Array<IssueActivityFeedCreateFieldInput>>;
};

export type IssueActivityFeedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<IssueActivityFeedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<IssueActivityFeedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<IssueActivityFeedNodeAggregationWhereInput>>;
  actionDescription_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type IssueActivityFeedRelationship = {
  __typename?: 'IssueActivityFeedRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationAction;
};

export type IssueActivityFeedUpdateConnectionInput = {
  node?: InputMaybe<ModerationActionUpdateInput>;
};

export type IssueActivityFeedUpdateFieldInput = {
  connect?: InputMaybe<Array<IssueActivityFeedConnectFieldInput>>;
  create?: InputMaybe<Array<IssueActivityFeedCreateFieldInput>>;
  delete?: InputMaybe<Array<IssueActivityFeedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<IssueActivityFeedDisconnectFieldInput>>;
  update?: InputMaybe<IssueActivityFeedUpdateConnectionInput>;
  where?: InputMaybe<IssueActivityFeedConnectionWhere>;
};

export type IssueAggregateSelection = {
  __typename?: 'IssueAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type IssueAuthor = ModerationProfile | User;

export type IssueAuthorConnectInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileConnectFieldInput>;
  User?: InputMaybe<IssueAuthorUserConnectFieldInput>;
};

export type IssueAuthorConnectOrCreateInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileConnectOrCreateFieldInput>;
  User?: InputMaybe<IssueAuthorUserConnectOrCreateFieldInput>;
};

export type IssueAuthorConnection = {
  __typename?: 'IssueAuthorConnection';
  edges: Array<IssueAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IssueAuthorConnectionWhere = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
  User?: InputMaybe<IssueAuthorUserConnectionWhere>;
};

export type IssueAuthorCreateFieldInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileCreateFieldInput>;
  User?: InputMaybe<IssueAuthorUserCreateFieldInput>;
};

export type IssueAuthorCreateInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileFieldInput>;
  User?: InputMaybe<IssueAuthorUserFieldInput>;
};

export type IssueAuthorDeleteInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileDeleteFieldInput>;
  User?: InputMaybe<IssueAuthorUserDeleteFieldInput>;
};

export type IssueAuthorDisconnectInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileDisconnectFieldInput>;
  User?: InputMaybe<IssueAuthorUserDisconnectFieldInput>;
};

export type IssueAuthorModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type IssueAuthorModerationProfileConnectOrCreateFieldInput = {
  onCreate: IssueAuthorModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type IssueAuthorModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type IssueAuthorModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<IssueAuthorModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<IssueAuthorModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type IssueAuthorModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type IssueAuthorModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
};

export type IssueAuthorModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
};

export type IssueAuthorModerationProfileFieldInput = {
  connect?: InputMaybe<IssueAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueAuthorModerationProfileCreateFieldInput>;
};

export type IssueAuthorModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type IssueAuthorModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<IssueAuthorModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueAuthorModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueAuthorModerationProfileCreateFieldInput>;
  delete?: InputMaybe<IssueAuthorModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<IssueAuthorModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<IssueAuthorModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<IssueAuthorModerationProfileConnectionWhere>;
};

export type IssueAuthorRelationship = {
  __typename?: 'IssueAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: IssueAuthor;
};

export type IssueAuthorUpdateInput = {
  ModerationProfile?: InputMaybe<IssueAuthorModerationProfileUpdateFieldInput>;
  User?: InputMaybe<IssueAuthorUserUpdateFieldInput>;
};

export type IssueAuthorUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  where?: InputMaybe<UserConnectWhere>;
};

export type IssueAuthorUserConnectOrCreateFieldInput = {
  onCreate: IssueAuthorUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type IssueAuthorUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type IssueAuthorUserConnectionWhere = {
  AND?: InputMaybe<Array<IssueAuthorUserConnectionWhere>>;
  NOT?: InputMaybe<IssueAuthorUserConnectionWhere>;
  OR?: InputMaybe<Array<IssueAuthorUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type IssueAuthorUserCreateFieldInput = {
  node: UserCreateInput;
};

export type IssueAuthorUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<IssueAuthorUserConnectionWhere>;
};

export type IssueAuthorUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<IssueAuthorUserConnectionWhere>;
};

export type IssueAuthorUserFieldInput = {
  connect?: InputMaybe<IssueAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueAuthorUserCreateFieldInput>;
};

export type IssueAuthorUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type IssueAuthorUserUpdateFieldInput = {
  connect?: InputMaybe<IssueAuthorUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueAuthorUserConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueAuthorUserCreateFieldInput>;
  delete?: InputMaybe<IssueAuthorUserDeleteFieldInput>;
  disconnect?: InputMaybe<IssueAuthorUserDisconnectFieldInput>;
  update?: InputMaybe<IssueAuthorUserUpdateConnectionInput>;
  where?: InputMaybe<IssueAuthorUserConnectionWhere>;
};

export type IssueAuthorWhere = {
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  User?: InputMaybe<UserWhere>;
};

export type IssueChannelAggregateInput = {
  AND?: InputMaybe<Array<IssueChannelAggregateInput>>;
  NOT?: InputMaybe<IssueChannelAggregateInput>;
  OR?: InputMaybe<Array<IssueChannelAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<IssueChannelNodeAggregationWhereInput>;
};

export type IssueChannelChannelAggregationSelection = {
  __typename?: 'IssueChannelChannelAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<IssueChannelChannelNodeAggregateSelection>;
};

export type IssueChannelChannelNodeAggregateSelection = {
  __typename?: 'IssueChannelChannelNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type IssueChannelConnectFieldInput = {
  connect?: InputMaybe<ChannelConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type IssueChannelConnectOrCreateFieldInput = {
  onCreate: IssueChannelConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type IssueChannelConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type IssueChannelConnection = {
  __typename?: 'IssueChannelConnection';
  edges: Array<IssueChannelRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type IssueChannelConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type IssueChannelConnectionWhere = {
  AND?: InputMaybe<Array<IssueChannelConnectionWhere>>;
  NOT?: InputMaybe<IssueChannelConnectionWhere>;
  OR?: InputMaybe<Array<IssueChannelConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type IssueChannelCreateFieldInput = {
  node: ChannelCreateInput;
};

export type IssueChannelDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<IssueChannelConnectionWhere>;
};

export type IssueChannelDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<IssueChannelConnectionWhere>;
};

export type IssueChannelFieldInput = {
  connect?: InputMaybe<IssueChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueChannelCreateFieldInput>;
};

export type IssueChannelNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<IssueChannelNodeAggregationWhereInput>>;
  NOT?: InputMaybe<IssueChannelNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<IssueChannelNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type IssueChannelRelationship = {
  __typename?: 'IssueChannelRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type IssueChannelUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type IssueChannelUpdateFieldInput = {
  connect?: InputMaybe<IssueChannelConnectFieldInput>;
  connectOrCreate?: InputMaybe<IssueChannelConnectOrCreateFieldInput>;
  create?: InputMaybe<IssueChannelCreateFieldInput>;
  delete?: InputMaybe<IssueChannelDeleteFieldInput>;
  disconnect?: InputMaybe<IssueChannelDisconnectFieldInput>;
  update?: InputMaybe<IssueChannelUpdateConnectionInput>;
  where?: InputMaybe<IssueChannelConnectionWhere>;
};

export type IssueCommentAuthor = ModerationProfile | User;

export type IssueCommentAuthorWhere = {
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  User?: InputMaybe<UserWhere>;
};

export type IssueConnectInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedConnectFieldInput>>;
  Author?: InputMaybe<IssueAuthorConnectInput>;
  Channel?: InputMaybe<IssueChannelConnectFieldInput>;
};

export type IssueConnectOrCreateInput = {
  Author?: InputMaybe<IssueAuthorConnectOrCreateInput>;
  Channel?: InputMaybe<IssueChannelConnectOrCreateFieldInput>;
};

export type IssueConnectWhere = {
  node: IssueWhere;
};

export type IssueCreateInput = {
  ActivityFeed?: InputMaybe<IssueActivityFeedFieldInput>;
  Author?: InputMaybe<IssueAuthorCreateInput>;
  Channel?: InputMaybe<IssueChannelFieldInput>;
  authorName?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  flaggedServerRuleViolation?: InputMaybe<Scalars['Boolean']['input']>;
  isOpen: Scalars['Boolean']['input'];
  relatedCommentId?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId?: InputMaybe<Scalars['ID']['input']>;
  relatedModProfileName?: InputMaybe<Scalars['String']['input']>;
  relatedUsername?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type IssueDeleteInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedDeleteFieldInput>>;
  Author?: InputMaybe<IssueAuthorDeleteInput>;
  Channel?: InputMaybe<IssueChannelDeleteFieldInput>;
};

export type IssueDisconnectInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedDisconnectFieldInput>>;
  Author?: InputMaybe<IssueAuthorDisconnectInput>;
  Channel?: InputMaybe<IssueChannelDisconnectFieldInput>;
};

export type IssueEdge = {
  __typename?: 'IssueEdge';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type IssueModerationActionActivityFeedAggregationSelection = {
  __typename?: 'IssueModerationActionActivityFeedAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<IssueModerationActionActivityFeedNodeAggregateSelection>;
};

export type IssueModerationActionActivityFeedNodeAggregateSelection = {
  __typename?: 'IssueModerationActionActivityFeedNodeAggregateSelection';
  actionDescription: StringAggregateSelection;
  actionType: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
};

export type IssueOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more IssueSort objects to sort Issues by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<IssueSort>>;
};

export type IssueRelationInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedCreateFieldInput>>;
  Author?: InputMaybe<IssueAuthorCreateFieldInput>;
  Channel?: InputMaybe<IssueChannelCreateFieldInput>;
};

/** Fields to sort Issues by. The order in which sorts are applied is not guaranteed when specifying many fields in one IssueSort object. */
export type IssueSort = {
  authorName?: InputMaybe<SortDirection>;
  body?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  flaggedServerRuleViolation?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  isOpen?: InputMaybe<SortDirection>;
  relatedCommentId?: InputMaybe<SortDirection>;
  relatedDiscussionId?: InputMaybe<SortDirection>;
  relatedEventId?: InputMaybe<SortDirection>;
  relatedModProfileName?: InputMaybe<SortDirection>;
  relatedUsername?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type IssueUpdateInput = {
  ActivityFeed?: InputMaybe<Array<IssueActivityFeedUpdateFieldInput>>;
  Author?: InputMaybe<IssueAuthorUpdateInput>;
  Channel?: InputMaybe<IssueChannelUpdateFieldInput>;
  authorName?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  flaggedServerRuleViolation?: InputMaybe<Scalars['Boolean']['input']>;
  isOpen?: InputMaybe<Scalars['Boolean']['input']>;
  relatedCommentId?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId?: InputMaybe<Scalars['ID']['input']>;
  relatedModProfileName?: InputMaybe<Scalars['String']['input']>;
  relatedUsername?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type IssueWhere = {
  AND?: InputMaybe<Array<IssueWhere>>;
  ActivityFeedAggregate?: InputMaybe<IssueActivityFeedAggregateInput>;
  /** Return Issues where all of the related IssueActivityFeedConnections match this filter */
  ActivityFeedConnection_ALL?: InputMaybe<IssueActivityFeedConnectionWhere>;
  /** Return Issues where none of the related IssueActivityFeedConnections match this filter */
  ActivityFeedConnection_NONE?: InputMaybe<IssueActivityFeedConnectionWhere>;
  /** Return Issues where one of the related IssueActivityFeedConnections match this filter */
  ActivityFeedConnection_SINGLE?: InputMaybe<IssueActivityFeedConnectionWhere>;
  /** Return Issues where some of the related IssueActivityFeedConnections match this filter */
  ActivityFeedConnection_SOME?: InputMaybe<IssueActivityFeedConnectionWhere>;
  /** Return Issues where all of the related ModerationActions match this filter */
  ActivityFeed_ALL?: InputMaybe<ModerationActionWhere>;
  /** Return Issues where none of the related ModerationActions match this filter */
  ActivityFeed_NONE?: InputMaybe<ModerationActionWhere>;
  /** Return Issues where one of the related ModerationActions match this filter */
  ActivityFeed_SINGLE?: InputMaybe<ModerationActionWhere>;
  /** Return Issues where some of the related ModerationActions match this filter */
  ActivityFeed_SOME?: InputMaybe<ModerationActionWhere>;
  Author?: InputMaybe<IssueAuthorWhere>;
  AuthorConnection?: InputMaybe<IssueAuthorConnectionWhere>;
  AuthorConnection_NOT?: InputMaybe<IssueAuthorConnectionWhere>;
  Author_NOT?: InputMaybe<IssueAuthorWhere>;
  Channel?: InputMaybe<ChannelWhere>;
  ChannelAggregate?: InputMaybe<IssueChannelAggregateInput>;
  ChannelConnection?: InputMaybe<IssueChannelConnectionWhere>;
  ChannelConnection_NOT?: InputMaybe<IssueChannelConnectionWhere>;
  Channel_NOT?: InputMaybe<ChannelWhere>;
  NOT?: InputMaybe<IssueWhere>;
  OR?: InputMaybe<Array<IssueWhere>>;
  authorName?: InputMaybe<Scalars['String']['input']>;
  authorName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  authorName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  authorName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  authorName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  flaggedServerRuleViolation?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  isOpen?: InputMaybe<Scalars['Boolean']['input']>;
  relatedCommentId?: InputMaybe<Scalars['ID']['input']>;
  relatedCommentId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  relatedCommentId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedCommentId_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  relatedCommentId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedDiscussionId_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  relatedDiscussionId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedEventId_IN?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  relatedEventId_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  relatedModProfileName?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedModProfileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  relatedModProfileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  relatedUsername?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedUsername_MATCHES?: InputMaybe<Scalars['String']['input']>;
  relatedUsername_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type IssuesConnection = {
  __typename?: 'IssuesConnection';
  edges: Array<IssueEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type LinkFlair = {
  __typename?: 'LinkFlair';
  cssClass?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
};

export type LinkFlairAggregateSelection = {
  __typename?: 'LinkFlairAggregateSelection';
  count: Scalars['Int']['output'];
  cssClass: StringAggregateSelection;
  id: StringAggregateSelection;
  text: StringAggregateSelection;
};

export type LinkFlairCreateInput = {
  cssClass?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type LinkFlairEdge = {
  __typename?: 'LinkFlairEdge';
  cursor: Scalars['String']['output'];
  node: LinkFlair;
};

export type LinkFlairOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more LinkFlairSort objects to sort LinkFlairs by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<LinkFlairSort>>;
};

/** Fields to sort LinkFlairs by. The order in which sorts are applied is not guaranteed when specifying many fields in one LinkFlairSort object. */
export type LinkFlairSort = {
  cssClass?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
};

export type LinkFlairUpdateInput = {
  cssClass?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type LinkFlairWhere = {
  AND?: InputMaybe<Array<LinkFlairWhere>>;
  NOT?: InputMaybe<LinkFlairWhere>;
  OR?: InputMaybe<Array<LinkFlairWhere>>;
  cssClass?: InputMaybe<Scalars['String']['input']>;
  cssClass_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  cssClass_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  cssClass_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  cssClass_MATCHES?: InputMaybe<Scalars['String']['input']>;
  cssClass_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  id_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id_MATCHES?: InputMaybe<Scalars['String']['input']>;
  id_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type LinkFlairsConnection = {
  __typename?: 'LinkFlairsConnection';
  edges: Array<LinkFlairEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Message = {
  __typename?: 'Message';
  Contact?: Maybe<Contact>;
  ContactAggregate?: Maybe<MessageContactContactAggregationSelection>;
  ContactConnection: MessageContactConnection;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  text?: Maybe<Scalars['String']['output']>;
};


export type MessageContactArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ContactOptions>;
  where?: InputMaybe<ContactWhere>;
};


export type MessageContactAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ContactWhere>;
};


export type MessageContactConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<MessageContactConnectionSort>>;
  where?: InputMaybe<MessageContactConnectionWhere>;
};

export type MessageAggregateSelection = {
  __typename?: 'MessageAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
};

export type MessageConnectInput = {
  Contact?: InputMaybe<MessageContactConnectFieldInput>;
};

export type MessageConnectWhere = {
  node: MessageWhere;
};

export type MessageContactAggregateInput = {
  AND?: InputMaybe<Array<MessageContactAggregateInput>>;
  NOT?: InputMaybe<MessageContactAggregateInput>;
  OR?: InputMaybe<Array<MessageContactAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<MessageContactNodeAggregationWhereInput>;
};

export type MessageContactConnectFieldInput = {
  connect?: InputMaybe<ContactConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ContactConnectWhere>;
};

export type MessageContactConnection = {
  __typename?: 'MessageContactConnection';
  edges: Array<MessageContactRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type MessageContactConnectionSort = {
  node?: InputMaybe<ContactSort>;
};

export type MessageContactConnectionWhere = {
  AND?: InputMaybe<Array<MessageContactConnectionWhere>>;
  NOT?: InputMaybe<MessageContactConnectionWhere>;
  OR?: InputMaybe<Array<MessageContactConnectionWhere>>;
  node?: InputMaybe<ContactWhere>;
};

export type MessageContactContactAggregationSelection = {
  __typename?: 'MessageContactContactAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<MessageContactContactNodeAggregateSelection>;
};

export type MessageContactContactNodeAggregateSelection = {
  __typename?: 'MessageContactContactNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  mostRecentMessageTimestamp: DateTimeAggregateSelection;
};

export type MessageContactCreateFieldInput = {
  node: ContactCreateInput;
};

export type MessageContactDeleteFieldInput = {
  delete?: InputMaybe<ContactDeleteInput>;
  where?: InputMaybe<MessageContactConnectionWhere>;
};

export type MessageContactDisconnectFieldInput = {
  disconnect?: InputMaybe<ContactDisconnectInput>;
  where?: InputMaybe<MessageContactConnectionWhere>;
};

export type MessageContactFieldInput = {
  connect?: InputMaybe<MessageContactConnectFieldInput>;
  create?: InputMaybe<MessageContactCreateFieldInput>;
};

export type MessageContactNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<MessageContactNodeAggregationWhereInput>>;
  NOT?: InputMaybe<MessageContactNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<MessageContactNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  mostRecentMessageTimestamp_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type MessageContactRelationship = {
  __typename?: 'MessageContactRelationship';
  cursor: Scalars['String']['output'];
  node: Contact;
};

export type MessageContactUpdateConnectionInput = {
  node?: InputMaybe<ContactUpdateInput>;
};

export type MessageContactUpdateFieldInput = {
  connect?: InputMaybe<MessageContactConnectFieldInput>;
  create?: InputMaybe<MessageContactCreateFieldInput>;
  delete?: InputMaybe<MessageContactDeleteFieldInput>;
  disconnect?: InputMaybe<MessageContactDisconnectFieldInput>;
  update?: InputMaybe<MessageContactUpdateConnectionInput>;
  where?: InputMaybe<MessageContactConnectionWhere>;
};

export type MessageCreateInput = {
  Contact?: InputMaybe<MessageContactFieldInput>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type MessageDeleteInput = {
  Contact?: InputMaybe<MessageContactDeleteFieldInput>;
};

export type MessageDisconnectInput = {
  Contact?: InputMaybe<MessageContactDisconnectFieldInput>;
};

export type MessageEdge = {
  __typename?: 'MessageEdge';
  cursor: Scalars['String']['output'];
  node: Message;
};

export type MessageOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more MessageSort objects to sort Messages by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<MessageSort>>;
};

export type MessageRelationInput = {
  Contact?: InputMaybe<MessageContactCreateFieldInput>;
};

/** Fields to sort Messages by. The order in which sorts are applied is not guaranteed when specifying many fields in one MessageSort object. */
export type MessageSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
};

export type MessageUpdateInput = {
  Contact?: InputMaybe<MessageContactUpdateFieldInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type MessageWhere = {
  AND?: InputMaybe<Array<MessageWhere>>;
  Contact?: InputMaybe<ContactWhere>;
  ContactAggregate?: InputMaybe<MessageContactAggregateInput>;
  ContactConnection?: InputMaybe<MessageContactConnectionWhere>;
  ContactConnection_NOT?: InputMaybe<MessageContactConnectionWhere>;
  Contact_NOT?: InputMaybe<ContactWhere>;
  NOT?: InputMaybe<MessageWhere>;
  OR?: InputMaybe<Array<MessageWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type MessagesConnection = {
  __typename?: 'MessagesConnection';
  edges: Array<MessageEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModChannelRole = {
  __typename?: 'ModChannelRole';
  canCloseSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canGiveFeedback?: Maybe<Scalars['Boolean']['output']>;
  canHideComment?: Maybe<Scalars['Boolean']['output']>;
  canHideDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canHideEvent?: Maybe<Scalars['Boolean']['output']>;
  canOpenSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canReport?: Maybe<Scalars['Boolean']['output']>;
  canSuspendUser?: Maybe<Scalars['Boolean']['output']>;
  channelUniqueName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ModChannelRoleAggregateSelection = {
  __typename?: 'ModChannelRoleAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ModChannelRoleConnectOrCreateWhere = {
  node: ModChannelRoleUniqueWhere;
};

export type ModChannelRoleConnectWhere = {
  node: ModChannelRoleWhere;
};

export type ModChannelRoleCreateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRoleEdge = {
  __typename?: 'ModChannelRoleEdge';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ModChannelRoleOnCreateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRoleOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ModChannelRoleSort objects to sort ModChannelRoles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ModChannelRoleSort>>;
};

/** Fields to sort ModChannelRoles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ModChannelRoleSort object. */
export type ModChannelRoleSort = {
  canCloseSupportTickets?: InputMaybe<SortDirection>;
  canGiveFeedback?: InputMaybe<SortDirection>;
  canHideComment?: InputMaybe<SortDirection>;
  canHideDiscussion?: InputMaybe<SortDirection>;
  canHideEvent?: InputMaybe<SortDirection>;
  canOpenSupportTickets?: InputMaybe<SortDirection>;
  canReport?: InputMaybe<SortDirection>;
  canSuspendUser?: InputMaybe<SortDirection>;
  channelUniqueName?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export type ModChannelRoleUniqueWhere = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRoleUpdateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRoleWhere = {
  AND?: InputMaybe<Array<ModChannelRoleWhere>>;
  NOT?: InputMaybe<ModChannelRoleWhere>;
  OR?: InputMaybe<Array<ModChannelRoleWhere>>;
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ModChannelRolesConnection = {
  __typename?: 'ModChannelRolesConnection';
  edges: Array<ModChannelRoleEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModServerRole = {
  __typename?: 'ModServerRole';
  canCloseSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canGiveFeedback?: Maybe<Scalars['Boolean']['output']>;
  canHideComment?: Maybe<Scalars['Boolean']['output']>;
  canHideDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canHideEvent?: Maybe<Scalars['Boolean']['output']>;
  canLockChannel?: Maybe<Scalars['Boolean']['output']>;
  canOpenSupportTickets?: Maybe<Scalars['Boolean']['output']>;
  canReport?: Maybe<Scalars['Boolean']['output']>;
  canSuspendUser?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ModServerRoleAggregateSelection = {
  __typename?: 'ModServerRoleAggregateSelection';
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ModServerRoleConnectOrCreateWhere = {
  node: ModServerRoleUniqueWhere;
};

export type ModServerRoleConnectWhere = {
  node: ModServerRoleWhere;
};

export type ModServerRoleCreateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canLockChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRoleEdge = {
  __typename?: 'ModServerRoleEdge';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ModServerRoleOnCreateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canLockChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRoleOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ModServerRoleSort objects to sort ModServerRoles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ModServerRoleSort>>;
};

/** Fields to sort ModServerRoles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ModServerRoleSort object. */
export type ModServerRoleSort = {
  canCloseSupportTickets?: InputMaybe<SortDirection>;
  canGiveFeedback?: InputMaybe<SortDirection>;
  canHideComment?: InputMaybe<SortDirection>;
  canHideDiscussion?: InputMaybe<SortDirection>;
  canHideEvent?: InputMaybe<SortDirection>;
  canLockChannel?: InputMaybe<SortDirection>;
  canOpenSupportTickets?: InputMaybe<SortDirection>;
  canReport?: InputMaybe<SortDirection>;
  canSuspendUser?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
};

export type ModServerRoleUniqueWhere = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRoleUpdateInput = {
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canLockChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRoleWhere = {
  AND?: InputMaybe<Array<ModServerRoleWhere>>;
  NOT?: InputMaybe<ModServerRoleWhere>;
  OR?: InputMaybe<Array<ModServerRoleWhere>>;
  canCloseSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canHideComment?: InputMaybe<Scalars['Boolean']['input']>;
  canHideDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canHideEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canLockChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canOpenSupportTickets?: InputMaybe<Scalars['Boolean']['input']>;
  canReport?: InputMaybe<Scalars['Boolean']['input']>;
  canSuspendUser?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ModServerRolesConnection = {
  __typename?: 'ModServerRolesConnection';
  edges: Array<ModServerRoleEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationAction = {
  __typename?: 'ModerationAction';
  Comment?: Maybe<Comment>;
  CommentAggregate?: Maybe<ModerationActionCommentCommentAggregationSelection>;
  CommentConnection: ModerationActionCommentConnection;
  ModerationProfile?: Maybe<ModerationProfile>;
  ModerationProfileAggregate?: Maybe<ModerationActionModerationProfileModerationProfileAggregationSelection>;
  ModerationProfileConnection: ModerationActionModerationProfileConnection;
  actionDescription?: Maybe<Scalars['String']['output']>;
  actionType?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
};


export type ModerationActionCommentArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type ModerationActionCommentAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type ModerationActionCommentConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationActionCommentConnectionSort>>;
  where?: InputMaybe<ModerationActionCommentConnectionWhere>;
};


export type ModerationActionModerationProfileArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type ModerationActionModerationProfileAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type ModerationActionModerationProfileConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationActionModerationProfileConnectionSort>>;
  where?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
};

export type ModerationActionAggregateSelection = {
  __typename?: 'ModerationActionAggregateSelection';
  actionDescription: StringAggregateSelection;
  actionType: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
};

export type ModerationActionCommentAggregateInput = {
  AND?: InputMaybe<Array<ModerationActionCommentAggregateInput>>;
  NOT?: InputMaybe<ModerationActionCommentAggregateInput>;
  OR?: InputMaybe<Array<ModerationActionCommentAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationActionCommentNodeAggregationWhereInput>;
};

export type ModerationActionCommentCommentAggregationSelection = {
  __typename?: 'ModerationActionCommentCommentAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationActionCommentCommentNodeAggregateSelection>;
};

export type ModerationActionCommentCommentNodeAggregateSelection = {
  __typename?: 'ModerationActionCommentCommentNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type ModerationActionCommentConnectFieldInput = {
  connect?: InputMaybe<CommentConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type ModerationActionCommentConnection = {
  __typename?: 'ModerationActionCommentConnection';
  edges: Array<ModerationActionCommentRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationActionCommentConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type ModerationActionCommentConnectionWhere = {
  AND?: InputMaybe<Array<ModerationActionCommentConnectionWhere>>;
  NOT?: InputMaybe<ModerationActionCommentConnectionWhere>;
  OR?: InputMaybe<Array<ModerationActionCommentConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type ModerationActionCommentCreateFieldInput = {
  node: CommentCreateInput;
};

export type ModerationActionCommentDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<ModerationActionCommentConnectionWhere>;
};

export type ModerationActionCommentDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<ModerationActionCommentConnectionWhere>;
};

export type ModerationActionCommentFieldInput = {
  connect?: InputMaybe<ModerationActionCommentConnectFieldInput>;
  create?: InputMaybe<ModerationActionCommentCreateFieldInput>;
};

export type ModerationActionCommentNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationActionCommentNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationActionCommentNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationActionCommentNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type ModerationActionCommentRelationship = {
  __typename?: 'ModerationActionCommentRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type ModerationActionCommentUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type ModerationActionCommentUpdateFieldInput = {
  connect?: InputMaybe<ModerationActionCommentConnectFieldInput>;
  create?: InputMaybe<ModerationActionCommentCreateFieldInput>;
  delete?: InputMaybe<ModerationActionCommentDeleteFieldInput>;
  disconnect?: InputMaybe<ModerationActionCommentDisconnectFieldInput>;
  update?: InputMaybe<ModerationActionCommentUpdateConnectionInput>;
  where?: InputMaybe<ModerationActionCommentConnectionWhere>;
};

export type ModerationActionConnectInput = {
  Comment?: InputMaybe<ModerationActionCommentConnectFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileConnectFieldInput>;
};

export type ModerationActionConnectOrCreateInput = {
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileConnectOrCreateFieldInput>;
};

export type ModerationActionConnectWhere = {
  node: ModerationActionWhere;
};

export type ModerationActionCreateInput = {
  Comment?: InputMaybe<ModerationActionCommentFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileFieldInput>;
  actionDescription?: InputMaybe<Scalars['String']['input']>;
  actionType?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationActionDeleteInput = {
  Comment?: InputMaybe<ModerationActionCommentDeleteFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileDeleteFieldInput>;
};

export type ModerationActionDisconnectInput = {
  Comment?: InputMaybe<ModerationActionCommentDisconnectFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileDisconnectFieldInput>;
};

export type ModerationActionEdge = {
  __typename?: 'ModerationActionEdge';
  cursor: Scalars['String']['output'];
  node: ModerationAction;
};

export type ModerationActionModerationProfileAggregateInput = {
  AND?: InputMaybe<Array<ModerationActionModerationProfileAggregateInput>>;
  NOT?: InputMaybe<ModerationActionModerationProfileAggregateInput>;
  OR?: InputMaybe<Array<ModerationActionModerationProfileAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationActionModerationProfileNodeAggregationWhereInput>;
};

export type ModerationActionModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type ModerationActionModerationProfileConnectOrCreateFieldInput = {
  onCreate: ModerationActionModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type ModerationActionModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type ModerationActionModerationProfileConnection = {
  __typename?: 'ModerationActionModerationProfileConnection';
  edges: Array<ModerationActionModerationProfileRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationActionModerationProfileConnectionSort = {
  node?: InputMaybe<ModerationProfileSort>;
};

export type ModerationActionModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<ModerationActionModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<ModerationActionModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type ModerationActionModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type ModerationActionModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
};

export type ModerationActionModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
};

export type ModerationActionModerationProfileFieldInput = {
  connect?: InputMaybe<ModerationActionModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationActionModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationActionModerationProfileCreateFieldInput>;
};

export type ModerationActionModerationProfileModerationProfileAggregationSelection = {
  __typename?: 'ModerationActionModerationProfileModerationProfileAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationActionModerationProfileModerationProfileNodeAggregateSelection>;
};

export type ModerationActionModerationProfileModerationProfileNodeAggregateSelection = {
  __typename?: 'ModerationActionModerationProfileModerationProfileNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type ModerationActionModerationProfileNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationActionModerationProfileNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationActionModerationProfileNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationActionModerationProfileNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationActionModerationProfileRelationship = {
  __typename?: 'ModerationActionModerationProfileRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type ModerationActionModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type ModerationActionModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<ModerationActionModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationActionModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationActionModerationProfileCreateFieldInput>;
  delete?: InputMaybe<ModerationActionModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<ModerationActionModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<ModerationActionModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
};

export type ModerationActionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ModerationActionSort objects to sort ModerationActions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ModerationActionSort>>;
};

export type ModerationActionRelationInput = {
  Comment?: InputMaybe<ModerationActionCommentCreateFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileCreateFieldInput>;
};

/** Fields to sort ModerationActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one ModerationActionSort object. */
export type ModerationActionSort = {
  actionDescription?: InputMaybe<SortDirection>;
  actionType?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
};

export type ModerationActionUpdateInput = {
  Comment?: InputMaybe<ModerationActionCommentUpdateFieldInput>;
  ModerationProfile?: InputMaybe<ModerationActionModerationProfileUpdateFieldInput>;
  actionDescription?: InputMaybe<Scalars['String']['input']>;
  actionType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ModerationActionWhere = {
  AND?: InputMaybe<Array<ModerationActionWhere>>;
  Comment?: InputMaybe<CommentWhere>;
  CommentAggregate?: InputMaybe<ModerationActionCommentAggregateInput>;
  CommentConnection?: InputMaybe<ModerationActionCommentConnectionWhere>;
  CommentConnection_NOT?: InputMaybe<ModerationActionCommentConnectionWhere>;
  Comment_NOT?: InputMaybe<CommentWhere>;
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  ModerationProfileAggregate?: InputMaybe<ModerationActionModerationProfileAggregateInput>;
  ModerationProfileConnection?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
  ModerationProfileConnection_NOT?: InputMaybe<ModerationActionModerationProfileConnectionWhere>;
  ModerationProfile_NOT?: InputMaybe<ModerationProfileWhere>;
  NOT?: InputMaybe<ModerationActionWhere>;
  OR?: InputMaybe<Array<ModerationActionWhere>>;
  actionDescription?: InputMaybe<Scalars['String']['input']>;
  actionDescription_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  actionDescription_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  actionDescription_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  actionDescription_MATCHES?: InputMaybe<Scalars['String']['input']>;
  actionDescription_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  actionType?: InputMaybe<Scalars['String']['input']>;
  actionType_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  actionType_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  actionType_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  actionType_MATCHES?: InputMaybe<Scalars['String']['input']>;
  actionType_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type ModerationActionsConnection = {
  __typename?: 'ModerationActionsConnection';
  edges: Array<ModerationActionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfile = {
  __typename?: 'ModerationProfile';
  ActivityFeed: Array<ModerationAction>;
  ActivityFeedAggregate?: Maybe<ModerationProfileModerationActionActivityFeedAggregationSelection>;
  ActivityFeedConnection: ModerationProfileActivityFeedConnection;
  AuthoredComments: Array<Comment>;
  AuthoredCommentsAggregate?: Maybe<ModerationProfileCommentAuthoredCommentsAggregationSelection>;
  AuthoredCommentsConnection: ModerationProfileAuthoredCommentsConnection;
  AuthoredIssues: Array<Issue>;
  AuthoredIssuesAggregate?: Maybe<ModerationProfileIssueAuthoredIssuesAggregationSelection>;
  AuthoredIssuesConnection: ModerationProfileAuthoredIssuesConnection;
  ModChannelRoles: Array<ModChannelRole>;
  ModChannelRolesAggregate?: Maybe<ModerationProfileModChannelRoleModChannelRolesAggregationSelection>;
  ModChannelRolesConnection: ModerationProfileModChannelRolesConnection;
  ModServerRoles: Array<ModServerRole>;
  ModServerRolesAggregate?: Maybe<ModerationProfileModServerRoleModServerRolesAggregationSelection>;
  ModServerRolesConnection: ModerationProfileModServerRolesConnection;
  Suspensions: Array<Suspension>;
  SuspensionsAggregate?: Maybe<ModerationProfileSuspensionSuspensionsAggregationSelection>;
  SuspensionsConnection: ModerationProfileSuspensionsConnection;
  User?: Maybe<User>;
  UserAggregate?: Maybe<ModerationProfileUserUserAggregationSelection>;
  UserConnection: ModerationProfileUserConnection;
  createdAt: Scalars['DateTime']['output'];
  displayName?: Maybe<Scalars['String']['output']>;
};


export type ModerationProfileActivityFeedArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationActionOptions>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type ModerationProfileActivityFeedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type ModerationProfileActivityFeedConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileActivityFeedConnectionSort>>;
  where?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
};


export type ModerationProfileAuthoredCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type ModerationProfileAuthoredCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type ModerationProfileAuthoredCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectionSort>>;
  where?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
};


export type ModerationProfileAuthoredIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type ModerationProfileAuthoredIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type ModerationProfileAuthoredIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectionSort>>;
  where?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
};


export type ModerationProfileModChannelRolesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ModerationProfileModChannelRolesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type ModerationProfileModChannelRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileModChannelRolesConnectionSort>>;
  where?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
};


export type ModerationProfileModServerRolesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ModerationProfileModServerRolesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ModerationProfileModServerRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileModServerRolesConnectionSort>>;
  where?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
};


export type ModerationProfileSuspensionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ModerationProfileSuspensionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<SuspensionWhere>;
};


export type ModerationProfileSuspensionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileSuspensionsConnectionSort>>;
  where?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
};


export type ModerationProfileUserArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type ModerationProfileUserAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type ModerationProfileUserConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ModerationProfileUserConnectionSort>>;
  where?: InputMaybe<ModerationProfileUserConnectionWhere>;
};

export type ModerationProfileActivityFeedAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileActivityFeedAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileActivityFeedAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileActivityFeedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileActivityFeedNodeAggregationWhereInput>;
};

export type ModerationProfileActivityFeedConnectFieldInput = {
  connect?: InputMaybe<Array<ModerationActionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationActionConnectWhere>;
};

export type ModerationProfileActivityFeedConnection = {
  __typename?: 'ModerationProfileActivityFeedConnection';
  edges: Array<ModerationProfileActivityFeedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileActivityFeedConnectionSort = {
  node?: InputMaybe<ModerationActionSort>;
};

export type ModerationProfileActivityFeedConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileActivityFeedConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileActivityFeedConnectionWhere>>;
  node?: InputMaybe<ModerationActionWhere>;
};

export type ModerationProfileActivityFeedCreateFieldInput = {
  node: ModerationActionCreateInput;
};

export type ModerationProfileActivityFeedDeleteFieldInput = {
  delete?: InputMaybe<ModerationActionDeleteInput>;
  where?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
};

export type ModerationProfileActivityFeedDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationActionDisconnectInput>;
  where?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
};

export type ModerationProfileActivityFeedFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileActivityFeedConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileActivityFeedCreateFieldInput>>;
};

export type ModerationProfileActivityFeedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileActivityFeedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileActivityFeedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileActivityFeedNodeAggregationWhereInput>>;
  actionDescription_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionDescription_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionDescription_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  actionType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  actionType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  actionType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ModerationProfileActivityFeedRelationship = {
  __typename?: 'ModerationProfileActivityFeedRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationAction;
};

export type ModerationProfileActivityFeedUpdateConnectionInput = {
  node?: InputMaybe<ModerationActionUpdateInput>;
};

export type ModerationProfileActivityFeedUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileActivityFeedConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileActivityFeedCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileActivityFeedDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileActivityFeedDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileActivityFeedUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
};

export type ModerationProfileAggregateSelection = {
  __typename?: 'ModerationProfileAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type ModerationProfileAuthoredCommentsAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredCommentsAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileAuthoredCommentsAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileAuthoredCommentsNodeAggregationWhereInput>;
};

export type ModerationProfileAuthoredCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type ModerationProfileAuthoredCommentsConnection = {
  __typename?: 'ModerationProfileAuthoredCommentsConnection';
  edges: Array<ModerationProfileAuthoredCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileAuthoredCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type ModerationProfileAuthoredCommentsConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type ModerationProfileAuthoredCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type ModerationProfileAuthoredCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
};

export type ModerationProfileAuthoredCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
};

export type ModerationProfileAuthoredCommentsFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileAuthoredCommentsCreateFieldInput>>;
};

export type ModerationProfileAuthoredCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileAuthoredCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type ModerationProfileAuthoredCommentsRelationship = {
  __typename?: 'ModerationProfileAuthoredCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type ModerationProfileAuthoredCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type ModerationProfileAuthoredCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileAuthoredCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileAuthoredCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileAuthoredCommentsDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileAuthoredCommentsUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
};

export type ModerationProfileAuthoredIssuesAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredIssuesAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileAuthoredIssuesAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileAuthoredIssuesNodeAggregationWhereInput>;
};

export type ModerationProfileAuthoredIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type ModerationProfileAuthoredIssuesConnection = {
  __typename?: 'ModerationProfileAuthoredIssuesConnection';
  edges: Array<ModerationProfileAuthoredIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileAuthoredIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type ModerationProfileAuthoredIssuesConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type ModerationProfileAuthoredIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type ModerationProfileAuthoredIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
};

export type ModerationProfileAuthoredIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
};

export type ModerationProfileAuthoredIssuesFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileAuthoredIssuesCreateFieldInput>>;
};

export type ModerationProfileAuthoredIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileAuthoredIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileAuthoredIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileAuthoredIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ModerationProfileAuthoredIssuesRelationship = {
  __typename?: 'ModerationProfileAuthoredIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type ModerationProfileAuthoredIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type ModerationProfileAuthoredIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileAuthoredIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileAuthoredIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileAuthoredIssuesDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileAuthoredIssuesUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
};

export type ModerationProfileCommentAuthoredCommentsAggregationSelection = {
  __typename?: 'ModerationProfileCommentAuthoredCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileCommentAuthoredCommentsNodeAggregateSelection>;
};

export type ModerationProfileCommentAuthoredCommentsNodeAggregateSelection = {
  __typename?: 'ModerationProfileCommentAuthoredCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type ModerationProfileConnectInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedConnectFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsConnectFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesConnectFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesConnectFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesConnectFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsConnectFieldInput>>;
  User?: InputMaybe<ModerationProfileUserConnectFieldInput>;
};

export type ModerationProfileConnectOrCreateInput = {
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesConnectOrCreateFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesConnectOrCreateFieldInput>>;
  User?: InputMaybe<ModerationProfileUserConnectOrCreateFieldInput>;
};

export type ModerationProfileConnectOrCreateWhere = {
  node: ModerationProfileUniqueWhere;
};

export type ModerationProfileConnectWhere = {
  node: ModerationProfileWhere;
};

export type ModerationProfileCreateInput = {
  ActivityFeed?: InputMaybe<ModerationProfileActivityFeedFieldInput>;
  AuthoredComments?: InputMaybe<ModerationProfileAuthoredCommentsFieldInput>;
  AuthoredIssues?: InputMaybe<ModerationProfileAuthoredIssuesFieldInput>;
  ModChannelRoles?: InputMaybe<ModerationProfileModChannelRolesFieldInput>;
  ModServerRoles?: InputMaybe<ModerationProfileModServerRolesFieldInput>;
  Suspensions?: InputMaybe<ModerationProfileSuspensionsFieldInput>;
  User?: InputMaybe<ModerationProfileUserFieldInput>;
  displayName?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfileDeleteInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedDeleteFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsDeleteFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesDeleteFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesDeleteFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesDeleteFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsDeleteFieldInput>>;
  User?: InputMaybe<ModerationProfileUserDeleteFieldInput>;
};

export type ModerationProfileDisconnectInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedDisconnectFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsDisconnectFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesDisconnectFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesDisconnectFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesDisconnectFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsDisconnectFieldInput>>;
  User?: InputMaybe<ModerationProfileUserDisconnectFieldInput>;
};

export type ModerationProfileEdge = {
  __typename?: 'ModerationProfileEdge';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type ModerationProfileIssueAuthoredIssuesAggregationSelection = {
  __typename?: 'ModerationProfileIssueAuthoredIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileIssueAuthoredIssuesNodeAggregateSelection>;
};

export type ModerationProfileIssueAuthoredIssuesNodeAggregateSelection = {
  __typename?: 'ModerationProfileIssueAuthoredIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type ModerationProfileModChannelRoleModChannelRolesAggregationSelection = {
  __typename?: 'ModerationProfileModChannelRoleModChannelRolesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileModChannelRoleModChannelRolesNodeAggregateSelection>;
};

export type ModerationProfileModChannelRoleModChannelRolesNodeAggregateSelection = {
  __typename?: 'ModerationProfileModChannelRoleModChannelRolesNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ModerationProfileModChannelRolesAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileModChannelRolesAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileModChannelRolesAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileModChannelRolesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileModChannelRolesNodeAggregationWhereInput>;
};

export type ModerationProfileModChannelRolesConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModChannelRoleConnectWhere>;
};

export type ModerationProfileModChannelRolesConnectOrCreateFieldInput = {
  onCreate: ModerationProfileModChannelRolesConnectOrCreateFieldInputOnCreate;
  where: ModChannelRoleConnectOrCreateWhere;
};

export type ModerationProfileModChannelRolesConnectOrCreateFieldInputOnCreate = {
  node: ModChannelRoleOnCreateInput;
};

export type ModerationProfileModChannelRolesConnection = {
  __typename?: 'ModerationProfileModChannelRolesConnection';
  edges: Array<ModerationProfileModChannelRolesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileModChannelRolesConnectionSort = {
  node?: InputMaybe<ModChannelRoleSort>;
};

export type ModerationProfileModChannelRolesConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileModChannelRolesConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileModChannelRolesConnectionWhere>>;
  node?: InputMaybe<ModChannelRoleWhere>;
};

export type ModerationProfileModChannelRolesCreateFieldInput = {
  node: ModChannelRoleCreateInput;
};

export type ModerationProfileModChannelRolesDeleteFieldInput = {
  where?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
};

export type ModerationProfileModChannelRolesDisconnectFieldInput = {
  where?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
};

export type ModerationProfileModChannelRolesFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileModChannelRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ModerationProfileModChannelRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileModChannelRolesCreateFieldInput>>;
};

export type ModerationProfileModChannelRolesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileModChannelRolesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileModChannelRolesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileModChannelRolesNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationProfileModChannelRolesRelationship = {
  __typename?: 'ModerationProfileModChannelRolesRelationship';
  cursor: Scalars['String']['output'];
  node: ModChannelRole;
};

export type ModerationProfileModChannelRolesUpdateConnectionInput = {
  node?: InputMaybe<ModChannelRoleUpdateInput>;
};

export type ModerationProfileModChannelRolesUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileModChannelRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ModerationProfileModChannelRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileModChannelRolesCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileModChannelRolesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileModChannelRolesDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileModChannelRolesUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
};

export type ModerationProfileModServerRoleModServerRolesAggregationSelection = {
  __typename?: 'ModerationProfileModServerRoleModServerRolesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileModServerRoleModServerRolesNodeAggregateSelection>;
};

export type ModerationProfileModServerRoleModServerRolesNodeAggregateSelection = {
  __typename?: 'ModerationProfileModServerRoleModServerRolesNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ModerationProfileModServerRolesAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileModServerRolesAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileModServerRolesAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileModServerRolesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileModServerRolesNodeAggregationWhereInput>;
};

export type ModerationProfileModServerRolesConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModServerRoleConnectWhere>;
};

export type ModerationProfileModServerRolesConnectOrCreateFieldInput = {
  onCreate: ModerationProfileModServerRolesConnectOrCreateFieldInputOnCreate;
  where: ModServerRoleConnectOrCreateWhere;
};

export type ModerationProfileModServerRolesConnectOrCreateFieldInputOnCreate = {
  node: ModServerRoleOnCreateInput;
};

export type ModerationProfileModServerRolesConnection = {
  __typename?: 'ModerationProfileModServerRolesConnection';
  edges: Array<ModerationProfileModServerRolesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileModServerRolesConnectionSort = {
  node?: InputMaybe<ModServerRoleSort>;
};

export type ModerationProfileModServerRolesConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileModServerRolesConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileModServerRolesConnectionWhere>>;
  node?: InputMaybe<ModServerRoleWhere>;
};

export type ModerationProfileModServerRolesCreateFieldInput = {
  node: ModServerRoleCreateInput;
};

export type ModerationProfileModServerRolesDeleteFieldInput = {
  where?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
};

export type ModerationProfileModServerRolesDisconnectFieldInput = {
  where?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
};

export type ModerationProfileModServerRolesFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileModServerRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ModerationProfileModServerRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileModServerRolesCreateFieldInput>>;
};

export type ModerationProfileModServerRolesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileModServerRolesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileModServerRolesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileModServerRolesNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationProfileModServerRolesRelationship = {
  __typename?: 'ModerationProfileModServerRolesRelationship';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ModerationProfileModServerRolesUpdateConnectionInput = {
  node?: InputMaybe<ModServerRoleUpdateInput>;
};

export type ModerationProfileModServerRolesUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileModServerRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<ModerationProfileModServerRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileModServerRolesCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileModServerRolesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileModServerRolesDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileModServerRolesUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
};

export type ModerationProfileModerationActionActivityFeedAggregationSelection = {
  __typename?: 'ModerationProfileModerationActionActivityFeedAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileModerationActionActivityFeedNodeAggregateSelection>;
};

export type ModerationProfileModerationActionActivityFeedNodeAggregateSelection = {
  __typename?: 'ModerationProfileModerationActionActivityFeedNodeAggregateSelection';
  actionDescription: StringAggregateSelection;
  actionType: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
};

export type ModerationProfileOnCreateInput = {
  displayName?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfileOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ModerationProfileSort objects to sort ModerationProfiles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ModerationProfileSort>>;
};

export type ModerationProfileRelationInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedCreateFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsCreateFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesCreateFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesCreateFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesCreateFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsCreateFieldInput>>;
  User?: InputMaybe<ModerationProfileUserCreateFieldInput>;
};

/** Fields to sort ModerationProfiles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ModerationProfileSort object. */
export type ModerationProfileSort = {
  createdAt?: InputMaybe<SortDirection>;
  displayName?: InputMaybe<SortDirection>;
};

export type ModerationProfileSuspensionSuspensionsAggregationSelection = {
  __typename?: 'ModerationProfileSuspensionSuspensionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileSuspensionSuspensionsNodeAggregateSelection>;
};

export type ModerationProfileSuspensionSuspensionsNodeAggregateSelection = {
  __typename?: 'ModerationProfileSuspensionSuspensionsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type ModerationProfileSuspensionsAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileSuspensionsAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileSuspensionsAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileSuspensionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileSuspensionsNodeAggregationWhereInput>;
};

export type ModerationProfileSuspensionsConnectFieldInput = {
  connect?: InputMaybe<Array<SuspensionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<SuspensionConnectWhere>;
};

export type ModerationProfileSuspensionsConnection = {
  __typename?: 'ModerationProfileSuspensionsConnection';
  edges: Array<ModerationProfileSuspensionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileSuspensionsConnectionSort = {
  node?: InputMaybe<SuspensionSort>;
};

export type ModerationProfileSuspensionsConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileSuspensionsConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileSuspensionsConnectionWhere>>;
  node?: InputMaybe<SuspensionWhere>;
};

export type ModerationProfileSuspensionsCreateFieldInput = {
  node: SuspensionCreateInput;
};

export type ModerationProfileSuspensionsDeleteFieldInput = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
};

export type ModerationProfileSuspensionsDisconnectFieldInput = {
  disconnect?: InputMaybe<SuspensionDisconnectInput>;
  where?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
};

export type ModerationProfileSuspensionsFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileSuspensionsConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileSuspensionsCreateFieldInput>>;
};

export type ModerationProfileSuspensionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileSuspensionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ModerationProfileSuspensionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ModerationProfileSuspensionsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  suspendedUntil_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationProfileSuspensionsRelationship = {
  __typename?: 'ModerationProfileSuspensionsRelationship';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type ModerationProfileSuspensionsUpdateConnectionInput = {
  node?: InputMaybe<SuspensionUpdateInput>;
};

export type ModerationProfileSuspensionsUpdateFieldInput = {
  connect?: InputMaybe<Array<ModerationProfileSuspensionsConnectFieldInput>>;
  create?: InputMaybe<Array<ModerationProfileSuspensionsCreateFieldInput>>;
  delete?: InputMaybe<Array<ModerationProfileSuspensionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<ModerationProfileSuspensionsDisconnectFieldInput>>;
  update?: InputMaybe<ModerationProfileSuspensionsUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
};

export type ModerationProfileUniqueWhere = {
  displayName?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfileUpdateInput = {
  ActivityFeed?: InputMaybe<Array<ModerationProfileActivityFeedUpdateFieldInput>>;
  AuthoredComments?: InputMaybe<Array<ModerationProfileAuthoredCommentsUpdateFieldInput>>;
  AuthoredIssues?: InputMaybe<Array<ModerationProfileAuthoredIssuesUpdateFieldInput>>;
  ModChannelRoles?: InputMaybe<Array<ModerationProfileModChannelRolesUpdateFieldInput>>;
  ModServerRoles?: InputMaybe<Array<ModerationProfileModServerRolesUpdateFieldInput>>;
  Suspensions?: InputMaybe<Array<ModerationProfileSuspensionsUpdateFieldInput>>;
  User?: InputMaybe<ModerationProfileUserUpdateFieldInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfileUserAggregateInput = {
  AND?: InputMaybe<Array<ModerationProfileUserAggregateInput>>;
  NOT?: InputMaybe<ModerationProfileUserAggregateInput>;
  OR?: InputMaybe<Array<ModerationProfileUserAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ModerationProfileUserNodeAggregationWhereInput>;
};

export type ModerationProfileUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type ModerationProfileUserConnectOrCreateFieldInput = {
  onCreate: ModerationProfileUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type ModerationProfileUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type ModerationProfileUserConnection = {
  __typename?: 'ModerationProfileUserConnection';
  edges: Array<ModerationProfileUserRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ModerationProfileUserConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type ModerationProfileUserConnectionWhere = {
  AND?: InputMaybe<Array<ModerationProfileUserConnectionWhere>>;
  NOT?: InputMaybe<ModerationProfileUserConnectionWhere>;
  OR?: InputMaybe<Array<ModerationProfileUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type ModerationProfileUserCreateFieldInput = {
  node: UserCreateInput;
};

export type ModerationProfileUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<ModerationProfileUserConnectionWhere>;
};

export type ModerationProfileUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<ModerationProfileUserConnectionWhere>;
};

export type ModerationProfileUserFieldInput = {
  connect?: InputMaybe<ModerationProfileUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationProfileUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationProfileUserCreateFieldInput>;
};

export type ModerationProfileUserNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ModerationProfileUserNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<ModerationProfileUserNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<ModerationProfileUserNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ModerationProfileUserRelationship = {
  __typename?: 'ModerationProfileUserRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type ModerationProfileUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type ModerationProfileUserUpdateFieldInput = {
  connect?: InputMaybe<ModerationProfileUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<ModerationProfileUserConnectOrCreateFieldInput>;
  create?: InputMaybe<ModerationProfileUserCreateFieldInput>;
  delete?: InputMaybe<ModerationProfileUserDeleteFieldInput>;
  disconnect?: InputMaybe<ModerationProfileUserDisconnectFieldInput>;
  update?: InputMaybe<ModerationProfileUserUpdateConnectionInput>;
  where?: InputMaybe<ModerationProfileUserConnectionWhere>;
};

export type ModerationProfileUserUserAggregationSelection = {
  __typename?: 'ModerationProfileUserUserAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ModerationProfileUserUserNodeAggregateSelection>;
};

export type ModerationProfileUserUserNodeAggregateSelection = {
  __typename?: 'ModerationProfileUserUserNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type ModerationProfileWhere = {
  AND?: InputMaybe<Array<ModerationProfileWhere>>;
  ActivityFeedAggregate?: InputMaybe<ModerationProfileActivityFeedAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileActivityFeedConnections match this filter */
  ActivityFeedConnection_ALL?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileActivityFeedConnections match this filter */
  ActivityFeedConnection_NONE?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileActivityFeedConnections match this filter */
  ActivityFeedConnection_SINGLE?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileActivityFeedConnections match this filter */
  ActivityFeedConnection_SOME?: InputMaybe<ModerationProfileActivityFeedConnectionWhere>;
  /** Return ModerationProfiles where all of the related ModerationActions match this filter */
  ActivityFeed_ALL?: InputMaybe<ModerationActionWhere>;
  /** Return ModerationProfiles where none of the related ModerationActions match this filter */
  ActivityFeed_NONE?: InputMaybe<ModerationActionWhere>;
  /** Return ModerationProfiles where one of the related ModerationActions match this filter */
  ActivityFeed_SINGLE?: InputMaybe<ModerationActionWhere>;
  /** Return ModerationProfiles where some of the related ModerationActions match this filter */
  ActivityFeed_SOME?: InputMaybe<ModerationActionWhere>;
  AuthoredCommentsAggregate?: InputMaybe<ModerationProfileAuthoredCommentsAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileAuthoredCommentsConnections match this filter */
  AuthoredCommentsConnection_ALL?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileAuthoredCommentsConnections match this filter */
  AuthoredCommentsConnection_NONE?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileAuthoredCommentsConnections match this filter */
  AuthoredCommentsConnection_SINGLE?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileAuthoredCommentsConnections match this filter */
  AuthoredCommentsConnection_SOME?: InputMaybe<ModerationProfileAuthoredCommentsConnectionWhere>;
  /** Return ModerationProfiles where all of the related Comments match this filter */
  AuthoredComments_ALL?: InputMaybe<CommentWhere>;
  /** Return ModerationProfiles where none of the related Comments match this filter */
  AuthoredComments_NONE?: InputMaybe<CommentWhere>;
  /** Return ModerationProfiles where one of the related Comments match this filter */
  AuthoredComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return ModerationProfiles where some of the related Comments match this filter */
  AuthoredComments_SOME?: InputMaybe<CommentWhere>;
  AuthoredIssuesAggregate?: InputMaybe<ModerationProfileAuthoredIssuesAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileAuthoredIssuesConnections match this filter */
  AuthoredIssuesConnection_ALL?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileAuthoredIssuesConnections match this filter */
  AuthoredIssuesConnection_NONE?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileAuthoredIssuesConnections match this filter */
  AuthoredIssuesConnection_SINGLE?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileAuthoredIssuesConnections match this filter */
  AuthoredIssuesConnection_SOME?: InputMaybe<ModerationProfileAuthoredIssuesConnectionWhere>;
  /** Return ModerationProfiles where all of the related Issues match this filter */
  AuthoredIssues_ALL?: InputMaybe<IssueWhere>;
  /** Return ModerationProfiles where none of the related Issues match this filter */
  AuthoredIssues_NONE?: InputMaybe<IssueWhere>;
  /** Return ModerationProfiles where one of the related Issues match this filter */
  AuthoredIssues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return ModerationProfiles where some of the related Issues match this filter */
  AuthoredIssues_SOME?: InputMaybe<IssueWhere>;
  ModChannelRolesAggregate?: InputMaybe<ModerationProfileModChannelRolesAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileModChannelRolesConnections match this filter */
  ModChannelRolesConnection_ALL?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileModChannelRolesConnections match this filter */
  ModChannelRolesConnection_NONE?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileModChannelRolesConnections match this filter */
  ModChannelRolesConnection_SINGLE?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileModChannelRolesConnections match this filter */
  ModChannelRolesConnection_SOME?: InputMaybe<ModerationProfileModChannelRolesConnectionWhere>;
  /** Return ModerationProfiles where all of the related ModChannelRoles match this filter */
  ModChannelRoles_ALL?: InputMaybe<ModChannelRoleWhere>;
  /** Return ModerationProfiles where none of the related ModChannelRoles match this filter */
  ModChannelRoles_NONE?: InputMaybe<ModChannelRoleWhere>;
  /** Return ModerationProfiles where one of the related ModChannelRoles match this filter */
  ModChannelRoles_SINGLE?: InputMaybe<ModChannelRoleWhere>;
  /** Return ModerationProfiles where some of the related ModChannelRoles match this filter */
  ModChannelRoles_SOME?: InputMaybe<ModChannelRoleWhere>;
  ModServerRolesAggregate?: InputMaybe<ModerationProfileModServerRolesAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileModServerRolesConnections match this filter */
  ModServerRolesConnection_ALL?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileModServerRolesConnections match this filter */
  ModServerRolesConnection_NONE?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileModServerRolesConnections match this filter */
  ModServerRolesConnection_SINGLE?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileModServerRolesConnections match this filter */
  ModServerRolesConnection_SOME?: InputMaybe<ModerationProfileModServerRolesConnectionWhere>;
  /** Return ModerationProfiles where all of the related ModServerRoles match this filter */
  ModServerRoles_ALL?: InputMaybe<ModServerRoleWhere>;
  /** Return ModerationProfiles where none of the related ModServerRoles match this filter */
  ModServerRoles_NONE?: InputMaybe<ModServerRoleWhere>;
  /** Return ModerationProfiles where one of the related ModServerRoles match this filter */
  ModServerRoles_SINGLE?: InputMaybe<ModServerRoleWhere>;
  /** Return ModerationProfiles where some of the related ModServerRoles match this filter */
  ModServerRoles_SOME?: InputMaybe<ModServerRoleWhere>;
  NOT?: InputMaybe<ModerationProfileWhere>;
  OR?: InputMaybe<Array<ModerationProfileWhere>>;
  SuspensionsAggregate?: InputMaybe<ModerationProfileSuspensionsAggregateInput>;
  /** Return ModerationProfiles where all of the related ModerationProfileSuspensionsConnections match this filter */
  SuspensionsConnection_ALL?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  /** Return ModerationProfiles where none of the related ModerationProfileSuspensionsConnections match this filter */
  SuspensionsConnection_NONE?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  /** Return ModerationProfiles where one of the related ModerationProfileSuspensionsConnections match this filter */
  SuspensionsConnection_SINGLE?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  /** Return ModerationProfiles where some of the related ModerationProfileSuspensionsConnections match this filter */
  SuspensionsConnection_SOME?: InputMaybe<ModerationProfileSuspensionsConnectionWhere>;
  /** Return ModerationProfiles where all of the related Suspensions match this filter */
  Suspensions_ALL?: InputMaybe<SuspensionWhere>;
  /** Return ModerationProfiles where none of the related Suspensions match this filter */
  Suspensions_NONE?: InputMaybe<SuspensionWhere>;
  /** Return ModerationProfiles where one of the related Suspensions match this filter */
  Suspensions_SINGLE?: InputMaybe<SuspensionWhere>;
  /** Return ModerationProfiles where some of the related Suspensions match this filter */
  Suspensions_SOME?: InputMaybe<SuspensionWhere>;
  User?: InputMaybe<UserWhere>;
  UserAggregate?: InputMaybe<ModerationProfileUserAggregateInput>;
  UserConnection?: InputMaybe<ModerationProfileUserConnectionWhere>;
  UserConnection_NOT?: InputMaybe<ModerationProfileUserConnectionWhere>;
  User_NOT?: InputMaybe<UserWhere>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationProfilesConnection = {
  __typename?: 'ModerationProfilesConnection';
  edges: Array<ModerationProfileEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Mutation = {
  __typename?: 'Mutation';
  acceptForumModInvite?: Maybe<Scalars['Boolean']['output']>;
  acceptForumOwnerInvite?: Maybe<Scalars['Boolean']['output']>;
  addEmojiToComment?: Maybe<Comment>;
  addEmojiToDiscussionChannel?: Maybe<DiscussionChannel>;
  archiveComment?: Maybe<Issue>;
  archiveDiscussion?: Maybe<Issue>;
  archiveEvent?: Maybe<Issue>;
  cancelInviteForumMod?: Maybe<Scalars['Boolean']['output']>;
  cancelInviteForumOwner?: Maybe<Scalars['Boolean']['output']>;
  createAlbums: CreateAlbumsMutationResponse;
  createChannelRoles: CreateChannelRolesMutationResponse;
  createChannels: CreateChannelsMutationResponse;
  createCommentRepliesFormats: CreateCommentRepliesFormatsMutationResponse;
  createCommentSectionFormats: CreateCommentSectionFormatsMutationResponse;
  createComments: CreateCommentsMutationResponse;
  createContacts: CreateContactsMutationResponse;
  createDiscussionChannelListFormats: CreateDiscussionChannelListFormatsMutationResponse;
  createDiscussionChannels: CreateDiscussionChannelsMutationResponse;
  createDiscussionWithChannelConnections: Array<Discussion>;
  createDiscussions: CreateDiscussionsMutationResponse;
  createDropDataResponses: CreateDropDataResponsesMutationResponse;
  createEmailAndUser?: Maybe<User>;
  createEmails: CreateEmailsMutationResponse;
  createEmojis: CreateEmojisMutationResponse;
  createEnvironmentInfos: CreateEnvironmentInfosMutationResponse;
  createEventChannels: CreateEventChannelsMutationResponse;
  createEventCommentsFormats: CreateEventCommentsFormatsMutationResponse;
  createEventWithChannelConnections: Array<Event>;
  createEvents: CreateEventsMutationResponse;
  createFeeds: CreateFeedsMutationResponse;
  createGetSortedChannelsResponses: CreateGetSortedChannelsResponsesMutationResponse;
  createImages: CreateImagesMutationResponse;
  createIssues: CreateIssuesMutationResponse;
  createLinkFlairs: CreateLinkFlairsMutationResponse;
  createMessages: CreateMessagesMutationResponse;
  createModChannelRoles: CreateModChannelRolesMutationResponse;
  createModServerRoles: CreateModServerRolesMutationResponse;
  createModerationActions: CreateModerationActionsMutationResponse;
  createModerationProfiles: CreateModerationProfilesMutationResponse;
  createNotifications: CreateNotificationsMutationResponse;
  createRecurringEvents: CreateRecurringEventsMutationResponse;
  createRepeatEnds: CreateRepeatEndsMutationResponse;
  createRepeatEveries: CreateRepeatEveriesMutationResponse;
  createSafetyCheckResponses: CreateSafetyCheckResponsesMutationResponse;
  createSeedDataResponses: CreateSeedDataResponsesMutationResponse;
  createServerConfigs: CreateServerConfigsMutationResponse;
  createServerRoles: CreateServerRolesMutationResponse;
  createSignedStorageURL?: Maybe<SignedUrl>;
  createSignedUrls: CreateSignedUrlsMutationResponse;
  createSiteWideDiscussionListFormats: CreateSiteWideDiscussionListFormatsMutationResponse;
  createSuspensions: CreateSuspensionsMutationResponse;
  createTags: CreateTagsMutationResponse;
  createTextVersions: CreateTextVersionsMutationResponse;
  createUsers: CreateUsersMutationResponse;
  createWikiPages: CreateWikiPagesMutationResponse;
  deleteAlbums: DeleteInfo;
  deleteChannelRoles: DeleteInfo;
  deleteChannels: DeleteInfo;
  deleteCommentRepliesFormats: DeleteInfo;
  deleteCommentSectionFormats: DeleteInfo;
  deleteComments: DeleteInfo;
  deleteContacts: DeleteInfo;
  deleteDiscussionChannelListFormats: DeleteInfo;
  deleteDiscussionChannels: DeleteInfo;
  deleteDiscussions: DeleteInfo;
  deleteDropDataResponses: DeleteInfo;
  deleteEmails: DeleteInfo;
  deleteEmojis: DeleteInfo;
  deleteEnvironmentInfos: DeleteInfo;
  deleteEventChannels: DeleteInfo;
  deleteEventCommentsFormats: DeleteInfo;
  deleteEvents: DeleteInfo;
  deleteFeeds: DeleteInfo;
  deleteGetSortedChannelsResponses: DeleteInfo;
  deleteImages: DeleteInfo;
  deleteIssues: DeleteInfo;
  deleteLinkFlairs: DeleteInfo;
  deleteMessages: DeleteInfo;
  deleteModChannelRoles: DeleteInfo;
  deleteModServerRoles: DeleteInfo;
  deleteModerationActions: DeleteInfo;
  deleteModerationProfiles: DeleteInfo;
  deleteNotifications: DeleteInfo;
  deleteRecurringEvents: DeleteInfo;
  deleteRepeatEnds: DeleteInfo;
  deleteRepeatEveries: DeleteInfo;
  deleteSafetyCheckResponses: DeleteInfo;
  deleteSeedDataResponses: DeleteInfo;
  deleteServerConfigs: DeleteInfo;
  deleteServerRoles: DeleteInfo;
  deleteSignedUrls: DeleteInfo;
  deleteSiteWideDiscussionListFormats: DeleteInfo;
  deleteSuspensions: DeleteInfo;
  deleteTags: DeleteInfo;
  deleteTextVersions: DeleteInfo;
  deleteUsers: DeleteInfo;
  deleteWikiPages: DeleteInfo;
  dropDataForCypressTests?: Maybe<DropDataResponse>;
  inviteForumMod?: Maybe<Scalars['Boolean']['output']>;
  inviteForumOwner?: Maybe<Scalars['Boolean']['output']>;
  removeEmojiFromComment?: Maybe<Comment>;
  removeEmojiFromDiscussionChannel?: Maybe<DiscussionChannel>;
  removeForumMod?: Maybe<Scalars['Boolean']['output']>;
  removeForumOwner?: Maybe<Scalars['Boolean']['output']>;
  reportComment?: Maybe<Issue>;
  reportDiscussion?: Maybe<Issue>;
  reportEvent?: Maybe<Issue>;
  seedDataForCypressTests?: Maybe<SeedDataResponse>;
  suspendMod?: Maybe<Issue>;
  suspendUser?: Maybe<Issue>;
  unarchiveComment?: Maybe<Issue>;
  unarchiveDiscussion?: Maybe<Issue>;
  unarchiveEvent?: Maybe<Issue>;
  undoUpvoteComment?: Maybe<Comment>;
  undoUpvoteDiscussionChannel?: Maybe<DiscussionChannel>;
  unsuspendMod?: Maybe<Issue>;
  unsuspendUser?: Maybe<Issue>;
  updateAlbums: UpdateAlbumsMutationResponse;
  updateChannelRoles: UpdateChannelRolesMutationResponse;
  updateChannels: UpdateChannelsMutationResponse;
  updateCommentRepliesFormats: UpdateCommentRepliesFormatsMutationResponse;
  updateCommentSectionFormats: UpdateCommentSectionFormatsMutationResponse;
  updateComments: UpdateCommentsMutationResponse;
  updateContacts: UpdateContactsMutationResponse;
  updateDiscussionChannelListFormats: UpdateDiscussionChannelListFormatsMutationResponse;
  updateDiscussionChannels: UpdateDiscussionChannelsMutationResponse;
  updateDiscussionWithChannelConnections?: Maybe<Discussion>;
  updateDiscussions: UpdateDiscussionsMutationResponse;
  updateDropDataResponses: UpdateDropDataResponsesMutationResponse;
  updateEmails: UpdateEmailsMutationResponse;
  updateEmojis: UpdateEmojisMutationResponse;
  updateEnvironmentInfos: UpdateEnvironmentInfosMutationResponse;
  updateEventChannels: UpdateEventChannelsMutationResponse;
  updateEventCommentsFormats: UpdateEventCommentsFormatsMutationResponse;
  updateEventWithChannelConnections?: Maybe<Event>;
  updateEvents: UpdateEventsMutationResponse;
  updateFeeds: UpdateFeedsMutationResponse;
  updateGetSortedChannelsResponses: UpdateGetSortedChannelsResponsesMutationResponse;
  updateImages: UpdateImagesMutationResponse;
  updateIssues: UpdateIssuesMutationResponse;
  updateLinkFlairs: UpdateLinkFlairsMutationResponse;
  updateMessages: UpdateMessagesMutationResponse;
  updateModChannelRoles: UpdateModChannelRolesMutationResponse;
  updateModServerRoles: UpdateModServerRolesMutationResponse;
  updateModerationActions: UpdateModerationActionsMutationResponse;
  updateModerationProfiles: UpdateModerationProfilesMutationResponse;
  updateNotifications: UpdateNotificationsMutationResponse;
  updateRecurringEvents: UpdateRecurringEventsMutationResponse;
  updateRepeatEnds: UpdateRepeatEndsMutationResponse;
  updateRepeatEveries: UpdateRepeatEveriesMutationResponse;
  updateSafetyCheckResponses: UpdateSafetyCheckResponsesMutationResponse;
  updateSeedDataResponses: UpdateSeedDataResponsesMutationResponse;
  updateServerConfigs: UpdateServerConfigsMutationResponse;
  updateServerRoles: UpdateServerRolesMutationResponse;
  updateSignedUrls: UpdateSignedUrlsMutationResponse;
  updateSiteWideDiscussionListFormats: UpdateSiteWideDiscussionListFormatsMutationResponse;
  updateSuspensions: UpdateSuspensionsMutationResponse;
  updateTags: UpdateTagsMutationResponse;
  updateTextVersions: UpdateTextVersionsMutationResponse;
  updateUsers: UpdateUsersMutationResponse;
  updateWikiPages: UpdateWikiPagesMutationResponse;
  upvoteComment?: Maybe<Comment>;
  upvoteDiscussionChannel?: Maybe<DiscussionChannel>;
};


export type MutationAcceptForumModInviteArgs = {
  channelUniqueName: Scalars['String']['input'];
};


export type MutationAcceptForumOwnerInviteArgs = {
  channelUniqueName: Scalars['String']['input'];
};


export type MutationAddEmojiToCommentArgs = {
  commentId: Scalars['ID']['input'];
  emojiLabel: Scalars['String']['input'];
  unicode: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationAddEmojiToDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
  emojiLabel: Scalars['String']['input'];
  unicode: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationArchiveCommentArgs = {
  commentId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationArchiveDiscussionArgs = {
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationArchiveEventArgs = {
  channelUniqueName: Scalars['String']['input'];
  eventId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationCancelInviteForumModArgs = {
  channelUniqueName: Scalars['String']['input'];
  inviteeUsername: Scalars['String']['input'];
};


export type MutationCancelInviteForumOwnerArgs = {
  channelUniqueName: Scalars['String']['input'];
  inviteeUsername: Scalars['String']['input'];
};


export type MutationCreateAlbumsArgs = {
  input: Array<AlbumCreateInput>;
};


export type MutationCreateChannelRolesArgs = {
  input: Array<ChannelRoleCreateInput>;
};


export type MutationCreateChannelsArgs = {
  input: Array<ChannelCreateInput>;
};


export type MutationCreateCommentRepliesFormatsArgs = {
  input: Array<CommentRepliesFormatCreateInput>;
};


export type MutationCreateCommentSectionFormatsArgs = {
  input: Array<CommentSectionFormatCreateInput>;
};


export type MutationCreateCommentsArgs = {
  input: Array<CommentCreateInput>;
};


export type MutationCreateContactsArgs = {
  input: Array<ContactCreateInput>;
};


export type MutationCreateDiscussionChannelListFormatsArgs = {
  input: Array<DiscussionChannelListFormatCreateInput>;
};


export type MutationCreateDiscussionChannelsArgs = {
  input: Array<DiscussionChannelCreateInput>;
};


export type MutationCreateDiscussionWithChannelConnectionsArgs = {
  input: Array<DiscussionCreateInputWithChannels>;
};


export type MutationCreateDiscussionsArgs = {
  input: Array<DiscussionCreateInput>;
};


export type MutationCreateDropDataResponsesArgs = {
  input: Array<DropDataResponseCreateInput>;
};


export type MutationCreateEmailAndUserArgs = {
  emailAddress: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationCreateEmailsArgs = {
  input: Array<EmailCreateInput>;
};


export type MutationCreateEmojisArgs = {
  input: Array<EmojiCreateInput>;
};


export type MutationCreateEnvironmentInfosArgs = {
  input: Array<EnvironmentInfoCreateInput>;
};


export type MutationCreateEventChannelsArgs = {
  input: Array<EventChannelCreateInput>;
};


export type MutationCreateEventCommentsFormatsArgs = {
  input: Array<EventCommentsFormatCreateInput>;
};


export type MutationCreateEventWithChannelConnectionsArgs = {
  input: Array<EventCreateInputWithChannels>;
};


export type MutationCreateEventsArgs = {
  input: Array<EventCreateInput>;
};


export type MutationCreateFeedsArgs = {
  input: Array<FeedCreateInput>;
};


export type MutationCreateGetSortedChannelsResponsesArgs = {
  input: Array<GetSortedChannelsResponseCreateInput>;
};


export type MutationCreateImagesArgs = {
  input: Array<ImageCreateInput>;
};


export type MutationCreateIssuesArgs = {
  input: Array<IssueCreateInput>;
};


export type MutationCreateLinkFlairsArgs = {
  input: Array<LinkFlairCreateInput>;
};


export type MutationCreateMessagesArgs = {
  input: Array<MessageCreateInput>;
};


export type MutationCreateModChannelRolesArgs = {
  input: Array<ModChannelRoleCreateInput>;
};


export type MutationCreateModServerRolesArgs = {
  input: Array<ModServerRoleCreateInput>;
};


export type MutationCreateModerationActionsArgs = {
  input: Array<ModerationActionCreateInput>;
};


export type MutationCreateModerationProfilesArgs = {
  input: Array<ModerationProfileCreateInput>;
};


export type MutationCreateNotificationsArgs = {
  input: Array<NotificationCreateInput>;
};


export type MutationCreateRecurringEventsArgs = {
  input: Array<RecurringEventCreateInput>;
};


export type MutationCreateRepeatEndsArgs = {
  input: Array<RepeatEndsCreateInput>;
};


export type MutationCreateRepeatEveriesArgs = {
  input: Array<RepeatEveryCreateInput>;
};


export type MutationCreateSafetyCheckResponsesArgs = {
  input: Array<SafetyCheckResponseCreateInput>;
};


export type MutationCreateSeedDataResponsesArgs = {
  input: Array<SeedDataResponseCreateInput>;
};


export type MutationCreateServerConfigsArgs = {
  input: Array<ServerConfigCreateInput>;
};


export type MutationCreateServerRolesArgs = {
  input: Array<ServerRoleCreateInput>;
};


export type MutationCreateSignedStorageUrlArgs = {
  contentType: Scalars['String']['input'];
  filename: Scalars['String']['input'];
};


export type MutationCreateSignedUrlsArgs = {
  input: Array<SignedUrlCreateInput>;
};


export type MutationCreateSiteWideDiscussionListFormatsArgs = {
  input: Array<SiteWideDiscussionListFormatCreateInput>;
};


export type MutationCreateSuspensionsArgs = {
  input: Array<SuspensionCreateInput>;
};


export type MutationCreateTagsArgs = {
  input: Array<TagCreateInput>;
};


export type MutationCreateTextVersionsArgs = {
  input: Array<TextVersionCreateInput>;
};


export type MutationCreateUsersArgs = {
  input: Array<UserCreateInput>;
};


export type MutationCreateWikiPagesArgs = {
  input: Array<WikiPageCreateInput>;
};


export type MutationDeleteAlbumsArgs = {
  delete?: InputMaybe<AlbumDeleteInput>;
  where?: InputMaybe<AlbumWhere>;
};


export type MutationDeleteChannelRolesArgs = {
  where?: InputMaybe<ChannelRoleWhere>;
};


export type MutationDeleteChannelsArgs = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<ChannelWhere>;
};


export type MutationDeleteCommentRepliesFormatsArgs = {
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type MutationDeleteCommentSectionFormatsArgs = {
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type MutationDeleteCommentsArgs = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<CommentWhere>;
};


export type MutationDeleteContactsArgs = {
  delete?: InputMaybe<ContactDeleteInput>;
  where?: InputMaybe<ContactWhere>;
};


export type MutationDeleteDiscussionChannelListFormatsArgs = {
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type MutationDeleteDiscussionChannelsArgs = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type MutationDeleteDiscussionsArgs = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<DiscussionWhere>;
};


export type MutationDeleteDropDataResponsesArgs = {
  where?: InputMaybe<DropDataResponseWhere>;
};


export type MutationDeleteEmailsArgs = {
  delete?: InputMaybe<EmailDeleteInput>;
  where?: InputMaybe<EmailWhere>;
};


export type MutationDeleteEmojisArgs = {
  delete?: InputMaybe<EmojiDeleteInput>;
  where?: InputMaybe<EmojiWhere>;
};


export type MutationDeleteEnvironmentInfosArgs = {
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type MutationDeleteEventChannelsArgs = {
  delete?: InputMaybe<EventChannelDeleteInput>;
  where?: InputMaybe<EventChannelWhere>;
};


export type MutationDeleteEventCommentsFormatsArgs = {
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type MutationDeleteEventsArgs = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<EventWhere>;
};


export type MutationDeleteFeedsArgs = {
  delete?: InputMaybe<FeedDeleteInput>;
  where?: InputMaybe<FeedWhere>;
};


export type MutationDeleteGetSortedChannelsResponsesArgs = {
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type MutationDeleteImagesArgs = {
  delete?: InputMaybe<ImageDeleteInput>;
  where?: InputMaybe<ImageWhere>;
};


export type MutationDeleteIssuesArgs = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<IssueWhere>;
};


export type MutationDeleteLinkFlairsArgs = {
  where?: InputMaybe<LinkFlairWhere>;
};


export type MutationDeleteMessagesArgs = {
  delete?: InputMaybe<MessageDeleteInput>;
  where?: InputMaybe<MessageWhere>;
};


export type MutationDeleteModChannelRolesArgs = {
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type MutationDeleteModServerRolesArgs = {
  where?: InputMaybe<ModServerRoleWhere>;
};


export type MutationDeleteModerationActionsArgs = {
  delete?: InputMaybe<ModerationActionDeleteInput>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type MutationDeleteModerationProfilesArgs = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type MutationDeleteNotificationsArgs = {
  where?: InputMaybe<NotificationWhere>;
};


export type MutationDeleteRecurringEventsArgs = {
  delete?: InputMaybe<RecurringEventDeleteInput>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type MutationDeleteRepeatEndsArgs = {
  where?: InputMaybe<RepeatEndsWhere>;
};


export type MutationDeleteRepeatEveriesArgs = {
  where?: InputMaybe<RepeatEveryWhere>;
};


export type MutationDeleteSafetyCheckResponsesArgs = {
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type MutationDeleteSeedDataResponsesArgs = {
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type MutationDeleteServerConfigsArgs = {
  delete?: InputMaybe<ServerConfigDeleteInput>;
  where?: InputMaybe<ServerConfigWhere>;
};


export type MutationDeleteServerRolesArgs = {
  where?: InputMaybe<ServerRoleWhere>;
};


export type MutationDeleteSignedUrlsArgs = {
  where?: InputMaybe<SignedUrlWhere>;
};


export type MutationDeleteSiteWideDiscussionListFormatsArgs = {
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type MutationDeleteSuspensionsArgs = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<SuspensionWhere>;
};


export type MutationDeleteTagsArgs = {
  delete?: InputMaybe<TagDeleteInput>;
  where?: InputMaybe<TagWhere>;
};


export type MutationDeleteTextVersionsArgs = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<TextVersionWhere>;
};


export type MutationDeleteUsersArgs = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserWhere>;
};


export type MutationDeleteWikiPagesArgs = {
  delete?: InputMaybe<WikiPageDeleteInput>;
  where?: InputMaybe<WikiPageWhere>;
};


export type MutationInviteForumModArgs = {
  channelUniqueName: Scalars['String']['input'];
  inviteeUsername: Scalars['String']['input'];
};


export type MutationInviteForumOwnerArgs = {
  channelUniqueName: Scalars['String']['input'];
  inviteeUsername: Scalars['String']['input'];
};


export type MutationRemoveEmojiFromCommentArgs = {
  commentId: Scalars['ID']['input'];
  emojiLabel: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationRemoveEmojiFromDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
  emojiLabel: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationRemoveForumModArgs = {
  channelUniqueName: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationRemoveForumOwnerArgs = {
  channelUniqueName: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


export type MutationReportCommentArgs = {
  channelUniqueName: Scalars['String']['input'];
  commentId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationReportDiscussionArgs = {
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationReportEventArgs = {
  channelUniqueName: Scalars['String']['input'];
  eventId: Scalars['ID']['input'];
  reportText: Scalars['String']['input'];
  selectedForumRules: Array<Scalars['String']['input']>;
  selectedServerRules: Array<Scalars['String']['input']>;
};


export type MutationSeedDataForCypressTestsArgs = {
  channelRoles: Array<ChannelRoleCreateInput>;
  channels: Array<ChannelCreateInput>;
  comments: Array<CommentCreateInput>;
  discussions: Array<DiscussionCreateInputWithChannels>;
  events: Array<EventCreateInputWithChannels>;
  modChannelRoles: Array<ModChannelRoleCreateInput>;
  modServerRoles: Array<ModServerRoleCreateInput>;
  serverConfigs: Array<ServerConfigCreateInput>;
  serverRoles: Array<ServerRoleCreateInput>;
  tags: Array<TagCreateInput>;
  users: Array<NewUserInput>;
};


export type MutationSuspendModArgs = {
  explanation?: InputMaybe<Scalars['String']['input']>;
  issueId: Scalars['ID']['input'];
  suspendIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendUntil?: InputMaybe<Scalars['DateTime']['input']>;
};


export type MutationSuspendUserArgs = {
  explanation?: InputMaybe<Scalars['String']['input']>;
  issueId: Scalars['ID']['input'];
  suspendIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendUntil?: InputMaybe<Scalars['DateTime']['input']>;
};


export type MutationUnarchiveCommentArgs = {
  commentId: Scalars['ID']['input'];
  explanation?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUnarchiveDiscussionArgs = {
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  explanation?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUnarchiveEventArgs = {
  channelUniqueName: Scalars['String']['input'];
  eventId: Scalars['ID']['input'];
  explanation?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUndoUpvoteCommentArgs = {
  commentId: Scalars['ID']['input'];
  username: Scalars['String']['input'];
};


export type MutationUndoUpvoteDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
  username: Scalars['String']['input'];
};


export type MutationUnsuspendModArgs = {
  explanation?: InputMaybe<Scalars['String']['input']>;
  issueId: Scalars['ID']['input'];
};


export type MutationUnsuspendUserArgs = {
  explanation?: InputMaybe<Scalars['String']['input']>;
  issueId: Scalars['ID']['input'];
};


export type MutationUpdateAlbumsArgs = {
  update?: InputMaybe<AlbumUpdateInput>;
  where?: InputMaybe<AlbumWhere>;
};


export type MutationUpdateChannelRolesArgs = {
  update?: InputMaybe<ChannelRoleUpdateInput>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type MutationUpdateChannelsArgs = {
  update?: InputMaybe<ChannelUpdateInput>;
  where?: InputMaybe<ChannelWhere>;
};


export type MutationUpdateCommentRepliesFormatsArgs = {
  update?: InputMaybe<CommentRepliesFormatUpdateInput>;
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type MutationUpdateCommentSectionFormatsArgs = {
  update?: InputMaybe<CommentSectionFormatUpdateInput>;
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type MutationUpdateCommentsArgs = {
  update?: InputMaybe<CommentUpdateInput>;
  where?: InputMaybe<CommentWhere>;
};


export type MutationUpdateContactsArgs = {
  update?: InputMaybe<ContactUpdateInput>;
  where?: InputMaybe<ContactWhere>;
};


export type MutationUpdateDiscussionChannelListFormatsArgs = {
  update?: InputMaybe<DiscussionChannelListFormatUpdateInput>;
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type MutationUpdateDiscussionChannelsArgs = {
  update?: InputMaybe<DiscussionChannelUpdateInput>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type MutationUpdateDiscussionWithChannelConnectionsArgs = {
  channelConnections?: InputMaybe<Array<Scalars['String']['input']>>;
  channelDisconnections?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  discussionUpdateInput: DiscussionUpdateInput;
  where: DiscussionWhere;
};


export type MutationUpdateDiscussionsArgs = {
  update?: InputMaybe<DiscussionUpdateInput>;
  where?: InputMaybe<DiscussionWhere>;
};


export type MutationUpdateDropDataResponsesArgs = {
  update?: InputMaybe<DropDataResponseUpdateInput>;
  where?: InputMaybe<DropDataResponseWhere>;
};


export type MutationUpdateEmailsArgs = {
  update?: InputMaybe<EmailUpdateInput>;
  where?: InputMaybe<EmailWhere>;
};


export type MutationUpdateEmojisArgs = {
  update?: InputMaybe<EmojiUpdateInput>;
  where?: InputMaybe<EmojiWhere>;
};


export type MutationUpdateEnvironmentInfosArgs = {
  update?: InputMaybe<EnvironmentInfoUpdateInput>;
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type MutationUpdateEventChannelsArgs = {
  update?: InputMaybe<EventChannelUpdateInput>;
  where?: InputMaybe<EventChannelWhere>;
};


export type MutationUpdateEventCommentsFormatsArgs = {
  update?: InputMaybe<EventCommentsFormatUpdateInput>;
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type MutationUpdateEventWithChannelConnectionsArgs = {
  channelConnections?: InputMaybe<Array<Scalars['String']['input']>>;
  channelDisconnections?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  eventUpdateInput: EventUpdateInput;
  where: EventWhere;
};


export type MutationUpdateEventsArgs = {
  update?: InputMaybe<EventUpdateInput>;
  where?: InputMaybe<EventWhere>;
};


export type MutationUpdateFeedsArgs = {
  update?: InputMaybe<FeedUpdateInput>;
  where?: InputMaybe<FeedWhere>;
};


export type MutationUpdateGetSortedChannelsResponsesArgs = {
  update?: InputMaybe<GetSortedChannelsResponseUpdateInput>;
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type MutationUpdateImagesArgs = {
  update?: InputMaybe<ImageUpdateInput>;
  where?: InputMaybe<ImageWhere>;
};


export type MutationUpdateIssuesArgs = {
  update?: InputMaybe<IssueUpdateInput>;
  where?: InputMaybe<IssueWhere>;
};


export type MutationUpdateLinkFlairsArgs = {
  update?: InputMaybe<LinkFlairUpdateInput>;
  where?: InputMaybe<LinkFlairWhere>;
};


export type MutationUpdateMessagesArgs = {
  update?: InputMaybe<MessageUpdateInput>;
  where?: InputMaybe<MessageWhere>;
};


export type MutationUpdateModChannelRolesArgs = {
  update?: InputMaybe<ModChannelRoleUpdateInput>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type MutationUpdateModServerRolesArgs = {
  update?: InputMaybe<ModServerRoleUpdateInput>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type MutationUpdateModerationActionsArgs = {
  update?: InputMaybe<ModerationActionUpdateInput>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type MutationUpdateModerationProfilesArgs = {
  update?: InputMaybe<ModerationProfileUpdateInput>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type MutationUpdateNotificationsArgs = {
  update?: InputMaybe<NotificationUpdateInput>;
  where?: InputMaybe<NotificationWhere>;
};


export type MutationUpdateRecurringEventsArgs = {
  update?: InputMaybe<RecurringEventUpdateInput>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type MutationUpdateRepeatEndsArgs = {
  update?: InputMaybe<RepeatEndsUpdateInput>;
  where?: InputMaybe<RepeatEndsWhere>;
};


export type MutationUpdateRepeatEveriesArgs = {
  update?: InputMaybe<RepeatEveryUpdateInput>;
  where?: InputMaybe<RepeatEveryWhere>;
};


export type MutationUpdateSafetyCheckResponsesArgs = {
  update?: InputMaybe<SafetyCheckResponseUpdateInput>;
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type MutationUpdateSeedDataResponsesArgs = {
  update?: InputMaybe<SeedDataResponseUpdateInput>;
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type MutationUpdateServerConfigsArgs = {
  update?: InputMaybe<ServerConfigUpdateInput>;
  where?: InputMaybe<ServerConfigWhere>;
};


export type MutationUpdateServerRolesArgs = {
  update?: InputMaybe<ServerRoleUpdateInput>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type MutationUpdateSignedUrlsArgs = {
  update?: InputMaybe<SignedUrlUpdateInput>;
  where?: InputMaybe<SignedUrlWhere>;
};


export type MutationUpdateSiteWideDiscussionListFormatsArgs = {
  update?: InputMaybe<SiteWideDiscussionListFormatUpdateInput>;
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type MutationUpdateSuspensionsArgs = {
  update?: InputMaybe<SuspensionUpdateInput>;
  where?: InputMaybe<SuspensionWhere>;
};


export type MutationUpdateTagsArgs = {
  update?: InputMaybe<TagUpdateInput>;
  where?: InputMaybe<TagWhere>;
};


export type MutationUpdateTextVersionsArgs = {
  update?: InputMaybe<TextVersionUpdateInput>;
  where?: InputMaybe<TextVersionWhere>;
};


export type MutationUpdateUsersArgs = {
  update?: InputMaybe<UserUpdateInput>;
  where?: InputMaybe<UserWhere>;
};


export type MutationUpdateWikiPagesArgs = {
  update?: InputMaybe<WikiPageUpdateInput>;
  where?: InputMaybe<WikiPageWhere>;
};


export type MutationUpvoteCommentArgs = {
  commentId: Scalars['ID']['input'];
  username: Scalars['String']['input'];
};


export type MutationUpvoteDiscussionChannelArgs = {
  discussionChannelId: Scalars['ID']['input'];
  username: Scalars['String']['input'];
};

export type NewUserInput = {
  emailAddress: Scalars['String']['input'];
  username: Scalars['String']['input'];
};

export type Notification = {
  __typename?: 'Notification';
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  read?: Maybe<Scalars['Boolean']['output']>;
  text?: Maybe<Scalars['String']['output']>;
};

export type NotificationAggregateSelection = {
  __typename?: 'NotificationAggregateSelection';
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
};

export type NotificationConnectWhere = {
  node: NotificationWhere;
};

export type NotificationCreateInput = {
  read?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type NotificationEdge = {
  __typename?: 'NotificationEdge';
  cursor: Scalars['String']['output'];
  node: Notification;
};

export type NotificationOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more NotificationSort objects to sort Notifications by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<NotificationSort>>;
};

/** Fields to sort Notifications by. The order in which sorts are applied is not guaranteed when specifying many fields in one NotificationSort object. */
export type NotificationSort = {
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  read?: InputMaybe<SortDirection>;
  text?: InputMaybe<SortDirection>;
};

export type NotificationUpdateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  read?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type NotificationWhere = {
  AND?: InputMaybe<Array<NotificationWhere>>;
  NOT?: InputMaybe<NotificationWhere>;
  OR?: InputMaybe<Array<NotificationWhere>>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  read?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type NotificationsConnection = {
  __typename?: 'NotificationsConnection';
  edges: Array<NotificationEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** Pagination information (Relay) */
export type PageInfo = {
  __typename?: 'PageInfo';
  endCursor?: Maybe<Scalars['String']['output']>;
  hasNextPage: Scalars['Boolean']['output'];
  hasPreviousPage: Scalars['Boolean']['output'];
  startCursor?: Maybe<Scalars['String']['output']>;
};

/** A point in a coordinate system. For more information, see https://neo4j.com/docs/graphql/4/type-definitions/types/spatial/#point */
export type Point = {
  __typename?: 'Point';
  crs: Scalars['String']['output'];
  height?: Maybe<Scalars['Float']['output']>;
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
  srid: Scalars['Int']['output'];
};

/** Input type for a point with a distance */
export type PointDistance = {
  /** The distance in metres to be used when comparing two points */
  distance: Scalars['Float']['input'];
  point: PointInput;
};

/** Input type for a point */
export type PointInput = {
  height?: InputMaybe<Scalars['Float']['input']>;
  latitude: Scalars['Float']['input'];
  longitude: Scalars['Float']['input'];
};

export type Query = {
  __typename?: 'Query';
  albums: Array<Album>;
  albumsAggregate: AlbumAggregateSelection;
  albumsConnection: AlbumsConnection;
  channelRoles: Array<ChannelRole>;
  channelRolesAggregate: ChannelRoleAggregateSelection;
  channelRolesConnection: ChannelRolesConnection;
  channels: Array<Channel>;
  channelsAggregate: ChannelAggregateSelection;
  channelsConnection: ChannelsConnection;
  commentAuthors: Array<CommentAuthor>;
  commentRepliesFormats: Array<CommentRepliesFormat>;
  commentRepliesFormatsAggregate: CommentRepliesFormatAggregateSelection;
  commentRepliesFormatsConnection: CommentRepliesFormatsConnection;
  commentSectionFormats: Array<CommentSectionFormat>;
  commentSectionFormatsAggregate: CommentSectionFormatAggregateSelection;
  commentSectionFormatsConnection: CommentSectionFormatsConnection;
  comments: Array<Comment>;
  commentsAggregate: CommentAggregateSelection;
  commentsConnection: CommentsConnection;
  contacts: Array<Contact>;
  contactsAggregate: ContactAggregateSelection;
  contactsConnection: ContactsConnection;
  discussionChannelListFormats: Array<DiscussionChannelListFormat>;
  discussionChannelListFormatsAggregate: DiscussionChannelListFormatAggregateSelection;
  discussionChannelListFormatsConnection: DiscussionChannelListFormatsConnection;
  discussionChannels: Array<DiscussionChannel>;
  discussionChannelsAggregate: DiscussionChannelAggregateSelection;
  discussionChannelsConnection: DiscussionChannelsConnection;
  discussions: Array<Discussion>;
  discussionsAggregate: DiscussionAggregateSelection;
  discussionsConnection: DiscussionsConnection;
  dropDataResponses: Array<DropDataResponse>;
  dropDataResponsesAggregate: DropDataResponseAggregateSelection;
  dropDataResponsesConnection: DropDataResponsesConnection;
  emails: Array<Email>;
  emailsAggregate: EmailAggregateSelection;
  emailsConnection: EmailsConnection;
  emojis: Array<Emoji>;
  emojisAggregate: EmojiAggregateSelection;
  emojisConnection: EmojisConnection;
  environmentInfos: Array<EnvironmentInfo>;
  environmentInfosAggregate: EnvironmentInfoAggregateSelection;
  environmentInfosConnection: EnvironmentInfosConnection;
  eventChannels: Array<EventChannel>;
  eventChannelsAggregate: EventChannelAggregateSelection;
  eventChannelsConnection: EventChannelsConnection;
  eventCommentsFormats: Array<EventCommentsFormat>;
  eventCommentsFormatsAggregate: EventCommentsFormatAggregateSelection;
  eventCommentsFormatsConnection: EventCommentsFormatsConnection;
  events: Array<Event>;
  eventsAggregate: EventAggregateSelection;
  eventsConnection: EventsConnection;
  feeds: Array<Feed>;
  feedsAggregate: FeedAggregateSelection;
  feedsConnection: FeedsConnection;
  getCommentReplies?: Maybe<CommentRepliesFormat>;
  getCommentSection?: Maybe<CommentSectionFormat>;
  getDiscussionsInChannel?: Maybe<DiscussionChannelListFormat>;
  getEventComments?: Maybe<EventCommentsFormat>;
  getSiteWideDiscussionList?: Maybe<SiteWideDiscussionListFormat>;
  getSortedChannels?: Maybe<GetSortedChannelsResponse>;
  getSortedChannelsResponses: Array<GetSortedChannelsResponse>;
  getSortedChannelsResponsesAggregate: GetSortedChannelsResponseAggregateSelection;
  getSortedChannelsResponsesConnection: GetSortedChannelsResponsesConnection;
  images: Array<Image>;
  imagesAggregate: ImageAggregateSelection;
  imagesConnection: ImagesConnection;
  isOriginalPosterSuspended?: Maybe<Scalars['Boolean']['output']>;
  issueAuthors: Array<IssueAuthor>;
  issueCommentAuthors: Array<IssueCommentAuthor>;
  issues: Array<Issue>;
  issuesAggregate: IssueAggregateSelection;
  issuesConnection: IssuesConnection;
  linkFlairs: Array<LinkFlair>;
  linkFlairsAggregate: LinkFlairAggregateSelection;
  linkFlairsConnection: LinkFlairsConnection;
  messages: Array<Message>;
  messagesAggregate: MessageAggregateSelection;
  messagesConnection: MessagesConnection;
  modChannelRoles: Array<ModChannelRole>;
  modChannelRolesAggregate: ModChannelRoleAggregateSelection;
  modChannelRolesConnection: ModChannelRolesConnection;
  modServerRoles: Array<ModServerRole>;
  modServerRolesAggregate: ModServerRoleAggregateSelection;
  modServerRolesConnection: ModServerRolesConnection;
  moderationActions: Array<ModerationAction>;
  moderationActionsAggregate: ModerationActionAggregateSelection;
  moderationActionsConnection: ModerationActionsConnection;
  moderationProfiles: Array<ModerationProfile>;
  moderationProfilesAggregate: ModerationProfileAggregateSelection;
  moderationProfilesConnection: ModerationProfilesConnection;
  notifications: Array<Notification>;
  notificationsAggregate: NotificationAggregateSelection;
  notificationsConnection: NotificationsConnection;
  recurringEvents: Array<RecurringEvent>;
  recurringEventsAggregate: RecurringEventAggregateSelection;
  recurringEventsConnection: RecurringEventsConnection;
  repeatEnds: Array<RepeatEnds>;
  repeatEndsAggregate: RepeatEndsAggregateSelection;
  repeatEndsConnection: RepeatEndsConnection;
  repeatEveries: Array<RepeatEvery>;
  repeatEveriesAggregate: RepeatEveryAggregateSelection;
  repeatEveriesConnection: RepeatEveriesConnection;
  safetyCheck?: Maybe<SafetyCheckResponse>;
  safetyCheckResponses: Array<SafetyCheckResponse>;
  safetyCheckResponsesAggregate: SafetyCheckResponseAggregateSelection;
  safetyCheckResponsesConnection: SafetyCheckResponsesConnection;
  seedDataResponses: Array<SeedDataResponse>;
  seedDataResponsesAggregate: SeedDataResponseAggregateSelection;
  seedDataResponsesConnection: SeedDataResponsesConnection;
  serverConfigs: Array<ServerConfig>;
  serverConfigsAggregate: ServerConfigAggregateSelection;
  serverConfigsConnection: ServerConfigsConnection;
  serverRoles: Array<ServerRole>;
  serverRolesAggregate: ServerRoleAggregateSelection;
  serverRolesConnection: ServerRolesConnection;
  signedUrls: Array<SignedUrl>;
  signedUrlsAggregate: SignedUrlAggregateSelection;
  signedUrlsConnection: SignedUrlsConnection;
  siteWideDiscussionListFormats: Array<SiteWideDiscussionListFormat>;
  siteWideDiscussionListFormatsAggregate: SiteWideDiscussionListFormatAggregateSelection;
  siteWideDiscussionListFormatsConnection: SiteWideDiscussionListFormatsConnection;
  suspensions: Array<Suspension>;
  suspensionsAggregate: SuspensionAggregateSelection;
  suspensionsConnection: SuspensionsConnection;
  tags: Array<Tag>;
  tagsAggregate: TagAggregateSelection;
  tagsConnection: TagsConnection;
  textVersions: Array<TextVersion>;
  textVersionsAggregate: TextVersionAggregateSelection;
  textVersionsConnection: TextVersionsConnection;
  users: Array<User>;
  usersAggregate: UserAggregateSelection;
  usersConnection: UsersConnection;
  wikiPages: Array<WikiPage>;
  wikiPagesAggregate: WikiPageAggregateSelection;
  wikiPagesConnection: WikiPagesConnection;
};


export type QueryAlbumsArgs = {
  options?: InputMaybe<AlbumOptions>;
  where?: InputMaybe<AlbumWhere>;
};


export type QueryAlbumsAggregateArgs = {
  where?: InputMaybe<AlbumWhere>;
};


export type QueryAlbumsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<AlbumSort>>>;
  where?: InputMaybe<AlbumWhere>;
};


export type QueryChannelRolesArgs = {
  options?: InputMaybe<ChannelRoleOptions>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type QueryChannelRolesAggregateArgs = {
  where?: InputMaybe<ChannelRoleWhere>;
};


export type QueryChannelRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ChannelRoleSort>>>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type QueryChannelsArgs = {
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type QueryChannelsAggregateArgs = {
  where?: InputMaybe<ChannelWhere>;
};


export type QueryChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ChannelSort>>>;
  where?: InputMaybe<ChannelWhere>;
};


export type QueryCommentAuthorsArgs = {
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<CommentAuthorWhere>;
};


export type QueryCommentRepliesFormatsArgs = {
  options?: InputMaybe<CommentRepliesFormatOptions>;
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type QueryCommentRepliesFormatsAggregateArgs = {
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type QueryCommentRepliesFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<CommentRepliesFormatSort>>>;
  where?: InputMaybe<CommentRepliesFormatWhere>;
};


export type QueryCommentSectionFormatsArgs = {
  options?: InputMaybe<CommentSectionFormatOptions>;
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type QueryCommentSectionFormatsAggregateArgs = {
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type QueryCommentSectionFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CommentSectionFormatWhere>;
};


export type QueryCommentsArgs = {
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type QueryCommentsAggregateArgs = {
  where?: InputMaybe<CommentWhere>;
};


export type QueryCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<CommentSort>>>;
  where?: InputMaybe<CommentWhere>;
};


export type QueryContactsArgs = {
  options?: InputMaybe<ContactOptions>;
  where?: InputMaybe<ContactWhere>;
};


export type QueryContactsAggregateArgs = {
  where?: InputMaybe<ContactWhere>;
};


export type QueryContactsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ContactSort>>>;
  where?: InputMaybe<ContactWhere>;
};


export type QueryDiscussionChannelListFormatsArgs = {
  options?: InputMaybe<DiscussionChannelListFormatOptions>;
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type QueryDiscussionChannelListFormatsAggregateArgs = {
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type QueryDiscussionChannelListFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DiscussionChannelListFormatSort>>>;
  where?: InputMaybe<DiscussionChannelListFormatWhere>;
};


export type QueryDiscussionChannelsArgs = {
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type QueryDiscussionChannelsAggregateArgs = {
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type QueryDiscussionChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DiscussionChannelSort>>>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type QueryDiscussionsArgs = {
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type QueryDiscussionsAggregateArgs = {
  where?: InputMaybe<DiscussionWhere>;
};


export type QueryDiscussionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DiscussionSort>>>;
  where?: InputMaybe<DiscussionWhere>;
};


export type QueryDropDataResponsesArgs = {
  options?: InputMaybe<DropDataResponseOptions>;
  where?: InputMaybe<DropDataResponseWhere>;
};


export type QueryDropDataResponsesAggregateArgs = {
  where?: InputMaybe<DropDataResponseWhere>;
};


export type QueryDropDataResponsesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<DropDataResponseSort>>>;
  where?: InputMaybe<DropDataResponseWhere>;
};


export type QueryEmailsArgs = {
  options?: InputMaybe<EmailOptions>;
  where?: InputMaybe<EmailWhere>;
};


export type QueryEmailsAggregateArgs = {
  where?: InputMaybe<EmailWhere>;
};


export type QueryEmailsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EmailSort>>>;
  where?: InputMaybe<EmailWhere>;
};


export type QueryEmojisArgs = {
  options?: InputMaybe<EmojiOptions>;
  where?: InputMaybe<EmojiWhere>;
};


export type QueryEmojisAggregateArgs = {
  where?: InputMaybe<EmojiWhere>;
};


export type QueryEmojisConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EmojiSort>>>;
  where?: InputMaybe<EmojiWhere>;
};


export type QueryEnvironmentInfosArgs = {
  options?: InputMaybe<EnvironmentInfoOptions>;
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type QueryEnvironmentInfosAggregateArgs = {
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type QueryEnvironmentInfosConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EnvironmentInfoSort>>>;
  where?: InputMaybe<EnvironmentInfoWhere>;
};


export type QueryEventChannelsArgs = {
  options?: InputMaybe<EventChannelOptions>;
  where?: InputMaybe<EventChannelWhere>;
};


export type QueryEventChannelsAggregateArgs = {
  where?: InputMaybe<EventChannelWhere>;
};


export type QueryEventChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EventChannelSort>>>;
  where?: InputMaybe<EventChannelWhere>;
};


export type QueryEventCommentsFormatsArgs = {
  options?: InputMaybe<EventCommentsFormatOptions>;
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type QueryEventCommentsFormatsAggregateArgs = {
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type QueryEventCommentsFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<EventCommentsFormatWhere>;
};


export type QueryEventsArgs = {
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type QueryEventsAggregateArgs = {
  where?: InputMaybe<EventWhere>;
};


export type QueryEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<EventSort>>>;
  where?: InputMaybe<EventWhere>;
};


export type QueryFeedsArgs = {
  options?: InputMaybe<FeedOptions>;
  where?: InputMaybe<FeedWhere>;
};


export type QueryFeedsAggregateArgs = {
  where?: InputMaybe<FeedWhere>;
};


export type QueryFeedsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<FeedSort>>>;
  where?: InputMaybe<FeedWhere>;
};


export type QueryGetCommentRepliesArgs = {
  commentId: Scalars['ID']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  modName?: InputMaybe<Scalars['String']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<SortType>;
};


export type QueryGetCommentSectionArgs = {
  channelUniqueName: Scalars['String']['input'];
  discussionId: Scalars['ID']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  modName?: InputMaybe<Scalars['String']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetDiscussionsInChannelArgs = {
  channelUniqueName: Scalars['String']['input'];
  options?: InputMaybe<DiscussionListOptions>;
  searchInput?: InputMaybe<Scalars['String']['input']>;
  selectedTags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  showArchived?: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryGetEventCommentsArgs = {
  eventId: Scalars['ID']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<SortType>;
};


export type QueryGetSiteWideDiscussionListArgs = {
  options?: InputMaybe<DiscussionListOptions>;
  searchInput?: InputMaybe<Scalars['String']['input']>;
  selectedChannels?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  selectedTags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  showArchived?: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryGetSortedChannelsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  searchInput?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryGetSortedChannelsResponsesArgs = {
  options?: InputMaybe<GetSortedChannelsResponseOptions>;
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type QueryGetSortedChannelsResponsesAggregateArgs = {
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type QueryGetSortedChannelsResponsesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<GetSortedChannelsResponseSort>>>;
  where?: InputMaybe<GetSortedChannelsResponseWhere>;
};


export type QueryImagesArgs = {
  options?: InputMaybe<ImageOptions>;
  where?: InputMaybe<ImageWhere>;
};


export type QueryImagesAggregateArgs = {
  where?: InputMaybe<ImageWhere>;
};


export type QueryImagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ImageSort>>>;
  where?: InputMaybe<ImageWhere>;
};


export type QueryIsOriginalPosterSuspendedArgs = {
  issueId: Scalars['String']['input'];
};


export type QueryIssueAuthorsArgs = {
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<IssueAuthorWhere>;
};


export type QueryIssueCommentAuthorsArgs = {
  options?: InputMaybe<QueryOptions>;
  where?: InputMaybe<IssueCommentAuthorWhere>;
};


export type QueryIssuesArgs = {
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type QueryIssuesAggregateArgs = {
  where?: InputMaybe<IssueWhere>;
};


export type QueryIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<IssueSort>>>;
  where?: InputMaybe<IssueWhere>;
};


export type QueryLinkFlairsArgs = {
  options?: InputMaybe<LinkFlairOptions>;
  where?: InputMaybe<LinkFlairWhere>;
};


export type QueryLinkFlairsAggregateArgs = {
  where?: InputMaybe<LinkFlairWhere>;
};


export type QueryLinkFlairsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<LinkFlairSort>>>;
  where?: InputMaybe<LinkFlairWhere>;
};


export type QueryMessagesArgs = {
  options?: InputMaybe<MessageOptions>;
  where?: InputMaybe<MessageWhere>;
};


export type QueryMessagesAggregateArgs = {
  where?: InputMaybe<MessageWhere>;
};


export type QueryMessagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<MessageSort>>>;
  where?: InputMaybe<MessageWhere>;
};


export type QueryModChannelRolesArgs = {
  options?: InputMaybe<ModChannelRoleOptions>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type QueryModChannelRolesAggregateArgs = {
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type QueryModChannelRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ModChannelRoleSort>>>;
  where?: InputMaybe<ModChannelRoleWhere>;
};


export type QueryModServerRolesArgs = {
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type QueryModServerRolesAggregateArgs = {
  where?: InputMaybe<ModServerRoleWhere>;
};


export type QueryModServerRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ModServerRoleSort>>>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type QueryModerationActionsArgs = {
  options?: InputMaybe<ModerationActionOptions>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type QueryModerationActionsAggregateArgs = {
  where?: InputMaybe<ModerationActionWhere>;
};


export type QueryModerationActionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ModerationActionSort>>>;
  where?: InputMaybe<ModerationActionWhere>;
};


export type QueryModerationProfilesArgs = {
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type QueryModerationProfilesAggregateArgs = {
  where?: InputMaybe<ModerationProfileWhere>;
};


export type QueryModerationProfilesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ModerationProfileSort>>>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type QueryNotificationsArgs = {
  options?: InputMaybe<NotificationOptions>;
  where?: InputMaybe<NotificationWhere>;
};


export type QueryNotificationsAggregateArgs = {
  where?: InputMaybe<NotificationWhere>;
};


export type QueryNotificationsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<NotificationSort>>>;
  where?: InputMaybe<NotificationWhere>;
};


export type QueryRecurringEventsArgs = {
  options?: InputMaybe<RecurringEventOptions>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type QueryRecurringEventsAggregateArgs = {
  where?: InputMaybe<RecurringEventWhere>;
};


export type QueryRecurringEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<RecurringEventSort>>>;
  where?: InputMaybe<RecurringEventWhere>;
};


export type QueryRepeatEndsArgs = {
  options?: InputMaybe<RepeatEndsOptions>;
  where?: InputMaybe<RepeatEndsWhere>;
};


export type QueryRepeatEndsAggregateArgs = {
  where?: InputMaybe<RepeatEndsWhere>;
};


export type QueryRepeatEndsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<RepeatEndsSort>>>;
  where?: InputMaybe<RepeatEndsWhere>;
};


export type QueryRepeatEveriesArgs = {
  options?: InputMaybe<RepeatEveryOptions>;
  where?: InputMaybe<RepeatEveryWhere>;
};


export type QueryRepeatEveriesAggregateArgs = {
  where?: InputMaybe<RepeatEveryWhere>;
};


export type QueryRepeatEveriesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<RepeatEverySort>>>;
  where?: InputMaybe<RepeatEveryWhere>;
};


export type QuerySafetyCheckResponsesArgs = {
  options?: InputMaybe<SafetyCheckResponseOptions>;
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type QuerySafetyCheckResponsesAggregateArgs = {
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type QuerySafetyCheckResponsesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SafetyCheckResponseWhere>;
};


export type QuerySeedDataResponsesArgs = {
  options?: InputMaybe<SeedDataResponseOptions>;
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type QuerySeedDataResponsesAggregateArgs = {
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type QuerySeedDataResponsesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<SeedDataResponseSort>>>;
  where?: InputMaybe<SeedDataResponseWhere>;
};


export type QueryServerConfigsArgs = {
  options?: InputMaybe<ServerConfigOptions>;
  where?: InputMaybe<ServerConfigWhere>;
};


export type QueryServerConfigsAggregateArgs = {
  where?: InputMaybe<ServerConfigWhere>;
};


export type QueryServerConfigsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ServerConfigSort>>>;
  where?: InputMaybe<ServerConfigWhere>;
};


export type QueryServerRolesArgs = {
  options?: InputMaybe<ServerRoleOptions>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type QueryServerRolesAggregateArgs = {
  where?: InputMaybe<ServerRoleWhere>;
};


export type QueryServerRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<ServerRoleSort>>>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type QuerySignedUrlsArgs = {
  options?: InputMaybe<SignedUrlOptions>;
  where?: InputMaybe<SignedUrlWhere>;
};


export type QuerySignedUrlsAggregateArgs = {
  where?: InputMaybe<SignedUrlWhere>;
};


export type QuerySignedUrlsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<SignedUrlSort>>>;
  where?: InputMaybe<SignedUrlWhere>;
};


export type QuerySiteWideDiscussionListFormatsArgs = {
  options?: InputMaybe<SiteWideDiscussionListFormatOptions>;
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type QuerySiteWideDiscussionListFormatsAggregateArgs = {
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type QuerySiteWideDiscussionListFormatsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<SiteWideDiscussionListFormatSort>>>;
  where?: InputMaybe<SiteWideDiscussionListFormatWhere>;
};


export type QuerySuspensionsArgs = {
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type QuerySuspensionsAggregateArgs = {
  where?: InputMaybe<SuspensionWhere>;
};


export type QuerySuspensionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<SuspensionSort>>>;
  where?: InputMaybe<SuspensionWhere>;
};


export type QueryTagsArgs = {
  options?: InputMaybe<TagOptions>;
  where?: InputMaybe<TagWhere>;
};


export type QueryTagsAggregateArgs = {
  where?: InputMaybe<TagWhere>;
};


export type QueryTagsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<TagSort>>>;
  where?: InputMaybe<TagWhere>;
};


export type QueryTextVersionsArgs = {
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type QueryTextVersionsAggregateArgs = {
  where?: InputMaybe<TextVersionWhere>;
};


export type QueryTextVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<TextVersionSort>>>;
  where?: InputMaybe<TextVersionWhere>;
};


export type QueryUsersArgs = {
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type QueryUsersAggregateArgs = {
  where?: InputMaybe<UserWhere>;
};


export type QueryUsersConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<UserSort>>>;
  where?: InputMaybe<UserWhere>;
};


export type QueryWikiPagesArgs = {
  options?: InputMaybe<WikiPageOptions>;
  where?: InputMaybe<WikiPageWhere>;
};


export type QueryWikiPagesAggregateArgs = {
  where?: InputMaybe<WikiPageWhere>;
};


export type QueryWikiPagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<InputMaybe<WikiPageSort>>>;
  where?: InputMaybe<WikiPageWhere>;
};

/** Input type for options that can be specified on a query operation. */
export type QueryOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type RecurringEvent = {
  __typename?: 'RecurringEvent';
  Events: Array<Event>;
  EventsAggregate?: Maybe<RecurringEventEventEventsAggregationSelection>;
  EventsConnection: RecurringEventEventsConnection;
  id: Scalars['ID']['output'];
  repeatEnds?: Maybe<RepeatEnds>;
  repeatEvery?: Maybe<RepeatEvery>;
};


export type RecurringEventEventsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type RecurringEventEventsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type RecurringEventEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<RecurringEventEventsConnectionSort>>;
  where?: InputMaybe<RecurringEventEventsConnectionWhere>;
};

export type RecurringEventAggregateSelection = {
  __typename?: 'RecurringEventAggregateSelection';
  count: Scalars['Int']['output'];
  id: IdAggregateSelection;
};

export type RecurringEventConnectInput = {
  Events?: InputMaybe<Array<RecurringEventEventsConnectFieldInput>>;
};

export type RecurringEventConnectWhere = {
  node: RecurringEventWhere;
};

export type RecurringEventCreateInput = {
  Events?: InputMaybe<RecurringEventEventsFieldInput>;
};

export type RecurringEventDeleteInput = {
  Events?: InputMaybe<Array<RecurringEventEventsDeleteFieldInput>>;
};

export type RecurringEventDisconnectInput = {
  Events?: InputMaybe<Array<RecurringEventEventsDisconnectFieldInput>>;
};

export type RecurringEventEdge = {
  __typename?: 'RecurringEventEdge';
  cursor: Scalars['String']['output'];
  node: RecurringEvent;
};

export type RecurringEventEventEventsAggregationSelection = {
  __typename?: 'RecurringEventEventEventsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<RecurringEventEventEventsNodeAggregateSelection>;
};

export type RecurringEventEventEventsNodeAggregateSelection = {
  __typename?: 'RecurringEventEventEventsNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type RecurringEventEventsAggregateInput = {
  AND?: InputMaybe<Array<RecurringEventEventsAggregateInput>>;
  NOT?: InputMaybe<RecurringEventEventsAggregateInput>;
  OR?: InputMaybe<Array<RecurringEventEventsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<RecurringEventEventsNodeAggregationWhereInput>;
};

export type RecurringEventEventsConnectFieldInput = {
  connect?: InputMaybe<Array<EventConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type RecurringEventEventsConnection = {
  __typename?: 'RecurringEventEventsConnection';
  edges: Array<RecurringEventEventsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type RecurringEventEventsConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type RecurringEventEventsConnectionWhere = {
  AND?: InputMaybe<Array<RecurringEventEventsConnectionWhere>>;
  NOT?: InputMaybe<RecurringEventEventsConnectionWhere>;
  OR?: InputMaybe<Array<RecurringEventEventsConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type RecurringEventEventsCreateFieldInput = {
  node: EventCreateInput;
};

export type RecurringEventEventsDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<RecurringEventEventsConnectionWhere>;
};

export type RecurringEventEventsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<RecurringEventEventsConnectionWhere>;
};

export type RecurringEventEventsFieldInput = {
  connect?: InputMaybe<Array<RecurringEventEventsConnectFieldInput>>;
  create?: InputMaybe<Array<RecurringEventEventsCreateFieldInput>>;
};

export type RecurringEventEventsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<RecurringEventEventsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<RecurringEventEventsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<RecurringEventEventsNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type RecurringEventEventsRelationship = {
  __typename?: 'RecurringEventEventsRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type RecurringEventEventsUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type RecurringEventEventsUpdateFieldInput = {
  connect?: InputMaybe<Array<RecurringEventEventsConnectFieldInput>>;
  create?: InputMaybe<Array<RecurringEventEventsCreateFieldInput>>;
  delete?: InputMaybe<Array<RecurringEventEventsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<RecurringEventEventsDisconnectFieldInput>>;
  update?: InputMaybe<RecurringEventEventsUpdateConnectionInput>;
  where?: InputMaybe<RecurringEventEventsConnectionWhere>;
};

export type RecurringEventOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more RecurringEventSort objects to sort RecurringEvents by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<RecurringEventSort>>;
};

export type RecurringEventRelationInput = {
  Events?: InputMaybe<Array<RecurringEventEventsCreateFieldInput>>;
};

/** Fields to sort RecurringEvents by. The order in which sorts are applied is not guaranteed when specifying many fields in one RecurringEventSort object. */
export type RecurringEventSort = {
  id?: InputMaybe<SortDirection>;
};

export type RecurringEventUpdateInput = {
  Events?: InputMaybe<Array<RecurringEventEventsUpdateFieldInput>>;
};

export type RecurringEventWhere = {
  AND?: InputMaybe<Array<RecurringEventWhere>>;
  EventsAggregate?: InputMaybe<RecurringEventEventsAggregateInput>;
  /** Return RecurringEvents where all of the related RecurringEventEventsConnections match this filter */
  EventsConnection_ALL?: InputMaybe<RecurringEventEventsConnectionWhere>;
  /** Return RecurringEvents where none of the related RecurringEventEventsConnections match this filter */
  EventsConnection_NONE?: InputMaybe<RecurringEventEventsConnectionWhere>;
  /** Return RecurringEvents where one of the related RecurringEventEventsConnections match this filter */
  EventsConnection_SINGLE?: InputMaybe<RecurringEventEventsConnectionWhere>;
  /** Return RecurringEvents where some of the related RecurringEventEventsConnections match this filter */
  EventsConnection_SOME?: InputMaybe<RecurringEventEventsConnectionWhere>;
  /** Return RecurringEvents where all of the related Events match this filter */
  Events_ALL?: InputMaybe<EventWhere>;
  /** Return RecurringEvents where none of the related Events match this filter */
  Events_NONE?: InputMaybe<EventWhere>;
  /** Return RecurringEvents where one of the related Events match this filter */
  Events_SINGLE?: InputMaybe<EventWhere>;
  /** Return RecurringEvents where some of the related Events match this filter */
  Events_SOME?: InputMaybe<EventWhere>;
  NOT?: InputMaybe<RecurringEventWhere>;
  OR?: InputMaybe<Array<RecurringEventWhere>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
};

export type RecurringEventsConnection = {
  __typename?: 'RecurringEventsConnection';
  edges: Array<RecurringEventEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type RepeatEnds = {
  __typename?: 'RepeatEnds';
  count?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  unit?: Maybe<RepeatUnit>;
  until?: Maybe<Scalars['DateTime']['output']>;
};

export type RepeatEndsAggregateSelection = {
  __typename?: 'RepeatEndsAggregateSelection';
  count: IntAggregateSelection;
  type: StringAggregateSelection;
  until: DateTimeAggregateSelection;
};

export type RepeatEndsConnection = {
  __typename?: 'RepeatEndsConnection';
  edges: Array<RepeatEndsEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type RepeatEndsCreateInput = {
  count?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  until?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RepeatEndsEdge = {
  __typename?: 'RepeatEndsEdge';
  cursor: Scalars['String']['output'];
  node: RepeatEnds;
};

export type RepeatEndsOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more RepeatEndsSort objects to sort RepeatEnds by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<RepeatEndsSort>>;
};

/** Fields to sort RepeatEnds by. The order in which sorts are applied is not guaranteed when specifying many fields in one RepeatEndsSort object. */
export type RepeatEndsSort = {
  count?: InputMaybe<SortDirection>;
  type?: InputMaybe<SortDirection>;
  unit?: InputMaybe<SortDirection>;
  until?: InputMaybe<SortDirection>;
};

export type RepeatEndsUpdateInput = {
  count?: InputMaybe<Scalars['Int']['input']>;
  count_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  count_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  until?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RepeatEndsWhere = {
  AND?: InputMaybe<Array<RepeatEndsWhere>>;
  NOT?: InputMaybe<RepeatEndsWhere>;
  OR?: InputMaybe<Array<RepeatEndsWhere>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  type_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  type_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  type_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type_MATCHES?: InputMaybe<Scalars['String']['input']>;
  type_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  unit_IN?: InputMaybe<Array<InputMaybe<RepeatUnit>>>;
  until?: InputMaybe<Scalars['DateTime']['input']>;
  until_GT?: InputMaybe<Scalars['DateTime']['input']>;
  until_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  until_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  until_LT?: InputMaybe<Scalars['DateTime']['input']>;
  until_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RepeatEveriesConnection = {
  __typename?: 'RepeatEveriesConnection';
  edges: Array<RepeatEveryEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type RepeatEvery = {
  __typename?: 'RepeatEvery';
  count?: Maybe<Scalars['Int']['output']>;
  unit?: Maybe<RepeatUnit>;
};

export type RepeatEveryAggregateSelection = {
  __typename?: 'RepeatEveryAggregateSelection';
  count: IntAggregateSelection;
};

export type RepeatEveryCreateInput = {
  count?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<RepeatUnit>;
};

export type RepeatEveryEdge = {
  __typename?: 'RepeatEveryEdge';
  cursor: Scalars['String']['output'];
  node: RepeatEvery;
};

export type RepeatEveryOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more RepeatEverySort objects to sort RepeatEveries by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<RepeatEverySort>>;
};

/** Fields to sort RepeatEveries by. The order in which sorts are applied is not guaranteed when specifying many fields in one RepeatEverySort object. */
export type RepeatEverySort = {
  count?: InputMaybe<SortDirection>;
  unit?: InputMaybe<SortDirection>;
};

export type RepeatEveryUpdateInput = {
  count?: InputMaybe<Scalars['Int']['input']>;
  count_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  count_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<RepeatUnit>;
};

export type RepeatEveryWhere = {
  AND?: InputMaybe<Array<RepeatEveryWhere>>;
  NOT?: InputMaybe<RepeatEveryWhere>;
  OR?: InputMaybe<Array<RepeatEveryWhere>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<RepeatUnit>;
  unit_IN?: InputMaybe<Array<InputMaybe<RepeatUnit>>>;
};

export enum RepeatUnit {
  Day = 'DAY',
  Month = 'MONTH',
  Week = 'WEEK',
  Year = 'YEAR'
}

export type SafetyCheckResponse = {
  __typename?: 'SafetyCheckResponse';
  environment?: Maybe<EnvironmentInfo>;
};

export type SafetyCheckResponseAggregateSelection = {
  __typename?: 'SafetyCheckResponseAggregateSelection';
  count: Scalars['Int']['output'];
};

export type SafetyCheckResponseCreateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SafetyCheckResponseEdge = {
  __typename?: 'SafetyCheckResponseEdge';
  cursor: Scalars['String']['output'];
  node: SafetyCheckResponse;
};

export type SafetyCheckResponseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type SafetyCheckResponseUpdateInput = {
  /** Appears because this input type would be empty otherwise because this type is composed of just generated and/or relationship properties. See https://neo4j.com/docs/graphql-manual/current/troubleshooting/faqs/ */
  _emptyInput?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SafetyCheckResponseWhere = {
  AND?: InputMaybe<Array<SafetyCheckResponseWhere>>;
  NOT?: InputMaybe<SafetyCheckResponseWhere>;
  OR?: InputMaybe<Array<SafetyCheckResponseWhere>>;
};

export type SafetyCheckResponsesConnection = {
  __typename?: 'SafetyCheckResponsesConnection';
  edges: Array<SafetyCheckResponseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SeedDataResponse = {
  __typename?: 'SeedDataResponse';
  message?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type SeedDataResponseAggregateSelection = {
  __typename?: 'SeedDataResponseAggregateSelection';
  count: Scalars['Int']['output'];
  message: StringAggregateSelection;
};

export type SeedDataResponseCreateInput = {
  message?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SeedDataResponseEdge = {
  __typename?: 'SeedDataResponseEdge';
  cursor: Scalars['String']['output'];
  node: SeedDataResponse;
};

export type SeedDataResponseOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more SeedDataResponseSort objects to sort SeedDataResponses by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SeedDataResponseSort>>;
};

/** Fields to sort SeedDataResponses by. The order in which sorts are applied is not guaranteed when specifying many fields in one SeedDataResponseSort object. */
export type SeedDataResponseSort = {
  message?: InputMaybe<SortDirection>;
  success?: InputMaybe<SortDirection>;
};

export type SeedDataResponseUpdateInput = {
  message?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SeedDataResponseWhere = {
  AND?: InputMaybe<Array<SeedDataResponseWhere>>;
  NOT?: InputMaybe<SeedDataResponseWhere>;
  OR?: InputMaybe<Array<SeedDataResponseWhere>>;
  message?: InputMaybe<Scalars['String']['input']>;
  message_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  message_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  message_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  message_MATCHES?: InputMaybe<Scalars['String']['input']>;
  message_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SeedDataResponsesConnection = {
  __typename?: 'SeedDataResponsesConnection';
  edges: Array<SeedDataResponseEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfig = {
  __typename?: 'ServerConfig';
  DefaultElevatedModRole?: Maybe<ModServerRole>;
  DefaultElevatedModRoleAggregate?: Maybe<ServerConfigModServerRoleDefaultElevatedModRoleAggregationSelection>;
  DefaultElevatedModRoleConnection: ServerConfigDefaultElevatedModRoleConnection;
  DefaultModRole?: Maybe<ModServerRole>;
  DefaultModRoleAggregate?: Maybe<ServerConfigModServerRoleDefaultModRoleAggregationSelection>;
  DefaultModRoleConnection: ServerConfigDefaultModRoleConnection;
  DefaultServerRole?: Maybe<ServerRole>;
  DefaultServerRoleAggregate?: Maybe<ServerConfigServerRoleDefaultServerRoleAggregationSelection>;
  DefaultServerRoleConnection: ServerConfigDefaultServerRoleConnection;
  DefaultSuspendedModRole?: Maybe<ModServerRole>;
  DefaultSuspendedModRoleAggregate?: Maybe<ServerConfigModServerRoleDefaultSuspendedModRoleAggregationSelection>;
  DefaultSuspendedModRoleConnection: ServerConfigDefaultSuspendedModRoleConnection;
  DefaultSuspendedRole?: Maybe<ServerRole>;
  DefaultSuspendedRoleAggregate?: Maybe<ServerConfigServerRoleDefaultSuspendedRoleAggregationSelection>;
  DefaultSuspendedRoleConnection: ServerConfigDefaultSuspendedRoleConnection;
  rules?: Maybe<Scalars['JSON']['output']>;
  serverDescription?: Maybe<Scalars['String']['output']>;
  serverIconURL?: Maybe<Scalars['String']['output']>;
  serverName?: Maybe<Scalars['String']['output']>;
};


export type ServerConfigDefaultElevatedModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultElevatedModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultElevatedModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
};


export type ServerConfigDefaultModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultModRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
};


export type ServerConfigDefaultServerRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ServerRoleOptions>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type ServerConfigDefaultServerRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type ServerConfigDefaultServerRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultServerRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
};


export type ServerConfigDefaultSuspendedModRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModServerRoleOptions>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultSuspendedModRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModServerRoleWhere>;
};


export type ServerConfigDefaultSuspendedModRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
};


export type ServerConfigDefaultSuspendedRoleArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ServerRoleOptions>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type ServerConfigDefaultSuspendedRoleAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type ServerConfigDefaultSuspendedRoleConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleConnectionSort>>;
  where?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
};

export type ServerConfigAggregateSelection = {
  __typename?: 'ServerConfigAggregateSelection';
  count: Scalars['Int']['output'];
  serverDescription: StringAggregateSelection;
  serverIconURL: StringAggregateSelection;
  serverName: StringAggregateSelection;
};

export type ServerConfigConnectInput = {
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleConnectFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleConnectFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectFieldInput>;
};

export type ServerConfigConnectOrCreateInput = {
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleConnectOrCreateFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleConnectOrCreateFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInput>;
};

export type ServerConfigCreateInput = {
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleFieldInput>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  serverDescription?: InputMaybe<Scalars['String']['input']>;
  serverIconURL?: InputMaybe<Scalars['String']['input']>;
  serverName?: InputMaybe<Scalars['String']['input']>;
};

export type ServerConfigDefaultElevatedModRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultElevatedModRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultElevatedModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModServerRoleConnectWhere>;
};

export type ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInputOnCreate;
  where: ModServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModServerRoleOnCreateInput;
};

export type ServerConfigDefaultElevatedModRoleConnection = {
  __typename?: 'ServerConfigDefaultElevatedModRoleConnection';
  edges: Array<ServerConfigDefaultElevatedModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultElevatedModRoleConnectionSort = {
  node?: InputMaybe<ModServerRoleSort>;
};

export type ServerConfigDefaultElevatedModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleConnectionWhere>>;
  node?: InputMaybe<ModServerRoleWhere>;
};

export type ServerConfigDefaultElevatedModRoleCreateFieldInput = {
  node: ModServerRoleCreateInput;
};

export type ServerConfigDefaultElevatedModRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
};

export type ServerConfigDefaultElevatedModRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
};

export type ServerConfigDefaultElevatedModRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultElevatedModRoleCreateFieldInput>;
};

export type ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultElevatedModRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultElevatedModRoleRelationship = {
  __typename?: 'ServerConfigDefaultElevatedModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ServerConfigDefaultElevatedModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModServerRoleUpdateInput>;
};

export type ServerConfigDefaultElevatedModRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultElevatedModRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultElevatedModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultElevatedModRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultElevatedModRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
};

export type ServerConfigDefaultModRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultModRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultModRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultModRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModServerRoleConnectWhere>;
};

export type ServerConfigDefaultModRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultModRoleConnectOrCreateFieldInputOnCreate;
  where: ModServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModServerRoleOnCreateInput;
};

export type ServerConfigDefaultModRoleConnection = {
  __typename?: 'ServerConfigDefaultModRoleConnection';
  edges: Array<ServerConfigDefaultModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultModRoleConnectionSort = {
  node?: InputMaybe<ModServerRoleSort>;
};

export type ServerConfigDefaultModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultModRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultModRoleConnectionWhere>>;
  node?: InputMaybe<ModServerRoleWhere>;
};

export type ServerConfigDefaultModRoleCreateFieldInput = {
  node: ModServerRoleCreateInput;
};

export type ServerConfigDefaultModRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
};

export type ServerConfigDefaultModRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
};

export type ServerConfigDefaultModRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultModRoleCreateFieldInput>;
};

export type ServerConfigDefaultModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultModRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultModRoleRelationship = {
  __typename?: 'ServerConfigDefaultModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ServerConfigDefaultModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModServerRoleUpdateInput>;
};

export type ServerConfigDefaultModRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultModRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultModRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultModRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
};

export type ServerConfigDefaultServerRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultServerRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultServerRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultServerRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultServerRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultServerRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ServerRoleConnectWhere>;
};

export type ServerConfigDefaultServerRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultServerRoleConnectOrCreateFieldInputOnCreate;
  where: ServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultServerRoleConnectOrCreateFieldInputOnCreate = {
  node: ServerRoleOnCreateInput;
};

export type ServerConfigDefaultServerRoleConnection = {
  __typename?: 'ServerConfigDefaultServerRoleConnection';
  edges: Array<ServerConfigDefaultServerRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultServerRoleConnectionSort = {
  node?: InputMaybe<ServerRoleSort>;
};

export type ServerConfigDefaultServerRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultServerRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultServerRoleConnectionWhere>>;
  node?: InputMaybe<ServerRoleWhere>;
};

export type ServerConfigDefaultServerRoleCreateFieldInput = {
  node: ServerRoleCreateInput;
};

export type ServerConfigDefaultServerRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
};

export type ServerConfigDefaultServerRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
};

export type ServerConfigDefaultServerRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultServerRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultServerRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultServerRoleCreateFieldInput>;
};

export type ServerConfigDefaultServerRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultServerRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultServerRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultServerRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultServerRoleRelationship = {
  __typename?: 'ServerConfigDefaultServerRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ServerRole;
};

export type ServerConfigDefaultServerRoleUpdateConnectionInput = {
  node?: InputMaybe<ServerRoleUpdateInput>;
};

export type ServerConfigDefaultServerRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultServerRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultServerRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultServerRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultServerRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultServerRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultServerRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedModRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedModRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultSuspendedModRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModServerRoleConnectWhere>;
};

export type ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInputOnCreate;
  where: ModServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInputOnCreate = {
  node: ModServerRoleOnCreateInput;
};

export type ServerConfigDefaultSuspendedModRoleConnection = {
  __typename?: 'ServerConfigDefaultSuspendedModRoleConnection';
  edges: Array<ServerConfigDefaultSuspendedModRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultSuspendedModRoleConnectionSort = {
  node?: InputMaybe<ModServerRoleSort>;
};

export type ServerConfigDefaultSuspendedModRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleConnectionWhere>>;
  node?: InputMaybe<ModServerRoleWhere>;
};

export type ServerConfigDefaultSuspendedModRoleCreateFieldInput = {
  node: ModServerRoleCreateInput;
};

export type ServerConfigDefaultSuspendedModRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedModRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedModRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultSuspendedModRoleCreateFieldInput>;
};

export type ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedModRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultSuspendedModRoleRelationship = {
  __typename?: 'ServerConfigDefaultSuspendedModRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ModServerRole;
};

export type ServerConfigDefaultSuspendedModRoleUpdateConnectionInput = {
  node?: InputMaybe<ModServerRoleUpdateInput>;
};

export type ServerConfigDefaultSuspendedModRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultSuspendedModRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultSuspendedModRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultSuspendedModRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultSuspendedModRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedRoleAggregateInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleAggregateInput>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedRoleAggregateInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput>;
};

export type ServerConfigDefaultSuspendedRoleConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ServerRoleConnectWhere>;
};

export type ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInput = {
  onCreate: ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInputOnCreate;
  where: ServerRoleConnectOrCreateWhere;
};

export type ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInputOnCreate = {
  node: ServerRoleOnCreateInput;
};

export type ServerConfigDefaultSuspendedRoleConnection = {
  __typename?: 'ServerConfigDefaultSuspendedRoleConnection';
  edges: Array<ServerConfigDefaultSuspendedRoleRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerConfigDefaultSuspendedRoleConnectionSort = {
  node?: InputMaybe<ServerRoleSort>;
};

export type ServerConfigDefaultSuspendedRoleConnectionWhere = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleConnectionWhere>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleConnectionWhere>>;
  node?: InputMaybe<ServerRoleWhere>;
};

export type ServerConfigDefaultSuspendedRoleCreateFieldInput = {
  node: ServerRoleCreateInput;
};

export type ServerConfigDefaultSuspendedRoleDeleteFieldInput = {
  where?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedRoleDisconnectFieldInput = {
  where?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
};

export type ServerConfigDefaultSuspendedRoleFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultSuspendedRoleCreateFieldInput>;
};

export type ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput>>;
  NOT?: InputMaybe<ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<ServerConfigDefaultSuspendedRoleNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type ServerConfigDefaultSuspendedRoleRelationship = {
  __typename?: 'ServerConfigDefaultSuspendedRoleRelationship';
  cursor: Scalars['String']['output'];
  node: ServerRole;
};

export type ServerConfigDefaultSuspendedRoleUpdateConnectionInput = {
  node?: InputMaybe<ServerRoleUpdateInput>;
};

export type ServerConfigDefaultSuspendedRoleUpdateFieldInput = {
  connect?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectFieldInput>;
  connectOrCreate?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectOrCreateFieldInput>;
  create?: InputMaybe<ServerConfigDefaultSuspendedRoleCreateFieldInput>;
  delete?: InputMaybe<ServerConfigDefaultSuspendedRoleDeleteFieldInput>;
  disconnect?: InputMaybe<ServerConfigDefaultSuspendedRoleDisconnectFieldInput>;
  update?: InputMaybe<ServerConfigDefaultSuspendedRoleUpdateConnectionInput>;
  where?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
};

export type ServerConfigDeleteInput = {
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleDeleteFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleDeleteFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleDeleteFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleDeleteFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleDeleteFieldInput>;
};

export type ServerConfigDisconnectInput = {
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleDisconnectFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleDisconnectFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleDisconnectFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleDisconnectFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleDisconnectFieldInput>;
};

export type ServerConfigEdge = {
  __typename?: 'ServerConfigEdge';
  cursor: Scalars['String']['output'];
  node: ServerConfig;
};

export type ServerConfigModServerRoleDefaultElevatedModRoleAggregationSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultElevatedModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigModServerRoleDefaultElevatedModRoleNodeAggregateSelection>;
};

export type ServerConfigModServerRoleDefaultElevatedModRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultElevatedModRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerConfigModServerRoleDefaultModRoleAggregationSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigModServerRoleDefaultModRoleNodeAggregateSelection>;
};

export type ServerConfigModServerRoleDefaultModRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultModRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerConfigModServerRoleDefaultSuspendedModRoleAggregationSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultSuspendedModRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigModServerRoleDefaultSuspendedModRoleNodeAggregateSelection>;
};

export type ServerConfigModServerRoleDefaultSuspendedModRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigModServerRoleDefaultSuspendedModRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerConfigOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ServerConfigSort objects to sort ServerConfigs by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ServerConfigSort>>;
};

export type ServerConfigRelationInput = {
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleCreateFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleCreateFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleCreateFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleCreateFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleCreateFieldInput>;
};

export type ServerConfigServerRoleDefaultServerRoleAggregationSelection = {
  __typename?: 'ServerConfigServerRoleDefaultServerRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigServerRoleDefaultServerRoleNodeAggregateSelection>;
};

export type ServerConfigServerRoleDefaultServerRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigServerRoleDefaultServerRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerConfigServerRoleDefaultSuspendedRoleAggregationSelection = {
  __typename?: 'ServerConfigServerRoleDefaultSuspendedRoleAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<ServerConfigServerRoleDefaultSuspendedRoleNodeAggregateSelection>;
};

export type ServerConfigServerRoleDefaultSuspendedRoleNodeAggregateSelection = {
  __typename?: 'ServerConfigServerRoleDefaultSuspendedRoleNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

/** Fields to sort ServerConfigs by. The order in which sorts are applied is not guaranteed when specifying many fields in one ServerConfigSort object. */
export type ServerConfigSort = {
  rules?: InputMaybe<SortDirection>;
  serverDescription?: InputMaybe<SortDirection>;
  serverIconURL?: InputMaybe<SortDirection>;
  serverName?: InputMaybe<SortDirection>;
};

export type ServerConfigUpdateInput = {
  DefaultElevatedModRole?: InputMaybe<ServerConfigDefaultElevatedModRoleUpdateFieldInput>;
  DefaultModRole?: InputMaybe<ServerConfigDefaultModRoleUpdateFieldInput>;
  DefaultServerRole?: InputMaybe<ServerConfigDefaultServerRoleUpdateFieldInput>;
  DefaultSuspendedModRole?: InputMaybe<ServerConfigDefaultSuspendedModRoleUpdateFieldInput>;
  DefaultSuspendedRole?: InputMaybe<ServerConfigDefaultSuspendedRoleUpdateFieldInput>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  serverDescription?: InputMaybe<Scalars['String']['input']>;
  serverIconURL?: InputMaybe<Scalars['String']['input']>;
  serverName?: InputMaybe<Scalars['String']['input']>;
};

export type ServerConfigWhere = {
  AND?: InputMaybe<Array<ServerConfigWhere>>;
  DefaultElevatedModRole?: InputMaybe<ModServerRoleWhere>;
  DefaultElevatedModRoleAggregate?: InputMaybe<ServerConfigDefaultElevatedModRoleAggregateInput>;
  DefaultElevatedModRoleConnection?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
  DefaultElevatedModRoleConnection_NOT?: InputMaybe<ServerConfigDefaultElevatedModRoleConnectionWhere>;
  DefaultElevatedModRole_NOT?: InputMaybe<ModServerRoleWhere>;
  DefaultModRole?: InputMaybe<ModServerRoleWhere>;
  DefaultModRoleAggregate?: InputMaybe<ServerConfigDefaultModRoleAggregateInput>;
  DefaultModRoleConnection?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
  DefaultModRoleConnection_NOT?: InputMaybe<ServerConfigDefaultModRoleConnectionWhere>;
  DefaultModRole_NOT?: InputMaybe<ModServerRoleWhere>;
  DefaultServerRole?: InputMaybe<ServerRoleWhere>;
  DefaultServerRoleAggregate?: InputMaybe<ServerConfigDefaultServerRoleAggregateInput>;
  DefaultServerRoleConnection?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
  DefaultServerRoleConnection_NOT?: InputMaybe<ServerConfigDefaultServerRoleConnectionWhere>;
  DefaultServerRole_NOT?: InputMaybe<ServerRoleWhere>;
  DefaultSuspendedModRole?: InputMaybe<ModServerRoleWhere>;
  DefaultSuspendedModRoleAggregate?: InputMaybe<ServerConfigDefaultSuspendedModRoleAggregateInput>;
  DefaultSuspendedModRoleConnection?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
  DefaultSuspendedModRoleConnection_NOT?: InputMaybe<ServerConfigDefaultSuspendedModRoleConnectionWhere>;
  DefaultSuspendedModRole_NOT?: InputMaybe<ModServerRoleWhere>;
  DefaultSuspendedRole?: InputMaybe<ServerRoleWhere>;
  DefaultSuspendedRoleAggregate?: InputMaybe<ServerConfigDefaultSuspendedRoleAggregateInput>;
  DefaultSuspendedRoleConnection?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
  DefaultSuspendedRoleConnection_NOT?: InputMaybe<ServerConfigDefaultSuspendedRoleConnectionWhere>;
  DefaultSuspendedRole_NOT?: InputMaybe<ServerRoleWhere>;
  NOT?: InputMaybe<ServerConfigWhere>;
  OR?: InputMaybe<Array<ServerConfigWhere>>;
  rules?: InputMaybe<Scalars['JSON']['input']>;
  rules_IN?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  serverDescription?: InputMaybe<Scalars['String']['input']>;
  serverDescription_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  serverDescription_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverDescription_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  serverDescription_MATCHES?: InputMaybe<Scalars['String']['input']>;
  serverDescription_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverIconURL?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  serverIconURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  serverIconURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverName?: InputMaybe<Scalars['String']['input']>;
  serverName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  serverName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  serverName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  serverName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  serverName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type ServerConfigsConnection = {
  __typename?: 'ServerConfigsConnection';
  edges: Array<ServerConfigEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ServerRole = {
  __typename?: 'ServerRole';
  canCreateChannel?: Maybe<Scalars['Boolean']['output']>;
  canCreateComment?: Maybe<Scalars['Boolean']['output']>;
  canCreateDiscussion?: Maybe<Scalars['Boolean']['output']>;
  canCreateEvent?: Maybe<Scalars['Boolean']['output']>;
  canGiveFeedback?: Maybe<Scalars['Boolean']['output']>;
  canUploadFile?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteComment?: Maybe<Scalars['Boolean']['output']>;
  canUpvoteDiscussion?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  showAdminTag?: Maybe<Scalars['Boolean']['output']>;
};

export type ServerRoleAggregateSelection = {
  __typename?: 'ServerRoleAggregateSelection';
  count: Scalars['Int']['output'];
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type ServerRoleConnectOrCreateWhere = {
  node: ServerRoleUniqueWhere;
};

export type ServerRoleConnectWhere = {
  node: ServerRoleWhere;
};

export type ServerRoleCreateInput = {
  canCreateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showAdminTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServerRoleEdge = {
  __typename?: 'ServerRoleEdge';
  cursor: Scalars['String']['output'];
  node: ServerRole;
};

export type ServerRoleOnCreateInput = {
  canCreateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showAdminTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServerRoleOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more ServerRoleSort objects to sort ServerRoles by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<ServerRoleSort>>;
};

/** Fields to sort ServerRoles by. The order in which sorts are applied is not guaranteed when specifying many fields in one ServerRoleSort object. */
export type ServerRoleSort = {
  canCreateChannel?: InputMaybe<SortDirection>;
  canCreateComment?: InputMaybe<SortDirection>;
  canCreateDiscussion?: InputMaybe<SortDirection>;
  canCreateEvent?: InputMaybe<SortDirection>;
  canGiveFeedback?: InputMaybe<SortDirection>;
  canUploadFile?: InputMaybe<SortDirection>;
  canUpvoteComment?: InputMaybe<SortDirection>;
  canUpvoteDiscussion?: InputMaybe<SortDirection>;
  description?: InputMaybe<SortDirection>;
  name?: InputMaybe<SortDirection>;
  showAdminTag?: InputMaybe<SortDirection>;
};

export type ServerRoleUniqueWhere = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ServerRoleUpdateInput = {
  canCreateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  showAdminTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServerRoleWhere = {
  AND?: InputMaybe<Array<ServerRoleWhere>>;
  NOT?: InputMaybe<ServerRoleWhere>;
  OR?: InputMaybe<Array<ServerRoleWhere>>;
  canCreateChannel?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateComment?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  canCreateEvent?: InputMaybe<Scalars['Boolean']['input']>;
  canGiveFeedback?: InputMaybe<Scalars['Boolean']['input']>;
  canUploadFile?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteComment?: InputMaybe<Scalars['Boolean']['input']>;
  canUpvoteDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_MATCHES?: InputMaybe<Scalars['String']['input']>;
  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_MATCHES?: InputMaybe<Scalars['String']['input']>;
  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  showAdminTag?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServerRolesConnection = {
  __typename?: 'ServerRolesConnection';
  edges: Array<ServerRoleEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SignedUrl = {
  __typename?: 'SignedURL';
  url?: Maybe<Scalars['String']['output']>;
};

export type SignedUrlAggregateSelection = {
  __typename?: 'SignedURLAggregateSelection';
  count: Scalars['Int']['output'];
  url: StringAggregateSelection;
};

export type SignedUrlCreateInput = {
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SignedUrlEdge = {
  __typename?: 'SignedURLEdge';
  cursor: Scalars['String']['output'];
  node: SignedUrl;
};

export type SignedUrlOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more SignedURLSort objects to sort SignedUrls by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SignedUrlSort>>;
};

/** Fields to sort SignedUrls by. The order in which sorts are applied is not guaranteed when specifying many fields in one SignedURLSort object. */
export type SignedUrlSort = {
  url?: InputMaybe<SortDirection>;
};

export type SignedUrlUpdateInput = {
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SignedUrlWhere = {
  AND?: InputMaybe<Array<SignedUrlWhere>>;
  NOT?: InputMaybe<SignedUrlWhere>;
  OR?: InputMaybe<Array<SignedUrlWhere>>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  url_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_MATCHES?: InputMaybe<Scalars['String']['input']>;
  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type SignedUrlsConnection = {
  __typename?: 'SignedUrlsConnection';
  edges: Array<SignedUrlEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SiteWideDiscussionListFormat = {
  __typename?: 'SiteWideDiscussionListFormat';
  aggregateDiscussionCount: Scalars['Int']['output'];
  discussions: Array<Discussion>;
};

export type SiteWideDiscussionListFormatAggregateSelection = {
  __typename?: 'SiteWideDiscussionListFormatAggregateSelection';
  aggregateDiscussionCount: IntAggregateSelection;
  count: Scalars['Int']['output'];
};

export type SiteWideDiscussionListFormatCreateInput = {
  aggregateDiscussionCount: Scalars['Int']['input'];
};

export type SiteWideDiscussionListFormatEdge = {
  __typename?: 'SiteWideDiscussionListFormatEdge';
  cursor: Scalars['String']['output'];
  node: SiteWideDiscussionListFormat;
};

export type SiteWideDiscussionListFormatOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more SiteWideDiscussionListFormatSort objects to sort SiteWideDiscussionListFormats by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SiteWideDiscussionListFormatSort>>;
};

/** Fields to sort SiteWideDiscussionListFormats by. The order in which sorts are applied is not guaranteed when specifying many fields in one SiteWideDiscussionListFormatSort object. */
export type SiteWideDiscussionListFormatSort = {
  aggregateDiscussionCount?: InputMaybe<SortDirection>;
};

export type SiteWideDiscussionListFormatUpdateInput = {
  aggregateDiscussionCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
};

export type SiteWideDiscussionListFormatWhere = {
  AND?: InputMaybe<Array<SiteWideDiscussionListFormatWhere>>;
  NOT?: InputMaybe<SiteWideDiscussionListFormatWhere>;
  OR?: InputMaybe<Array<SiteWideDiscussionListFormatWhere>>;
  aggregateDiscussionCount?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_GT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_GTE?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>;
  aggregateDiscussionCount_LT?: InputMaybe<Scalars['Int']['input']>;
  aggregateDiscussionCount_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type SiteWideDiscussionListFormatsConnection = {
  __typename?: 'SiteWideDiscussionListFormatsConnection';
  edges: Array<SiteWideDiscussionListFormatEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An enum for sorting in either ascending or descending order. */
export enum SortDirection {
  /** Sort by field values in ascending order. */
  Asc = 'ASC',
  /** Sort by field values in descending order. */
  Desc = 'DESC'
}

export enum SortType {
  Hot = 'hot',
  New = 'new',
  Top = 'top'
}

export type StringAggregateSelection = {
  __typename?: 'StringAggregateSelection';
  longest?: Maybe<Scalars['String']['output']>;
  shortest?: Maybe<Scalars['String']['output']>;
};

export type Suspension = {
  __typename?: 'Suspension';
  RelatedIssue?: Maybe<Issue>;
  RelatedIssueAggregate?: Maybe<SuspensionIssueRelatedIssueAggregationSelection>;
  RelatedIssueConnection: SuspensionRelatedIssueConnection;
  SuspendedMod?: Maybe<ModerationProfile>;
  SuspendedModAggregate?: Maybe<SuspensionModerationProfileSuspendedModAggregationSelection>;
  SuspendedModConnection: SuspensionSuspendedModConnection;
  SuspendedUser?: Maybe<User>;
  SuspendedUserAggregate?: Maybe<SuspensionUserSuspendedUserAggregationSelection>;
  SuspendedUserConnection: SuspensionSuspendedUserConnection;
  channelUniqueName: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  modProfileName?: Maybe<Scalars['String']['output']>;
  suspendedIndefinitely?: Maybe<Scalars['Boolean']['output']>;
  suspendedUntil?: Maybe<Scalars['DateTime']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};


export type SuspensionRelatedIssueArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type SuspensionRelatedIssueAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type SuspensionRelatedIssueConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<SuspensionRelatedIssueConnectionSort>>;
  where?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
};


export type SuspensionSuspendedModArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type SuspensionSuspendedModAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type SuspensionSuspendedModConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<SuspensionSuspendedModConnectionSort>>;
  where?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
};


export type SuspensionSuspendedUserArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type SuspensionSuspendedUserAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type SuspensionSuspendedUserConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<SuspensionSuspendedUserConnectionSort>>;
  where?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
};

export type SuspensionAggregateSelection = {
  __typename?: 'SuspensionAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type SuspensionConnectInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueConnectFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModConnectFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserConnectFieldInput>;
};

export type SuspensionConnectOrCreateInput = {
  SuspendedMod?: InputMaybe<SuspensionSuspendedModConnectOrCreateFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserConnectOrCreateFieldInput>;
};

export type SuspensionConnectWhere = {
  node: SuspensionWhere;
};

export type SuspensionCreateInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserFieldInput>;
  channelUniqueName: Scalars['String']['input'];
  modProfileName?: InputMaybe<Scalars['String']['input']>;
  suspendedIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedUntil?: InputMaybe<Scalars['DateTime']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

export type SuspensionDeleteInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueDeleteFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModDeleteFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserDeleteFieldInput>;
};

export type SuspensionDisconnectInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueDisconnectFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModDisconnectFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserDisconnectFieldInput>;
};

export type SuspensionEdge = {
  __typename?: 'SuspensionEdge';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type SuspensionIssueRelatedIssueAggregationSelection = {
  __typename?: 'SuspensionIssueRelatedIssueAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<SuspensionIssueRelatedIssueNodeAggregateSelection>;
};

export type SuspensionIssueRelatedIssueNodeAggregateSelection = {
  __typename?: 'SuspensionIssueRelatedIssueNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type SuspensionModerationProfileSuspendedModAggregationSelection = {
  __typename?: 'SuspensionModerationProfileSuspendedModAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<SuspensionModerationProfileSuspendedModNodeAggregateSelection>;
};

export type SuspensionModerationProfileSuspendedModNodeAggregateSelection = {
  __typename?: 'SuspensionModerationProfileSuspendedModNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type SuspensionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more SuspensionSort objects to sort Suspensions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<SuspensionSort>>;
};

export type SuspensionRelatedIssueAggregateInput = {
  AND?: InputMaybe<Array<SuspensionRelatedIssueAggregateInput>>;
  NOT?: InputMaybe<SuspensionRelatedIssueAggregateInput>;
  OR?: InputMaybe<Array<SuspensionRelatedIssueAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<SuspensionRelatedIssueNodeAggregationWhereInput>;
};

export type SuspensionRelatedIssueConnectFieldInput = {
  connect?: InputMaybe<IssueConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type SuspensionRelatedIssueConnection = {
  __typename?: 'SuspensionRelatedIssueConnection';
  edges: Array<SuspensionRelatedIssueRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SuspensionRelatedIssueConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type SuspensionRelatedIssueConnectionWhere = {
  AND?: InputMaybe<Array<SuspensionRelatedIssueConnectionWhere>>;
  NOT?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
  OR?: InputMaybe<Array<SuspensionRelatedIssueConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type SuspensionRelatedIssueCreateFieldInput = {
  node: IssueCreateInput;
};

export type SuspensionRelatedIssueDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
};

export type SuspensionRelatedIssueDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
};

export type SuspensionRelatedIssueFieldInput = {
  connect?: InputMaybe<SuspensionRelatedIssueConnectFieldInput>;
  create?: InputMaybe<SuspensionRelatedIssueCreateFieldInput>;
};

export type SuspensionRelatedIssueNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuspensionRelatedIssueNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuspensionRelatedIssueNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuspensionRelatedIssueNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SuspensionRelatedIssueRelationship = {
  __typename?: 'SuspensionRelatedIssueRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type SuspensionRelatedIssueUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type SuspensionRelatedIssueUpdateFieldInput = {
  connect?: InputMaybe<SuspensionRelatedIssueConnectFieldInput>;
  create?: InputMaybe<SuspensionRelatedIssueCreateFieldInput>;
  delete?: InputMaybe<SuspensionRelatedIssueDeleteFieldInput>;
  disconnect?: InputMaybe<SuspensionRelatedIssueDisconnectFieldInput>;
  update?: InputMaybe<SuspensionRelatedIssueUpdateConnectionInput>;
  where?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
};

export type SuspensionRelationInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueCreateFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModCreateFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserCreateFieldInput>;
};

/** Fields to sort Suspensions by. The order in which sorts are applied is not guaranteed when specifying many fields in one SuspensionSort object. */
export type SuspensionSort = {
  channelUniqueName?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  modProfileName?: InputMaybe<SortDirection>;
  suspendedIndefinitely?: InputMaybe<SortDirection>;
  suspendedUntil?: InputMaybe<SortDirection>;
  username?: InputMaybe<SortDirection>;
};

export type SuspensionSuspendedModAggregateInput = {
  AND?: InputMaybe<Array<SuspensionSuspendedModAggregateInput>>;
  NOT?: InputMaybe<SuspensionSuspendedModAggregateInput>;
  OR?: InputMaybe<Array<SuspensionSuspendedModAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<SuspensionSuspendedModNodeAggregationWhereInput>;
};

export type SuspensionSuspendedModConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type SuspensionSuspendedModConnectOrCreateFieldInput = {
  onCreate: SuspensionSuspendedModConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type SuspensionSuspendedModConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type SuspensionSuspendedModConnection = {
  __typename?: 'SuspensionSuspendedModConnection';
  edges: Array<SuspensionSuspendedModRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SuspensionSuspendedModConnectionSort = {
  node?: InputMaybe<ModerationProfileSort>;
};

export type SuspensionSuspendedModConnectionWhere = {
  AND?: InputMaybe<Array<SuspensionSuspendedModConnectionWhere>>;
  NOT?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
  OR?: InputMaybe<Array<SuspensionSuspendedModConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type SuspensionSuspendedModCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type SuspensionSuspendedModDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
};

export type SuspensionSuspendedModDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
};

export type SuspensionSuspendedModFieldInput = {
  connect?: InputMaybe<SuspensionSuspendedModConnectFieldInput>;
  connectOrCreate?: InputMaybe<SuspensionSuspendedModConnectOrCreateFieldInput>;
  create?: InputMaybe<SuspensionSuspendedModCreateFieldInput>;
};

export type SuspensionSuspendedModNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuspensionSuspendedModNodeAggregationWhereInput>>;
  NOT?: InputMaybe<SuspensionSuspendedModNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<SuspensionSuspendedModNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type SuspensionSuspendedModRelationship = {
  __typename?: 'SuspensionSuspendedModRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type SuspensionSuspendedModUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type SuspensionSuspendedModUpdateFieldInput = {
  connect?: InputMaybe<SuspensionSuspendedModConnectFieldInput>;
  connectOrCreate?: InputMaybe<SuspensionSuspendedModConnectOrCreateFieldInput>;
  create?: InputMaybe<SuspensionSuspendedModCreateFieldInput>;
  delete?: InputMaybe<SuspensionSuspendedModDeleteFieldInput>;
  disconnect?: InputMaybe<SuspensionSuspendedModDisconnectFieldInput>;
  update?: InputMaybe<SuspensionSuspendedModUpdateConnectionInput>;
  where?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
};

export type SuspensionSuspendedUserAggregateInput = {
  AND?: InputMaybe<Array<SuspensionSuspendedUserAggregateInput>>;
  NOT?: InputMaybe<SuspensionSuspendedUserAggregateInput>;
  OR?: InputMaybe<Array<SuspensionSuspendedUserAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<SuspensionSuspendedUserNodeAggregationWhereInput>;
};

export type SuspensionSuspendedUserConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type SuspensionSuspendedUserConnectOrCreateFieldInput = {
  onCreate: SuspensionSuspendedUserConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type SuspensionSuspendedUserConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type SuspensionSuspendedUserConnection = {
  __typename?: 'SuspensionSuspendedUserConnection';
  edges: Array<SuspensionSuspendedUserRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SuspensionSuspendedUserConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type SuspensionSuspendedUserConnectionWhere = {
  AND?: InputMaybe<Array<SuspensionSuspendedUserConnectionWhere>>;
  NOT?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
  OR?: InputMaybe<Array<SuspensionSuspendedUserConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type SuspensionSuspendedUserCreateFieldInput = {
  node: UserCreateInput;
};

export type SuspensionSuspendedUserDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
};

export type SuspensionSuspendedUserDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
};

export type SuspensionSuspendedUserFieldInput = {
  connect?: InputMaybe<SuspensionSuspendedUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<SuspensionSuspendedUserConnectOrCreateFieldInput>;
  create?: InputMaybe<SuspensionSuspendedUserCreateFieldInput>;
};

export type SuspensionSuspendedUserNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<SuspensionSuspendedUserNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<SuspensionSuspendedUserNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<SuspensionSuspendedUserNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type SuspensionSuspendedUserRelationship = {
  __typename?: 'SuspensionSuspendedUserRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type SuspensionSuspendedUserUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type SuspensionSuspendedUserUpdateFieldInput = {
  connect?: InputMaybe<SuspensionSuspendedUserConnectFieldInput>;
  connectOrCreate?: InputMaybe<SuspensionSuspendedUserConnectOrCreateFieldInput>;
  create?: InputMaybe<SuspensionSuspendedUserCreateFieldInput>;
  delete?: InputMaybe<SuspensionSuspendedUserDeleteFieldInput>;
  disconnect?: InputMaybe<SuspensionSuspendedUserDisconnectFieldInput>;
  update?: InputMaybe<SuspensionSuspendedUserUpdateConnectionInput>;
  where?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
};

export type SuspensionUpdateInput = {
  RelatedIssue?: InputMaybe<SuspensionRelatedIssueUpdateFieldInput>;
  SuspendedMod?: InputMaybe<SuspensionSuspendedModUpdateFieldInput>;
  SuspendedUser?: InputMaybe<SuspensionSuspendedUserUpdateFieldInput>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName?: InputMaybe<Scalars['String']['input']>;
  suspendedIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedUntil?: InputMaybe<Scalars['DateTime']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

export type SuspensionUserSuspendedUserAggregationSelection = {
  __typename?: 'SuspensionUserSuspendedUserAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<SuspensionUserSuspendedUserNodeAggregateSelection>;
};

export type SuspensionUserSuspendedUserNodeAggregateSelection = {
  __typename?: 'SuspensionUserSuspendedUserNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type SuspensionWhere = {
  AND?: InputMaybe<Array<SuspensionWhere>>;
  NOT?: InputMaybe<SuspensionWhere>;
  OR?: InputMaybe<Array<SuspensionWhere>>;
  RelatedIssue?: InputMaybe<IssueWhere>;
  RelatedIssueAggregate?: InputMaybe<SuspensionRelatedIssueAggregateInput>;
  RelatedIssueConnection?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
  RelatedIssueConnection_NOT?: InputMaybe<SuspensionRelatedIssueConnectionWhere>;
  RelatedIssue_NOT?: InputMaybe<IssueWhere>;
  SuspendedMod?: InputMaybe<ModerationProfileWhere>;
  SuspendedModAggregate?: InputMaybe<SuspensionSuspendedModAggregateInput>;
  SuspendedModConnection?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
  SuspendedModConnection_NOT?: InputMaybe<SuspensionSuspendedModConnectionWhere>;
  SuspendedMod_NOT?: InputMaybe<ModerationProfileWhere>;
  SuspendedUser?: InputMaybe<UserWhere>;
  SuspendedUserAggregate?: InputMaybe<SuspensionSuspendedUserAggregateInput>;
  SuspendedUserConnection?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
  SuspendedUserConnection_NOT?: InputMaybe<SuspensionSuspendedUserConnectionWhere>;
  SuspendedUser_NOT?: InputMaybe<UserWhere>;
  channelUniqueName?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  channelUniqueName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  channelUniqueName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  modProfileName?: InputMaybe<Scalars['String']['input']>;
  modProfileName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  modProfileName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  modProfileName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  modProfileName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  modProfileName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  suspendedIndefinitely?: InputMaybe<Scalars['Boolean']['input']>;
  suspendedUntil?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  suspendedUntil_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
  username_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  username_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  username_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username_MATCHES?: InputMaybe<Scalars['String']['input']>;
  username_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type SuspensionsConnection = {
  __typename?: 'SuspensionsConnection';
  edges: Array<SuspensionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type Tag = {
  __typename?: 'Tag';
  Channels: Array<Channel>;
  ChannelsAggregate?: Maybe<TagChannelChannelsAggregationSelection>;
  ChannelsConnection: TagChannelsConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<TagCommentCommentsAggregationSelection>;
  CommentsConnection: TagCommentsConnection;
  Discussions: Array<Discussion>;
  DiscussionsAggregate?: Maybe<TagDiscussionDiscussionsAggregationSelection>;
  DiscussionsConnection: TagDiscussionsConnection;
  Events: Array<Event>;
  EventsAggregate?: Maybe<TagEventEventsAggregationSelection>;
  EventsConnection: TagEventsConnection;
  Feeds: Array<Feed>;
  FeedsAggregate?: Maybe<TagFeedFeedsAggregationSelection>;
  FeedsConnection: TagFeedsConnection;
  text: Scalars['String']['output'];
};


export type TagChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type TagChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type TagChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TagChannelsConnectionSort>>;
  where?: InputMaybe<TagChannelsConnectionWhere>;
};


export type TagCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type TagCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type TagCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TagCommentsConnectionSort>>;
  where?: InputMaybe<TagCommentsConnectionWhere>;
};


export type TagDiscussionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type TagDiscussionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type TagDiscussionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TagDiscussionsConnectionSort>>;
  where?: InputMaybe<TagDiscussionsConnectionWhere>;
};


export type TagEventsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type TagEventsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type TagEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TagEventsConnectionSort>>;
  where?: InputMaybe<TagEventsConnectionWhere>;
};


export type TagFeedsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<FeedOptions>;
  where?: InputMaybe<FeedWhere>;
};


export type TagFeedsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<FeedWhere>;
};


export type TagFeedsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TagFeedsConnectionSort>>;
  where?: InputMaybe<TagFeedsConnectionWhere>;
};

export type TagAggregateSelection = {
  __typename?: 'TagAggregateSelection';
  count: Scalars['Int']['output'];
  text: StringAggregateSelection;
};

export type TagChannelChannelsAggregationSelection = {
  __typename?: 'TagChannelChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TagChannelChannelsNodeAggregateSelection>;
};

export type TagChannelChannelsNodeAggregateSelection = {
  __typename?: 'TagChannelChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type TagChannelsAggregateInput = {
  AND?: InputMaybe<Array<TagChannelsAggregateInput>>;
  NOT?: InputMaybe<TagChannelsAggregateInput>;
  OR?: InputMaybe<Array<TagChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TagChannelsNodeAggregationWhereInput>;
};

export type TagChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type TagChannelsConnectOrCreateFieldInput = {
  onCreate: TagChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type TagChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type TagChannelsConnection = {
  __typename?: 'TagChannelsConnection';
  edges: Array<TagChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TagChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type TagChannelsConnectionWhere = {
  AND?: InputMaybe<Array<TagChannelsConnectionWhere>>;
  NOT?: InputMaybe<TagChannelsConnectionWhere>;
  OR?: InputMaybe<Array<TagChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type TagChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type TagChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<TagChannelsConnectionWhere>;
};

export type TagChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<TagChannelsConnectionWhere>;
};

export type TagChannelsFieldInput = {
  connect?: InputMaybe<Array<TagChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TagChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TagChannelsCreateFieldInput>>;
};

export type TagChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TagChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TagChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TagChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type TagChannelsRelationship = {
  __typename?: 'TagChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type TagChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type TagChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<TagChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<TagChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<TagChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<TagChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TagChannelsDisconnectFieldInput>>;
  update?: InputMaybe<TagChannelsUpdateConnectionInput>;
  where?: InputMaybe<TagChannelsConnectionWhere>;
};

export type TagCommentCommentsAggregationSelection = {
  __typename?: 'TagCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TagCommentCommentsNodeAggregateSelection>;
};

export type TagCommentCommentsNodeAggregateSelection = {
  __typename?: 'TagCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type TagCommentsAggregateInput = {
  AND?: InputMaybe<Array<TagCommentsAggregateInput>>;
  NOT?: InputMaybe<TagCommentsAggregateInput>;
  OR?: InputMaybe<Array<TagCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TagCommentsNodeAggregationWhereInput>;
};

export type TagCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type TagCommentsConnection = {
  __typename?: 'TagCommentsConnection';
  edges: Array<TagCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TagCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type TagCommentsConnectionWhere = {
  AND?: InputMaybe<Array<TagCommentsConnectionWhere>>;
  NOT?: InputMaybe<TagCommentsConnectionWhere>;
  OR?: InputMaybe<Array<TagCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type TagCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type TagCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<TagCommentsConnectionWhere>;
};

export type TagCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<TagCommentsConnectionWhere>;
};

export type TagCommentsFieldInput = {
  connect?: InputMaybe<Array<TagCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<TagCommentsCreateFieldInput>>;
};

export type TagCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TagCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TagCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TagCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type TagCommentsRelationship = {
  __typename?: 'TagCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type TagCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type TagCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<TagCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<TagCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<TagCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TagCommentsDisconnectFieldInput>>;
  update?: InputMaybe<TagCommentsUpdateConnectionInput>;
  where?: InputMaybe<TagCommentsConnectionWhere>;
};

export type TagConnectInput = {
  Channels?: InputMaybe<Array<TagChannelsConnectFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsConnectFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsConnectFieldInput>>;
  Events?: InputMaybe<Array<TagEventsConnectFieldInput>>;
  Feeds?: InputMaybe<Array<TagFeedsConnectFieldInput>>;
};

export type TagConnectOrCreateInput = {
  Channels?: InputMaybe<Array<TagChannelsConnectOrCreateFieldInput>>;
};

export type TagConnectOrCreateWhere = {
  node: TagUniqueWhere;
};

export type TagConnectWhere = {
  node: TagWhere;
};

export type TagCreateInput = {
  Channels?: InputMaybe<TagChannelsFieldInput>;
  Comments?: InputMaybe<TagCommentsFieldInput>;
  Discussions?: InputMaybe<TagDiscussionsFieldInput>;
  Events?: InputMaybe<TagEventsFieldInput>;
  Feeds?: InputMaybe<TagFeedsFieldInput>;
  text: Scalars['String']['input'];
};

export type TagDeleteInput = {
  Channels?: InputMaybe<Array<TagChannelsDeleteFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsDeleteFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsDeleteFieldInput>>;
  Events?: InputMaybe<Array<TagEventsDeleteFieldInput>>;
  Feeds?: InputMaybe<Array<TagFeedsDeleteFieldInput>>;
};

export type TagDisconnectInput = {
  Channels?: InputMaybe<Array<TagChannelsDisconnectFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsDisconnectFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsDisconnectFieldInput>>;
  Events?: InputMaybe<Array<TagEventsDisconnectFieldInput>>;
  Feeds?: InputMaybe<Array<TagFeedsDisconnectFieldInput>>;
};

export type TagDiscussionDiscussionsAggregationSelection = {
  __typename?: 'TagDiscussionDiscussionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TagDiscussionDiscussionsNodeAggregateSelection>;
};

export type TagDiscussionDiscussionsNodeAggregateSelection = {
  __typename?: 'TagDiscussionDiscussionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type TagDiscussionsAggregateInput = {
  AND?: InputMaybe<Array<TagDiscussionsAggregateInput>>;
  NOT?: InputMaybe<TagDiscussionsAggregateInput>;
  OR?: InputMaybe<Array<TagDiscussionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TagDiscussionsNodeAggregationWhereInput>;
};

export type TagDiscussionsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type TagDiscussionsConnection = {
  __typename?: 'TagDiscussionsConnection';
  edges: Array<TagDiscussionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TagDiscussionsConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type TagDiscussionsConnectionWhere = {
  AND?: InputMaybe<Array<TagDiscussionsConnectionWhere>>;
  NOT?: InputMaybe<TagDiscussionsConnectionWhere>;
  OR?: InputMaybe<Array<TagDiscussionsConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type TagDiscussionsCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type TagDiscussionsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<TagDiscussionsConnectionWhere>;
};

export type TagDiscussionsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<TagDiscussionsConnectionWhere>;
};

export type TagDiscussionsFieldInput = {
  connect?: InputMaybe<Array<TagDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<TagDiscussionsCreateFieldInput>>;
};

export type TagDiscussionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TagDiscussionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TagDiscussionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TagDiscussionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TagDiscussionsRelationship = {
  __typename?: 'TagDiscussionsRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type TagDiscussionsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type TagDiscussionsUpdateFieldInput = {
  connect?: InputMaybe<Array<TagDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<TagDiscussionsCreateFieldInput>>;
  delete?: InputMaybe<Array<TagDiscussionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TagDiscussionsDisconnectFieldInput>>;
  update?: InputMaybe<TagDiscussionsUpdateConnectionInput>;
  where?: InputMaybe<TagDiscussionsConnectionWhere>;
};

export type TagEdge = {
  __typename?: 'TagEdge';
  cursor: Scalars['String']['output'];
  node: Tag;
};

export type TagEventEventsAggregationSelection = {
  __typename?: 'TagEventEventsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TagEventEventsNodeAggregateSelection>;
};

export type TagEventEventsNodeAggregateSelection = {
  __typename?: 'TagEventEventsNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type TagEventsAggregateInput = {
  AND?: InputMaybe<Array<TagEventsAggregateInput>>;
  NOT?: InputMaybe<TagEventsAggregateInput>;
  OR?: InputMaybe<Array<TagEventsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TagEventsNodeAggregationWhereInput>;
};

export type TagEventsConnectFieldInput = {
  connect?: InputMaybe<Array<EventConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type TagEventsConnection = {
  __typename?: 'TagEventsConnection';
  edges: Array<TagEventsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TagEventsConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type TagEventsConnectionWhere = {
  AND?: InputMaybe<Array<TagEventsConnectionWhere>>;
  NOT?: InputMaybe<TagEventsConnectionWhere>;
  OR?: InputMaybe<Array<TagEventsConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type TagEventsCreateFieldInput = {
  node: EventCreateInput;
};

export type TagEventsDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<TagEventsConnectionWhere>;
};

export type TagEventsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<TagEventsConnectionWhere>;
};

export type TagEventsFieldInput = {
  connect?: InputMaybe<Array<TagEventsConnectFieldInput>>;
  create?: InputMaybe<Array<TagEventsCreateFieldInput>>;
};

export type TagEventsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TagEventsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TagEventsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TagEventsNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type TagEventsRelationship = {
  __typename?: 'TagEventsRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type TagEventsUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type TagEventsUpdateFieldInput = {
  connect?: InputMaybe<Array<TagEventsConnectFieldInput>>;
  create?: InputMaybe<Array<TagEventsCreateFieldInput>>;
  delete?: InputMaybe<Array<TagEventsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TagEventsDisconnectFieldInput>>;
  update?: InputMaybe<TagEventsUpdateConnectionInput>;
  where?: InputMaybe<TagEventsConnectionWhere>;
};

export type TagFeedFeedsAggregationSelection = {
  __typename?: 'TagFeedFeedsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TagFeedFeedsNodeAggregateSelection>;
};

export type TagFeedFeedsNodeAggregateSelection = {
  __typename?: 'TagFeedFeedsNodeAggregateSelection';
  description: StringAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type TagFeedsAggregateInput = {
  AND?: InputMaybe<Array<TagFeedsAggregateInput>>;
  NOT?: InputMaybe<TagFeedsAggregateInput>;
  OR?: InputMaybe<Array<TagFeedsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TagFeedsNodeAggregationWhereInput>;
};

export type TagFeedsConnectFieldInput = {
  connect?: InputMaybe<Array<FeedConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<FeedConnectWhere>;
};

export type TagFeedsConnection = {
  __typename?: 'TagFeedsConnection';
  edges: Array<TagFeedsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TagFeedsConnectionSort = {
  node?: InputMaybe<FeedSort>;
};

export type TagFeedsConnectionWhere = {
  AND?: InputMaybe<Array<TagFeedsConnectionWhere>>;
  NOT?: InputMaybe<TagFeedsConnectionWhere>;
  OR?: InputMaybe<Array<TagFeedsConnectionWhere>>;
  node?: InputMaybe<FeedWhere>;
};

export type TagFeedsCreateFieldInput = {
  node: FeedCreateInput;
};

export type TagFeedsDeleteFieldInput = {
  delete?: InputMaybe<FeedDeleteInput>;
  where?: InputMaybe<TagFeedsConnectionWhere>;
};

export type TagFeedsDisconnectFieldInput = {
  disconnect?: InputMaybe<FeedDisconnectInput>;
  where?: InputMaybe<TagFeedsConnectionWhere>;
};

export type TagFeedsFieldInput = {
  connect?: InputMaybe<Array<TagFeedsConnectFieldInput>>;
  create?: InputMaybe<Array<TagFeedsCreateFieldInput>>;
};

export type TagFeedsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TagFeedsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<TagFeedsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<TagFeedsNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type TagFeedsRelationship = {
  __typename?: 'TagFeedsRelationship';
  cursor: Scalars['String']['output'];
  node: Feed;
};

export type TagFeedsUpdateConnectionInput = {
  node?: InputMaybe<FeedUpdateInput>;
};

export type TagFeedsUpdateFieldInput = {
  connect?: InputMaybe<Array<TagFeedsConnectFieldInput>>;
  create?: InputMaybe<Array<TagFeedsCreateFieldInput>>;
  delete?: InputMaybe<Array<TagFeedsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<TagFeedsDisconnectFieldInput>>;
  update?: InputMaybe<TagFeedsUpdateConnectionInput>;
  where?: InputMaybe<TagFeedsConnectionWhere>;
};

export type TagOnCreateInput = {
  text: Scalars['String']['input'];
};

export type TagOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more TagSort objects to sort Tags by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<TagSort>>;
};

export type TagRelationInput = {
  Channels?: InputMaybe<Array<TagChannelsCreateFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsCreateFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsCreateFieldInput>>;
  Events?: InputMaybe<Array<TagEventsCreateFieldInput>>;
  Feeds?: InputMaybe<Array<TagFeedsCreateFieldInput>>;
};

/** Fields to sort Tags by. The order in which sorts are applied is not guaranteed when specifying many fields in one TagSort object. */
export type TagSort = {
  text?: InputMaybe<SortDirection>;
};

export type TagUniqueWhere = {
  text?: InputMaybe<Scalars['String']['input']>;
};

export type TagUpdateInput = {
  Channels?: InputMaybe<Array<TagChannelsUpdateFieldInput>>;
  Comments?: InputMaybe<Array<TagCommentsUpdateFieldInput>>;
  Discussions?: InputMaybe<Array<TagDiscussionsUpdateFieldInput>>;
  Events?: InputMaybe<Array<TagEventsUpdateFieldInput>>;
  Feeds?: InputMaybe<Array<TagFeedsUpdateFieldInput>>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type TagWhere = {
  AND?: InputMaybe<Array<TagWhere>>;
  ChannelsAggregate?: InputMaybe<TagChannelsAggregateInput>;
  /** Return Tags where all of the related TagChannelsConnections match this filter */
  ChannelsConnection_ALL?: InputMaybe<TagChannelsConnectionWhere>;
  /** Return Tags where none of the related TagChannelsConnections match this filter */
  ChannelsConnection_NONE?: InputMaybe<TagChannelsConnectionWhere>;
  /** Return Tags where one of the related TagChannelsConnections match this filter */
  ChannelsConnection_SINGLE?: InputMaybe<TagChannelsConnectionWhere>;
  /** Return Tags where some of the related TagChannelsConnections match this filter */
  ChannelsConnection_SOME?: InputMaybe<TagChannelsConnectionWhere>;
  /** Return Tags where all of the related Channels match this filter */
  Channels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Tags where none of the related Channels match this filter */
  Channels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Tags where one of the related Channels match this filter */
  Channels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Tags where some of the related Channels match this filter */
  Channels_SOME?: InputMaybe<ChannelWhere>;
  CommentsAggregate?: InputMaybe<TagCommentsAggregateInput>;
  /** Return Tags where all of the related TagCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<TagCommentsConnectionWhere>;
  /** Return Tags where none of the related TagCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<TagCommentsConnectionWhere>;
  /** Return Tags where one of the related TagCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<TagCommentsConnectionWhere>;
  /** Return Tags where some of the related TagCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<TagCommentsConnectionWhere>;
  /** Return Tags where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return Tags where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return Tags where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Tags where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  DiscussionsAggregate?: InputMaybe<TagDiscussionsAggregateInput>;
  /** Return Tags where all of the related TagDiscussionsConnections match this filter */
  DiscussionsConnection_ALL?: InputMaybe<TagDiscussionsConnectionWhere>;
  /** Return Tags where none of the related TagDiscussionsConnections match this filter */
  DiscussionsConnection_NONE?: InputMaybe<TagDiscussionsConnectionWhere>;
  /** Return Tags where one of the related TagDiscussionsConnections match this filter */
  DiscussionsConnection_SINGLE?: InputMaybe<TagDiscussionsConnectionWhere>;
  /** Return Tags where some of the related TagDiscussionsConnections match this filter */
  DiscussionsConnection_SOME?: InputMaybe<TagDiscussionsConnectionWhere>;
  /** Return Tags where all of the related Discussions match this filter */
  Discussions_ALL?: InputMaybe<DiscussionWhere>;
  /** Return Tags where none of the related Discussions match this filter */
  Discussions_NONE?: InputMaybe<DiscussionWhere>;
  /** Return Tags where one of the related Discussions match this filter */
  Discussions_SINGLE?: InputMaybe<DiscussionWhere>;
  /** Return Tags where some of the related Discussions match this filter */
  Discussions_SOME?: InputMaybe<DiscussionWhere>;
  EventsAggregate?: InputMaybe<TagEventsAggregateInput>;
  /** Return Tags where all of the related TagEventsConnections match this filter */
  EventsConnection_ALL?: InputMaybe<TagEventsConnectionWhere>;
  /** Return Tags where none of the related TagEventsConnections match this filter */
  EventsConnection_NONE?: InputMaybe<TagEventsConnectionWhere>;
  /** Return Tags where one of the related TagEventsConnections match this filter */
  EventsConnection_SINGLE?: InputMaybe<TagEventsConnectionWhere>;
  /** Return Tags where some of the related TagEventsConnections match this filter */
  EventsConnection_SOME?: InputMaybe<TagEventsConnectionWhere>;
  /** Return Tags where all of the related Events match this filter */
  Events_ALL?: InputMaybe<EventWhere>;
  /** Return Tags where none of the related Events match this filter */
  Events_NONE?: InputMaybe<EventWhere>;
  /** Return Tags where one of the related Events match this filter */
  Events_SINGLE?: InputMaybe<EventWhere>;
  /** Return Tags where some of the related Events match this filter */
  Events_SOME?: InputMaybe<EventWhere>;
  FeedsAggregate?: InputMaybe<TagFeedsAggregateInput>;
  /** Return Tags where all of the related TagFeedsConnections match this filter */
  FeedsConnection_ALL?: InputMaybe<TagFeedsConnectionWhere>;
  /** Return Tags where none of the related TagFeedsConnections match this filter */
  FeedsConnection_NONE?: InputMaybe<TagFeedsConnectionWhere>;
  /** Return Tags where one of the related TagFeedsConnections match this filter */
  FeedsConnection_SINGLE?: InputMaybe<TagFeedsConnectionWhere>;
  /** Return Tags where some of the related TagFeedsConnections match this filter */
  FeedsConnection_SOME?: InputMaybe<TagFeedsConnectionWhere>;
  /** Return Tags where all of the related Feeds match this filter */
  Feeds_ALL?: InputMaybe<FeedWhere>;
  /** Return Tags where none of the related Feeds match this filter */
  Feeds_NONE?: InputMaybe<FeedWhere>;
  /** Return Tags where one of the related Feeds match this filter */
  Feeds_SINGLE?: InputMaybe<FeedWhere>;
  /** Return Tags where some of the related Feeds match this filter */
  Feeds_SOME?: InputMaybe<FeedWhere>;
  NOT?: InputMaybe<TagWhere>;
  OR?: InputMaybe<Array<TagWhere>>;
  text?: InputMaybe<Scalars['String']['input']>;
  text_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  text_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  text_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  text_MATCHES?: InputMaybe<Scalars['String']['input']>;
  text_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type TagsConnection = {
  __typename?: 'TagsConnection';
  edges: Array<TagEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TextVersion = {
  __typename?: 'TextVersion';
  Author?: Maybe<User>;
  AuthorAggregate?: Maybe<TextVersionUserAuthorAggregationSelection>;
  AuthorConnection: TextVersionAuthorConnection;
  body?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type TextVersionAuthorArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type TextVersionAuthorAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type TextVersionAuthorConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<TextVersionAuthorConnectionSort>>;
  where?: InputMaybe<TextVersionAuthorConnectionWhere>;
};

export type TextVersionAggregateSelection = {
  __typename?: 'TextVersionAggregateSelection';
  body: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type TextVersionAuthorAggregateInput = {
  AND?: InputMaybe<Array<TextVersionAuthorAggregateInput>>;
  NOT?: InputMaybe<TextVersionAuthorAggregateInput>;
  OR?: InputMaybe<Array<TextVersionAuthorAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<TextVersionAuthorNodeAggregationWhereInput>;
};

export type TextVersionAuthorConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type TextVersionAuthorConnectOrCreateFieldInput = {
  onCreate: TextVersionAuthorConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type TextVersionAuthorConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type TextVersionAuthorConnection = {
  __typename?: 'TextVersionAuthorConnection';
  edges: Array<TextVersionAuthorRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TextVersionAuthorConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type TextVersionAuthorConnectionWhere = {
  AND?: InputMaybe<Array<TextVersionAuthorConnectionWhere>>;
  NOT?: InputMaybe<TextVersionAuthorConnectionWhere>;
  OR?: InputMaybe<Array<TextVersionAuthorConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type TextVersionAuthorCreateFieldInput = {
  node: UserCreateInput;
};

export type TextVersionAuthorDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<TextVersionAuthorConnectionWhere>;
};

export type TextVersionAuthorDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<TextVersionAuthorConnectionWhere>;
};

export type TextVersionAuthorFieldInput = {
  connect?: InputMaybe<TextVersionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<TextVersionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<TextVersionAuthorCreateFieldInput>;
};

export type TextVersionAuthorNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<TextVersionAuthorNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<TextVersionAuthorNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<TextVersionAuthorNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type TextVersionAuthorRelationship = {
  __typename?: 'TextVersionAuthorRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type TextVersionAuthorUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type TextVersionAuthorUpdateFieldInput = {
  connect?: InputMaybe<TextVersionAuthorConnectFieldInput>;
  connectOrCreate?: InputMaybe<TextVersionAuthorConnectOrCreateFieldInput>;
  create?: InputMaybe<TextVersionAuthorCreateFieldInput>;
  delete?: InputMaybe<TextVersionAuthorDeleteFieldInput>;
  disconnect?: InputMaybe<TextVersionAuthorDisconnectFieldInput>;
  update?: InputMaybe<TextVersionAuthorUpdateConnectionInput>;
  where?: InputMaybe<TextVersionAuthorConnectionWhere>;
};

export type TextVersionConnectInput = {
  Author?: InputMaybe<TextVersionAuthorConnectFieldInput>;
};

export type TextVersionConnectOrCreateInput = {
  Author?: InputMaybe<TextVersionAuthorConnectOrCreateFieldInput>;
};

export type TextVersionConnectWhere = {
  node: TextVersionWhere;
};

export type TextVersionCreateInput = {
  Author?: InputMaybe<TextVersionAuthorFieldInput>;
  body?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TextVersionDeleteInput = {
  Author?: InputMaybe<TextVersionAuthorDeleteFieldInput>;
};

export type TextVersionDisconnectInput = {
  Author?: InputMaybe<TextVersionAuthorDisconnectFieldInput>;
};

export type TextVersionEdge = {
  __typename?: 'TextVersionEdge';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type TextVersionOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more TextVersionSort objects to sort TextVersions by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<TextVersionSort>>;
};

export type TextVersionRelationInput = {
  Author?: InputMaybe<TextVersionAuthorCreateFieldInput>;
};

/** Fields to sort TextVersions by. The order in which sorts are applied is not guaranteed when specifying many fields in one TextVersionSort object. */
export type TextVersionSort = {
  body?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type TextVersionUpdateInput = {
  Author?: InputMaybe<TextVersionAuthorUpdateFieldInput>;
  body?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TextVersionUserAuthorAggregationSelection = {
  __typename?: 'TextVersionUserAuthorAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<TextVersionUserAuthorNodeAggregateSelection>;
};

export type TextVersionUserAuthorNodeAggregateSelection = {
  __typename?: 'TextVersionUserAuthorNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type TextVersionWhere = {
  AND?: InputMaybe<Array<TextVersionWhere>>;
  Author?: InputMaybe<UserWhere>;
  AuthorAggregate?: InputMaybe<TextVersionAuthorAggregateInput>;
  AuthorConnection?: InputMaybe<TextVersionAuthorConnectionWhere>;
  AuthorConnection_NOT?: InputMaybe<TextVersionAuthorConnectionWhere>;
  Author_NOT?: InputMaybe<UserWhere>;
  NOT?: InputMaybe<TextVersionWhere>;
  OR?: InputMaybe<Array<TextVersionWhere>>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TextVersionsConnection = {
  __typename?: 'TextVersionsConnection';
  edges: Array<TextVersionEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export enum TimeFrame {
  All = 'all',
  Day = 'day',
  Month = 'month',
  Week = 'week',
  Year = 'year'
}

export type UpdateAlbumsMutationResponse = {
  __typename?: 'UpdateAlbumsMutationResponse';
  albums: Array<Album>;
  info: UpdateInfo;
};

export type UpdateChannelRolesMutationResponse = {
  __typename?: 'UpdateChannelRolesMutationResponse';
  channelRoles: Array<ChannelRole>;
  info: UpdateInfo;
};

export type UpdateChannelsMutationResponse = {
  __typename?: 'UpdateChannelsMutationResponse';
  channels: Array<Channel>;
  info: UpdateInfo;
};

export type UpdateCommentRepliesFormatsMutationResponse = {
  __typename?: 'UpdateCommentRepliesFormatsMutationResponse';
  commentRepliesFormats: Array<CommentRepliesFormat>;
  info: UpdateInfo;
};

export type UpdateCommentSectionFormatsMutationResponse = {
  __typename?: 'UpdateCommentSectionFormatsMutationResponse';
  commentSectionFormats: Array<CommentSectionFormat>;
  info: UpdateInfo;
};

export type UpdateCommentsMutationResponse = {
  __typename?: 'UpdateCommentsMutationResponse';
  comments: Array<Comment>;
  info: UpdateInfo;
};

export type UpdateContactsMutationResponse = {
  __typename?: 'UpdateContactsMutationResponse';
  contacts: Array<Contact>;
  info: UpdateInfo;
};

export type UpdateDiscussionChannelListFormatsMutationResponse = {
  __typename?: 'UpdateDiscussionChannelListFormatsMutationResponse';
  discussionChannelListFormats: Array<DiscussionChannelListFormat>;
  info: UpdateInfo;
};

export type UpdateDiscussionChannelsMutationResponse = {
  __typename?: 'UpdateDiscussionChannelsMutationResponse';
  discussionChannels: Array<DiscussionChannel>;
  info: UpdateInfo;
};

export type UpdateDiscussionsMutationResponse = {
  __typename?: 'UpdateDiscussionsMutationResponse';
  discussions: Array<Discussion>;
  info: UpdateInfo;
};

export type UpdateDropDataResponsesMutationResponse = {
  __typename?: 'UpdateDropDataResponsesMutationResponse';
  dropDataResponses: Array<DropDataResponse>;
  info: UpdateInfo;
};

export type UpdateEmailsMutationResponse = {
  __typename?: 'UpdateEmailsMutationResponse';
  emails: Array<Email>;
  info: UpdateInfo;
};

export type UpdateEmojisMutationResponse = {
  __typename?: 'UpdateEmojisMutationResponse';
  emojis: Array<Emoji>;
  info: UpdateInfo;
};

export type UpdateEnvironmentInfosMutationResponse = {
  __typename?: 'UpdateEnvironmentInfosMutationResponse';
  environmentInfos: Array<EnvironmentInfo>;
  info: UpdateInfo;
};

export type UpdateEventChannelsMutationResponse = {
  __typename?: 'UpdateEventChannelsMutationResponse';
  eventChannels: Array<EventChannel>;
  info: UpdateInfo;
};

export type UpdateEventCommentsFormatsMutationResponse = {
  __typename?: 'UpdateEventCommentsFormatsMutationResponse';
  eventCommentsFormats: Array<EventCommentsFormat>;
  info: UpdateInfo;
};

export type UpdateEventsMutationResponse = {
  __typename?: 'UpdateEventsMutationResponse';
  events: Array<Event>;
  info: UpdateInfo;
};

export type UpdateFeedsMutationResponse = {
  __typename?: 'UpdateFeedsMutationResponse';
  feeds: Array<Feed>;
  info: UpdateInfo;
};

export type UpdateGetSortedChannelsResponsesMutationResponse = {
  __typename?: 'UpdateGetSortedChannelsResponsesMutationResponse';
  getSortedChannelsResponses: Array<GetSortedChannelsResponse>;
  info: UpdateInfo;
};

export type UpdateImagesMutationResponse = {
  __typename?: 'UpdateImagesMutationResponse';
  images: Array<Image>;
  info: UpdateInfo;
};

/** Information about the number of nodes and relationships created and deleted during an update mutation */
export type UpdateInfo = {
  __typename?: 'UpdateInfo';
  /** @deprecated This field has been deprecated because bookmarks are now handled by the driver. */
  bookmark?: Maybe<Scalars['String']['output']>;
  nodesCreated: Scalars['Int']['output'];
  nodesDeleted: Scalars['Int']['output'];
  relationshipsCreated: Scalars['Int']['output'];
  relationshipsDeleted: Scalars['Int']['output'];
};

export type UpdateIssuesMutationResponse = {
  __typename?: 'UpdateIssuesMutationResponse';
  info: UpdateInfo;
  issues: Array<Issue>;
};

export type UpdateLinkFlairsMutationResponse = {
  __typename?: 'UpdateLinkFlairsMutationResponse';
  info: UpdateInfo;
  linkFlairs: Array<LinkFlair>;
};

export type UpdateMessagesMutationResponse = {
  __typename?: 'UpdateMessagesMutationResponse';
  info: UpdateInfo;
  messages: Array<Message>;
};

export type UpdateModChannelRolesMutationResponse = {
  __typename?: 'UpdateModChannelRolesMutationResponse';
  info: UpdateInfo;
  modChannelRoles: Array<ModChannelRole>;
};

export type UpdateModServerRolesMutationResponse = {
  __typename?: 'UpdateModServerRolesMutationResponse';
  info: UpdateInfo;
  modServerRoles: Array<ModServerRole>;
};

export type UpdateModerationActionsMutationResponse = {
  __typename?: 'UpdateModerationActionsMutationResponse';
  info: UpdateInfo;
  moderationActions: Array<ModerationAction>;
};

export type UpdateModerationProfilesMutationResponse = {
  __typename?: 'UpdateModerationProfilesMutationResponse';
  info: UpdateInfo;
  moderationProfiles: Array<ModerationProfile>;
};

export type UpdateNotificationsMutationResponse = {
  __typename?: 'UpdateNotificationsMutationResponse';
  info: UpdateInfo;
  notifications: Array<Notification>;
};

export type UpdateRecurringEventsMutationResponse = {
  __typename?: 'UpdateRecurringEventsMutationResponse';
  info: UpdateInfo;
  recurringEvents: Array<RecurringEvent>;
};

export type UpdateRepeatEndsMutationResponse = {
  __typename?: 'UpdateRepeatEndsMutationResponse';
  info: UpdateInfo;
  repeatEnds: Array<RepeatEnds>;
};

export type UpdateRepeatEveriesMutationResponse = {
  __typename?: 'UpdateRepeatEveriesMutationResponse';
  info: UpdateInfo;
  repeatEveries: Array<RepeatEvery>;
};

export type UpdateSafetyCheckResponsesMutationResponse = {
  __typename?: 'UpdateSafetyCheckResponsesMutationResponse';
  info: UpdateInfo;
  safetyCheckResponses: Array<SafetyCheckResponse>;
};

export type UpdateSeedDataResponsesMutationResponse = {
  __typename?: 'UpdateSeedDataResponsesMutationResponse';
  info: UpdateInfo;
  seedDataResponses: Array<SeedDataResponse>;
};

export type UpdateServerConfigsMutationResponse = {
  __typename?: 'UpdateServerConfigsMutationResponse';
  info: UpdateInfo;
  serverConfigs: Array<ServerConfig>;
};

export type UpdateServerRolesMutationResponse = {
  __typename?: 'UpdateServerRolesMutationResponse';
  info: UpdateInfo;
  serverRoles: Array<ServerRole>;
};

export type UpdateSignedUrlsMutationResponse = {
  __typename?: 'UpdateSignedUrlsMutationResponse';
  info: UpdateInfo;
  signedUrls: Array<SignedUrl>;
};

export type UpdateSiteWideDiscussionListFormatsMutationResponse = {
  __typename?: 'UpdateSiteWideDiscussionListFormatsMutationResponse';
  info: UpdateInfo;
  siteWideDiscussionListFormats: Array<SiteWideDiscussionListFormat>;
};

export type UpdateSuspensionsMutationResponse = {
  __typename?: 'UpdateSuspensionsMutationResponse';
  info: UpdateInfo;
  suspensions: Array<Suspension>;
};

export type UpdateTagsMutationResponse = {
  __typename?: 'UpdateTagsMutationResponse';
  info: UpdateInfo;
  tags: Array<Tag>;
};

export type UpdateTextVersionsMutationResponse = {
  __typename?: 'UpdateTextVersionsMutationResponse';
  info: UpdateInfo;
  textVersions: Array<TextVersion>;
};

export type UpdateUsersMutationResponse = {
  __typename?: 'UpdateUsersMutationResponse';
  info: UpdateInfo;
  users: Array<User>;
};

export type UpdateWikiPagesMutationResponse = {
  __typename?: 'UpdateWikiPagesMutationResponse';
  info: UpdateInfo;
  wikiPages: Array<WikiPage>;
};

export type User = {
  __typename?: 'User';
  AdminOfChannels: Array<Channel>;
  AdminOfChannelsAggregate?: Maybe<UserChannelAdminOfChannelsAggregationSelection>;
  AdminOfChannelsConnection: UserAdminOfChannelsConnection;
  Albums: Array<Album>;
  AlbumsAggregate?: Maybe<UserAlbumAlbumsAggregationSelection>;
  AlbumsConnection: UserAlbumsConnection;
  Blocked?: Maybe<User>;
  BlockedAggregate?: Maybe<UserUserBlockedAggregationSelection>;
  BlockedConnection: UserBlockedConnection;
  ChannelRoles: Array<ChannelRole>;
  ChannelRolesAggregate?: Maybe<UserChannelRoleChannelRolesAggregationSelection>;
  ChannelRolesConnection: UserChannelRolesConnection;
  Comments: Array<Comment>;
  CommentsAggregate?: Maybe<UserCommentCommentsAggregationSelection>;
  CommentsConnection: UserCommentsConnection;
  CreatedFeeds: Array<Feed>;
  CreatedFeedsAggregate?: Maybe<UserFeedCreatedFeedsAggregationSelection>;
  CreatedFeedsConnection: UserCreatedFeedsConnection;
  DefaultEmojiSkinTone?: Maybe<Scalars['String']['output']>;
  DefaultFeed?: Maybe<Feed>;
  DefaultFeedAggregate?: Maybe<UserFeedDefaultFeedAggregationSelection>;
  DefaultFeedConnection: UserDefaultFeedConnection;
  Discussions: Array<Discussion>;
  DiscussionsAggregate?: Maybe<UserDiscussionDiscussionsAggregationSelection>;
  DiscussionsConnection: UserDiscussionsConnection;
  Email?: Maybe<Email>;
  EmailAggregate?: Maybe<UserEmailEmailAggregationSelection>;
  EmailConnection: UserEmailConnection;
  Events: Array<Event>;
  EventsAggregate?: Maybe<UserEventEventsAggregationSelection>;
  EventsConnection: UserEventsConnection;
  FavoriteChannels: Array<Channel>;
  FavoriteChannelsAggregate?: Maybe<UserChannelFavoriteChannelsAggregationSelection>;
  FavoriteChannelsConnection: UserFavoriteChannelsConnection;
  Feeds: Array<Feed>;
  FeedsAggregate?: Maybe<UserFeedFeedsAggregationSelection>;
  FeedsConnection: UserFeedsConnection;
  IsBlockedBy?: Maybe<User>;
  IsBlockedByAggregate?: Maybe<UserUserIsBlockedByAggregationSelection>;
  IsBlockedByConnection: UserIsBlockedByConnection;
  IssueComments: Array<Comment>;
  IssueCommentsAggregate?: Maybe<UserCommentIssueCommentsAggregationSelection>;
  IssueCommentsConnection: UserIssueCommentsConnection;
  Issues: Array<Issue>;
  IssuesAggregate?: Maybe<UserIssueIssuesAggregationSelection>;
  IssuesConnection: UserIssuesConnection;
  ModOfChannels: Array<Channel>;
  ModOfChannelsAggregate?: Maybe<UserChannelModOfChannelsAggregationSelection>;
  ModOfChannelsConnection: UserModOfChannelsConnection;
  ModerationProfile?: Maybe<ModerationProfile>;
  ModerationProfileAggregate?: Maybe<UserModerationProfileModerationProfileAggregationSelection>;
  ModerationProfileConnection: UserModerationProfileConnection;
  NotificationBundleInterval?: Maybe<Scalars['String']['output']>;
  Notifications: Array<Notification>;
  NotificationsAggregate?: Maybe<UserNotificationNotificationsAggregationSelection>;
  NotificationsConnection: UserNotificationsConnection;
  PendingModInvites: Array<Channel>;
  PendingModInvitesAggregate?: Maybe<UserChannelPendingModInvitesAggregationSelection>;
  PendingModInvitesConnection: UserPendingModInvitesConnection;
  PendingOwnerInvites: Array<Channel>;
  PendingOwnerInvitesAggregate?: Maybe<UserChannelPendingOwnerInvitesAggregationSelection>;
  PendingOwnerInvitesConnection: UserPendingOwnerInvitesConnection;
  PreferredTimeZone?: Maybe<Scalars['String']['output']>;
  RecentlyVisitedChannels: Array<Channel>;
  RecentlyVisitedChannelsAggregate?: Maybe<UserChannelRecentlyVisitedChannelsAggregationSelection>;
  RecentlyVisitedChannelsConnection: UserRecentlyVisitedChannelsConnection;
  ServerRoles: Array<ServerRole>;
  ServerRolesAggregate?: Maybe<UserServerRoleServerRolesAggregationSelection>;
  ServerRolesConnection: UserServerRolesConnection;
  Suspensions: Array<Suspension>;
  SuspensionsAggregate?: Maybe<UserSuspensionSuspensionsAggregationSelection>;
  SuspensionsConnection: UserSuspensionsConnection;
  UpvotedComments: Array<Comment>;
  UpvotedCommentsAggregate?: Maybe<UserCommentUpvotedCommentsAggregationSelection>;
  UpvotedCommentsConnection: UserUpvotedCommentsConnection;
  UpvotedDiscussionChannels: Array<DiscussionChannel>;
  UpvotedDiscussionChannelsAggregate?: Maybe<UserDiscussionChannelUpvotedDiscussionChannelsAggregationSelection>;
  UpvotedDiscussionChannelsConnection: UserUpvotedDiscussionChannelsConnection;
  bio?: Maybe<Scalars['String']['output']>;
  commentKarma?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['DateTime']['output'];
  deleted?: Maybe<Scalars['Boolean']['output']>;
  discussionKarma?: Maybe<Scalars['Int']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  enableSensitiveContentByDefault?: Maybe<Scalars['Boolean']['output']>;
  location?: Maybe<Scalars['String']['output']>;
  profilePicURL?: Maybe<Scalars['String']['output']>;
  pronouns?: Maybe<Scalars['String']['output']>;
  username: Scalars['String']['output'];
};


export type UserAdminOfChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserAdminOfChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserAdminOfChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserAdminOfChannelsConnectionSort>>;
  where?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
};


export type UserAlbumsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<AlbumOptions>;
  where?: InputMaybe<AlbumWhere>;
};


export type UserAlbumsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<AlbumWhere>;
};


export type UserAlbumsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserAlbumsConnectionSort>>;
  where?: InputMaybe<UserAlbumsConnectionWhere>;
};


export type UserBlockedArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type UserBlockedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type UserBlockedConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserBlockedConnectionSort>>;
  where?: InputMaybe<UserBlockedConnectionWhere>;
};


export type UserChannelRolesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelRoleOptions>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type UserChannelRolesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelRoleWhere>;
};


export type UserChannelRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserChannelRolesConnectionSort>>;
  where?: InputMaybe<UserChannelRolesConnectionWhere>;
};


export type UserCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type UserCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type UserCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserCommentsConnectionSort>>;
  where?: InputMaybe<UserCommentsConnectionWhere>;
};


export type UserCreatedFeedsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<FeedOptions>;
  where?: InputMaybe<FeedWhere>;
};


export type UserCreatedFeedsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<FeedWhere>;
};


export type UserCreatedFeedsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserCreatedFeedsConnectionSort>>;
  where?: InputMaybe<UserCreatedFeedsConnectionWhere>;
};


export type UserDefaultFeedArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<FeedOptions>;
  where?: InputMaybe<FeedWhere>;
};


export type UserDefaultFeedAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<FeedWhere>;
};


export type UserDefaultFeedConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserDefaultFeedConnectionSort>>;
  where?: InputMaybe<UserDefaultFeedConnectionWhere>;
};


export type UserDiscussionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionOptions>;
  where?: InputMaybe<DiscussionWhere>;
};


export type UserDiscussionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionWhere>;
};


export type UserDiscussionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserDiscussionsConnectionSort>>;
  where?: InputMaybe<UserDiscussionsConnectionWhere>;
};


export type UserEmailArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EmailOptions>;
  where?: InputMaybe<EmailWhere>;
};


export type UserEmailAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EmailWhere>;
};


export type UserEmailConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserEmailConnectionSort>>;
  where?: InputMaybe<UserEmailConnectionWhere>;
};


export type UserEventsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<EventOptions>;
  where?: InputMaybe<EventWhere>;
};


export type UserEventsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<EventWhere>;
};


export type UserEventsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserEventsConnectionSort>>;
  where?: InputMaybe<UserEventsConnectionWhere>;
};


export type UserFavoriteChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserFavoriteChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserFavoriteChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserFavoriteChannelsConnectionSort>>;
  where?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
};


export type UserFeedsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<FeedOptions>;
  where?: InputMaybe<FeedWhere>;
};


export type UserFeedsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<FeedWhere>;
};


export type UserFeedsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserFeedsConnectionSort>>;
  where?: InputMaybe<UserFeedsConnectionWhere>;
};


export type UserIsBlockedByArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<UserOptions>;
  where?: InputMaybe<UserWhere>;
};


export type UserIsBlockedByAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<UserWhere>;
};


export type UserIsBlockedByConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserIsBlockedByConnectionSort>>;
  where?: InputMaybe<UserIsBlockedByConnectionWhere>;
};


export type UserIssueCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type UserIssueCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type UserIssueCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserIssueCommentsConnectionSort>>;
  where?: InputMaybe<UserIssueCommentsConnectionWhere>;
};


export type UserIssuesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<IssueOptions>;
  where?: InputMaybe<IssueWhere>;
};


export type UserIssuesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<IssueWhere>;
};


export type UserIssuesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserIssuesConnectionSort>>;
  where?: InputMaybe<UserIssuesConnectionWhere>;
};


export type UserModOfChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserModOfChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserModOfChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserModOfChannelsConnectionSort>>;
  where?: InputMaybe<UserModOfChannelsConnectionWhere>;
};


export type UserModerationProfileArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ModerationProfileOptions>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type UserModerationProfileAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ModerationProfileWhere>;
};


export type UserModerationProfileConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserModerationProfileConnectionSort>>;
  where?: InputMaybe<UserModerationProfileConnectionWhere>;
};


export type UserNotificationsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<NotificationOptions>;
  where?: InputMaybe<NotificationWhere>;
};


export type UserNotificationsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<NotificationWhere>;
};


export type UserNotificationsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserNotificationsConnectionSort>>;
  where?: InputMaybe<UserNotificationsConnectionWhere>;
};


export type UserPendingModInvitesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserPendingModInvitesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserPendingModInvitesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserPendingModInvitesConnectionSort>>;
  where?: InputMaybe<UserPendingModInvitesConnectionWhere>;
};


export type UserPendingOwnerInvitesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserPendingOwnerInvitesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserPendingOwnerInvitesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserPendingOwnerInvitesConnectionSort>>;
  where?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
};


export type UserRecentlyVisitedChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ChannelOptions>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserRecentlyVisitedChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ChannelWhere>;
};


export type UserRecentlyVisitedChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectionSort>>;
  where?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
};


export type UserServerRolesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<ServerRoleOptions>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type UserServerRolesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<ServerRoleWhere>;
};


export type UserServerRolesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserServerRolesConnectionSort>>;
  where?: InputMaybe<UserServerRolesConnectionWhere>;
};


export type UserSuspensionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<SuspensionOptions>;
  where?: InputMaybe<SuspensionWhere>;
};


export type UserSuspensionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<SuspensionWhere>;
};


export type UserSuspensionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserSuspensionsConnectionSort>>;
  where?: InputMaybe<UserSuspensionsConnectionWhere>;
};


export type UserUpvotedCommentsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<CommentOptions>;
  where?: InputMaybe<CommentWhere>;
};


export type UserUpvotedCommentsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<CommentWhere>;
};


export type UserUpvotedCommentsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserUpvotedCommentsConnectionSort>>;
  where?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
};


export type UserUpvotedDiscussionChannelsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<DiscussionChannelOptions>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type UserUpvotedDiscussionChannelsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<DiscussionChannelWhere>;
};


export type UserUpvotedDiscussionChannelsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectionSort>>;
  where?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
};

export type UserAdminOfChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserAdminOfChannelsAggregateInput>>;
  NOT?: InputMaybe<UserAdminOfChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserAdminOfChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserAdminOfChannelsNodeAggregationWhereInput>;
};

export type UserAdminOfChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserAdminOfChannelsConnectOrCreateFieldInput = {
  onCreate: UserAdminOfChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserAdminOfChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserAdminOfChannelsConnection = {
  __typename?: 'UserAdminOfChannelsConnection';
  edges: Array<UserAdminOfChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserAdminOfChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserAdminOfChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserAdminOfChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserAdminOfChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserAdminOfChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserAdminOfChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
};

export type UserAdminOfChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
};

export type UserAdminOfChannelsFieldInput = {
  connect?: InputMaybe<Array<UserAdminOfChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserAdminOfChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserAdminOfChannelsCreateFieldInput>>;
};

export type UserAdminOfChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserAdminOfChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserAdminOfChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserAdminOfChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserAdminOfChannelsRelationship = {
  __typename?: 'UserAdminOfChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserAdminOfChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserAdminOfChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserAdminOfChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserAdminOfChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserAdminOfChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserAdminOfChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserAdminOfChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserAdminOfChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
};

export type UserAggregateSelection = {
  __typename?: 'UserAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type UserAlbumAlbumsAggregationSelection = {
  __typename?: 'UserAlbumAlbumsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserAlbumAlbumsNodeAggregateSelection>;
};

export type UserAlbumAlbumsNodeAggregateSelection = {
  __typename?: 'UserAlbumAlbumsNodeAggregateSelection';
  id: IdAggregateSelection;
};

export type UserAlbumsAggregateInput = {
  AND?: InputMaybe<Array<UserAlbumsAggregateInput>>;
  NOT?: InputMaybe<UserAlbumsAggregateInput>;
  OR?: InputMaybe<Array<UserAlbumsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserAlbumsNodeAggregationWhereInput>;
};

export type UserAlbumsConnectFieldInput = {
  connect?: InputMaybe<Array<AlbumConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<AlbumConnectWhere>;
};

export type UserAlbumsConnection = {
  __typename?: 'UserAlbumsConnection';
  edges: Array<UserAlbumsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserAlbumsConnectionSort = {
  node?: InputMaybe<AlbumSort>;
};

export type UserAlbumsConnectionWhere = {
  AND?: InputMaybe<Array<UserAlbumsConnectionWhere>>;
  NOT?: InputMaybe<UserAlbumsConnectionWhere>;
  OR?: InputMaybe<Array<UserAlbumsConnectionWhere>>;
  node?: InputMaybe<AlbumWhere>;
};

export type UserAlbumsCreateFieldInput = {
  node: AlbumCreateInput;
};

export type UserAlbumsDeleteFieldInput = {
  delete?: InputMaybe<AlbumDeleteInput>;
  where?: InputMaybe<UserAlbumsConnectionWhere>;
};

export type UserAlbumsDisconnectFieldInput = {
  disconnect?: InputMaybe<AlbumDisconnectInput>;
  where?: InputMaybe<UserAlbumsConnectionWhere>;
};

export type UserAlbumsFieldInput = {
  connect?: InputMaybe<Array<UserAlbumsConnectFieldInput>>;
  create?: InputMaybe<Array<UserAlbumsCreateFieldInput>>;
};

export type UserAlbumsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserAlbumsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserAlbumsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserAlbumsNodeAggregationWhereInput>>;
};

export type UserAlbumsRelationship = {
  __typename?: 'UserAlbumsRelationship';
  cursor: Scalars['String']['output'];
  node: Album;
};

export type UserAlbumsUpdateConnectionInput = {
  node?: InputMaybe<AlbumUpdateInput>;
};

export type UserAlbumsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserAlbumsConnectFieldInput>>;
  create?: InputMaybe<Array<UserAlbumsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserAlbumsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserAlbumsDisconnectFieldInput>>;
  update?: InputMaybe<UserAlbumsUpdateConnectionInput>;
  where?: InputMaybe<UserAlbumsConnectionWhere>;
};

export type UserBlockedAggregateInput = {
  AND?: InputMaybe<Array<UserBlockedAggregateInput>>;
  NOT?: InputMaybe<UserBlockedAggregateInput>;
  OR?: InputMaybe<Array<UserBlockedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserBlockedNodeAggregationWhereInput>;
};

export type UserBlockedConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type UserBlockedConnectOrCreateFieldInput = {
  onCreate: UserBlockedConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type UserBlockedConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type UserBlockedConnection = {
  __typename?: 'UserBlockedConnection';
  edges: Array<UserBlockedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserBlockedConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type UserBlockedConnectionWhere = {
  AND?: InputMaybe<Array<UserBlockedConnectionWhere>>;
  NOT?: InputMaybe<UserBlockedConnectionWhere>;
  OR?: InputMaybe<Array<UserBlockedConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type UserBlockedCreateFieldInput = {
  node: UserCreateInput;
};

export type UserBlockedDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserBlockedConnectionWhere>;
};

export type UserBlockedDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserBlockedConnectionWhere>;
};

export type UserBlockedFieldInput = {
  connect?: InputMaybe<UserBlockedConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserBlockedConnectOrCreateFieldInput>;
  create?: InputMaybe<UserBlockedCreateFieldInput>;
};

export type UserBlockedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserBlockedNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<UserBlockedNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<UserBlockedNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserBlockedRelationship = {
  __typename?: 'UserBlockedRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type UserBlockedUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type UserBlockedUpdateFieldInput = {
  connect?: InputMaybe<UserBlockedConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserBlockedConnectOrCreateFieldInput>;
  create?: InputMaybe<UserBlockedCreateFieldInput>;
  delete?: InputMaybe<UserBlockedDeleteFieldInput>;
  disconnect?: InputMaybe<UserBlockedDisconnectFieldInput>;
  update?: InputMaybe<UserBlockedUpdateConnectionInput>;
  where?: InputMaybe<UserBlockedConnectionWhere>;
};

export type UserChannelAdminOfChannelsAggregationSelection = {
  __typename?: 'UserChannelAdminOfChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelAdminOfChannelsNodeAggregateSelection>;
};

export type UserChannelAdminOfChannelsNodeAggregateSelection = {
  __typename?: 'UserChannelAdminOfChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelFavoriteChannelsAggregationSelection = {
  __typename?: 'UserChannelFavoriteChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelFavoriteChannelsNodeAggregateSelection>;
};

export type UserChannelFavoriteChannelsNodeAggregateSelection = {
  __typename?: 'UserChannelFavoriteChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelModOfChannelsAggregationSelection = {
  __typename?: 'UserChannelModOfChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelModOfChannelsNodeAggregateSelection>;
};

export type UserChannelModOfChannelsNodeAggregateSelection = {
  __typename?: 'UserChannelModOfChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelPendingModInvitesAggregationSelection = {
  __typename?: 'UserChannelPendingModInvitesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelPendingModInvitesNodeAggregateSelection>;
};

export type UserChannelPendingModInvitesNodeAggregateSelection = {
  __typename?: 'UserChannelPendingModInvitesNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelPendingOwnerInvitesAggregationSelection = {
  __typename?: 'UserChannelPendingOwnerInvitesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelPendingOwnerInvitesNodeAggregateSelection>;
};

export type UserChannelPendingOwnerInvitesNodeAggregateSelection = {
  __typename?: 'UserChannelPendingOwnerInvitesNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelRecentlyVisitedChannelsAggregationSelection = {
  __typename?: 'UserChannelRecentlyVisitedChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelRecentlyVisitedChannelsNodeAggregateSelection>;
};

export type UserChannelRecentlyVisitedChannelsNodeAggregateSelection = {
  __typename?: 'UserChannelRecentlyVisitedChannelsNodeAggregateSelection';
  channelBannerURL: StringAggregateSelection;
  channelIconURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  displayName: StringAggregateSelection;
  uniqueName: StringAggregateSelection;
};

export type UserChannelRoleChannelRolesAggregationSelection = {
  __typename?: 'UserChannelRoleChannelRolesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserChannelRoleChannelRolesNodeAggregateSelection>;
};

export type UserChannelRoleChannelRolesNodeAggregateSelection = {
  __typename?: 'UserChannelRoleChannelRolesNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type UserChannelRolesAggregateInput = {
  AND?: InputMaybe<Array<UserChannelRolesAggregateInput>>;
  NOT?: InputMaybe<UserChannelRolesAggregateInput>;
  OR?: InputMaybe<Array<UserChannelRolesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserChannelRolesNodeAggregationWhereInput>;
};

export type UserChannelRolesConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelRoleConnectWhere>;
};

export type UserChannelRolesConnectOrCreateFieldInput = {
  onCreate: UserChannelRolesConnectOrCreateFieldInputOnCreate;
  where: ChannelRoleConnectOrCreateWhere;
};

export type UserChannelRolesConnectOrCreateFieldInputOnCreate = {
  node: ChannelRoleOnCreateInput;
};

export type UserChannelRolesConnection = {
  __typename?: 'UserChannelRolesConnection';
  edges: Array<UserChannelRolesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserChannelRolesConnectionSort = {
  node?: InputMaybe<ChannelRoleSort>;
};

export type UserChannelRolesConnectionWhere = {
  AND?: InputMaybe<Array<UserChannelRolesConnectionWhere>>;
  NOT?: InputMaybe<UserChannelRolesConnectionWhere>;
  OR?: InputMaybe<Array<UserChannelRolesConnectionWhere>>;
  node?: InputMaybe<ChannelRoleWhere>;
};

export type UserChannelRolesCreateFieldInput = {
  node: ChannelRoleCreateInput;
};

export type UserChannelRolesDeleteFieldInput = {
  where?: InputMaybe<UserChannelRolesConnectionWhere>;
};

export type UserChannelRolesDisconnectFieldInput = {
  where?: InputMaybe<UserChannelRolesConnectionWhere>;
};

export type UserChannelRolesFieldInput = {
  connect?: InputMaybe<Array<UserChannelRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserChannelRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserChannelRolesCreateFieldInput>>;
};

export type UserChannelRolesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserChannelRolesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserChannelRolesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserChannelRolesNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserChannelRolesRelationship = {
  __typename?: 'UserChannelRolesRelationship';
  cursor: Scalars['String']['output'];
  node: ChannelRole;
};

export type UserChannelRolesUpdateConnectionInput = {
  node?: InputMaybe<ChannelRoleUpdateInput>;
};

export type UserChannelRolesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserChannelRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserChannelRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserChannelRolesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserChannelRolesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserChannelRolesDisconnectFieldInput>>;
  update?: InputMaybe<UserChannelRolesUpdateConnectionInput>;
  where?: InputMaybe<UserChannelRolesConnectionWhere>;
};

export type UserCommentCommentsAggregationSelection = {
  __typename?: 'UserCommentCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserCommentCommentsNodeAggregateSelection>;
};

export type UserCommentCommentsNodeAggregateSelection = {
  __typename?: 'UserCommentCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type UserCommentIssueCommentsAggregationSelection = {
  __typename?: 'UserCommentIssueCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserCommentIssueCommentsNodeAggregateSelection>;
};

export type UserCommentIssueCommentsNodeAggregateSelection = {
  __typename?: 'UserCommentIssueCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type UserCommentUpvotedCommentsAggregationSelection = {
  __typename?: 'UserCommentUpvotedCommentsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserCommentUpvotedCommentsNodeAggregateSelection>;
};

export type UserCommentUpvotedCommentsNodeAggregateSelection = {
  __typename?: 'UserCommentUpvotedCommentsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type UserCommentsAggregateInput = {
  AND?: InputMaybe<Array<UserCommentsAggregateInput>>;
  NOT?: InputMaybe<UserCommentsAggregateInput>;
  OR?: InputMaybe<Array<UserCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserCommentsNodeAggregationWhereInput>;
};

export type UserCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type UserCommentsConnection = {
  __typename?: 'UserCommentsConnection';
  edges: Array<UserCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type UserCommentsConnectionWhere = {
  AND?: InputMaybe<Array<UserCommentsConnectionWhere>>;
  NOT?: InputMaybe<UserCommentsConnectionWhere>;
  OR?: InputMaybe<Array<UserCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type UserCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type UserCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<UserCommentsConnectionWhere>;
};

export type UserCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<UserCommentsConnectionWhere>;
};

export type UserCommentsFieldInput = {
  connect?: InputMaybe<Array<UserCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserCommentsCreateFieldInput>>;
};

export type UserCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type UserCommentsRelationship = {
  __typename?: 'UserCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type UserCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type UserCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserCommentsDisconnectFieldInput>>;
  update?: InputMaybe<UserCommentsUpdateConnectionInput>;
  where?: InputMaybe<UserCommentsConnectionWhere>;
};

export type UserConnectInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsConnectFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsConnectFieldInput>>;
  Blocked?: InputMaybe<UserBlockedConnectFieldInput>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesConnectFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsConnectFieldInput>>;
  CreatedFeeds?: InputMaybe<Array<UserCreatedFeedsConnectFieldInput>>;
  DefaultFeed?: InputMaybe<UserDefaultFeedConnectFieldInput>;
  Discussions?: InputMaybe<Array<UserDiscussionsConnectFieldInput>>;
  Email?: InputMaybe<UserEmailConnectFieldInput>;
  Events?: InputMaybe<Array<UserEventsConnectFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsConnectFieldInput>>;
  Feeds?: InputMaybe<Array<UserFeedsConnectFieldInput>>;
  IsBlockedBy?: InputMaybe<UserIsBlockedByConnectFieldInput>;
  IssueComments?: InputMaybe<Array<UserIssueCommentsConnectFieldInput>>;
  Issues?: InputMaybe<Array<UserIssuesConnectFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsConnectFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileConnectFieldInput>;
  Notifications?: InputMaybe<Array<UserNotificationsConnectFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesConnectFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesConnectFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesConnectFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsConnectFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsConnectFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectFieldInput>>;
};

export type UserConnectOrCreateInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsConnectOrCreateFieldInput>>;
  Blocked?: InputMaybe<UserBlockedConnectOrCreateFieldInput>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesConnectOrCreateFieldInput>>;
  Email?: InputMaybe<UserEmailConnectOrCreateFieldInput>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsConnectOrCreateFieldInput>>;
  IsBlockedBy?: InputMaybe<UserIsBlockedByConnectOrCreateFieldInput>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsConnectOrCreateFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileConnectOrCreateFieldInput>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesConnectOrCreateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesConnectOrCreateFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectOrCreateFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesConnectOrCreateFieldInput>>;
};

export type UserConnectOrCreateWhere = {
  node: UserUniqueWhere;
};

export type UserConnectWhere = {
  node: UserWhere;
};

export type UserCreateInput = {
  AdminOfChannels?: InputMaybe<UserAdminOfChannelsFieldInput>;
  Albums?: InputMaybe<UserAlbumsFieldInput>;
  Blocked?: InputMaybe<UserBlockedFieldInput>;
  ChannelRoles?: InputMaybe<UserChannelRolesFieldInput>;
  Comments?: InputMaybe<UserCommentsFieldInput>;
  CreatedFeeds?: InputMaybe<UserCreatedFeedsFieldInput>;
  DefaultEmojiSkinTone?: InputMaybe<Scalars['String']['input']>;
  DefaultFeed?: InputMaybe<UserDefaultFeedFieldInput>;
  Discussions?: InputMaybe<UserDiscussionsFieldInput>;
  Email?: InputMaybe<UserEmailFieldInput>;
  Events?: InputMaybe<UserEventsFieldInput>;
  FavoriteChannels?: InputMaybe<UserFavoriteChannelsFieldInput>;
  Feeds?: InputMaybe<UserFeedsFieldInput>;
  IsBlockedBy?: InputMaybe<UserIsBlockedByFieldInput>;
  IssueComments?: InputMaybe<UserIssueCommentsFieldInput>;
  Issues?: InputMaybe<UserIssuesFieldInput>;
  ModOfChannels?: InputMaybe<UserModOfChannelsFieldInput>;
  ModerationProfile?: InputMaybe<UserModerationProfileFieldInput>;
  NotificationBundleInterval?: InputMaybe<Scalars['String']['input']>;
  Notifications?: InputMaybe<UserNotificationsFieldInput>;
  PendingModInvites?: InputMaybe<UserPendingModInvitesFieldInput>;
  PendingOwnerInvites?: InputMaybe<UserPendingOwnerInvitesFieldInput>;
  PreferredTimeZone?: InputMaybe<Scalars['String']['input']>;
  RecentlyVisitedChannels?: InputMaybe<UserRecentlyVisitedChannelsFieldInput>;
  ServerRoles?: InputMaybe<UserServerRolesFieldInput>;
  Suspensions?: InputMaybe<UserSuspensionsFieldInput>;
  UpvotedComments?: InputMaybe<UserUpvotedCommentsFieldInput>;
  UpvotedDiscussionChannels?: InputMaybe<UserUpvotedDiscussionChannelsFieldInput>;
  bio?: InputMaybe<Scalars['String']['input']>;
  commentKarma?: InputMaybe<Scalars['Int']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discussionKarma?: InputMaybe<Scalars['Int']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  enableSensitiveContentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  profilePicURL?: InputMaybe<Scalars['String']['input']>;
  pronouns?: InputMaybe<Scalars['String']['input']>;
  username: Scalars['String']['input'];
};

export type UserCreatedFeedsAggregateInput = {
  AND?: InputMaybe<Array<UserCreatedFeedsAggregateInput>>;
  NOT?: InputMaybe<UserCreatedFeedsAggregateInput>;
  OR?: InputMaybe<Array<UserCreatedFeedsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserCreatedFeedsNodeAggregationWhereInput>;
};

export type UserCreatedFeedsConnectFieldInput = {
  connect?: InputMaybe<Array<FeedConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<FeedConnectWhere>;
};

export type UserCreatedFeedsConnection = {
  __typename?: 'UserCreatedFeedsConnection';
  edges: Array<UserCreatedFeedsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserCreatedFeedsConnectionSort = {
  node?: InputMaybe<FeedSort>;
};

export type UserCreatedFeedsConnectionWhere = {
  AND?: InputMaybe<Array<UserCreatedFeedsConnectionWhere>>;
  NOT?: InputMaybe<UserCreatedFeedsConnectionWhere>;
  OR?: InputMaybe<Array<UserCreatedFeedsConnectionWhere>>;
  node?: InputMaybe<FeedWhere>;
};

export type UserCreatedFeedsCreateFieldInput = {
  node: FeedCreateInput;
};

export type UserCreatedFeedsDeleteFieldInput = {
  delete?: InputMaybe<FeedDeleteInput>;
  where?: InputMaybe<UserCreatedFeedsConnectionWhere>;
};

export type UserCreatedFeedsDisconnectFieldInput = {
  disconnect?: InputMaybe<FeedDisconnectInput>;
  where?: InputMaybe<UserCreatedFeedsConnectionWhere>;
};

export type UserCreatedFeedsFieldInput = {
  connect?: InputMaybe<Array<UserCreatedFeedsConnectFieldInput>>;
  create?: InputMaybe<Array<UserCreatedFeedsCreateFieldInput>>;
};

export type UserCreatedFeedsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserCreatedFeedsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserCreatedFeedsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserCreatedFeedsNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserCreatedFeedsRelationship = {
  __typename?: 'UserCreatedFeedsRelationship';
  cursor: Scalars['String']['output'];
  node: Feed;
};

export type UserCreatedFeedsUpdateConnectionInput = {
  node?: InputMaybe<FeedUpdateInput>;
};

export type UserCreatedFeedsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserCreatedFeedsConnectFieldInput>>;
  create?: InputMaybe<Array<UserCreatedFeedsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserCreatedFeedsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserCreatedFeedsDisconnectFieldInput>>;
  update?: InputMaybe<UserCreatedFeedsUpdateConnectionInput>;
  where?: InputMaybe<UserCreatedFeedsConnectionWhere>;
};

export type UserDefaultFeedAggregateInput = {
  AND?: InputMaybe<Array<UserDefaultFeedAggregateInput>>;
  NOT?: InputMaybe<UserDefaultFeedAggregateInput>;
  OR?: InputMaybe<Array<UserDefaultFeedAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserDefaultFeedNodeAggregationWhereInput>;
};

export type UserDefaultFeedConnectFieldInput = {
  connect?: InputMaybe<FeedConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<FeedConnectWhere>;
};

export type UserDefaultFeedConnection = {
  __typename?: 'UserDefaultFeedConnection';
  edges: Array<UserDefaultFeedRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserDefaultFeedConnectionSort = {
  node?: InputMaybe<FeedSort>;
};

export type UserDefaultFeedConnectionWhere = {
  AND?: InputMaybe<Array<UserDefaultFeedConnectionWhere>>;
  NOT?: InputMaybe<UserDefaultFeedConnectionWhere>;
  OR?: InputMaybe<Array<UserDefaultFeedConnectionWhere>>;
  node?: InputMaybe<FeedWhere>;
};

export type UserDefaultFeedCreateFieldInput = {
  node: FeedCreateInput;
};

export type UserDefaultFeedDeleteFieldInput = {
  delete?: InputMaybe<FeedDeleteInput>;
  where?: InputMaybe<UserDefaultFeedConnectionWhere>;
};

export type UserDefaultFeedDisconnectFieldInput = {
  disconnect?: InputMaybe<FeedDisconnectInput>;
  where?: InputMaybe<UserDefaultFeedConnectionWhere>;
};

export type UserDefaultFeedFieldInput = {
  connect?: InputMaybe<UserDefaultFeedConnectFieldInput>;
  create?: InputMaybe<UserDefaultFeedCreateFieldInput>;
};

export type UserDefaultFeedNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserDefaultFeedNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserDefaultFeedNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserDefaultFeedNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserDefaultFeedRelationship = {
  __typename?: 'UserDefaultFeedRelationship';
  cursor: Scalars['String']['output'];
  node: Feed;
};

export type UserDefaultFeedUpdateConnectionInput = {
  node?: InputMaybe<FeedUpdateInput>;
};

export type UserDefaultFeedUpdateFieldInput = {
  connect?: InputMaybe<UserDefaultFeedConnectFieldInput>;
  create?: InputMaybe<UserDefaultFeedCreateFieldInput>;
  delete?: InputMaybe<UserDefaultFeedDeleteFieldInput>;
  disconnect?: InputMaybe<UserDefaultFeedDisconnectFieldInput>;
  update?: InputMaybe<UserDefaultFeedUpdateConnectionInput>;
  where?: InputMaybe<UserDefaultFeedConnectionWhere>;
};

export type UserDeleteInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsDeleteFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsDeleteFieldInput>>;
  Blocked?: InputMaybe<UserBlockedDeleteFieldInput>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesDeleteFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsDeleteFieldInput>>;
  CreatedFeeds?: InputMaybe<Array<UserCreatedFeedsDeleteFieldInput>>;
  DefaultFeed?: InputMaybe<UserDefaultFeedDeleteFieldInput>;
  Discussions?: InputMaybe<Array<UserDiscussionsDeleteFieldInput>>;
  Email?: InputMaybe<UserEmailDeleteFieldInput>;
  Events?: InputMaybe<Array<UserEventsDeleteFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsDeleteFieldInput>>;
  Feeds?: InputMaybe<Array<UserFeedsDeleteFieldInput>>;
  IsBlockedBy?: InputMaybe<UserIsBlockedByDeleteFieldInput>;
  IssueComments?: InputMaybe<Array<UserIssueCommentsDeleteFieldInput>>;
  Issues?: InputMaybe<Array<UserIssuesDeleteFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsDeleteFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileDeleteFieldInput>;
  Notifications?: InputMaybe<Array<UserNotificationsDeleteFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesDeleteFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesDeleteFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsDeleteFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesDeleteFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsDeleteFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsDeleteFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsDeleteFieldInput>>;
};

export type UserDisconnectInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsDisconnectFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsDisconnectFieldInput>>;
  Blocked?: InputMaybe<UserBlockedDisconnectFieldInput>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesDisconnectFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsDisconnectFieldInput>>;
  CreatedFeeds?: InputMaybe<Array<UserCreatedFeedsDisconnectFieldInput>>;
  DefaultFeed?: InputMaybe<UserDefaultFeedDisconnectFieldInput>;
  Discussions?: InputMaybe<Array<UserDiscussionsDisconnectFieldInput>>;
  Email?: InputMaybe<UserEmailDisconnectFieldInput>;
  Events?: InputMaybe<Array<UserEventsDisconnectFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsDisconnectFieldInput>>;
  Feeds?: InputMaybe<Array<UserFeedsDisconnectFieldInput>>;
  IsBlockedBy?: InputMaybe<UserIsBlockedByDisconnectFieldInput>;
  IssueComments?: InputMaybe<Array<UserIssueCommentsDisconnectFieldInput>>;
  Issues?: InputMaybe<Array<UserIssuesDisconnectFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsDisconnectFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileDisconnectFieldInput>;
  Notifications?: InputMaybe<Array<UserNotificationsDisconnectFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesDisconnectFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesDisconnectFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsDisconnectFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesDisconnectFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsDisconnectFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsDisconnectFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsDisconnectFieldInput>>;
};

export type UserDiscussionChannelUpvotedDiscussionChannelsAggregationSelection = {
  __typename?: 'UserDiscussionChannelUpvotedDiscussionChannelsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserDiscussionChannelUpvotedDiscussionChannelsNodeAggregateSelection>;
};

export type UserDiscussionChannelUpvotedDiscussionChannelsNodeAggregateSelection = {
  __typename?: 'UserDiscussionChannelUpvotedDiscussionChannelsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionId: IdAggregateSelection;
  id: IdAggregateSelection;
  weightedVotesCount: FloatAggregateSelection;
};

export type UserDiscussionDiscussionsAggregationSelection = {
  __typename?: 'UserDiscussionDiscussionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserDiscussionDiscussionsNodeAggregateSelection>;
};

export type UserDiscussionDiscussionsNodeAggregateSelection = {
  __typename?: 'UserDiscussionDiscussionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type UserDiscussionsAggregateInput = {
  AND?: InputMaybe<Array<UserDiscussionsAggregateInput>>;
  NOT?: InputMaybe<UserDiscussionsAggregateInput>;
  OR?: InputMaybe<Array<UserDiscussionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserDiscussionsNodeAggregationWhereInput>;
};

export type UserDiscussionsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionConnectWhere>;
};

export type UserDiscussionsConnection = {
  __typename?: 'UserDiscussionsConnection';
  edges: Array<UserDiscussionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserDiscussionsConnectionSort = {
  node?: InputMaybe<DiscussionSort>;
};

export type UserDiscussionsConnectionWhere = {
  AND?: InputMaybe<Array<UserDiscussionsConnectionWhere>>;
  NOT?: InputMaybe<UserDiscussionsConnectionWhere>;
  OR?: InputMaybe<Array<UserDiscussionsConnectionWhere>>;
  node?: InputMaybe<DiscussionWhere>;
};

export type UserDiscussionsCreateFieldInput = {
  node: DiscussionCreateInput;
};

export type UserDiscussionsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionDeleteInput>;
  where?: InputMaybe<UserDiscussionsConnectionWhere>;
};

export type UserDiscussionsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionDisconnectInput>;
  where?: InputMaybe<UserDiscussionsConnectionWhere>;
};

export type UserDiscussionsFieldInput = {
  connect?: InputMaybe<Array<UserDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserDiscussionsCreateFieldInput>>;
};

export type UserDiscussionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserDiscussionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserDiscussionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserDiscussionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type UserDiscussionsRelationship = {
  __typename?: 'UserDiscussionsRelationship';
  cursor: Scalars['String']['output'];
  node: Discussion;
};

export type UserDiscussionsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionUpdateInput>;
};

export type UserDiscussionsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserDiscussionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserDiscussionsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserDiscussionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserDiscussionsDisconnectFieldInput>>;
  update?: InputMaybe<UserDiscussionsUpdateConnectionInput>;
  where?: InputMaybe<UserDiscussionsConnectionWhere>;
};

export type UserEdge = {
  __typename?: 'UserEdge';
  cursor: Scalars['String']['output'];
  node: User;
};

export type UserEmailAggregateInput = {
  AND?: InputMaybe<Array<UserEmailAggregateInput>>;
  NOT?: InputMaybe<UserEmailAggregateInput>;
  OR?: InputMaybe<Array<UserEmailAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserEmailNodeAggregationWhereInput>;
};

export type UserEmailConnectFieldInput = {
  connect?: InputMaybe<EmailConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EmailConnectWhere>;
};

export type UserEmailConnectOrCreateFieldInput = {
  onCreate: UserEmailConnectOrCreateFieldInputOnCreate;
  where: EmailConnectOrCreateWhere;
};

export type UserEmailConnectOrCreateFieldInputOnCreate = {
  node: EmailOnCreateInput;
};

export type UserEmailConnection = {
  __typename?: 'UserEmailConnection';
  edges: Array<UserEmailRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserEmailConnectionSort = {
  node?: InputMaybe<EmailSort>;
};

export type UserEmailConnectionWhere = {
  AND?: InputMaybe<Array<UserEmailConnectionWhere>>;
  NOT?: InputMaybe<UserEmailConnectionWhere>;
  OR?: InputMaybe<Array<UserEmailConnectionWhere>>;
  node?: InputMaybe<EmailWhere>;
};

export type UserEmailCreateFieldInput = {
  node: EmailCreateInput;
};

export type UserEmailDeleteFieldInput = {
  delete?: InputMaybe<EmailDeleteInput>;
  where?: InputMaybe<UserEmailConnectionWhere>;
};

export type UserEmailDisconnectFieldInput = {
  disconnect?: InputMaybe<EmailDisconnectInput>;
  where?: InputMaybe<UserEmailConnectionWhere>;
};

export type UserEmailEmailAggregationSelection = {
  __typename?: 'UserEmailEmailAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserEmailEmailNodeAggregateSelection>;
};

export type UserEmailEmailNodeAggregateSelection = {
  __typename?: 'UserEmailEmailNodeAggregateSelection';
  address: StringAggregateSelection;
};

export type UserEmailFieldInput = {
  connect?: InputMaybe<UserEmailConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserEmailConnectOrCreateFieldInput>;
  create?: InputMaybe<UserEmailCreateFieldInput>;
};

export type UserEmailNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserEmailNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserEmailNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserEmailNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserEmailRelationship = {
  __typename?: 'UserEmailRelationship';
  cursor: Scalars['String']['output'];
  node: Email;
};

export type UserEmailUpdateConnectionInput = {
  node?: InputMaybe<EmailUpdateInput>;
};

export type UserEmailUpdateFieldInput = {
  connect?: InputMaybe<UserEmailConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserEmailConnectOrCreateFieldInput>;
  create?: InputMaybe<UserEmailCreateFieldInput>;
  delete?: InputMaybe<UserEmailDeleteFieldInput>;
  disconnect?: InputMaybe<UserEmailDisconnectFieldInput>;
  update?: InputMaybe<UserEmailUpdateConnectionInput>;
  where?: InputMaybe<UserEmailConnectionWhere>;
};

export type UserEventEventsAggregationSelection = {
  __typename?: 'UserEventEventsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserEventEventsNodeAggregateSelection>;
};

export type UserEventEventsNodeAggregateSelection = {
  __typename?: 'UserEventEventsNodeAggregateSelection';
  address: StringAggregateSelection;
  cost: StringAggregateSelection;
  coverImageURL: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  description: StringAggregateSelection;
  endTime: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  locationName: StringAggregateSelection;
  placeId: StringAggregateSelection;
  startTime: DateTimeAggregateSelection;
  startTimeDayOfWeek: StringAggregateSelection;
  startTimeHourOfDay: IntAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
  virtualEventUrl: StringAggregateSelection;
};

export type UserEventsAggregateInput = {
  AND?: InputMaybe<Array<UserEventsAggregateInput>>;
  NOT?: InputMaybe<UserEventsAggregateInput>;
  OR?: InputMaybe<Array<UserEventsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserEventsNodeAggregationWhereInput>;
};

export type UserEventsConnectFieldInput = {
  connect?: InputMaybe<Array<EventConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<EventConnectWhere>;
};

export type UserEventsConnection = {
  __typename?: 'UserEventsConnection';
  edges: Array<UserEventsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserEventsConnectionSort = {
  node?: InputMaybe<EventSort>;
};

export type UserEventsConnectionWhere = {
  AND?: InputMaybe<Array<UserEventsConnectionWhere>>;
  NOT?: InputMaybe<UserEventsConnectionWhere>;
  OR?: InputMaybe<Array<UserEventsConnectionWhere>>;
  node?: InputMaybe<EventWhere>;
};

export type UserEventsCreateFieldInput = {
  node: EventCreateInput;
};

export type UserEventsDeleteFieldInput = {
  delete?: InputMaybe<EventDeleteInput>;
  where?: InputMaybe<UserEventsConnectionWhere>;
};

export type UserEventsDisconnectFieldInput = {
  disconnect?: InputMaybe<EventDisconnectInput>;
  where?: InputMaybe<UserEventsConnectionWhere>;
};

export type UserEventsFieldInput = {
  connect?: InputMaybe<Array<UserEventsConnectFieldInput>>;
  create?: InputMaybe<Array<UserEventsCreateFieldInput>>;
};

export type UserEventsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserEventsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserEventsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserEventsNodeAggregationWhereInput>>;
  address_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  address_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  address_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  address_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  cost_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  cost_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  cost_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  coverImageURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  coverImageURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  endTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  endTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  locationName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  locationName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  locationName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  locationName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  placeId_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  placeId_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  placeId_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeDayOfWeek_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  startTimeHourOfDay_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  startTimeHourOfDay_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  startTime_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  startTime_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  virtualEventUrl_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  virtualEventUrl_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserEventsRelationship = {
  __typename?: 'UserEventsRelationship';
  cursor: Scalars['String']['output'];
  node: Event;
};

export type UserEventsUpdateConnectionInput = {
  node?: InputMaybe<EventUpdateInput>;
};

export type UserEventsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserEventsConnectFieldInput>>;
  create?: InputMaybe<Array<UserEventsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserEventsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserEventsDisconnectFieldInput>>;
  update?: InputMaybe<UserEventsUpdateConnectionInput>;
  where?: InputMaybe<UserEventsConnectionWhere>;
};

export type UserFavoriteChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserFavoriteChannelsAggregateInput>>;
  NOT?: InputMaybe<UserFavoriteChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserFavoriteChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserFavoriteChannelsNodeAggregationWhereInput>;
};

export type UserFavoriteChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserFavoriteChannelsConnectOrCreateFieldInput = {
  onCreate: UserFavoriteChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserFavoriteChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserFavoriteChannelsConnection = {
  __typename?: 'UserFavoriteChannelsConnection';
  edges: Array<UserFavoriteChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserFavoriteChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserFavoriteChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserFavoriteChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserFavoriteChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserFavoriteChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserFavoriteChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
};

export type UserFavoriteChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
};

export type UserFavoriteChannelsFieldInput = {
  connect?: InputMaybe<Array<UserFavoriteChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserFavoriteChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserFavoriteChannelsCreateFieldInput>>;
};

export type UserFavoriteChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserFavoriteChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserFavoriteChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserFavoriteChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserFavoriteChannelsRelationship = {
  __typename?: 'UserFavoriteChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserFavoriteChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserFavoriteChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserFavoriteChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserFavoriteChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserFavoriteChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserFavoriteChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserFavoriteChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserFavoriteChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
};

export type UserFeedCreatedFeedsAggregationSelection = {
  __typename?: 'UserFeedCreatedFeedsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserFeedCreatedFeedsNodeAggregateSelection>;
};

export type UserFeedCreatedFeedsNodeAggregateSelection = {
  __typename?: 'UserFeedCreatedFeedsNodeAggregateSelection';
  description: StringAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type UserFeedDefaultFeedAggregationSelection = {
  __typename?: 'UserFeedDefaultFeedAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserFeedDefaultFeedNodeAggregateSelection>;
};

export type UserFeedDefaultFeedNodeAggregateSelection = {
  __typename?: 'UserFeedDefaultFeedNodeAggregateSelection';
  description: StringAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type UserFeedFeedsAggregationSelection = {
  __typename?: 'UserFeedFeedsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserFeedFeedsNodeAggregateSelection>;
};

export type UserFeedFeedsNodeAggregateSelection = {
  __typename?: 'UserFeedFeedsNodeAggregateSelection';
  description: StringAggregateSelection;
  id: IdAggregateSelection;
  title: StringAggregateSelection;
};

export type UserFeedsAggregateInput = {
  AND?: InputMaybe<Array<UserFeedsAggregateInput>>;
  NOT?: InputMaybe<UserFeedsAggregateInput>;
  OR?: InputMaybe<Array<UserFeedsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserFeedsNodeAggregationWhereInput>;
};

export type UserFeedsConnectFieldInput = {
  connect?: InputMaybe<Array<FeedConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<FeedConnectWhere>;
};

export type UserFeedsConnection = {
  __typename?: 'UserFeedsConnection';
  edges: Array<UserFeedsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserFeedsConnectionSort = {
  node?: InputMaybe<FeedSort>;
};

export type UserFeedsConnectionWhere = {
  AND?: InputMaybe<Array<UserFeedsConnectionWhere>>;
  NOT?: InputMaybe<UserFeedsConnectionWhere>;
  OR?: InputMaybe<Array<UserFeedsConnectionWhere>>;
  node?: InputMaybe<FeedWhere>;
};

export type UserFeedsCreateFieldInput = {
  node: FeedCreateInput;
};

export type UserFeedsDeleteFieldInput = {
  delete?: InputMaybe<FeedDeleteInput>;
  where?: InputMaybe<UserFeedsConnectionWhere>;
};

export type UserFeedsDisconnectFieldInput = {
  disconnect?: InputMaybe<FeedDisconnectInput>;
  where?: InputMaybe<UserFeedsConnectionWhere>;
};

export type UserFeedsFieldInput = {
  connect?: InputMaybe<Array<UserFeedsConnectFieldInput>>;
  create?: InputMaybe<Array<UserFeedsCreateFieldInput>>;
};

export type UserFeedsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserFeedsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserFeedsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserFeedsNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserFeedsRelationship = {
  __typename?: 'UserFeedsRelationship';
  cursor: Scalars['String']['output'];
  node: Feed;
};

export type UserFeedsUpdateConnectionInput = {
  node?: InputMaybe<FeedUpdateInput>;
};

export type UserFeedsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserFeedsConnectFieldInput>>;
  create?: InputMaybe<Array<UserFeedsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserFeedsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserFeedsDisconnectFieldInput>>;
  update?: InputMaybe<UserFeedsUpdateConnectionInput>;
  where?: InputMaybe<UserFeedsConnectionWhere>;
};

export type UserIsBlockedByAggregateInput = {
  AND?: InputMaybe<Array<UserIsBlockedByAggregateInput>>;
  NOT?: InputMaybe<UserIsBlockedByAggregateInput>;
  OR?: InputMaybe<Array<UserIsBlockedByAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserIsBlockedByNodeAggregationWhereInput>;
};

export type UserIsBlockedByConnectFieldInput = {
  connect?: InputMaybe<UserConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<UserConnectWhere>;
};

export type UserIsBlockedByConnectOrCreateFieldInput = {
  onCreate: UserIsBlockedByConnectOrCreateFieldInputOnCreate;
  where: UserConnectOrCreateWhere;
};

export type UserIsBlockedByConnectOrCreateFieldInputOnCreate = {
  node: UserOnCreateInput;
};

export type UserIsBlockedByConnection = {
  __typename?: 'UserIsBlockedByConnection';
  edges: Array<UserIsBlockedByRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserIsBlockedByConnectionSort = {
  node?: InputMaybe<UserSort>;
};

export type UserIsBlockedByConnectionWhere = {
  AND?: InputMaybe<Array<UserIsBlockedByConnectionWhere>>;
  NOT?: InputMaybe<UserIsBlockedByConnectionWhere>;
  OR?: InputMaybe<Array<UserIsBlockedByConnectionWhere>>;
  node?: InputMaybe<UserWhere>;
};

export type UserIsBlockedByCreateFieldInput = {
  node: UserCreateInput;
};

export type UserIsBlockedByDeleteFieldInput = {
  delete?: InputMaybe<UserDeleteInput>;
  where?: InputMaybe<UserIsBlockedByConnectionWhere>;
};

export type UserIsBlockedByDisconnectFieldInput = {
  disconnect?: InputMaybe<UserDisconnectInput>;
  where?: InputMaybe<UserIsBlockedByConnectionWhere>;
};

export type UserIsBlockedByFieldInput = {
  connect?: InputMaybe<UserIsBlockedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserIsBlockedByConnectOrCreateFieldInput>;
  create?: InputMaybe<UserIsBlockedByCreateFieldInput>;
};

export type UserIsBlockedByNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserIsBlockedByNodeAggregationWhereInput>>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  DefaultEmojiSkinTone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NOT?: InputMaybe<UserIsBlockedByNodeAggregationWhereInput>;
  NotificationBundleInterval_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  NotificationBundleInterval_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  OR?: InputMaybe<Array<UserIsBlockedByNodeAggregationWhereInput>>;
  PreferredTimeZone_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  PreferredTimeZone_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  bio_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  bio_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  bio_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  commentKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  discussionKarma_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  discussionKarma_MAX_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MAX_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_MIN_LTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_SUM_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  location_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  location_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  location_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  profilePicURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  profilePicURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  pronouns_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  pronouns_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  pronouns_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserIsBlockedByRelationship = {
  __typename?: 'UserIsBlockedByRelationship';
  cursor: Scalars['String']['output'];
  node: User;
};

export type UserIsBlockedByUpdateConnectionInput = {
  node?: InputMaybe<UserUpdateInput>;
};

export type UserIsBlockedByUpdateFieldInput = {
  connect?: InputMaybe<UserIsBlockedByConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserIsBlockedByConnectOrCreateFieldInput>;
  create?: InputMaybe<UserIsBlockedByCreateFieldInput>;
  delete?: InputMaybe<UserIsBlockedByDeleteFieldInput>;
  disconnect?: InputMaybe<UserIsBlockedByDisconnectFieldInput>;
  update?: InputMaybe<UserIsBlockedByUpdateConnectionInput>;
  where?: InputMaybe<UserIsBlockedByConnectionWhere>;
};

export type UserIssueCommentsAggregateInput = {
  AND?: InputMaybe<Array<UserIssueCommentsAggregateInput>>;
  NOT?: InputMaybe<UserIssueCommentsAggregateInput>;
  OR?: InputMaybe<Array<UserIssueCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserIssueCommentsNodeAggregationWhereInput>;
};

export type UserIssueCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type UserIssueCommentsConnection = {
  __typename?: 'UserIssueCommentsConnection';
  edges: Array<UserIssueCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserIssueCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type UserIssueCommentsConnectionWhere = {
  AND?: InputMaybe<Array<UserIssueCommentsConnectionWhere>>;
  NOT?: InputMaybe<UserIssueCommentsConnectionWhere>;
  OR?: InputMaybe<Array<UserIssueCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type UserIssueCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type UserIssueCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<UserIssueCommentsConnectionWhere>;
};

export type UserIssueCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<UserIssueCommentsConnectionWhere>;
};

export type UserIssueCommentsFieldInput = {
  connect?: InputMaybe<Array<UserIssueCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserIssueCommentsCreateFieldInput>>;
};

export type UserIssueCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserIssueCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserIssueCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserIssueCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type UserIssueCommentsRelationship = {
  __typename?: 'UserIssueCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type UserIssueCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type UserIssueCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserIssueCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserIssueCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserIssueCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserIssueCommentsDisconnectFieldInput>>;
  update?: InputMaybe<UserIssueCommentsUpdateConnectionInput>;
  where?: InputMaybe<UserIssueCommentsConnectionWhere>;
};

export type UserIssueIssuesAggregationSelection = {
  __typename?: 'UserIssueIssuesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserIssueIssuesNodeAggregateSelection>;
};

export type UserIssueIssuesNodeAggregateSelection = {
  __typename?: 'UserIssueIssuesNodeAggregateSelection';
  authorName: StringAggregateSelection;
  body: StringAggregateSelection;
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  relatedCommentId: IdAggregateSelection;
  relatedDiscussionId: IdAggregateSelection;
  relatedEventId: IdAggregateSelection;
  relatedModProfileName: StringAggregateSelection;
  relatedUsername: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type UserIssuesAggregateInput = {
  AND?: InputMaybe<Array<UserIssuesAggregateInput>>;
  NOT?: InputMaybe<UserIssuesAggregateInput>;
  OR?: InputMaybe<Array<UserIssuesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserIssuesNodeAggregationWhereInput>;
};

export type UserIssuesConnectFieldInput = {
  connect?: InputMaybe<Array<IssueConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<IssueConnectWhere>;
};

export type UserIssuesConnection = {
  __typename?: 'UserIssuesConnection';
  edges: Array<UserIssuesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserIssuesConnectionSort = {
  node?: InputMaybe<IssueSort>;
};

export type UserIssuesConnectionWhere = {
  AND?: InputMaybe<Array<UserIssuesConnectionWhere>>;
  NOT?: InputMaybe<UserIssuesConnectionWhere>;
  OR?: InputMaybe<Array<UserIssuesConnectionWhere>>;
  node?: InputMaybe<IssueWhere>;
};

export type UserIssuesCreateFieldInput = {
  node: IssueCreateInput;
};

export type UserIssuesDeleteFieldInput = {
  delete?: InputMaybe<IssueDeleteInput>;
  where?: InputMaybe<UserIssuesConnectionWhere>;
};

export type UserIssuesDisconnectFieldInput = {
  disconnect?: InputMaybe<IssueDisconnectInput>;
  where?: InputMaybe<UserIssuesConnectionWhere>;
};

export type UserIssuesFieldInput = {
  connect?: InputMaybe<Array<UserIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<UserIssuesCreateFieldInput>>;
};

export type UserIssuesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserIssuesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserIssuesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserIssuesNodeAggregationWhereInput>>;
  authorName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  authorName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  authorName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  authorName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedModProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedModProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  relatedUsername_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  relatedUsername_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type UserIssuesRelationship = {
  __typename?: 'UserIssuesRelationship';
  cursor: Scalars['String']['output'];
  node: Issue;
};

export type UserIssuesUpdateConnectionInput = {
  node?: InputMaybe<IssueUpdateInput>;
};

export type UserIssuesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserIssuesConnectFieldInput>>;
  create?: InputMaybe<Array<UserIssuesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserIssuesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserIssuesDisconnectFieldInput>>;
  update?: InputMaybe<UserIssuesUpdateConnectionInput>;
  where?: InputMaybe<UserIssuesConnectionWhere>;
};

export type UserModOfChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserModOfChannelsAggregateInput>>;
  NOT?: InputMaybe<UserModOfChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserModOfChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserModOfChannelsNodeAggregationWhereInput>;
};

export type UserModOfChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserModOfChannelsConnectOrCreateFieldInput = {
  onCreate: UserModOfChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserModOfChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserModOfChannelsConnection = {
  __typename?: 'UserModOfChannelsConnection';
  edges: Array<UserModOfChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserModOfChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserModOfChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserModOfChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserModOfChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserModOfChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserModOfChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserModOfChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserModOfChannelsConnectionWhere>;
};

export type UserModOfChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserModOfChannelsConnectionWhere>;
};

export type UserModOfChannelsFieldInput = {
  connect?: InputMaybe<Array<UserModOfChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserModOfChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserModOfChannelsCreateFieldInput>>;
};

export type UserModOfChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserModOfChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserModOfChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserModOfChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserModOfChannelsRelationship = {
  __typename?: 'UserModOfChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserModOfChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserModOfChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserModOfChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserModOfChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserModOfChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserModOfChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserModOfChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserModOfChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserModOfChannelsConnectionWhere>;
};

export type UserModerationProfileAggregateInput = {
  AND?: InputMaybe<Array<UserModerationProfileAggregateInput>>;
  NOT?: InputMaybe<UserModerationProfileAggregateInput>;
  OR?: InputMaybe<Array<UserModerationProfileAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserModerationProfileNodeAggregationWhereInput>;
};

export type UserModerationProfileConnectFieldInput = {
  connect?: InputMaybe<ModerationProfileConnectInput>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ModerationProfileConnectWhere>;
};

export type UserModerationProfileConnectOrCreateFieldInput = {
  onCreate: UserModerationProfileConnectOrCreateFieldInputOnCreate;
  where: ModerationProfileConnectOrCreateWhere;
};

export type UserModerationProfileConnectOrCreateFieldInputOnCreate = {
  node: ModerationProfileOnCreateInput;
};

export type UserModerationProfileConnection = {
  __typename?: 'UserModerationProfileConnection';
  edges: Array<UserModerationProfileRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserModerationProfileConnectionSort = {
  node?: InputMaybe<ModerationProfileSort>;
};

export type UserModerationProfileConnectionWhere = {
  AND?: InputMaybe<Array<UserModerationProfileConnectionWhere>>;
  NOT?: InputMaybe<UserModerationProfileConnectionWhere>;
  OR?: InputMaybe<Array<UserModerationProfileConnectionWhere>>;
  node?: InputMaybe<ModerationProfileWhere>;
};

export type UserModerationProfileCreateFieldInput = {
  node: ModerationProfileCreateInput;
};

export type UserModerationProfileDeleteFieldInput = {
  delete?: InputMaybe<ModerationProfileDeleteInput>;
  where?: InputMaybe<UserModerationProfileConnectionWhere>;
};

export type UserModerationProfileDisconnectFieldInput = {
  disconnect?: InputMaybe<ModerationProfileDisconnectInput>;
  where?: InputMaybe<UserModerationProfileConnectionWhere>;
};

export type UserModerationProfileFieldInput = {
  connect?: InputMaybe<UserModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<UserModerationProfileCreateFieldInput>;
};

export type UserModerationProfileModerationProfileAggregationSelection = {
  __typename?: 'UserModerationProfileModerationProfileAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserModerationProfileModerationProfileNodeAggregateSelection>;
};

export type UserModerationProfileModerationProfileNodeAggregateSelection = {
  __typename?: 'UserModerationProfileModerationProfileNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  displayName: StringAggregateSelection;
};

export type UserModerationProfileNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserModerationProfileNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserModerationProfileNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserModerationProfileNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserModerationProfileRelationship = {
  __typename?: 'UserModerationProfileRelationship';
  cursor: Scalars['String']['output'];
  node: ModerationProfile;
};

export type UserModerationProfileUpdateConnectionInput = {
  node?: InputMaybe<ModerationProfileUpdateInput>;
};

export type UserModerationProfileUpdateFieldInput = {
  connect?: InputMaybe<UserModerationProfileConnectFieldInput>;
  connectOrCreate?: InputMaybe<UserModerationProfileConnectOrCreateFieldInput>;
  create?: InputMaybe<UserModerationProfileCreateFieldInput>;
  delete?: InputMaybe<UserModerationProfileDeleteFieldInput>;
  disconnect?: InputMaybe<UserModerationProfileDisconnectFieldInput>;
  update?: InputMaybe<UserModerationProfileUpdateConnectionInput>;
  where?: InputMaybe<UserModerationProfileConnectionWhere>;
};

export type UserNotificationNotificationsAggregationSelection = {
  __typename?: 'UserNotificationNotificationsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserNotificationNotificationsNodeAggregateSelection>;
};

export type UserNotificationNotificationsNodeAggregateSelection = {
  __typename?: 'UserNotificationNotificationsNodeAggregateSelection';
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  text: StringAggregateSelection;
};

export type UserNotificationsAggregateInput = {
  AND?: InputMaybe<Array<UserNotificationsAggregateInput>>;
  NOT?: InputMaybe<UserNotificationsAggregateInput>;
  OR?: InputMaybe<Array<UserNotificationsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserNotificationsNodeAggregationWhereInput>;
};

export type UserNotificationsConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<NotificationConnectWhere>;
};

export type UserNotificationsConnection = {
  __typename?: 'UserNotificationsConnection';
  edges: Array<UserNotificationsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserNotificationsConnectionSort = {
  node?: InputMaybe<NotificationSort>;
};

export type UserNotificationsConnectionWhere = {
  AND?: InputMaybe<Array<UserNotificationsConnectionWhere>>;
  NOT?: InputMaybe<UserNotificationsConnectionWhere>;
  OR?: InputMaybe<Array<UserNotificationsConnectionWhere>>;
  node?: InputMaybe<NotificationWhere>;
};

export type UserNotificationsCreateFieldInput = {
  node: NotificationCreateInput;
};

export type UserNotificationsDeleteFieldInput = {
  where?: InputMaybe<UserNotificationsConnectionWhere>;
};

export type UserNotificationsDisconnectFieldInput = {
  where?: InputMaybe<UserNotificationsConnectionWhere>;
};

export type UserNotificationsFieldInput = {
  connect?: InputMaybe<Array<UserNotificationsConnectFieldInput>>;
  create?: InputMaybe<Array<UserNotificationsCreateFieldInput>>;
};

export type UserNotificationsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserNotificationsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserNotificationsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserNotificationsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserNotificationsRelationship = {
  __typename?: 'UserNotificationsRelationship';
  cursor: Scalars['String']['output'];
  node: Notification;
};

export type UserNotificationsUpdateConnectionInput = {
  node?: InputMaybe<NotificationUpdateInput>;
};

export type UserNotificationsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserNotificationsConnectFieldInput>>;
  create?: InputMaybe<Array<UserNotificationsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserNotificationsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserNotificationsDisconnectFieldInput>>;
  update?: InputMaybe<UserNotificationsUpdateConnectionInput>;
  where?: InputMaybe<UserNotificationsConnectionWhere>;
};

export type UserOnCreateInput = {
  DefaultEmojiSkinTone?: InputMaybe<Scalars['String']['input']>;
  NotificationBundleInterval?: InputMaybe<Scalars['String']['input']>;
  PreferredTimeZone?: InputMaybe<Scalars['String']['input']>;
  bio?: InputMaybe<Scalars['String']['input']>;
  commentKarma?: InputMaybe<Scalars['Int']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discussionKarma?: InputMaybe<Scalars['Int']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  enableSensitiveContentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  profilePicURL?: InputMaybe<Scalars['String']['input']>;
  pronouns?: InputMaybe<Scalars['String']['input']>;
  username: Scalars['String']['input'];
};

export type UserOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more UserSort objects to sort Users by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<UserSort>>;
};

export type UserPendingModInvitesAggregateInput = {
  AND?: InputMaybe<Array<UserPendingModInvitesAggregateInput>>;
  NOT?: InputMaybe<UserPendingModInvitesAggregateInput>;
  OR?: InputMaybe<Array<UserPendingModInvitesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserPendingModInvitesNodeAggregationWhereInput>;
};

export type UserPendingModInvitesConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserPendingModInvitesConnectOrCreateFieldInput = {
  onCreate: UserPendingModInvitesConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserPendingModInvitesConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserPendingModInvitesConnection = {
  __typename?: 'UserPendingModInvitesConnection';
  edges: Array<UserPendingModInvitesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserPendingModInvitesConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserPendingModInvitesConnectionWhere = {
  AND?: InputMaybe<Array<UserPendingModInvitesConnectionWhere>>;
  NOT?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  OR?: InputMaybe<Array<UserPendingModInvitesConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserPendingModInvitesCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserPendingModInvitesDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserPendingModInvitesConnectionWhere>;
};

export type UserPendingModInvitesDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserPendingModInvitesConnectionWhere>;
};

export type UserPendingModInvitesFieldInput = {
  connect?: InputMaybe<Array<UserPendingModInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserPendingModInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserPendingModInvitesCreateFieldInput>>;
};

export type UserPendingModInvitesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserPendingModInvitesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserPendingModInvitesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserPendingModInvitesNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserPendingModInvitesRelationship = {
  __typename?: 'UserPendingModInvitesRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserPendingModInvitesUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserPendingModInvitesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserPendingModInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserPendingModInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserPendingModInvitesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserPendingModInvitesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserPendingModInvitesDisconnectFieldInput>>;
  update?: InputMaybe<UserPendingModInvitesUpdateConnectionInput>;
  where?: InputMaybe<UserPendingModInvitesConnectionWhere>;
};

export type UserPendingOwnerInvitesAggregateInput = {
  AND?: InputMaybe<Array<UserPendingOwnerInvitesAggregateInput>>;
  NOT?: InputMaybe<UserPendingOwnerInvitesAggregateInput>;
  OR?: InputMaybe<Array<UserPendingOwnerInvitesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserPendingOwnerInvitesNodeAggregationWhereInput>;
};

export type UserPendingOwnerInvitesConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserPendingOwnerInvitesConnectOrCreateFieldInput = {
  onCreate: UserPendingOwnerInvitesConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserPendingOwnerInvitesConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserPendingOwnerInvitesConnection = {
  __typename?: 'UserPendingOwnerInvitesConnection';
  edges: Array<UserPendingOwnerInvitesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserPendingOwnerInvitesConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserPendingOwnerInvitesConnectionWhere = {
  AND?: InputMaybe<Array<UserPendingOwnerInvitesConnectionWhere>>;
  NOT?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  OR?: InputMaybe<Array<UserPendingOwnerInvitesConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserPendingOwnerInvitesCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserPendingOwnerInvitesDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
};

export type UserPendingOwnerInvitesDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
};

export type UserPendingOwnerInvitesFieldInput = {
  connect?: InputMaybe<Array<UserPendingOwnerInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserPendingOwnerInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserPendingOwnerInvitesCreateFieldInput>>;
};

export type UserPendingOwnerInvitesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserPendingOwnerInvitesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserPendingOwnerInvitesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserPendingOwnerInvitesNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserPendingOwnerInvitesRelationship = {
  __typename?: 'UserPendingOwnerInvitesRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserPendingOwnerInvitesUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserPendingOwnerInvitesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserPendingOwnerInvitesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserPendingOwnerInvitesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserPendingOwnerInvitesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserPendingOwnerInvitesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserPendingOwnerInvitesDisconnectFieldInput>>;
  update?: InputMaybe<UserPendingOwnerInvitesUpdateConnectionInput>;
  where?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
};

export type UserRecentlyVisitedChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserRecentlyVisitedChannelsAggregateInput>>;
  NOT?: InputMaybe<UserRecentlyVisitedChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserRecentlyVisitedChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserRecentlyVisitedChannelsNodeAggregationWhereInput>;
};

export type UserRecentlyVisitedChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<ChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ChannelConnectWhere>;
};

export type UserRecentlyVisitedChannelsConnectOrCreateFieldInput = {
  onCreate: UserRecentlyVisitedChannelsConnectOrCreateFieldInputOnCreate;
  where: ChannelConnectOrCreateWhere;
};

export type UserRecentlyVisitedChannelsConnectOrCreateFieldInputOnCreate = {
  node: ChannelOnCreateInput;
};

export type UserRecentlyVisitedChannelsConnection = {
  __typename?: 'UserRecentlyVisitedChannelsConnection';
  edges: Array<UserRecentlyVisitedChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserRecentlyVisitedChannelsConnectionSort = {
  node?: InputMaybe<ChannelSort>;
};

export type UserRecentlyVisitedChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectionWhere>>;
  node?: InputMaybe<ChannelWhere>;
};

export type UserRecentlyVisitedChannelsCreateFieldInput = {
  node: ChannelCreateInput;
};

export type UserRecentlyVisitedChannelsDeleteFieldInput = {
  delete?: InputMaybe<ChannelDeleteInput>;
  where?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
};

export type UserRecentlyVisitedChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<ChannelDisconnectInput>;
  where?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
};

export type UserRecentlyVisitedChannelsFieldInput = {
  connect?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserRecentlyVisitedChannelsCreateFieldInput>>;
};

export type UserRecentlyVisitedChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserRecentlyVisitedChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserRecentlyVisitedChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserRecentlyVisitedChannelsNodeAggregationWhereInput>>;
  channelBannerURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelBannerURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelBannerURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelIconURL_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelIconURL_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  displayName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  displayName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  displayName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  uniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  uniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserRecentlyVisitedChannelsRelationship = {
  __typename?: 'UserRecentlyVisitedChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: Channel;
};

export type UserRecentlyVisitedChannelsUpdateConnectionInput = {
  node?: InputMaybe<ChannelUpdateInput>;
};

export type UserRecentlyVisitedChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserRecentlyVisitedChannelsConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserRecentlyVisitedChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserRecentlyVisitedChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserRecentlyVisitedChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserRecentlyVisitedChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
};

export type UserRelationInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsCreateFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsCreateFieldInput>>;
  Blocked?: InputMaybe<UserBlockedCreateFieldInput>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesCreateFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsCreateFieldInput>>;
  CreatedFeeds?: InputMaybe<Array<UserCreatedFeedsCreateFieldInput>>;
  DefaultFeed?: InputMaybe<UserDefaultFeedCreateFieldInput>;
  Discussions?: InputMaybe<Array<UserDiscussionsCreateFieldInput>>;
  Email?: InputMaybe<UserEmailCreateFieldInput>;
  Events?: InputMaybe<Array<UserEventsCreateFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsCreateFieldInput>>;
  Feeds?: InputMaybe<Array<UserFeedsCreateFieldInput>>;
  IsBlockedBy?: InputMaybe<UserIsBlockedByCreateFieldInput>;
  IssueComments?: InputMaybe<Array<UserIssueCommentsCreateFieldInput>>;
  Issues?: InputMaybe<Array<UserIssuesCreateFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsCreateFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileCreateFieldInput>;
  Notifications?: InputMaybe<Array<UserNotificationsCreateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesCreateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesCreateFieldInput>>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsCreateFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesCreateFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsCreateFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsCreateFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsCreateFieldInput>>;
};

export type UserServerRoleServerRolesAggregationSelection = {
  __typename?: 'UserServerRoleServerRolesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserServerRoleServerRolesNodeAggregateSelection>;
};

export type UserServerRoleServerRolesNodeAggregateSelection = {
  __typename?: 'UserServerRoleServerRolesNodeAggregateSelection';
  description: StringAggregateSelection;
  name: StringAggregateSelection;
};

export type UserServerRolesAggregateInput = {
  AND?: InputMaybe<Array<UserServerRolesAggregateInput>>;
  NOT?: InputMaybe<UserServerRolesAggregateInput>;
  OR?: InputMaybe<Array<UserServerRolesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserServerRolesNodeAggregationWhereInput>;
};

export type UserServerRolesConnectFieldInput = {
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<ServerRoleConnectWhere>;
};

export type UserServerRolesConnectOrCreateFieldInput = {
  onCreate: UserServerRolesConnectOrCreateFieldInputOnCreate;
  where: ServerRoleConnectOrCreateWhere;
};

export type UserServerRolesConnectOrCreateFieldInputOnCreate = {
  node: ServerRoleOnCreateInput;
};

export type UserServerRolesConnection = {
  __typename?: 'UserServerRolesConnection';
  edges: Array<UserServerRolesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserServerRolesConnectionSort = {
  node?: InputMaybe<ServerRoleSort>;
};

export type UserServerRolesConnectionWhere = {
  AND?: InputMaybe<Array<UserServerRolesConnectionWhere>>;
  NOT?: InputMaybe<UserServerRolesConnectionWhere>;
  OR?: InputMaybe<Array<UserServerRolesConnectionWhere>>;
  node?: InputMaybe<ServerRoleWhere>;
};

export type UserServerRolesCreateFieldInput = {
  node: ServerRoleCreateInput;
};

export type UserServerRolesDeleteFieldInput = {
  where?: InputMaybe<UserServerRolesConnectionWhere>;
};

export type UserServerRolesDisconnectFieldInput = {
  where?: InputMaybe<UserServerRolesConnectionWhere>;
};

export type UserServerRolesFieldInput = {
  connect?: InputMaybe<Array<UserServerRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserServerRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserServerRolesCreateFieldInput>>;
};

export type UserServerRolesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserServerRolesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserServerRolesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserServerRolesNodeAggregationWhereInput>>;
  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserServerRolesRelationship = {
  __typename?: 'UserServerRolesRelationship';
  cursor: Scalars['String']['output'];
  node: ServerRole;
};

export type UserServerRolesUpdateConnectionInput = {
  node?: InputMaybe<ServerRoleUpdateInput>;
};

export type UserServerRolesUpdateFieldInput = {
  connect?: InputMaybe<Array<UserServerRolesConnectFieldInput>>;
  connectOrCreate?: InputMaybe<Array<UserServerRolesConnectOrCreateFieldInput>>;
  create?: InputMaybe<Array<UserServerRolesCreateFieldInput>>;
  delete?: InputMaybe<Array<UserServerRolesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserServerRolesDisconnectFieldInput>>;
  update?: InputMaybe<UserServerRolesUpdateConnectionInput>;
  where?: InputMaybe<UserServerRolesConnectionWhere>;
};

/** Fields to sort Users by. The order in which sorts are applied is not guaranteed when specifying many fields in one UserSort object. */
export type UserSort = {
  DefaultEmojiSkinTone?: InputMaybe<SortDirection>;
  NotificationBundleInterval?: InputMaybe<SortDirection>;
  PreferredTimeZone?: InputMaybe<SortDirection>;
  bio?: InputMaybe<SortDirection>;
  commentKarma?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  deleted?: InputMaybe<SortDirection>;
  discussionKarma?: InputMaybe<SortDirection>;
  displayName?: InputMaybe<SortDirection>;
  enableSensitiveContentByDefault?: InputMaybe<SortDirection>;
  location?: InputMaybe<SortDirection>;
  profilePicURL?: InputMaybe<SortDirection>;
  pronouns?: InputMaybe<SortDirection>;
  username?: InputMaybe<SortDirection>;
};

export type UserSuspensionSuspensionsAggregationSelection = {
  __typename?: 'UserSuspensionSuspensionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserSuspensionSuspensionsNodeAggregateSelection>;
};

export type UserSuspensionSuspensionsNodeAggregateSelection = {
  __typename?: 'UserSuspensionSuspensionsNodeAggregateSelection';
  channelUniqueName: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  modProfileName: StringAggregateSelection;
  suspendedUntil: DateTimeAggregateSelection;
  username: StringAggregateSelection;
};

export type UserSuspensionsAggregateInput = {
  AND?: InputMaybe<Array<UserSuspensionsAggregateInput>>;
  NOT?: InputMaybe<UserSuspensionsAggregateInput>;
  OR?: InputMaybe<Array<UserSuspensionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserSuspensionsNodeAggregationWhereInput>;
};

export type UserSuspensionsConnectFieldInput = {
  connect?: InputMaybe<Array<SuspensionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<SuspensionConnectWhere>;
};

export type UserSuspensionsConnection = {
  __typename?: 'UserSuspensionsConnection';
  edges: Array<UserSuspensionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserSuspensionsConnectionSort = {
  node?: InputMaybe<SuspensionSort>;
};

export type UserSuspensionsConnectionWhere = {
  AND?: InputMaybe<Array<UserSuspensionsConnectionWhere>>;
  NOT?: InputMaybe<UserSuspensionsConnectionWhere>;
  OR?: InputMaybe<Array<UserSuspensionsConnectionWhere>>;
  node?: InputMaybe<SuspensionWhere>;
};

export type UserSuspensionsCreateFieldInput = {
  node: SuspensionCreateInput;
};

export type UserSuspensionsDeleteFieldInput = {
  delete?: InputMaybe<SuspensionDeleteInput>;
  where?: InputMaybe<UserSuspensionsConnectionWhere>;
};

export type UserSuspensionsDisconnectFieldInput = {
  disconnect?: InputMaybe<SuspensionDisconnectInput>;
  where?: InputMaybe<UserSuspensionsConnectionWhere>;
};

export type UserSuspensionsFieldInput = {
  connect?: InputMaybe<Array<UserSuspensionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserSuspensionsCreateFieldInput>>;
};

export type UserSuspensionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserSuspensionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserSuspensionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserSuspensionsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  modProfileName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  modProfileName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  modProfileName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  suspendedUntil_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  suspendedUntil_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
};

export type UserSuspensionsRelationship = {
  __typename?: 'UserSuspensionsRelationship';
  cursor: Scalars['String']['output'];
  node: Suspension;
};

export type UserSuspensionsUpdateConnectionInput = {
  node?: InputMaybe<SuspensionUpdateInput>;
};

export type UserSuspensionsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserSuspensionsConnectFieldInput>>;
  create?: InputMaybe<Array<UserSuspensionsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserSuspensionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserSuspensionsDisconnectFieldInput>>;
  update?: InputMaybe<UserSuspensionsUpdateConnectionInput>;
  where?: InputMaybe<UserSuspensionsConnectionWhere>;
};

export type UserUniqueWhere = {
  username?: InputMaybe<Scalars['String']['input']>;
};

export type UserUpdateInput = {
  AdminOfChannels?: InputMaybe<Array<UserAdminOfChannelsUpdateFieldInput>>;
  Albums?: InputMaybe<Array<UserAlbumsUpdateFieldInput>>;
  Blocked?: InputMaybe<UserBlockedUpdateFieldInput>;
  ChannelRoles?: InputMaybe<Array<UserChannelRolesUpdateFieldInput>>;
  Comments?: InputMaybe<Array<UserCommentsUpdateFieldInput>>;
  CreatedFeeds?: InputMaybe<Array<UserCreatedFeedsUpdateFieldInput>>;
  DefaultEmojiSkinTone?: InputMaybe<Scalars['String']['input']>;
  DefaultFeed?: InputMaybe<UserDefaultFeedUpdateFieldInput>;
  Discussions?: InputMaybe<Array<UserDiscussionsUpdateFieldInput>>;
  Email?: InputMaybe<UserEmailUpdateFieldInput>;
  Events?: InputMaybe<Array<UserEventsUpdateFieldInput>>;
  FavoriteChannels?: InputMaybe<Array<UserFavoriteChannelsUpdateFieldInput>>;
  Feeds?: InputMaybe<Array<UserFeedsUpdateFieldInput>>;
  IsBlockedBy?: InputMaybe<UserIsBlockedByUpdateFieldInput>;
  IssueComments?: InputMaybe<Array<UserIssueCommentsUpdateFieldInput>>;
  Issues?: InputMaybe<Array<UserIssuesUpdateFieldInput>>;
  ModOfChannels?: InputMaybe<Array<UserModOfChannelsUpdateFieldInput>>;
  ModerationProfile?: InputMaybe<UserModerationProfileUpdateFieldInput>;
  NotificationBundleInterval?: InputMaybe<Scalars['String']['input']>;
  Notifications?: InputMaybe<Array<UserNotificationsUpdateFieldInput>>;
  PendingModInvites?: InputMaybe<Array<UserPendingModInvitesUpdateFieldInput>>;
  PendingOwnerInvites?: InputMaybe<Array<UserPendingOwnerInvitesUpdateFieldInput>>;
  PreferredTimeZone?: InputMaybe<Scalars['String']['input']>;
  RecentlyVisitedChannels?: InputMaybe<Array<UserRecentlyVisitedChannelsUpdateFieldInput>>;
  ServerRoles?: InputMaybe<Array<UserServerRolesUpdateFieldInput>>;
  Suspensions?: InputMaybe<Array<UserSuspensionsUpdateFieldInput>>;
  UpvotedComments?: InputMaybe<Array<UserUpvotedCommentsUpdateFieldInput>>;
  UpvotedDiscussionChannels?: InputMaybe<Array<UserUpvotedDiscussionChannelsUpdateFieldInput>>;
  bio?: InputMaybe<Scalars['String']['input']>;
  commentKarma?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discussionKarma?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_DECREMENT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_INCREMENT?: InputMaybe<Scalars['Int']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  enableSensitiveContentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  profilePicURL?: InputMaybe<Scalars['String']['input']>;
  pronouns?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

export type UserUpvotedCommentsAggregateInput = {
  AND?: InputMaybe<Array<UserUpvotedCommentsAggregateInput>>;
  NOT?: InputMaybe<UserUpvotedCommentsAggregateInput>;
  OR?: InputMaybe<Array<UserUpvotedCommentsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserUpvotedCommentsNodeAggregationWhereInput>;
};

export type UserUpvotedCommentsConnectFieldInput = {
  connect?: InputMaybe<Array<CommentConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<CommentConnectWhere>;
};

export type UserUpvotedCommentsConnection = {
  __typename?: 'UserUpvotedCommentsConnection';
  edges: Array<UserUpvotedCommentsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserUpvotedCommentsConnectionSort = {
  node?: InputMaybe<CommentSort>;
};

export type UserUpvotedCommentsConnectionWhere = {
  AND?: InputMaybe<Array<UserUpvotedCommentsConnectionWhere>>;
  NOT?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  OR?: InputMaybe<Array<UserUpvotedCommentsConnectionWhere>>;
  node?: InputMaybe<CommentWhere>;
};

export type UserUpvotedCommentsCreateFieldInput = {
  node: CommentCreateInput;
};

export type UserUpvotedCommentsDeleteFieldInput = {
  delete?: InputMaybe<CommentDeleteInput>;
  where?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
};

export type UserUpvotedCommentsDisconnectFieldInput = {
  disconnect?: InputMaybe<CommentDisconnectInput>;
  where?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
};

export type UserUpvotedCommentsFieldInput = {
  connect?: InputMaybe<Array<UserUpvotedCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserUpvotedCommentsCreateFieldInput>>;
};

export type UserUpvotedCommentsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserUpvotedCommentsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserUpvotedCommentsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserUpvotedCommentsNodeAggregationWhereInput>>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  text_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  text_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  text_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  text_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type UserUpvotedCommentsRelationship = {
  __typename?: 'UserUpvotedCommentsRelationship';
  cursor: Scalars['String']['output'];
  node: Comment;
};

export type UserUpvotedCommentsUpdateConnectionInput = {
  node?: InputMaybe<CommentUpdateInput>;
};

export type UserUpvotedCommentsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserUpvotedCommentsConnectFieldInput>>;
  create?: InputMaybe<Array<UserUpvotedCommentsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserUpvotedCommentsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserUpvotedCommentsDisconnectFieldInput>>;
  update?: InputMaybe<UserUpvotedCommentsUpdateConnectionInput>;
  where?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
};

export type UserUpvotedDiscussionChannelsAggregateInput = {
  AND?: InputMaybe<Array<UserUpvotedDiscussionChannelsAggregateInput>>;
  NOT?: InputMaybe<UserUpvotedDiscussionChannelsAggregateInput>;
  OR?: InputMaybe<Array<UserUpvotedDiscussionChannelsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<UserUpvotedDiscussionChannelsNodeAggregationWhereInput>;
};

export type UserUpvotedDiscussionChannelsConnectFieldInput = {
  connect?: InputMaybe<Array<DiscussionChannelConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<DiscussionChannelConnectWhere>;
};

export type UserUpvotedDiscussionChannelsConnection = {
  __typename?: 'UserUpvotedDiscussionChannelsConnection';
  edges: Array<UserUpvotedDiscussionChannelsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserUpvotedDiscussionChannelsConnectionSort = {
  node?: InputMaybe<DiscussionChannelSort>;
};

export type UserUpvotedDiscussionChannelsConnectionWhere = {
  AND?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectionWhere>>;
  NOT?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  OR?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectionWhere>>;
  node?: InputMaybe<DiscussionChannelWhere>;
};

export type UserUpvotedDiscussionChannelsCreateFieldInput = {
  node: DiscussionChannelCreateInput;
};

export type UserUpvotedDiscussionChannelsDeleteFieldInput = {
  delete?: InputMaybe<DiscussionChannelDeleteInput>;
  where?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
};

export type UserUpvotedDiscussionChannelsDisconnectFieldInput = {
  disconnect?: InputMaybe<DiscussionChannelDisconnectInput>;
  where?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
};

export type UserUpvotedDiscussionChannelsFieldInput = {
  connect?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<UserUpvotedDiscussionChannelsCreateFieldInput>>;
};

export type UserUpvotedDiscussionChannelsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<UserUpvotedDiscussionChannelsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<UserUpvotedDiscussionChannelsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<UserUpvotedDiscussionChannelsNodeAggregationWhereInput>>;
  channelUniqueName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  channelUniqueName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  channelUniqueName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  weightedVotesCount_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_AVERAGE_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MAX_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_MIN_LTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_GTE?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LT?: InputMaybe<Scalars['Float']['input']>;
  weightedVotesCount_SUM_LTE?: InputMaybe<Scalars['Float']['input']>;
};

export type UserUpvotedDiscussionChannelsRelationship = {
  __typename?: 'UserUpvotedDiscussionChannelsRelationship';
  cursor: Scalars['String']['output'];
  node: DiscussionChannel;
};

export type UserUpvotedDiscussionChannelsUpdateConnectionInput = {
  node?: InputMaybe<DiscussionChannelUpdateInput>;
};

export type UserUpvotedDiscussionChannelsUpdateFieldInput = {
  connect?: InputMaybe<Array<UserUpvotedDiscussionChannelsConnectFieldInput>>;
  create?: InputMaybe<Array<UserUpvotedDiscussionChannelsCreateFieldInput>>;
  delete?: InputMaybe<Array<UserUpvotedDiscussionChannelsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<UserUpvotedDiscussionChannelsDisconnectFieldInput>>;
  update?: InputMaybe<UserUpvotedDiscussionChannelsUpdateConnectionInput>;
  where?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
};

export type UserUserBlockedAggregationSelection = {
  __typename?: 'UserUserBlockedAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserUserBlockedNodeAggregateSelection>;
};

export type UserUserBlockedNodeAggregateSelection = {
  __typename?: 'UserUserBlockedNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type UserUserIsBlockedByAggregationSelection = {
  __typename?: 'UserUserIsBlockedByAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<UserUserIsBlockedByNodeAggregateSelection>;
};

export type UserUserIsBlockedByNodeAggregateSelection = {
  __typename?: 'UserUserIsBlockedByNodeAggregateSelection';
  DefaultEmojiSkinTone: StringAggregateSelection;
  NotificationBundleInterval: StringAggregateSelection;
  PreferredTimeZone: StringAggregateSelection;
  bio: StringAggregateSelection;
  commentKarma: IntAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  discussionKarma: IntAggregateSelection;
  displayName: StringAggregateSelection;
  location: StringAggregateSelection;
  profilePicURL: StringAggregateSelection;
  pronouns: StringAggregateSelection;
  username: StringAggregateSelection;
};

export type UserWhere = {
  AND?: InputMaybe<Array<UserWhere>>;
  AdminOfChannelsAggregate?: InputMaybe<UserAdminOfChannelsAggregateInput>;
  /** Return Users where all of the related UserAdminOfChannelsConnections match this filter */
  AdminOfChannelsConnection_ALL?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  /** Return Users where none of the related UserAdminOfChannelsConnections match this filter */
  AdminOfChannelsConnection_NONE?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  /** Return Users where one of the related UserAdminOfChannelsConnections match this filter */
  AdminOfChannelsConnection_SINGLE?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  /** Return Users where some of the related UserAdminOfChannelsConnections match this filter */
  AdminOfChannelsConnection_SOME?: InputMaybe<UserAdminOfChannelsConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  AdminOfChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  AdminOfChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  AdminOfChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  AdminOfChannels_SOME?: InputMaybe<ChannelWhere>;
  AlbumsAggregate?: InputMaybe<UserAlbumsAggregateInput>;
  /** Return Users where all of the related UserAlbumsConnections match this filter */
  AlbumsConnection_ALL?: InputMaybe<UserAlbumsConnectionWhere>;
  /** Return Users where none of the related UserAlbumsConnections match this filter */
  AlbumsConnection_NONE?: InputMaybe<UserAlbumsConnectionWhere>;
  /** Return Users where one of the related UserAlbumsConnections match this filter */
  AlbumsConnection_SINGLE?: InputMaybe<UserAlbumsConnectionWhere>;
  /** Return Users where some of the related UserAlbumsConnections match this filter */
  AlbumsConnection_SOME?: InputMaybe<UserAlbumsConnectionWhere>;
  /** Return Users where all of the related Albums match this filter */
  Albums_ALL?: InputMaybe<AlbumWhere>;
  /** Return Users where none of the related Albums match this filter */
  Albums_NONE?: InputMaybe<AlbumWhere>;
  /** Return Users where one of the related Albums match this filter */
  Albums_SINGLE?: InputMaybe<AlbumWhere>;
  /** Return Users where some of the related Albums match this filter */
  Albums_SOME?: InputMaybe<AlbumWhere>;
  Blocked?: InputMaybe<UserWhere>;
  BlockedAggregate?: InputMaybe<UserBlockedAggregateInput>;
  BlockedConnection?: InputMaybe<UserBlockedConnectionWhere>;
  BlockedConnection_NOT?: InputMaybe<UserBlockedConnectionWhere>;
  Blocked_NOT?: InputMaybe<UserWhere>;
  ChannelRolesAggregate?: InputMaybe<UserChannelRolesAggregateInput>;
  /** Return Users where all of the related UserChannelRolesConnections match this filter */
  ChannelRolesConnection_ALL?: InputMaybe<UserChannelRolesConnectionWhere>;
  /** Return Users where none of the related UserChannelRolesConnections match this filter */
  ChannelRolesConnection_NONE?: InputMaybe<UserChannelRolesConnectionWhere>;
  /** Return Users where one of the related UserChannelRolesConnections match this filter */
  ChannelRolesConnection_SINGLE?: InputMaybe<UserChannelRolesConnectionWhere>;
  /** Return Users where some of the related UserChannelRolesConnections match this filter */
  ChannelRolesConnection_SOME?: InputMaybe<UserChannelRolesConnectionWhere>;
  /** Return Users where all of the related ChannelRoles match this filter */
  ChannelRoles_ALL?: InputMaybe<ChannelRoleWhere>;
  /** Return Users where none of the related ChannelRoles match this filter */
  ChannelRoles_NONE?: InputMaybe<ChannelRoleWhere>;
  /** Return Users where one of the related ChannelRoles match this filter */
  ChannelRoles_SINGLE?: InputMaybe<ChannelRoleWhere>;
  /** Return Users where some of the related ChannelRoles match this filter */
  ChannelRoles_SOME?: InputMaybe<ChannelRoleWhere>;
  CommentsAggregate?: InputMaybe<UserCommentsAggregateInput>;
  /** Return Users where all of the related UserCommentsConnections match this filter */
  CommentsConnection_ALL?: InputMaybe<UserCommentsConnectionWhere>;
  /** Return Users where none of the related UserCommentsConnections match this filter */
  CommentsConnection_NONE?: InputMaybe<UserCommentsConnectionWhere>;
  /** Return Users where one of the related UserCommentsConnections match this filter */
  CommentsConnection_SINGLE?: InputMaybe<UserCommentsConnectionWhere>;
  /** Return Users where some of the related UserCommentsConnections match this filter */
  CommentsConnection_SOME?: InputMaybe<UserCommentsConnectionWhere>;
  /** Return Users where all of the related Comments match this filter */
  Comments_ALL?: InputMaybe<CommentWhere>;
  /** Return Users where none of the related Comments match this filter */
  Comments_NONE?: InputMaybe<CommentWhere>;
  /** Return Users where one of the related Comments match this filter */
  Comments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Users where some of the related Comments match this filter */
  Comments_SOME?: InputMaybe<CommentWhere>;
  CreatedFeedsAggregate?: InputMaybe<UserCreatedFeedsAggregateInput>;
  /** Return Users where all of the related UserCreatedFeedsConnections match this filter */
  CreatedFeedsConnection_ALL?: InputMaybe<UserCreatedFeedsConnectionWhere>;
  /** Return Users where none of the related UserCreatedFeedsConnections match this filter */
  CreatedFeedsConnection_NONE?: InputMaybe<UserCreatedFeedsConnectionWhere>;
  /** Return Users where one of the related UserCreatedFeedsConnections match this filter */
  CreatedFeedsConnection_SINGLE?: InputMaybe<UserCreatedFeedsConnectionWhere>;
  /** Return Users where some of the related UserCreatedFeedsConnections match this filter */
  CreatedFeedsConnection_SOME?: InputMaybe<UserCreatedFeedsConnectionWhere>;
  /** Return Users where all of the related Feeds match this filter */
  CreatedFeeds_ALL?: InputMaybe<FeedWhere>;
  /** Return Users where none of the related Feeds match this filter */
  CreatedFeeds_NONE?: InputMaybe<FeedWhere>;
  /** Return Users where one of the related Feeds match this filter */
  CreatedFeeds_SINGLE?: InputMaybe<FeedWhere>;
  /** Return Users where some of the related Feeds match this filter */
  CreatedFeeds_SOME?: InputMaybe<FeedWhere>;
  DefaultEmojiSkinTone?: InputMaybe<Scalars['String']['input']>;
  DefaultEmojiSkinTone_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  DefaultEmojiSkinTone_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  DefaultEmojiSkinTone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  DefaultEmojiSkinTone_MATCHES?: InputMaybe<Scalars['String']['input']>;
  DefaultEmojiSkinTone_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  DefaultFeed?: InputMaybe<FeedWhere>;
  DefaultFeedAggregate?: InputMaybe<UserDefaultFeedAggregateInput>;
  DefaultFeedConnection?: InputMaybe<UserDefaultFeedConnectionWhere>;
  DefaultFeedConnection_NOT?: InputMaybe<UserDefaultFeedConnectionWhere>;
  DefaultFeed_NOT?: InputMaybe<FeedWhere>;
  DiscussionsAggregate?: InputMaybe<UserDiscussionsAggregateInput>;
  /** Return Users where all of the related UserDiscussionsConnections match this filter */
  DiscussionsConnection_ALL?: InputMaybe<UserDiscussionsConnectionWhere>;
  /** Return Users where none of the related UserDiscussionsConnections match this filter */
  DiscussionsConnection_NONE?: InputMaybe<UserDiscussionsConnectionWhere>;
  /** Return Users where one of the related UserDiscussionsConnections match this filter */
  DiscussionsConnection_SINGLE?: InputMaybe<UserDiscussionsConnectionWhere>;
  /** Return Users where some of the related UserDiscussionsConnections match this filter */
  DiscussionsConnection_SOME?: InputMaybe<UserDiscussionsConnectionWhere>;
  /** Return Users where all of the related Discussions match this filter */
  Discussions_ALL?: InputMaybe<DiscussionWhere>;
  /** Return Users where none of the related Discussions match this filter */
  Discussions_NONE?: InputMaybe<DiscussionWhere>;
  /** Return Users where one of the related Discussions match this filter */
  Discussions_SINGLE?: InputMaybe<DiscussionWhere>;
  /** Return Users where some of the related Discussions match this filter */
  Discussions_SOME?: InputMaybe<DiscussionWhere>;
  Email?: InputMaybe<EmailWhere>;
  EmailAggregate?: InputMaybe<UserEmailAggregateInput>;
  EmailConnection?: InputMaybe<UserEmailConnectionWhere>;
  EmailConnection_NOT?: InputMaybe<UserEmailConnectionWhere>;
  Email_NOT?: InputMaybe<EmailWhere>;
  EventsAggregate?: InputMaybe<UserEventsAggregateInput>;
  /** Return Users where all of the related UserEventsConnections match this filter */
  EventsConnection_ALL?: InputMaybe<UserEventsConnectionWhere>;
  /** Return Users where none of the related UserEventsConnections match this filter */
  EventsConnection_NONE?: InputMaybe<UserEventsConnectionWhere>;
  /** Return Users where one of the related UserEventsConnections match this filter */
  EventsConnection_SINGLE?: InputMaybe<UserEventsConnectionWhere>;
  /** Return Users where some of the related UserEventsConnections match this filter */
  EventsConnection_SOME?: InputMaybe<UserEventsConnectionWhere>;
  /** Return Users where all of the related Events match this filter */
  Events_ALL?: InputMaybe<EventWhere>;
  /** Return Users where none of the related Events match this filter */
  Events_NONE?: InputMaybe<EventWhere>;
  /** Return Users where one of the related Events match this filter */
  Events_SINGLE?: InputMaybe<EventWhere>;
  /** Return Users where some of the related Events match this filter */
  Events_SOME?: InputMaybe<EventWhere>;
  FavoriteChannelsAggregate?: InputMaybe<UserFavoriteChannelsAggregateInput>;
  /** Return Users where all of the related UserFavoriteChannelsConnections match this filter */
  FavoriteChannelsConnection_ALL?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  /** Return Users where none of the related UserFavoriteChannelsConnections match this filter */
  FavoriteChannelsConnection_NONE?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  /** Return Users where one of the related UserFavoriteChannelsConnections match this filter */
  FavoriteChannelsConnection_SINGLE?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  /** Return Users where some of the related UserFavoriteChannelsConnections match this filter */
  FavoriteChannelsConnection_SOME?: InputMaybe<UserFavoriteChannelsConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  FavoriteChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  FavoriteChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  FavoriteChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  FavoriteChannels_SOME?: InputMaybe<ChannelWhere>;
  FeedsAggregate?: InputMaybe<UserFeedsAggregateInput>;
  /** Return Users where all of the related UserFeedsConnections match this filter */
  FeedsConnection_ALL?: InputMaybe<UserFeedsConnectionWhere>;
  /** Return Users where none of the related UserFeedsConnections match this filter */
  FeedsConnection_NONE?: InputMaybe<UserFeedsConnectionWhere>;
  /** Return Users where one of the related UserFeedsConnections match this filter */
  FeedsConnection_SINGLE?: InputMaybe<UserFeedsConnectionWhere>;
  /** Return Users where some of the related UserFeedsConnections match this filter */
  FeedsConnection_SOME?: InputMaybe<UserFeedsConnectionWhere>;
  /** Return Users where all of the related Feeds match this filter */
  Feeds_ALL?: InputMaybe<FeedWhere>;
  /** Return Users where none of the related Feeds match this filter */
  Feeds_NONE?: InputMaybe<FeedWhere>;
  /** Return Users where one of the related Feeds match this filter */
  Feeds_SINGLE?: InputMaybe<FeedWhere>;
  /** Return Users where some of the related Feeds match this filter */
  Feeds_SOME?: InputMaybe<FeedWhere>;
  IsBlockedBy?: InputMaybe<UserWhere>;
  IsBlockedByAggregate?: InputMaybe<UserIsBlockedByAggregateInput>;
  IsBlockedByConnection?: InputMaybe<UserIsBlockedByConnectionWhere>;
  IsBlockedByConnection_NOT?: InputMaybe<UserIsBlockedByConnectionWhere>;
  IsBlockedBy_NOT?: InputMaybe<UserWhere>;
  IssueCommentsAggregate?: InputMaybe<UserIssueCommentsAggregateInput>;
  /** Return Users where all of the related UserIssueCommentsConnections match this filter */
  IssueCommentsConnection_ALL?: InputMaybe<UserIssueCommentsConnectionWhere>;
  /** Return Users where none of the related UserIssueCommentsConnections match this filter */
  IssueCommentsConnection_NONE?: InputMaybe<UserIssueCommentsConnectionWhere>;
  /** Return Users where one of the related UserIssueCommentsConnections match this filter */
  IssueCommentsConnection_SINGLE?: InputMaybe<UserIssueCommentsConnectionWhere>;
  /** Return Users where some of the related UserIssueCommentsConnections match this filter */
  IssueCommentsConnection_SOME?: InputMaybe<UserIssueCommentsConnectionWhere>;
  /** Return Users where all of the related Comments match this filter */
  IssueComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Users where none of the related Comments match this filter */
  IssueComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Users where one of the related Comments match this filter */
  IssueComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Users where some of the related Comments match this filter */
  IssueComments_SOME?: InputMaybe<CommentWhere>;
  IssuesAggregate?: InputMaybe<UserIssuesAggregateInput>;
  /** Return Users where all of the related UserIssuesConnections match this filter */
  IssuesConnection_ALL?: InputMaybe<UserIssuesConnectionWhere>;
  /** Return Users where none of the related UserIssuesConnections match this filter */
  IssuesConnection_NONE?: InputMaybe<UserIssuesConnectionWhere>;
  /** Return Users where one of the related UserIssuesConnections match this filter */
  IssuesConnection_SINGLE?: InputMaybe<UserIssuesConnectionWhere>;
  /** Return Users where some of the related UserIssuesConnections match this filter */
  IssuesConnection_SOME?: InputMaybe<UserIssuesConnectionWhere>;
  /** Return Users where all of the related Issues match this filter */
  Issues_ALL?: InputMaybe<IssueWhere>;
  /** Return Users where none of the related Issues match this filter */
  Issues_NONE?: InputMaybe<IssueWhere>;
  /** Return Users where one of the related Issues match this filter */
  Issues_SINGLE?: InputMaybe<IssueWhere>;
  /** Return Users where some of the related Issues match this filter */
  Issues_SOME?: InputMaybe<IssueWhere>;
  ModOfChannelsAggregate?: InputMaybe<UserModOfChannelsAggregateInput>;
  /** Return Users where all of the related UserModOfChannelsConnections match this filter */
  ModOfChannelsConnection_ALL?: InputMaybe<UserModOfChannelsConnectionWhere>;
  /** Return Users where none of the related UserModOfChannelsConnections match this filter */
  ModOfChannelsConnection_NONE?: InputMaybe<UserModOfChannelsConnectionWhere>;
  /** Return Users where one of the related UserModOfChannelsConnections match this filter */
  ModOfChannelsConnection_SINGLE?: InputMaybe<UserModOfChannelsConnectionWhere>;
  /** Return Users where some of the related UserModOfChannelsConnections match this filter */
  ModOfChannelsConnection_SOME?: InputMaybe<UserModOfChannelsConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  ModOfChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  ModOfChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  ModOfChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  ModOfChannels_SOME?: InputMaybe<ChannelWhere>;
  ModerationProfile?: InputMaybe<ModerationProfileWhere>;
  ModerationProfileAggregate?: InputMaybe<UserModerationProfileAggregateInput>;
  ModerationProfileConnection?: InputMaybe<UserModerationProfileConnectionWhere>;
  ModerationProfileConnection_NOT?: InputMaybe<UserModerationProfileConnectionWhere>;
  ModerationProfile_NOT?: InputMaybe<ModerationProfileWhere>;
  NOT?: InputMaybe<UserWhere>;
  NotificationBundleInterval?: InputMaybe<Scalars['String']['input']>;
  NotificationBundleInterval_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  NotificationBundleInterval_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  NotificationBundleInterval_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  NotificationBundleInterval_MATCHES?: InputMaybe<Scalars['String']['input']>;
  NotificationBundleInterval_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  NotificationsAggregate?: InputMaybe<UserNotificationsAggregateInput>;
  /** Return Users where all of the related UserNotificationsConnections match this filter */
  NotificationsConnection_ALL?: InputMaybe<UserNotificationsConnectionWhere>;
  /** Return Users where none of the related UserNotificationsConnections match this filter */
  NotificationsConnection_NONE?: InputMaybe<UserNotificationsConnectionWhere>;
  /** Return Users where one of the related UserNotificationsConnections match this filter */
  NotificationsConnection_SINGLE?: InputMaybe<UserNotificationsConnectionWhere>;
  /** Return Users where some of the related UserNotificationsConnections match this filter */
  NotificationsConnection_SOME?: InputMaybe<UserNotificationsConnectionWhere>;
  /** Return Users where all of the related Notifications match this filter */
  Notifications_ALL?: InputMaybe<NotificationWhere>;
  /** Return Users where none of the related Notifications match this filter */
  Notifications_NONE?: InputMaybe<NotificationWhere>;
  /** Return Users where one of the related Notifications match this filter */
  Notifications_SINGLE?: InputMaybe<NotificationWhere>;
  /** Return Users where some of the related Notifications match this filter */
  Notifications_SOME?: InputMaybe<NotificationWhere>;
  OR?: InputMaybe<Array<UserWhere>>;
  PendingModInvitesAggregate?: InputMaybe<UserPendingModInvitesAggregateInput>;
  /** Return Users where all of the related UserPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_ALL?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  /** Return Users where none of the related UserPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_NONE?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  /** Return Users where one of the related UserPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_SINGLE?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  /** Return Users where some of the related UserPendingModInvitesConnections match this filter */
  PendingModInvitesConnection_SOME?: InputMaybe<UserPendingModInvitesConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  PendingModInvites_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  PendingModInvites_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  PendingModInvites_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  PendingModInvites_SOME?: InputMaybe<ChannelWhere>;
  PendingOwnerInvitesAggregate?: InputMaybe<UserPendingOwnerInvitesAggregateInput>;
  /** Return Users where all of the related UserPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_ALL?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  /** Return Users where none of the related UserPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_NONE?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  /** Return Users where one of the related UserPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_SINGLE?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  /** Return Users where some of the related UserPendingOwnerInvitesConnections match this filter */
  PendingOwnerInvitesConnection_SOME?: InputMaybe<UserPendingOwnerInvitesConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  PendingOwnerInvites_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  PendingOwnerInvites_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  PendingOwnerInvites_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  PendingOwnerInvites_SOME?: InputMaybe<ChannelWhere>;
  PreferredTimeZone?: InputMaybe<Scalars['String']['input']>;
  PreferredTimeZone_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  PreferredTimeZone_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  PreferredTimeZone_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  PreferredTimeZone_MATCHES?: InputMaybe<Scalars['String']['input']>;
  PreferredTimeZone_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  RecentlyVisitedChannelsAggregate?: InputMaybe<UserRecentlyVisitedChannelsAggregateInput>;
  /** Return Users where all of the related UserRecentlyVisitedChannelsConnections match this filter */
  RecentlyVisitedChannelsConnection_ALL?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  /** Return Users where none of the related UserRecentlyVisitedChannelsConnections match this filter */
  RecentlyVisitedChannelsConnection_NONE?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  /** Return Users where one of the related UserRecentlyVisitedChannelsConnections match this filter */
  RecentlyVisitedChannelsConnection_SINGLE?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  /** Return Users where some of the related UserRecentlyVisitedChannelsConnections match this filter */
  RecentlyVisitedChannelsConnection_SOME?: InputMaybe<UserRecentlyVisitedChannelsConnectionWhere>;
  /** Return Users where all of the related Channels match this filter */
  RecentlyVisitedChannels_ALL?: InputMaybe<ChannelWhere>;
  /** Return Users where none of the related Channels match this filter */
  RecentlyVisitedChannels_NONE?: InputMaybe<ChannelWhere>;
  /** Return Users where one of the related Channels match this filter */
  RecentlyVisitedChannels_SINGLE?: InputMaybe<ChannelWhere>;
  /** Return Users where some of the related Channels match this filter */
  RecentlyVisitedChannels_SOME?: InputMaybe<ChannelWhere>;
  ServerRolesAggregate?: InputMaybe<UserServerRolesAggregateInput>;
  /** Return Users where all of the related UserServerRolesConnections match this filter */
  ServerRolesConnection_ALL?: InputMaybe<UserServerRolesConnectionWhere>;
  /** Return Users where none of the related UserServerRolesConnections match this filter */
  ServerRolesConnection_NONE?: InputMaybe<UserServerRolesConnectionWhere>;
  /** Return Users where one of the related UserServerRolesConnections match this filter */
  ServerRolesConnection_SINGLE?: InputMaybe<UserServerRolesConnectionWhere>;
  /** Return Users where some of the related UserServerRolesConnections match this filter */
  ServerRolesConnection_SOME?: InputMaybe<UserServerRolesConnectionWhere>;
  /** Return Users where all of the related ServerRoles match this filter */
  ServerRoles_ALL?: InputMaybe<ServerRoleWhere>;
  /** Return Users where none of the related ServerRoles match this filter */
  ServerRoles_NONE?: InputMaybe<ServerRoleWhere>;
  /** Return Users where one of the related ServerRoles match this filter */
  ServerRoles_SINGLE?: InputMaybe<ServerRoleWhere>;
  /** Return Users where some of the related ServerRoles match this filter */
  ServerRoles_SOME?: InputMaybe<ServerRoleWhere>;
  SuspensionsAggregate?: InputMaybe<UserSuspensionsAggregateInput>;
  /** Return Users where all of the related UserSuspensionsConnections match this filter */
  SuspensionsConnection_ALL?: InputMaybe<UserSuspensionsConnectionWhere>;
  /** Return Users where none of the related UserSuspensionsConnections match this filter */
  SuspensionsConnection_NONE?: InputMaybe<UserSuspensionsConnectionWhere>;
  /** Return Users where one of the related UserSuspensionsConnections match this filter */
  SuspensionsConnection_SINGLE?: InputMaybe<UserSuspensionsConnectionWhere>;
  /** Return Users where some of the related UserSuspensionsConnections match this filter */
  SuspensionsConnection_SOME?: InputMaybe<UserSuspensionsConnectionWhere>;
  /** Return Users where all of the related Suspensions match this filter */
  Suspensions_ALL?: InputMaybe<SuspensionWhere>;
  /** Return Users where none of the related Suspensions match this filter */
  Suspensions_NONE?: InputMaybe<SuspensionWhere>;
  /** Return Users where one of the related Suspensions match this filter */
  Suspensions_SINGLE?: InputMaybe<SuspensionWhere>;
  /** Return Users where some of the related Suspensions match this filter */
  Suspensions_SOME?: InputMaybe<SuspensionWhere>;
  UpvotedCommentsAggregate?: InputMaybe<UserUpvotedCommentsAggregateInput>;
  /** Return Users where all of the related UserUpvotedCommentsConnections match this filter */
  UpvotedCommentsConnection_ALL?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  /** Return Users where none of the related UserUpvotedCommentsConnections match this filter */
  UpvotedCommentsConnection_NONE?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  /** Return Users where one of the related UserUpvotedCommentsConnections match this filter */
  UpvotedCommentsConnection_SINGLE?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  /** Return Users where some of the related UserUpvotedCommentsConnections match this filter */
  UpvotedCommentsConnection_SOME?: InputMaybe<UserUpvotedCommentsConnectionWhere>;
  /** Return Users where all of the related Comments match this filter */
  UpvotedComments_ALL?: InputMaybe<CommentWhere>;
  /** Return Users where none of the related Comments match this filter */
  UpvotedComments_NONE?: InputMaybe<CommentWhere>;
  /** Return Users where one of the related Comments match this filter */
  UpvotedComments_SINGLE?: InputMaybe<CommentWhere>;
  /** Return Users where some of the related Comments match this filter */
  UpvotedComments_SOME?: InputMaybe<CommentWhere>;
  UpvotedDiscussionChannelsAggregate?: InputMaybe<UserUpvotedDiscussionChannelsAggregateInput>;
  /** Return Users where all of the related UserUpvotedDiscussionChannelsConnections match this filter */
  UpvotedDiscussionChannelsConnection_ALL?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  /** Return Users where none of the related UserUpvotedDiscussionChannelsConnections match this filter */
  UpvotedDiscussionChannelsConnection_NONE?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  /** Return Users where one of the related UserUpvotedDiscussionChannelsConnections match this filter */
  UpvotedDiscussionChannelsConnection_SINGLE?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  /** Return Users where some of the related UserUpvotedDiscussionChannelsConnections match this filter */
  UpvotedDiscussionChannelsConnection_SOME?: InputMaybe<UserUpvotedDiscussionChannelsConnectionWhere>;
  /** Return Users where all of the related DiscussionChannels match this filter */
  UpvotedDiscussionChannels_ALL?: InputMaybe<DiscussionChannelWhere>;
  /** Return Users where none of the related DiscussionChannels match this filter */
  UpvotedDiscussionChannels_NONE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Users where one of the related DiscussionChannels match this filter */
  UpvotedDiscussionChannels_SINGLE?: InputMaybe<DiscussionChannelWhere>;
  /** Return Users where some of the related DiscussionChannels match this filter */
  UpvotedDiscussionChannels_SOME?: InputMaybe<DiscussionChannelWhere>;
  bio?: InputMaybe<Scalars['String']['input']>;
  bio_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  bio_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  bio_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  bio_MATCHES?: InputMaybe<Scalars['String']['input']>;
  bio_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  commentKarma?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_GT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_GTE?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  commentKarma_LT?: InputMaybe<Scalars['Int']['input']>;
  commentKarma_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  discussionKarma?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_GT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_GTE?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_IN?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  discussionKarma_LT?: InputMaybe<Scalars['Int']['input']>;
  discussionKarma_LTE?: InputMaybe<Scalars['Int']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayName_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  displayName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  displayName_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  displayName_MATCHES?: InputMaybe<Scalars['String']['input']>;
  displayName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  enableSensitiveContentByDefault?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  location_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  location_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  location_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  location_MATCHES?: InputMaybe<Scalars['String']['input']>;
  location_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  profilePicURL?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  profilePicURL_MATCHES?: InputMaybe<Scalars['String']['input']>;
  profilePicURL_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  pronouns?: InputMaybe<Scalars['String']['input']>;
  pronouns_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  pronouns_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  pronouns_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  pronouns_MATCHES?: InputMaybe<Scalars['String']['input']>;
  pronouns_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
  username_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  username_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  username_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  username_MATCHES?: InputMaybe<Scalars['String']['input']>;
  username_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
};

export type UsersConnection = {
  __typename?: 'UsersConnection';
  edges: Array<UserEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WikiPage = {
  __typename?: 'WikiPage';
  ChildPages: Array<WikiPage>;
  ChildPagesAggregate?: Maybe<WikiPageWikiPageChildPagesAggregationSelection>;
  ChildPagesConnection: WikiPageChildPagesConnection;
  PastVersions: Array<TextVersion>;
  PastVersionsAggregate?: Maybe<WikiPageTextVersionPastVersionsAggregationSelection>;
  PastVersionsConnection: WikiPagePastVersionsConnection;
  ProposedEdits: Array<TextVersion>;
  ProposedEditsAggregate?: Maybe<WikiPageTextVersionProposedEditsAggregationSelection>;
  ProposedEditsConnection: WikiPageProposedEditsConnection;
  body?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  slug: Scalars['String']['output'];
  title: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type WikiPageChildPagesArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<WikiPageOptions>;
  where?: InputMaybe<WikiPageWhere>;
};


export type WikiPageChildPagesAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<WikiPageWhere>;
};


export type WikiPageChildPagesConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<WikiPageChildPagesConnectionSort>>;
  where?: InputMaybe<WikiPageChildPagesConnectionWhere>;
};


export type WikiPagePastVersionsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type WikiPagePastVersionsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TextVersionWhere>;
};


export type WikiPagePastVersionsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<WikiPagePastVersionsConnectionSort>>;
  where?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
};


export type WikiPageProposedEditsArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<TextVersionOptions>;
  where?: InputMaybe<TextVersionWhere>;
};


export type WikiPageProposedEditsAggregateArgs = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  where?: InputMaybe<TextVersionWhere>;
};


export type WikiPageProposedEditsConnectionArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<Array<WikiPageProposedEditsConnectionSort>>;
  where?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
};

export type WikiPageAggregateSelection = {
  __typename?: 'WikiPageAggregateSelection';
  body: StringAggregateSelection;
  count: Scalars['Int']['output'];
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  slug: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type WikiPageChildPagesAggregateInput = {
  AND?: InputMaybe<Array<WikiPageChildPagesAggregateInput>>;
  NOT?: InputMaybe<WikiPageChildPagesAggregateInput>;
  OR?: InputMaybe<Array<WikiPageChildPagesAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<WikiPageChildPagesNodeAggregationWhereInput>;
};

export type WikiPageChildPagesConnectFieldInput = {
  connect?: InputMaybe<Array<WikiPageConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<WikiPageConnectWhere>;
};

export type WikiPageChildPagesConnection = {
  __typename?: 'WikiPageChildPagesConnection';
  edges: Array<WikiPageChildPagesRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WikiPageChildPagesConnectionSort = {
  node?: InputMaybe<WikiPageSort>;
};

export type WikiPageChildPagesConnectionWhere = {
  AND?: InputMaybe<Array<WikiPageChildPagesConnectionWhere>>;
  NOT?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  OR?: InputMaybe<Array<WikiPageChildPagesConnectionWhere>>;
  node?: InputMaybe<WikiPageWhere>;
};

export type WikiPageChildPagesCreateFieldInput = {
  node: WikiPageCreateInput;
};

export type WikiPageChildPagesDeleteFieldInput = {
  delete?: InputMaybe<WikiPageDeleteInput>;
  where?: InputMaybe<WikiPageChildPagesConnectionWhere>;
};

export type WikiPageChildPagesDisconnectFieldInput = {
  disconnect?: InputMaybe<WikiPageDisconnectInput>;
  where?: InputMaybe<WikiPageChildPagesConnectionWhere>;
};

export type WikiPageChildPagesFieldInput = {
  connect?: InputMaybe<Array<WikiPageChildPagesConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPageChildPagesCreateFieldInput>>;
};

export type WikiPageChildPagesNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<WikiPageChildPagesNodeAggregationWhereInput>>;
  NOT?: InputMaybe<WikiPageChildPagesNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<WikiPageChildPagesNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  slug_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  slug_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  slug_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  slug_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  title_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  title_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  title_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPageChildPagesRelationship = {
  __typename?: 'WikiPageChildPagesRelationship';
  cursor: Scalars['String']['output'];
  node: WikiPage;
};

export type WikiPageChildPagesUpdateConnectionInput = {
  node?: InputMaybe<WikiPageUpdateInput>;
};

export type WikiPageChildPagesUpdateFieldInput = {
  connect?: InputMaybe<Array<WikiPageChildPagesConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPageChildPagesCreateFieldInput>>;
  delete?: InputMaybe<Array<WikiPageChildPagesDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<WikiPageChildPagesDisconnectFieldInput>>;
  update?: InputMaybe<WikiPageChildPagesUpdateConnectionInput>;
  where?: InputMaybe<WikiPageChildPagesConnectionWhere>;
};

export type WikiPageConnectInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesConnectFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsConnectFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsConnectFieldInput>>;
};

export type WikiPageConnectWhere = {
  node: WikiPageWhere;
};

export type WikiPageCreateInput = {
  ChildPages?: InputMaybe<WikiPageChildPagesFieldInput>;
  PastVersions?: InputMaybe<WikiPagePastVersionsFieldInput>;
  ProposedEdits?: InputMaybe<WikiPageProposedEditsFieldInput>;
  body?: InputMaybe<Scalars['String']['input']>;
  slug: Scalars['String']['input'];
  title: Scalars['String']['input'];
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPageDeleteInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesDeleteFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsDeleteFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsDeleteFieldInput>>;
};

export type WikiPageDisconnectInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesDisconnectFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsDisconnectFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsDisconnectFieldInput>>;
};

export type WikiPageEdge = {
  __typename?: 'WikiPageEdge';
  cursor: Scalars['String']['output'];
  node: WikiPage;
};

export type WikiPageOptions = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  /** Specify one or more WikiPageSort objects to sort WikiPages by. The sorts will be applied in the order in which they are arranged in the array. */
  sort?: InputMaybe<Array<WikiPageSort>>;
};

export type WikiPagePastVersionsAggregateInput = {
  AND?: InputMaybe<Array<WikiPagePastVersionsAggregateInput>>;
  NOT?: InputMaybe<WikiPagePastVersionsAggregateInput>;
  OR?: InputMaybe<Array<WikiPagePastVersionsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<WikiPagePastVersionsNodeAggregationWhereInput>;
};

export type WikiPagePastVersionsConnectFieldInput = {
  connect?: InputMaybe<Array<TextVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TextVersionConnectWhere>;
};

export type WikiPagePastVersionsConnection = {
  __typename?: 'WikiPagePastVersionsConnection';
  edges: Array<WikiPagePastVersionsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WikiPagePastVersionsConnectionSort = {
  node?: InputMaybe<TextVersionSort>;
};

export type WikiPagePastVersionsConnectionWhere = {
  AND?: InputMaybe<Array<WikiPagePastVersionsConnectionWhere>>;
  NOT?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  OR?: InputMaybe<Array<WikiPagePastVersionsConnectionWhere>>;
  node?: InputMaybe<TextVersionWhere>;
};

export type WikiPagePastVersionsCreateFieldInput = {
  node: TextVersionCreateInput;
};

export type WikiPagePastVersionsDeleteFieldInput = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
};

export type WikiPagePastVersionsDisconnectFieldInput = {
  disconnect?: InputMaybe<TextVersionDisconnectInput>;
  where?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
};

export type WikiPagePastVersionsFieldInput = {
  connect?: InputMaybe<Array<WikiPagePastVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPagePastVersionsCreateFieldInput>>;
};

export type WikiPagePastVersionsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<WikiPagePastVersionsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<WikiPagePastVersionsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<WikiPagePastVersionsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPagePastVersionsRelationship = {
  __typename?: 'WikiPagePastVersionsRelationship';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type WikiPagePastVersionsUpdateConnectionInput = {
  node?: InputMaybe<TextVersionUpdateInput>;
};

export type WikiPagePastVersionsUpdateFieldInput = {
  connect?: InputMaybe<Array<WikiPagePastVersionsConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPagePastVersionsCreateFieldInput>>;
  delete?: InputMaybe<Array<WikiPagePastVersionsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<WikiPagePastVersionsDisconnectFieldInput>>;
  update?: InputMaybe<WikiPagePastVersionsUpdateConnectionInput>;
  where?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
};

export type WikiPageProposedEditsAggregateInput = {
  AND?: InputMaybe<Array<WikiPageProposedEditsAggregateInput>>;
  NOT?: InputMaybe<WikiPageProposedEditsAggregateInput>;
  OR?: InputMaybe<Array<WikiPageProposedEditsAggregateInput>>;
  count?: InputMaybe<Scalars['Int']['input']>;
  count_GT?: InputMaybe<Scalars['Int']['input']>;
  count_GTE?: InputMaybe<Scalars['Int']['input']>;
  count_LT?: InputMaybe<Scalars['Int']['input']>;
  count_LTE?: InputMaybe<Scalars['Int']['input']>;
  node?: InputMaybe<WikiPageProposedEditsNodeAggregationWhereInput>;
};

export type WikiPageProposedEditsConnectFieldInput = {
  connect?: InputMaybe<Array<TextVersionConnectInput>>;
  /** Whether or not to overwrite any matching relationship with the new properties. */
  overwrite?: Scalars['Boolean']['input'];
  where?: InputMaybe<TextVersionConnectWhere>;
};

export type WikiPageProposedEditsConnection = {
  __typename?: 'WikiPageProposedEditsConnection';
  edges: Array<WikiPageProposedEditsRelationship>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type WikiPageProposedEditsConnectionSort = {
  node?: InputMaybe<TextVersionSort>;
};

export type WikiPageProposedEditsConnectionWhere = {
  AND?: InputMaybe<Array<WikiPageProposedEditsConnectionWhere>>;
  NOT?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  OR?: InputMaybe<Array<WikiPageProposedEditsConnectionWhere>>;
  node?: InputMaybe<TextVersionWhere>;
};

export type WikiPageProposedEditsCreateFieldInput = {
  node: TextVersionCreateInput;
};

export type WikiPageProposedEditsDeleteFieldInput = {
  delete?: InputMaybe<TextVersionDeleteInput>;
  where?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
};

export type WikiPageProposedEditsDisconnectFieldInput = {
  disconnect?: InputMaybe<TextVersionDisconnectInput>;
  where?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
};

export type WikiPageProposedEditsFieldInput = {
  connect?: InputMaybe<Array<WikiPageProposedEditsConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPageProposedEditsCreateFieldInput>>;
};

export type WikiPageProposedEditsNodeAggregationWhereInput = {
  AND?: InputMaybe<Array<WikiPageProposedEditsNodeAggregationWhereInput>>;
  NOT?: InputMaybe<WikiPageProposedEditsNodeAggregationWhereInput>;
  OR?: InputMaybe<Array<WikiPageProposedEditsNodeAggregationWhereInput>>;
  body_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>;
  body_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>;
  body_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>;
  body_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>;
  createdAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MAX_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_EQUAL?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_MIN_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPageProposedEditsRelationship = {
  __typename?: 'WikiPageProposedEditsRelationship';
  cursor: Scalars['String']['output'];
  node: TextVersion;
};

export type WikiPageProposedEditsUpdateConnectionInput = {
  node?: InputMaybe<TextVersionUpdateInput>;
};

export type WikiPageProposedEditsUpdateFieldInput = {
  connect?: InputMaybe<Array<WikiPageProposedEditsConnectFieldInput>>;
  create?: InputMaybe<Array<WikiPageProposedEditsCreateFieldInput>>;
  delete?: InputMaybe<Array<WikiPageProposedEditsDeleteFieldInput>>;
  disconnect?: InputMaybe<Array<WikiPageProposedEditsDisconnectFieldInput>>;
  update?: InputMaybe<WikiPageProposedEditsUpdateConnectionInput>;
  where?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
};

export type WikiPageRelationInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesCreateFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsCreateFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsCreateFieldInput>>;
};

/** Fields to sort WikiPages by. The order in which sorts are applied is not guaranteed when specifying many fields in one WikiPageSort object. */
export type WikiPageSort = {
  body?: InputMaybe<SortDirection>;
  createdAt?: InputMaybe<SortDirection>;
  id?: InputMaybe<SortDirection>;
  slug?: InputMaybe<SortDirection>;
  title?: InputMaybe<SortDirection>;
  updatedAt?: InputMaybe<SortDirection>;
};

export type WikiPageTextVersionPastVersionsAggregationSelection = {
  __typename?: 'WikiPageTextVersionPastVersionsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<WikiPageTextVersionPastVersionsNodeAggregateSelection>;
};

export type WikiPageTextVersionPastVersionsNodeAggregateSelection = {
  __typename?: 'WikiPageTextVersionPastVersionsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type WikiPageTextVersionProposedEditsAggregationSelection = {
  __typename?: 'WikiPageTextVersionProposedEditsAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<WikiPageTextVersionProposedEditsNodeAggregateSelection>;
};

export type WikiPageTextVersionProposedEditsNodeAggregateSelection = {
  __typename?: 'WikiPageTextVersionProposedEditsNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type WikiPageUpdateInput = {
  ChildPages?: InputMaybe<Array<WikiPageChildPagesUpdateFieldInput>>;
  PastVersions?: InputMaybe<Array<WikiPagePastVersionsUpdateFieldInput>>;
  ProposedEdits?: InputMaybe<Array<WikiPageProposedEditsUpdateFieldInput>>;
  body?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type WikiPageWhere = {
  AND?: InputMaybe<Array<WikiPageWhere>>;
  ChildPagesAggregate?: InputMaybe<WikiPageChildPagesAggregateInput>;
  /** Return WikiPages where all of the related WikiPageChildPagesConnections match this filter */
  ChildPagesConnection_ALL?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  /** Return WikiPages where none of the related WikiPageChildPagesConnections match this filter */
  ChildPagesConnection_NONE?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  /** Return WikiPages where one of the related WikiPageChildPagesConnections match this filter */
  ChildPagesConnection_SINGLE?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  /** Return WikiPages where some of the related WikiPageChildPagesConnections match this filter */
  ChildPagesConnection_SOME?: InputMaybe<WikiPageChildPagesConnectionWhere>;
  /** Return WikiPages where all of the related WikiPages match this filter */
  ChildPages_ALL?: InputMaybe<WikiPageWhere>;
  /** Return WikiPages where none of the related WikiPages match this filter */
  ChildPages_NONE?: InputMaybe<WikiPageWhere>;
  /** Return WikiPages where one of the related WikiPages match this filter */
  ChildPages_SINGLE?: InputMaybe<WikiPageWhere>;
  /** Return WikiPages where some of the related WikiPages match this filter */
  ChildPages_SOME?: InputMaybe<WikiPageWhere>;
  NOT?: InputMaybe<WikiPageWhere>;
  OR?: InputMaybe<Array<WikiPageWhere>>;
  PastVersionsAggregate?: InputMaybe<WikiPagePastVersionsAggregateInput>;
  /** Return WikiPages where all of the related WikiPagePastVersionsConnections match this filter */
  PastVersionsConnection_ALL?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  /** Return WikiPages where none of the related WikiPagePastVersionsConnections match this filter */
  PastVersionsConnection_NONE?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  /** Return WikiPages where one of the related WikiPagePastVersionsConnections match this filter */
  PastVersionsConnection_SINGLE?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  /** Return WikiPages where some of the related WikiPagePastVersionsConnections match this filter */
  PastVersionsConnection_SOME?: InputMaybe<WikiPagePastVersionsConnectionWhere>;
  /** Return WikiPages where all of the related TextVersions match this filter */
  PastVersions_ALL?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where none of the related TextVersions match this filter */
  PastVersions_NONE?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where one of the related TextVersions match this filter */
  PastVersions_SINGLE?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where some of the related TextVersions match this filter */
  PastVersions_SOME?: InputMaybe<TextVersionWhere>;
  ProposedEditsAggregate?: InputMaybe<WikiPageProposedEditsAggregateInput>;
  /** Return WikiPages where all of the related WikiPageProposedEditsConnections match this filter */
  ProposedEditsConnection_ALL?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  /** Return WikiPages where none of the related WikiPageProposedEditsConnections match this filter */
  ProposedEditsConnection_NONE?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  /** Return WikiPages where one of the related WikiPageProposedEditsConnections match this filter */
  ProposedEditsConnection_SINGLE?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  /** Return WikiPages where some of the related WikiPageProposedEditsConnections match this filter */
  ProposedEditsConnection_SOME?: InputMaybe<WikiPageProposedEditsConnectionWhere>;
  /** Return WikiPages where all of the related TextVersions match this filter */
  ProposedEdits_ALL?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where none of the related TextVersions match this filter */
  ProposedEdits_NONE?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where one of the related TextVersions match this filter */
  ProposedEdits_SINGLE?: InputMaybe<TextVersionWhere>;
  /** Return WikiPages where some of the related TextVersions match this filter */
  ProposedEdits_SOME?: InputMaybe<TextVersionWhere>;
  body?: InputMaybe<Scalars['String']['input']>;
  body_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  body_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  body_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body_MATCHES?: InputMaybe<Scalars['String']['input']>;
  body_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_IN?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  createdAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>;
  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>;
  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  slug_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  slug_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  slug_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  slug_MATCHES?: InputMaybe<Scalars['String']['input']>;
  slug_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  title_CONTAINS?: InputMaybe<Scalars['String']['input']>;
  title_ENDS_WITH?: InputMaybe<Scalars['String']['input']>;
  title_IN?: InputMaybe<Array<Scalars['String']['input']>>;
  title_MATCHES?: InputMaybe<Scalars['String']['input']>;
  title_STARTS_WITH?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_GTE?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_IN?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  updatedAt_LT?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_LTE?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WikiPageWikiPageChildPagesAggregationSelection = {
  __typename?: 'WikiPageWikiPageChildPagesAggregationSelection';
  count: Scalars['Int']['output'];
  node?: Maybe<WikiPageWikiPageChildPagesNodeAggregateSelection>;
};

export type WikiPageWikiPageChildPagesNodeAggregateSelection = {
  __typename?: 'WikiPageWikiPageChildPagesNodeAggregateSelection';
  body: StringAggregateSelection;
  createdAt: DateTimeAggregateSelection;
  id: IdAggregateSelection;
  slug: StringAggregateSelection;
  title: StringAggregateSelection;
  updatedAt: DateTimeAggregateSelection;
};

export type WikiPagesConnection = {
  __typename?: 'WikiPagesConnection';
  edges: Array<WikiPageEdge>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};
